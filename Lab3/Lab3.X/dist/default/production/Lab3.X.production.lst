

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 09 21:46:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	text34,local,class=CODE,merge=1,delta=2
    49                           	psect	text35,local,class=CODE,merge=1,delta=2
    50                           	psect	text36,local,class=CODE,merge=1,delta=2
    51                           	psect	text37,local,class=CODE,merge=1,delta=2
    52                           	psect	text38,local,class=CODE,merge=1,delta=2
    53                           	psect	intentry,global,class=CODE,delta=2
    54                           	psect	text39,local,class=CODE,merge=1,delta=2
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    56                           	psect	text2_split_1,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     
    59                           ; Version 2.20
    60                           ; Generated 12/02/2020 GMT
    61                           ; 
    62                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution.
    76                           ; 
    77                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    78                           ;        software without specific prior written permission.
    79                           ; 
    80                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    81                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    82                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    83                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    84                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    85                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    86                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    87                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    88                           ; 
    89                           ; 
    90                           ; Code-generator required, PIC16F887 Definitions
    91                           ; 
    92                           ; SFR Addresses
    93  0000                     	;# 
    94  0001                     	;# 
    95  0002                     	;# 
    96  0003                     	;# 
    97  0004                     	;# 
    98  0005                     	;# 
    99  0006                     	;# 
   100  0007                     	;# 
   101  0008                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0088                     	;# 
   133  0089                     	;# 
   134  008C                     	;# 
   135  008D                     	;# 
   136  008E                     	;# 
   137  008F                     	;# 
   138  0090                     	;# 
   139  0091                     	;# 
   140  0092                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0093                     	;# 
   144  0094                     	;# 
   145  0095                     	;# 
   146  0096                     	;# 
   147  0097                     	;# 
   148  0098                     	;# 
   149  0099                     	;# 
   150  009A                     	;# 
   151  009B                     	;# 
   152  009C                     	;# 
   153  009D                     	;# 
   154  009E                     	;# 
   155  009F                     	;# 
   156  0105                     	;# 
   157  0107                     	;# 
   158  0108                     	;# 
   159  0109                     	;# 
   160  010C                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  0185                     	;# 
   166  0187                     	;# 
   167  0188                     	;# 
   168  0189                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0000                     	;# 
   172  0001                     	;# 
   173  0002                     	;# 
   174  0003                     	;# 
   175  0004                     	;# 
   176  0005                     	;# 
   177  0006                     	;# 
   178  0007                     	;# 
   179  0008                     	;# 
   180  0009                     	;# 
   181  000A                     	;# 
   182  000B                     	;# 
   183  000C                     	;# 
   184  000D                     	;# 
   185  000E                     	;# 
   186  000E                     	;# 
   187  000F                     	;# 
   188  0010                     	;# 
   189  0011                     	;# 
   190  0012                     	;# 
   191  0013                     	;# 
   192  0014                     	;# 
   193  0015                     	;# 
   194  0015                     	;# 
   195  0016                     	;# 
   196  0017                     	;# 
   197  0018                     	;# 
   198  0019                     	;# 
   199  001A                     	;# 
   200  001B                     	;# 
   201  001B                     	;# 
   202  001C                     	;# 
   203  001D                     	;# 
   204  001E                     	;# 
   205  001F                     	;# 
   206  0081                     	;# 
   207  0085                     	;# 
   208  0086                     	;# 
   209  0087                     	;# 
   210  0088                     	;# 
   211  0089                     	;# 
   212  008C                     	;# 
   213  008D                     	;# 
   214  008E                     	;# 
   215  008F                     	;# 
   216  0090                     	;# 
   217  0091                     	;# 
   218  0092                     	;# 
   219  0093                     	;# 
   220  0093                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0095                     	;# 
   224  0096                     	;# 
   225  0097                     	;# 
   226  0098                     	;# 
   227  0099                     	;# 
   228  009A                     	;# 
   229  009B                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  0105                     	;# 
   235  0107                     	;# 
   236  0108                     	;# 
   237  0109                     	;# 
   238  010C                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  0185                     	;# 
   244  0187                     	;# 
   245  0188                     	;# 
   246  0189                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  008F                     	;# 
   294  0090                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0093                     	;# 
   299  0093                     	;# 
   300  0094                     	;# 
   301  0095                     	;# 
   302  0096                     	;# 
   303  0097                     	;# 
   304  0098                     	;# 
   305  0099                     	;# 
   306  009A                     	;# 
   307  009B                     	;# 
   308  009C                     	;# 
   309  009D                     	;# 
   310  009E                     	;# 
   311  009F                     	;# 
   312  0105                     	;# 
   313  0107                     	;# 
   314  0108                     	;# 
   315  0109                     	;# 
   316  010C                     	;# 
   317  010C                     	;# 
   318  010D                     	;# 
   319  010E                     	;# 
   320  010F                     	;# 
   321  0185                     	;# 
   322  0187                     	;# 
   323  0188                     	;# 
   324  0189                     	;# 
   325  018C                     	;# 
   326  018D                     	;# 
   327  0000                     	;# 
   328  0001                     	;# 
   329  0002                     	;# 
   330  0003                     	;# 
   331  0004                     	;# 
   332  0005                     	;# 
   333  0006                     	;# 
   334  0007                     	;# 
   335  0008                     	;# 
   336  0009                     	;# 
   337  000A                     	;# 
   338  000B                     	;# 
   339  000C                     	;# 
   340  000D                     	;# 
   341  000E                     	;# 
   342  000E                     	;# 
   343  000F                     	;# 
   344  0010                     	;# 
   345  0011                     	;# 
   346  0012                     	;# 
   347  0013                     	;# 
   348  0014                     	;# 
   349  0015                     	;# 
   350  0015                     	;# 
   351  0016                     	;# 
   352  0017                     	;# 
   353  0018                     	;# 
   354  0019                     	;# 
   355  001A                     	;# 
   356  001B                     	;# 
   357  001B                     	;# 
   358  001C                     	;# 
   359  001D                     	;# 
   360  001E                     	;# 
   361  001F                     	;# 
   362  0081                     	;# 
   363  0085                     	;# 
   364  0086                     	;# 
   365  0087                     	;# 
   366  0088                     	;# 
   367  0089                     	;# 
   368  008C                     	;# 
   369  008D                     	;# 
   370  008E                     	;# 
   371  008F                     	;# 
   372  0090                     	;# 
   373  0091                     	;# 
   374  0092                     	;# 
   375  0093                     	;# 
   376  0093                     	;# 
   377  0093                     	;# 
   378  0094                     	;# 
   379  0095                     	;# 
   380  0096                     	;# 
   381  0097                     	;# 
   382  0098                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009C                     	;# 
   387  009D                     	;# 
   388  009E                     	;# 
   389  009F                     	;# 
   390  0105                     	;# 
   391  0107                     	;# 
   392  0108                     	;# 
   393  0109                     	;# 
   394  010C                     	;# 
   395  010C                     	;# 
   396  010D                     	;# 
   397  010E                     	;# 
   398  010F                     	;# 
   399  0185                     	;# 
   400  0187                     	;# 
   401  0188                     	;# 
   402  0189                     	;# 
   403  018C                     	;# 
   404  018D                     	;# 
   405  0000                     	;# 
   406  0001                     	;# 
   407  0002                     	;# 
   408  0003                     	;# 
   409  0004                     	;# 
   410  0005                     	;# 
   411  0006                     	;# 
   412  0007                     	;# 
   413  0008                     	;# 
   414  0009                     	;# 
   415  000A                     	;# 
   416  000B                     	;# 
   417  000C                     	;# 
   418  000D                     	;# 
   419  000E                     	;# 
   420  000E                     	;# 
   421  000F                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0017                     	;# 
   431  0018                     	;# 
   432  0019                     	;# 
   433  001A                     	;# 
   434  001B                     	;# 
   435  001B                     	;# 
   436  001C                     	;# 
   437  001D                     	;# 
   438  001E                     	;# 
   439  001F                     	;# 
   440  0081                     	;# 
   441  0085                     	;# 
   442  0086                     	;# 
   443  0087                     	;# 
   444  0088                     	;# 
   445  0089                     	;# 
   446  008C                     	;# 
   447  008D                     	;# 
   448  008E                     	;# 
   449  008F                     	;# 
   450  0090                     	;# 
   451  0091                     	;# 
   452  0092                     	;# 
   453  0093                     	;# 
   454  0093                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0095                     	;# 
   458  0096                     	;# 
   459  0097                     	;# 
   460  0098                     	;# 
   461  0099                     	;# 
   462  009A                     	;# 
   463  009B                     	;# 
   464  009C                     	;# 
   465  009D                     	;# 
   466  009E                     	;# 
   467  009F                     	;# 
   468  0105                     	;# 
   469  0107                     	;# 
   470  0108                     	;# 
   471  0109                     	;# 
   472  010C                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  0185                     	;# 
   478  0187                     	;# 
   479  0188                     	;# 
   480  0189                     	;# 
   481  018C                     	;# 
   482  018D                     	;# 
   483                           
   484                           	psect	strings
   485  0000'                    __pstrings:
   486  0000'                    stringtab:
   487  0000'                    __stringtab:
   488                           
   489                           ;	String table - string pointers are 1 byte each
   490  0000' 1BFF               	btfsc	btemp+1,7
   491  0001' 2800'              	ljmp	stringcode
   492  0002' 1383               	bcf	3,7
   493  0003' 187F               	btfsc	btemp+1,0
   494  0004' 1783               	bsf	3,7
   495  0005' 0800               	movf	0,w
   496  0006' 0A84               	incf	4,f
   497  0007' 1903               	skipnz
   498  0008' 0AFF               	incf	btemp+1,f
   499  0009' 0008               	return
   500  000A'                    stringcode:
   501  000A'                    stringdir:
   502  000A' 3000'              	movlw	high stringdir
   503  000B' 008A               	movwf	10
   504  000C' 0804               	movf	4,w
   505  000D' 0A84               	incf	4,f
   506  000E' 0782               	addwf	2,f
   507  000F'                    __stringbase:
   508  000F' 3400               	retlw	0
   509  0010'                    __end_of__stringtab:
   510  0010'                    __powers_:
   511  0010' 3400               	retlw	0
   512  0011' 3400               	retlw	0
   513  0012' 3480               	retlw	128
   514  0013' 343F               	retlw	63
   515  0014' 3400               	retlw	0
   516  0015' 3400               	retlw	0
   517  0016' 3420               	retlw	32
   518  0017' 3441               	retlw	65
   519  0018' 3400               	retlw	0
   520  0019' 3400               	retlw	0
   521  001A' 34C8               	retlw	200
   522  001B' 3442               	retlw	66
   523  001C' 3400               	retlw	0
   524  001D' 3400               	retlw	0
   525  001E' 347A               	retlw	122
   526  001F' 3444               	retlw	68
   527  0020' 3400               	retlw	0
   528  0021' 3440               	retlw	64
   529  0022' 341C               	retlw	28
   530  0023' 3446               	retlw	70
   531  0024' 3400               	retlw	0
   532  0025' 3450               	retlw	80
   533  0026' 34C3               	retlw	195
   534  0027' 3447               	retlw	71
   535  0028' 3400               	retlw	0
   536  0029' 3424               	retlw	36
   537  002A' 3474               	retlw	116
   538  002B' 3449               	retlw	73
   539  002C' 3480               	retlw	128
   540  002D' 3496               	retlw	150
   541  002E' 3418               	retlw	24
   542  002F' 344B               	retlw	75
   543  0030' 3420               	retlw	32
   544  0031' 34BC               	retlw	188
   545  0032' 34BE               	retlw	190
   546  0033' 344C               	retlw	76
   547  0034' 3428               	retlw	40
   548  0035' 346B               	retlw	107
   549  0036' 346E               	retlw	110
   550  0037' 344E               	retlw	78
   551  0038' 34F9               	retlw	249
   552  0039' 3402               	retlw	2
   553  003A' 3415               	retlw	21
   554  003B' 3450               	retlw	80
   555  003C' 34EC               	retlw	236
   556  003D' 3478               	retlw	120
   557  003E' 34AD               	retlw	173
   558  003F' 3460               	retlw	96
   559  0040' 34CA               	retlw	202
   560  0041' 34F2               	retlw	242
   561  0042' 3449               	retlw	73
   562  0043' 3471               	retlw	113
   563  0044'                    __end_of__powers_:
   564  0044'                    __npowers_:
   565  0044' 3400               	retlw	0
   566  0045' 3400               	retlw	0
   567  0046' 3480               	retlw	128
   568  0047' 343F               	retlw	63
   569  0048' 34CD               	retlw	205
   570  0049' 34CC               	retlw	204
   571  004A' 34CC               	retlw	204
   572  004B' 343D               	retlw	61
   573  004C' 340A               	retlw	10
   574  004D' 34D7               	retlw	215
   575  004E' 3423               	retlw	35
   576  004F' 343C               	retlw	60
   577  0050' 346F               	retlw	111
   578  0051' 3412               	retlw	18
   579  0052' 3483               	retlw	131
   580  0053' 343A               	retlw	58
   581  0054' 3417               	retlw	23
   582  0055' 34B7               	retlw	183
   583  0056' 34D1               	retlw	209
   584  0057' 3438               	retlw	56
   585  0058' 34AC               	retlw	172
   586  0059' 34C5               	retlw	197
   587  005A' 3427               	retlw	39
   588  005B' 3437               	retlw	55
   589  005C' 34BD               	retlw	189
   590  005D' 3437               	retlw	55
   591  005E' 3486               	retlw	134
   592  005F' 3435               	retlw	53
   593  0060' 3495               	retlw	149
   594  0061' 34BF               	retlw	191
   595  0062' 34D6               	retlw	214
   596  0063' 3433               	retlw	51
   597  0064' 3477               	retlw	119
   598  0065' 34CC               	retlw	204
   599  0066' 342B               	retlw	43
   600  0067' 3432               	retlw	50
   601  0068' 345F               	retlw	95
   602  0069' 3470               	retlw	112
   603  006A' 3489               	retlw	137
   604  006B' 3430               	retlw	48
   605  006C' 34FF               	retlw	255
   606  006D' 34E6               	retlw	230
   607  006E' 34DB               	retlw	219
   608  006F' 342E               	retlw	46
   609  0070' 3408               	retlw	8
   610  0071' 34E5               	retlw	229
   611  0072' 343C               	retlw	60
   612  0073' 341E               	retlw	30
   613  0074' 3460               	retlw	96
   614  0075' 3442               	retlw	66
   615  0076' 34A2               	retlw	162
   616  0077' 340D               	retlw	13
   617  0078'                    __end_of__npowers_:
   618  0078'                    _dpowers:
   619  0078' 3401               	retlw	1
   620  0079' 3400               	retlw	0
   621  007A' 3400               	retlw	0
   622  007B' 3400               	retlw	0
   623  007C' 340A               	retlw	10
   624  007D' 3400               	retlw	0
   625  007E' 3400               	retlw	0
   626  007F' 3400               	retlw	0
   627  0080' 3464               	retlw	100
   628  0081' 3400               	retlw	0
   629  0082' 3400               	retlw	0
   630  0083' 3400               	retlw	0
   631  0084' 34E8               	retlw	232
   632  0085' 3403               	retlw	3
   633  0086' 3400               	retlw	0
   634  0087' 3400               	retlw	0
   635  0088' 3410               	retlw	16
   636  0089' 3427               	retlw	39
   637  008A' 3400               	retlw	0
   638  008B' 3400               	retlw	0
   639  008C' 34A0               	retlw	160
   640  008D' 3486               	retlw	134
   641  008E' 3401               	retlw	1
   642  008F' 3400               	retlw	0
   643  0090' 3440               	retlw	64
   644  0091' 3442               	retlw	66
   645  0092' 340F               	retlw	15
   646  0093' 3400               	retlw	0
   647  0094' 3480               	retlw	128
   648  0095' 3496               	retlw	150
   649  0096' 3498               	retlw	152
   650  0097' 3400               	retlw	0
   651  0098' 3400               	retlw	0
   652  0099' 34E1               	retlw	225
   653  009A' 34F5               	retlw	245
   654  009B' 3405               	retlw	5
   655  009C' 3400               	retlw	0
   656  009D' 34CA               	retlw	202
   657  009E' 349A               	retlw	154
   658  009F' 343B               	retlw	59
   659  00A0'                    __end_of_dpowers:
   660  001A                     _RCREG	set	26
   661  0019                     _TXREG	set	25
   662  001E                     _ADRESH	set	30
   663  001F                     _ADCON0bits	set	31
   664  001F                     _ADCON0	set	31
   665  000C                     _PIR1bits	set	12
   666  000B                     _INTCONbits	set	11
   667  0009                     _PORTE	set	9
   668  0008                     _PORTD	set	8
   669  0005                     _PORTA	set	5
   670  00C4                     _CREN	set	196
   671  00C7                     _SPEN	set	199
   672  0047                     _RD7	set	71
   673  0046                     _RD6	set	70
   674  0045                     _RD5	set	69
   675  0044                     _RD4	set	68
   676  0043                     _RD3	set	67
   677  0042                     _RD2	set	66
   678  0041                     _RD1	set	65
   679  0040                     _RD0	set	64
   680  004A                     _RE2	set	74
   681  0049                     _RE1	set	73
   682  0048                     _RE0	set	72
   683  0065                     _RCIF	set	101
   684  0087                     _TRISCbits	set	135
   685  0099                     _SPBRG	set	153
   686  0088                     _TRISDbits	set	136
   687  0089                     _TRISEbits	set	137
   688  0085                     _TRISAbits	set	133
   689  009F                     _ADCON1	set	159
   690  008C                     _PIE1bits	set	140
   691  0089                     _TRISE	set	137
   692  0088                     _TRISD	set	136
   693  0085                     _TRISA	set	133
   694  04C1                     _TRMT	set	1217
   695  04C5                     _TXEN	set	1221
   696  04C4                     _SYNC	set	1220
   697  04C2                     _BRGH	set	1218
   698  0189                     _ANSELHbits	set	393
   699  0188                     _ANSELbits	set	392
   700  0188                     _ANSEL	set	392
   701  0189                     _ANSELH	set	393
   702  00A0'                    STR_1:
   703  00A0' 3456               	retlw	86	;'V'
   704  00A1' 3431               	retlw	49	;'1'
   705  00A2' 3420               	retlw	32	;' '
   706  00A3' 3420               	retlw	32	;' '
   707  00A4' 3420               	retlw	32	;' '
   708  00A5' 3456               	retlw	86	;'V'
   709  00A6' 3432               	retlw	50	;'2'
   710  00A7' 3420               	retlw	32	;' '
   711  00A8' 3420               	retlw	32	;' '
   712  00A9' 3420               	retlw	32	;' '
   713  00AA' 3463               	retlw	99	;'c'
   714  00AB' 346F               	retlw	111	;'o'
   715  00AC' 346E               	retlw	110	;'n'
   716  00AD' 3474               	retlw	116	;'t'
   717  00AE' 3461               	retlw	97	;'a'
   718  00AF' 3464               	retlw	100	;'d'
   719  00B0' 346F               	retlw	111	;'o'
   720  00B1' 3472               	retlw	114	;'r'
   721  00B2' 3420               	retlw	32	;' '
   722  00B3' 340A               	retlw	10
   723  00B4' 3400               	retlw	0
   724  00B5'                    STR_2:
   725  00B5' 3425               	retlw	37	;'%'
   726  00B6' 3432               	retlw	50	;'2'
   727  00B7' 342E               	retlw	46	;'.'
   728  00B8' 3431               	retlw	49	;'1'
   729  00B9' 3466               	retlw	102	;'f'
   730  00BA' 3420               	retlw	32	;' '
   731  00BB' 3420               	retlw	32	;' '
   732  00BC' 3420               	retlw	32	;' '
   733  00BD' 3425               	retlw	37	;'%'
   734  00BE' 3432               	retlw	50	;'2'
   735  00BF' 342E               	retlw	46	;'.'
   736  00C0' 3431               	retlw	49	;'1'
   737  00C1' 3466               	retlw	102	;'f'
   738  00C2' 3420               	retlw	32	;' '
   739  00C3' 3420               	retlw	32	;' '
   740  00C4' 3420               	retlw	32	;' '
   741  00C5' 3425               	retlw	37	;'%'
   742  00C6' 3464               	retlw	100	;'d'
   743  00C7' 3400               	retlw	0
   744  00C8'                    STR_3:
   745  00C8' 3456               	retlw	86	;'V'
   746  00C9' 3431               	retlw	49	;'1'
   747  00CA' 3420               	retlw	32	;' '
   748  00CB' 3420               	retlw	32	;' '
   749  00CC' 3420               	retlw	32	;' '
   750  00CD' 3456               	retlw	86	;'V'
   751  00CE' 3432               	retlw	50	;'2'
   752  00CF' 3420               	retlw	32	;' '
   753  00D0' 3420               	retlw	32	;' '
   754  00D1' 3420               	retlw	32	;' '
   755  00D2' 3463               	retlw	99	;'c'
   756  00D3' 346F               	retlw	111	;'o'
   757  00D4' 346E               	retlw	110	;'n'
   758  00D5' 3474               	retlw	116	;'t'
   759  00D6' 3461               	retlw	97	;'a'
   760  00D7' 3400               	retlw	0
   761                           
   762                           	psect	cinit
   763  0000'                    start_initialization:	
   764                           ; #config settings
   765                           
   766  0000'                    __initialization:
   767                           
   768                           ; Clear objects allocated to COMMON
   769  0000' 0180'              	clrf	__pbssCOMMON& (0+127)
   770                           
   771                           ; Clear objects allocated to BANK0
   772  0001' 1283               	bcf	3,5	;RP0=0, select bank0
   773  0002' 1303               	bcf	3,6	;RP1=0, select bank0
   774  0003' 0180'              	clrf	__pbssBANK0& (0+127)
   775                           
   776                           ; Clear objects allocated to BANK1
   777  0004' 1383               	bcf	3,7	;select IRP bank0
   778  0005' 3000'              	movlw	low __pbssBANK1
   779  0006' 0084               	movwf	4
   780  0007' 3000'              	movlw	low (__pbssBANK1+30)
   781  0008' 120A' 118A' 2000' 120A' 118A' 	fcall	clear_ram0
   782  000D'                    end_of_initialization:	
   783                           ;End of C runtime variable initialization code
   784                           
   785  000D'                    __end_of__initialization:
   786  000D' 0183               	clrf	3
   787  000E' 120A' 118A' 2800'  	ljmp	_main	;jump to C main() function
   788                           
   789                           	psect	bssCOMMON
   790  0000'                    __pbssCOMMON:
   791  0000'                    _valUSART:
   792  0000'                    	ds	1
   793                           
   794                           	psect	bssBANK0
   795  0000'                    __pbssBANK0:
   796  0000'                    _ADC1:
   797  0000'                    	ds	1
   798                           
   799                           	psect	bssBANK1
   800  0000'                    __pbssBANK1:
   801  0000'                    _v2:
   802  0000'                    	ds	4
   803  0004'                    _v1:
   804  0004'                    	ds	4
   805  0008'                    _contador:
   806  0008'                    	ds	1
   807  0009'                    _ADC2:
   808  0009'                    	ds	1
   809  000A'                    _d:
   810  000A'                    	ds	20
   811                           
   812                           	psect	clrtext
   813  0000'                    clear_ram0:	
   814                           ;	Called with FSR containing the base address, and
   815                           ;	W with the last address+1
   816                           
   817  0000' 0064               	clrwdt	;clear the watchdog before getting into this loop
   818  0001'                    clrloop0:
   819  0001' 0180               	clrf	0	;clear RAM location pointed to by FSR
   820  0002' 0A84               	incf	4,f	;increment pointer
   821  0003' 0604               	xorwf	4,w	;XOR with final address
   822  0004' 1903               	btfsc	3,2	;have we reached the end yet?
   823  0005' 3400               	retlw	0	;all done for this memory range, return
   824  0006' 0604               	xorwf	4,w	;XOR again to restore value
   825  0007' 2800'              	goto	clrloop0	;do the next byte
   826                           
   827                           	psect	cstackBANK3
   828  0000'                    __pcstackBANK3:
   829  0000'                    _sprintf$1162:
   830                           
   831                           ; 4 bytes @ 0x0
   832  0000'                    	ds	4
   833  0004'                    sprintf@ap:
   834                           
   835                           ; 1 bytes @ 0x4
   836  0004'                    	ds	1
   837  0005'                    sprintf@flag:
   838                           
   839                           ; 2 bytes @ 0x5
   840  0005'                    	ds	2
   841  0007'                    sprintf@width:
   842                           
   843                           ; 2 bytes @ 0x7
   844  0007'                    	ds	2
   845  0009'                    sprintf@tmpval:
   846                           
   847                           ; 4 bytes @ 0x9
   848  0009'                    	ds	4
   849  000D'                    sprintf@val:
   850                           
   851                           ; 4 bytes @ 0xD
   852  000D'                    	ds	4
   853  0011'                    sprintf@eexp:
   854                           
   855                           ; 2 bytes @ 0x11
   856  0011'                    	ds	2
   857  0013'                    sprintf@fval:
   858                           
   859                           ; 4 bytes @ 0x13
   860  0013'                    	ds	4
   861  0017'                    sprintf@sp:
   862                           
   863                           ; 1 bytes @ 0x17
   864  0017'                    	ds	1
   865  0018'                    sprintf@prec:
   866                           
   867                           ; 2 bytes @ 0x18
   868  0018'                    	ds	2
   869  001A'                    sprintf@c:
   870                           
   871                           ; 1 bytes @ 0x1A
   872  001A'                    	ds	1
   873                           
   874                           	psect	cstackBANK1
   875  0000'                    __pcstackBANK1:
   876  0000'                    ?___flsub:
   877  0000'                    ___flsub@a:	
   878                           ; 4 bytes @ 0x0
   879                           
   880                           
   881                           ; 4 bytes @ 0x0
   882  0000'                    	ds	4
   883  0004'                    ___flsub@b:
   884                           
   885                           ; 4 bytes @ 0x4
   886  0004'                    	ds	4
   887  0008'                    ?_sprintf:
   888  0008'                    sprintf@f:	
   889                           ; 2 bytes @ 0x8
   890                           
   891                           
   892                           ; 1 bytes @ 0x8
   893  0008'                    	ds	11
   894  0013'                    ??_sprintf:
   895                           
   896                           ; 1 bytes @ 0x13
   897  0013'                    	ds	5
   898                           
   899                           	psect	cstackCOMMON
   900  0000'                    __pcstackCOMMON:
   901  0000'                    ?_isdigit:
   902  0000'                    ?_setup:	
   903                           ; 1 bit 
   904                           
   905  0000'                    ?_ADC_Init:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0000'                    ?_LCD_Init:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0000'                    ?_Clear:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0000'                    ?_ADCval:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0000'                    ?_Wr_USART:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0000'                    ?_Rd_USART:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0000'                    ??_Rd_USART:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0000'                    ?_LCD_cmd:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0000'                    ?_LCD_datos:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0000'                    ?_main:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0000'                    ?_ISR:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0000'                    ??_ISR:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0000'                    ?_LCD_data:	
   942                           ; 1 bytes @ 0x0
   943                           
   944                           
   945                           ; 1 bytes @ 0x0
   946  0000'                    	ds	3
   947  0003'                    ??_setup:
   948  0003'                    ??_ADC_Init:	
   949                           ; 1 bytes @ 0x3
   950                           
   951  0003'                    ??_ADCval:	
   952                           ; 1 bytes @ 0x3
   953                           
   954  0003'                    ??_Wr_USART:	
   955                           ; 1 bytes @ 0x3
   956                           
   957  0003'                    ??_LCD_datos:	
   958                           ; 1 bytes @ 0x3
   959                           
   960  0003'                    ??_isdigit:	
   961                           ; 1 bytes @ 0x3
   962                           
   963  0003'                    ??__tdiv_to_l_:	
   964                           ; 1 bytes @ 0x3
   965                           
   966  0003'                    ??__div_to_l_:	
   967                           ; 1 bytes @ 0x3
   968                           
   969  0003'                    ??___lldiv:	
   970                           ; 1 bytes @ 0x3
   971                           
   972  0003'                    ??___aldiv:	
   973                           ; 1 bytes @ 0x3
   974                           
   975  0003'                    ??___fleq:	
   976                           ; 1 bytes @ 0x3
   977                           
   978  0003'                    ??___flge:	
   979                           ; 1 bytes @ 0x3
   980                           
   981  0003'                    ?__Umul8_16:	
   982                           ; 1 bytes @ 0x3
   983                           
   984  0003'                    ?___wmul:	
   985                           ; 2 bytes @ 0x3
   986                           
   987  0003'                    ?___awmod:	
   988                           ; 2 bytes @ 0x3
   989                           
   990  0003'                    ?___lwmod:	
   991                           ; 2 bytes @ 0x3
   992                           
   993  0003'                    ?___flneg:	
   994                           ; 2 bytes @ 0x3
   995                           
   996  0003'                    ?___xxtofl:	
   997                           ; 4 bytes @ 0x3
   998                           
   999  0003'                    LCD_datos@x:	
  1000                           ; 4 bytes @ 0x3
  1001                           
  1002  0003'                    Wr_USART@a:	
  1003                           ; 1 bytes @ 0x3
  1004                           
  1005  0003'                    __Umul8_16@multiplicand:	
  1006                           ; 1 bytes @ 0x3
  1007                           
  1008  0003'                    _isdigit$988:	
  1009                           ; 1 bytes @ 0x3
  1010                           
  1011  0003'                    ___wmul@multiplier:	
  1012                           ; 1 bytes @ 0x3
  1013                           
  1014  0003'                    ___awmod@divisor:	
  1015                           ; 2 bytes @ 0x3
  1016                           
  1017  0003'                    ___lwmod@divisor:	
  1018                           ; 2 bytes @ 0x3
  1019                           
  1020  0003'                    ___flneg@f1:	
  1021                           ; 2 bytes @ 0x3
  1022                           
  1023  0003'                    ___xxtofl@val:	
  1024                           ; 4 bytes @ 0x3
  1025                           
  1026                           
  1027                           ; 4 bytes @ 0x3
  1028  0003'                    	ds	1
  1029  0004'                    ?_Wr_USART_String:
  1030  0004'                    ??_LCD_cmd:	
  1031                           ; 1 bytes @ 0x4
  1032                           
  1033  0004'                    ??_LCD_data:	
  1034                           ; 1 bytes @ 0x4
  1035                           
  1036  0004'                    ___aldiv@counter:	
  1037                           ; 1 bytes @ 0x4
  1038                           
  1039  0004'                    isdigit@c:	
  1040                           ; 1 bytes @ 0x4
  1041                           
  1042  0004'                    Wr_USART_String@a:	
  1043                           ; 1 bytes @ 0x4
  1044                           
  1045  0004'                    ___lldiv@quotient:	
  1046                           ; 2 bytes @ 0x4
  1047                           
  1048  0004'                    __div_to_l_@quot:	
  1049                           ; 4 bytes @ 0x4
  1050                           
  1051                           
  1052                           ; 4 bytes @ 0x4
  1053  0004'                    	ds	1
  1054  0005'                    ??__Umul8_16:
  1055  0005'                    ADCval@x:	
  1056                           ; 1 bytes @ 0x5
  1057                           
  1058  0005'                    ___aldiv@sign:	
  1059                           ; 1 bytes @ 0x5
  1060                           
  1061  0005'                    ___wmul@multiplicand:	
  1062                           ; 1 bytes @ 0x5
  1063                           
  1064  0005'                    ___awmod@dividend:	
  1065                           ; 2 bytes @ 0x5
  1066                           
  1067  0005'                    ___lwmod@dividend:	
  1068                           ; 2 bytes @ 0x5
  1069                           
  1070                           
  1071                           ; 2 bytes @ 0x5
  1072  0005'                    	ds	1
  1073  0006'                    ??_Wr_USART_String:
  1074  0006'                    LCD_cmd@cmd:	
  1075                           ; 1 bytes @ 0x6
  1076                           
  1077  0006'                    LCD_data@data:	
  1078                           ; 1 bytes @ 0x6
  1079                           
  1080  0006'                    ___aldiv@quotient:	
  1081                           ; 1 bytes @ 0x6
  1082                           
  1083                           
  1084                           ; 4 bytes @ 0x6
  1085  0006'                    	ds	1
  1086  0007'                    ??_LCD_Init:
  1087  0007'                    ??_Clear:	
  1088                           ; 1 bytes @ 0x7
  1089                           
  1090  0007'                    ?_LCD_move_cursor:	
  1091                           ; 1 bytes @ 0x7
  1092                           
  1093  0007'                    ?_LCD_data_string:	
  1094                           ; 1 bytes @ 0x7
  1095                           
  1096  0007'                    ??___wmul:	
  1097                           ; 1 bytes @ 0x7
  1098                           
  1099  0007'                    ??___awmod:	
  1100                           ; 1 bytes @ 0x7
  1101                           
  1102  0007'                    ??___flneg:	
  1103                           ; 1 bytes @ 0x7
  1104                           
  1105  0007'                    ??___lwmod:	
  1106                           ; 1 bytes @ 0x7
  1107                           
  1108  0007'                    LCD_move_cursor@b:	
  1109                           ; 1 bytes @ 0x7
  1110                           
  1111  0007'                    Wr_USART_String@i:	
  1112                           ; 1 bytes @ 0x7
  1113                           
  1114  0007'                    LCD_data_string@a:	
  1115                           ; 1 bytes @ 0x7
  1116                           
  1117  0007'                    ___wmul@product:	
  1118                           ; 2 bytes @ 0x7
  1119                           
  1120                           
  1121                           ; 2 bytes @ 0x7
  1122  0007'                    	ds	1
  1123  0008'                    ??_LCD_move_cursor:
  1124  0008'                    LCD_move_cursor@a:	
  1125                           ; 1 bytes @ 0x8
  1126                           
  1127  0008'                    ___lldiv@counter:	
  1128                           ; 1 bytes @ 0x8
  1129                           
  1130  0008'                    ___awmod@counter:	
  1131                           ; 1 bytes @ 0x8
  1132                           
  1133  0008'                    __div_to_l_@cntr:	
  1134                           ; 1 bytes @ 0x8
  1135                           
  1136  0008'                    ___lwmod@counter:	
  1137                           ; 1 bytes @ 0x8
  1138                           
  1139                           
  1140                           ; 1 bytes @ 0x8
  1141  0008'                    	ds	1
  1142  0009'                    ??___llmod:
  1143  0009'                    ??___lwdiv:	
  1144                           ; 1 bytes @ 0x9
  1145                           
  1146  0009'                    LCD_move_cursor@c:	
  1147                           ; 1 bytes @ 0x9
  1148                           
  1149  0009'                    ___awmod@sign:	
  1150                           ; 1 bytes @ 0x9
  1151                           
  1152  0009'                    __div_to_l_@exp1:	
  1153                           ; 1 bytes @ 0x9
  1154                           
  1155                           
  1156                           ; 1 bytes @ 0x9
  1157  0009'                    	ds	1
  1158  000A'                    ??___flsub:
  1159                           
  1160                           	psect	cstackBANK0
  1161  0000'                    __pcstackBANK0:	
  1162                           ; 1 bytes @ 0xA
  1163                           
  1164  0000'                    ?___fleq:
  1165  0000'                    ?___flge:	
  1166                           ; 1 bit 
  1167                           
  1168  0000'                    ??_LCD_data_string:	
  1169                           ; 1 bit 
  1170                           
  1171  0000'                    ??___xxtofl:	
  1172                           ; 1 bytes @ 0x0
  1173                           
  1174  0000'                    ?___awdiv:	
  1175                           ; 1 bytes @ 0x0
  1176                           
  1177  0000'                    ?___lwdiv:	
  1178                           ; 2 bytes @ 0x0
  1179                           
  1180  0000'                    ?__tdiv_to_l_:	
  1181                           ; 2 bytes @ 0x0
  1182                           
  1183  0000'                    ?__div_to_l_:	
  1184                           ; 4 bytes @ 0x0
  1185                           
  1186  0000'                    ?___lldiv:	
  1187                           ; 4 bytes @ 0x0
  1188                           
  1189  0000'                    ?___aldiv:	
  1190                           ; 4 bytes @ 0x0
  1191                           
  1192  0000'                    ___awdiv@divisor:	
  1193                           ; 4 bytes @ 0x0
  1194                           
  1195  0000'                    ___lwdiv@divisor:	
  1196                           ; 2 bytes @ 0x0
  1197                           
  1198  0000'                    __Umul8_16@product:	
  1199                           ; 2 bytes @ 0x0
  1200                           
  1201  0000'                    ___lldiv@divisor:	
  1202                           ; 2 bytes @ 0x0
  1203                           
  1204  0000'                    ___aldiv@divisor:	
  1205                           ; 4 bytes @ 0x0
  1206                           
  1207  0000'                    __div_to_l_@f1:	
  1208                           ; 4 bytes @ 0x0
  1209                           
  1210  0000'                    ___fleq@ff1:	
  1211                           ; 4 bytes @ 0x0
  1212                           
  1213  0000'                    ___flge@ff1:	
  1214                           ; 4 bytes @ 0x0
  1215                           
  1216  0000'                    __tdiv_to_l_@f1:	
  1217                           ; 4 bytes @ 0x0
  1218                           
  1219                           
  1220                           ; 4 bytes @ 0x0
  1221  0000'                    	ds	2
  1222  0002'                    ___awdiv@dividend:
  1223  0002'                    ___lwdiv@dividend:	
  1224                           ; 2 bytes @ 0x2
  1225                           
  1226  0002'                    __Umul8_16@word_mpld:	
  1227                           ; 2 bytes @ 0x2
  1228                           
  1229                           
  1230                           ; 2 bytes @ 0x2
  1231  0002'                    	ds	1
  1232  0003'                    LCD_data_string@i:
  1233                           
  1234                           ; 2 bytes @ 0x3
  1235  0003'                    	ds	1
  1236  0004'                    ??___awdiv:
  1237  0004'                    ___lwdiv@counter:	
  1238                           ; 1 bytes @ 0x4
  1239                           
  1240  0004'                    __Umul8_16@multiplier:	
  1241                           ; 1 bytes @ 0x4
  1242                           
  1243  0004'                    ___xxtofl@sign:	
  1244                           ; 1 bytes @ 0x4
  1245                           
  1246  0004'                    ___lldiv@dividend:	
  1247                           ; 1 bytes @ 0x4
  1248                           
  1249  0004'                    ___aldiv@dividend:	
  1250                           ; 4 bytes @ 0x4
  1251                           
  1252  0004'                    __div_to_l_@f2:	
  1253                           ; 4 bytes @ 0x4
  1254                           
  1255  0004'                    ___fleq@ff2:	
  1256                           ; 4 bytes @ 0x4
  1257                           
  1258  0004'                    ___flge@ff2:	
  1259                           ; 4 bytes @ 0x4
  1260                           
  1261  0004'                    __tdiv_to_l_@f2:	
  1262                           ; 4 bytes @ 0x4
  1263                           
  1264                           
  1265                           ; 4 bytes @ 0x4
  1266  0004'                    	ds	1
  1267  0005'                    ___awdiv@counter:
  1268  0005'                    ___xxtofl@exp:	
  1269                           ; 1 bytes @ 0x5
  1270                           
  1271  0005'                    ___lwdiv@quotient:	
  1272                           ; 1 bytes @ 0x5
  1273                           
  1274                           
  1275                           ; 2 bytes @ 0x5
  1276  0005'                    	ds	1
  1277  0006'                    ___awdiv@sign:
  1278  0006'                    ___xxtofl@arg:	
  1279                           ; 1 bytes @ 0x6
  1280                           
  1281                           
  1282                           ; 4 bytes @ 0x6
  1283  0006'                    	ds	1
  1284  0007'                    ___awdiv@quotient:
  1285                           
  1286                           ; 2 bytes @ 0x7
  1287  0007'                    	ds	1
  1288  0008'                    ?_USART_In:
  1289  0008'                    ?___llmod:	
  1290                           ; 1 bytes @ 0x8
  1291                           
  1292  0008'                    USART_In@baudrate:	
  1293                           ; 4 bytes @ 0x8
  1294                           
  1295  0008'                    __tdiv_to_l_@quot:	
  1296                           ; 4 bytes @ 0x8
  1297                           
  1298  0008'                    ___llmod@divisor:	
  1299                           ; 4 bytes @ 0x8
  1300                           
  1301                           
  1302                           ; 4 bytes @ 0x8
  1303  0008'                    	ds	2
  1304  000A'                    ?___flmul:
  1305  000A'                    ___flmul@b:	
  1306                           ; 4 bytes @ 0xA
  1307                           
  1308                           
  1309                           ; 4 bytes @ 0xA
  1310  000A'                    	ds	2
  1311  000C'                    ??_USART_In:
  1312  000C'                    __tdiv_to_l_@cntr:	
  1313                           ; 1 bytes @ 0xC
  1314                           
  1315  000C'                    ___llmod@dividend:	
  1316                           ; 1 bytes @ 0xC
  1317                           
  1318                           
  1319                           ; 4 bytes @ 0xC
  1320  000C'                    	ds	1
  1321  000D'                    __tdiv_to_l_@exp1:
  1322                           
  1323                           ; 1 bytes @ 0xD
  1324  000D'                    	ds	1
  1325  000E'                    ___flmul@a:
  1326                           
  1327                           ; 4 bytes @ 0xE
  1328  000E'                    	ds	2
  1329  0010'                    ___llmod@counter:
  1330                           
  1331                           ; 1 bytes @ 0x10
  1332  0010'                    	ds	2
  1333  0012'                    ??___flmul:
  1334                           
  1335                           ; 1 bytes @ 0x12
  1336  0012'                    	ds	5
  1337  0017'                    ___flmul@sign:
  1338                           
  1339                           ; 1 bytes @ 0x17
  1340  0017'                    	ds	1
  1341  0018'                    ___flmul@aexp:
  1342  0018'                    USART_In@x:	
  1343                           ; 1 bytes @ 0x18
  1344                           
  1345                           
  1346                           ; 2 bytes @ 0x18
  1347  0018'                    	ds	1
  1348  0019'                    ___flmul@grs:
  1349                           
  1350                           ; 4 bytes @ 0x19
  1351  0019'                    	ds	4
  1352  001D'                    ___flmul@bexp:
  1353                           
  1354                           ; 1 bytes @ 0x1D
  1355  001D'                    	ds	1
  1356  001E'                    ___flmul@prod:
  1357                           
  1358                           ; 4 bytes @ 0x1E
  1359  001E'                    	ds	4
  1360  0022'                    ___flmul@temp:
  1361                           
  1362                           ; 2 bytes @ 0x22
  1363  0022'                    	ds	2
  1364  0024'                    ?_val:
  1365  0024'                    ?_fround:	
  1366                           ; 4 bytes @ 0x24
  1367                           
  1368  0024'                    ?_scale:	
  1369                           ; 4 bytes @ 0x24
  1370                           
  1371                           
  1372                           ; 4 bytes @ 0x24
  1373  0024'                    	ds	4
  1374  0028'                    ??_val:
  1375  0028'                    ??_fround:	
  1376                           ; 1 bytes @ 0x28
  1377                           
  1378  0028'                    ??_scale:	
  1379                           ; 1 bytes @ 0x28
  1380                           
  1381                           
  1382                           ; 1 bytes @ 0x28
  1383  0028'                    	ds	4
  1384  002C'                    val@b:
  1385                           
  1386                           ; 1 bytes @ 0x2C
  1387  002C'                    	ds	3
  1388  002F'                    _fround$1160:
  1389                           
  1390                           ; 4 bytes @ 0x2F
  1391  002F'                    	ds	3
  1392  0032'                    _scale$1161:
  1393                           
  1394                           ; 4 bytes @ 0x32
  1395  0032'                    	ds	1
  1396  0033'                    _fround$1159:
  1397                           
  1398                           ; 4 bytes @ 0x33
  1399  0033'                    	ds	3
  1400  0036'                    scale@scl:
  1401                           
  1402                           ; 1 bytes @ 0x36
  1403  0036'                    	ds	1
  1404  0037'                    ?___fltol:
  1405  0037'                    fround@prec:	
  1406                           ; 4 bytes @ 0x37
  1407                           
  1408  0037'                    ___fltol@f1:	
  1409                           ; 1 bytes @ 0x37
  1410                           
  1411                           
  1412                           ; 4 bytes @ 0x37
  1413  0037'                    	ds	1
  1414  0038'                    ?___fladd:
  1415  0038'                    ___fladd@b:	
  1416                           ; 4 bytes @ 0x38
  1417                           
  1418                           
  1419                           ; 4 bytes @ 0x38
  1420  0038'                    	ds	3
  1421  003B'                    ??___fltol:
  1422                           
  1423                           ; 1 bytes @ 0x3B
  1424  003B'                    	ds	1
  1425  003C'                    ___fladd@a:
  1426                           
  1427                           ; 4 bytes @ 0x3C
  1428  003C'                    	ds	4
  1429  0040'                    ??___fladd:
  1430  0040'                    ___fltol@sign1:	
  1431                           ; 1 bytes @ 0x40
  1432                           
  1433                           
  1434                           ; 1 bytes @ 0x40
  1435  0040'                    	ds	1
  1436  0041'                    ___fltol@exp1:
  1437                           
  1438                           ; 1 bytes @ 0x41
  1439  0041'                    	ds	7
  1440  0048'                    ___fladd@signs:
  1441                           
  1442                           ; 1 bytes @ 0x48
  1443  0048'                    	ds	1
  1444  0049'                    ___fladd@aexp:
  1445                           
  1446                           ; 1 bytes @ 0x49
  1447  0049'                    	ds	1
  1448  004A'                    ___fladd@bexp:
  1449                           
  1450                           ; 1 bytes @ 0x4A
  1451  004A'                    	ds	1
  1452  004B'                    ___fladd@grs:
  1453                           
  1454                           ; 1 bytes @ 0x4B
  1455  004B'                    	ds	1
  1456  004C'                    ??_main:
  1457                           
  1458                           ; 1 bytes @ 0x4C
  1459  004C'                    	ds	3
  1460                           
  1461                           	psect	maintext
  1462  0000'                    __pmaintext:	
  1463 ;;
  1464 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1465 ;;
  1466 ;; *************** function _main *****************
  1467 ;; Defined at:
  1468 ;;		line 56 in file "lab_3.c"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;		None
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;		None
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1477 ;; Tracked objects:
  1478 ;;		On entry : B00/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1482 ;;      Params:         0       0       0       0       0
  1483 ;;      Locals:         0       0       0       0       0
  1484 ;;      Temps:          0       3       0       0       0
  1485 ;;      Totals:         0       3       0       0       0
  1486 ;;Total ram usage:        3 bytes
  1487 ;; Hardware stack levels required when called:    6
  1488 ;; This function calls:
  1489 ;;		_ADC_Init
  1490 ;;		_ADCval
  1491 ;;		_Clear
  1492 ;;		_LCD_Init
  1493 ;;		_LCD_data_string
  1494 ;;		_LCD_move_cursor
  1495 ;;		_USART_In
  1496 ;;		_Wr_USART
  1497 ;;		_Wr_USART_String
  1498 ;;		_setup
  1499 ;;		_sprintf
  1500 ;;		_val
  1501 ;; This function is called by:
  1502 ;;		Startup code after reset
  1503 ;; This function uses a non-reentrant model
  1504 ;;
  1505                           
  1506                           
  1507                           ;psect for function _main
  1508  0000'                    _main:
  1509  0000'                    l5271:	
  1510                           ;incstack = 0
  1511                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1512                           
  1513                           
  1514                           ;lab_3.c: 57:     TRISD = 0;
  1515  0000' 120A' 118A' 2000' 120A' 118A' 	fcall	_setup
  1516  0005'                    l5273:
  1517                           
  1518                           ;lab_3.c: 58:     PORTD = 0;
  1519  0005' 120A' 118A' 2000' 120A' 118A' 	fcall	_ADC_Init
  1520  000A'                    l5275:
  1521                           
  1522                           ;lab_3.c: 59:     TRISE = 0;
  1523  000A' 3000               	movlw	0
  1524  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  1525  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  1526  000D' 008B'              	movwf	USART_In@baudrate+3
  1527  000E' 3000               	movlw	0
  1528  000F' 008A'              	movwf	USART_In@baudrate+2
  1529  0010' 3025               	movlw	37
  1530  0011' 0089'              	movwf	USART_In@baudrate+1
  1531  0012' 3080               	movlw	128
  1532  0013' 0088'              	movwf	USART_In@baudrate
  1533  0014' 120A' 118A' 2000' 120A' 118A' 	fcall	_USART_In
  1534  0019'                    l5277:
  1535                           
  1536                           ;lab_3.c: 60:     PORTE = 0;
  1537  0019' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_Init
  1538  001E'                    l5279:
  1539                           
  1540                           ;lab_3.c: 61: 
  1541  001E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Clear
  1542  0023'                    l5281:
  1543                           
  1544                           ;lab_3.c: 63:     INTCONbits.PEIE = 1;
  1545  0023' 3000               	movlw	0
  1546  0024' 120A' 118A' 2000' 120A' 118A' 	fcall	_ADCval
  1547  0029' 1283               	bcf	3,5	;RP0=0, select bank0
  1548  002A' 1303               	bcf	3,6	;RP1=0, select bank0
  1549  002B' 00CC'              	movwf	??_main
  1550  002C' 084C'              	movf	??_main,w
  1551  002D' 0080'              	movwf	_ADC1
  1552  002E'                    l5283:
  1553                           
  1554                           ;lab_3.c: 64:     PIE1bits.RCIE = 1;
  1555  002E' 3001               	movlw	1
  1556  002F' 120A' 118A' 2000' 120A' 118A' 	fcall	_ADCval
  1557  0034' 1283               	bcf	3,5	;RP0=0, select bank0
  1558  0035' 1303               	bcf	3,6	;RP1=0, select bank0
  1559  0036' 00CC'              	movwf	??_main
  1560  0037' 084C'              	movf	??_main,w
  1561  0038' 1683               	bsf	3,5	;RP0=1, select bank1
  1562  0039' 1303               	bcf	3,6	;RP1=0, select bank1
  1563  003A' 0080'              	movwf	_ADC2^(0+128)
  1564  003B'                    l5285:
  1565                           
  1566                           ;lab_3.c: 65:     PIR1bits.RCIF = 0;
  1567  003B' 1283               	bcf	3,5	;RP0=0, select bank0
  1568  003C' 1303               	bcf	3,6	;RP1=0, select bank0
  1569  003D' 0800'              	movf	_ADC1,w
  1570  003E' 120A' 118A' 2000' 120A' 118A' 	fcall	_val
  1571  0043' 1283               	bcf	3,5	;RP0=0, select bank0
  1572  0044' 1303               	bcf	3,6	;RP1=0, select bank0
  1573  0045' 0827'              	movf	?_val+3,w
  1574  0046' 1683               	bsf	3,5	;RP0=1, select bank1
  1575  0047' 1303               	bcf	3,6	;RP1=0, select bank1
  1576  0048' 0080'              	movwf	(_v1+3)^(0+128)
  1577  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  1578  004A' 1303               	bcf	3,6	;RP1=0, select bank0
  1579  004B' 0826'              	movf	?_val+2,w
  1580  004C' 1683               	bsf	3,5	;RP0=1, select bank1
  1581  004D' 1303               	bcf	3,6	;RP1=0, select bank1
  1582  004E' 0080'              	movwf	(_v1+2)^(0+128)
  1583  004F' 1283               	bcf	3,5	;RP0=0, select bank0
  1584  0050' 1303               	bcf	3,6	;RP1=0, select bank0
  1585  0051' 0825'              	movf	?_val+1,w
  1586  0052' 1683               	bsf	3,5	;RP0=1, select bank1
  1587  0053' 1303               	bcf	3,6	;RP1=0, select bank1
  1588  0054' 0080'              	movwf	(_v1+1)^(0+128)
  1589  0055' 1283               	bcf	3,5	;RP0=0, select bank0
  1590  0056' 1303               	bcf	3,6	;RP1=0, select bank0
  1591  0057' 0824'              	movf	?_val,w
  1592  0058' 1683               	bsf	3,5	;RP0=1, select bank1
  1593  0059' 1303               	bcf	3,6	;RP1=0, select bank1
  1594  005A' 0080'              	movwf	_v1^(0+128)
  1595  005B'                    l5287:
  1596                           
  1597                           ;lab_3.c: 66:     INTCONbits.GIE = 1;
  1598  005B' 0800'              	movf	_ADC2^(0+128),w
  1599  005C' 120A' 118A' 2000' 120A' 118A' 	fcall	_val
  1600  0061' 1283               	bcf	3,5	;RP0=0, select bank0
  1601  0062' 1303               	bcf	3,6	;RP1=0, select bank0
  1602  0063' 0827'              	movf	?_val+3,w
  1603  0064' 1683               	bsf	3,5	;RP0=1, select bank1
  1604  0065' 1303               	bcf	3,6	;RP1=0, select bank1
  1605  0066' 0080'              	movwf	(_v2+3)^(0+128)
  1606  0067' 1283               	bcf	3,5	;RP0=0, select bank0
  1607  0068' 1303               	bcf	3,6	;RP1=0, select bank0
  1608  0069' 0826'              	movf	?_val+2,w
  1609  006A' 1683               	bsf	3,5	;RP0=1, select bank1
  1610  006B' 1303               	bcf	3,6	;RP1=0, select bank1
  1611  006C' 0080'              	movwf	(_v2+2)^(0+128)
  1612  006D' 1283               	bcf	3,5	;RP0=0, select bank0
  1613  006E' 1303               	bcf	3,6	;RP1=0, select bank0
  1614  006F' 0825'              	movf	?_val+1,w
  1615  0070' 1683               	bsf	3,5	;RP0=1, select bank1
  1616  0071' 1303               	bcf	3,6	;RP1=0, select bank1
  1617  0072' 0080'              	movwf	(_v2+1)^(0+128)
  1618  0073' 1283               	bcf	3,5	;RP0=0, select bank0
  1619  0074' 1303               	bcf	3,6	;RP1=0, select bank0
  1620  0075' 0824'              	movf	?_val,w
  1621  0076' 1683               	bsf	3,5	;RP0=1, select bank1
  1622  0077' 1303               	bcf	3,6	;RP1=0, select bank1
  1623  0078' 0080'              	movwf	_v2^(0+128)
  1624  0079'                    l5289:
  1625                           
  1626                           ;lab_3.c: 67: }
  1627  0079' 3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1628  007A' 0084'              	movwf	Wr_USART_String@a
  1629  007B' 3080               	movlw	128
  1630  007C' 0085'              	movwf	Wr_USART_String@a+1
  1631  007D' 120A' 118A' 2000' 120A' 118A' 	fcall	_Wr_USART_String
  1632  0082'                    l5291:
  1633                           
  1634                           ;lab_3.c: 68: 
  1635  0082' 30A6               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1636  0083' 1283               	bcf	3,5	;RP0=0, select bank0
  1637  0084' 1303               	bcf	3,6	;RP1=0, select bank0
  1638  0085' 00CC'              	movwf	??_main
  1639  0086' 084C'              	movf	??_main,w
  1640  0087' 1683               	bsf	3,5	;RP0=1, select bank1
  1641  0088' 1303               	bcf	3,6	;RP1=0, select bank1
  1642  0089' 0080'              	movwf	sprintf@f^(0+128)
  1643  008A' 0800'              	movf	(_v1+3)^(0+128),w
  1644  008B' 0081'              	movwf	((?_sprintf+3)^(0+128)+1)
  1645  008C' 0800'              	movf	(_v1+2)^(0+128),w
  1646  008D' 0081'              	movwf	((?_sprintf+2)^(0+128)+1)
  1647  008E' 0800'              	movf	(_v1+1)^(0+128),w
  1648  008F' 0081'              	movwf	((?_sprintf+1)^(0+128)+1)
  1649  0090' 0800'              	movf	_v1^(0+128),w
  1650  0091' 0081'              	movwf	(?_sprintf^(0+128)+1)
  1651  0092' 0800'              	movf	(_v2+3)^(0+128),w
  1652  0093' 0085'              	movwf	((?_sprintf+3)^(0+128)+5)
  1653  0094' 0800'              	movf	(_v2+2)^(0+128),w
  1654  0095' 0085'              	movwf	((?_sprintf+2)^(0+128)+5)
  1655  0096' 0800'              	movf	(_v2+1)^(0+128),w
  1656  0097' 0085'              	movwf	((?_sprintf+1)^(0+128)+5)
  1657  0098' 0800'              	movf	_v2^(0+128),w
  1658  0099' 0085'              	movwf	(?_sprintf^(0+128)+5)
  1659  009A' 0800'              	movf	_contador^(0+128),w
  1660  009B' 1283               	bcf	3,5	;RP0=0, select bank0
  1661  009C' 1303               	bcf	3,6	;RP1=0, select bank0
  1662  009D' 00CD'              	movwf	??_main+1
  1663  009E' 01CE'              	clrf	??_main+2
  1664  009F' 084D'              	movf	??_main+1,w
  1665  00A0' 1683               	bsf	3,5	;RP0=1, select bank1
  1666  00A1' 1303               	bcf	3,6	;RP1=0, select bank1
  1667  00A2' 0089'              	movwf	(?_sprintf^(0+128)+9)
  1668  00A3' 1283               	bcf	3,5	;RP0=0, select bank0
  1669  00A4' 1303               	bcf	3,6	;RP1=0, select bank0
  1670  00A5' 084E'              	movf	??_main+2,w
  1671  00A6' 1683               	bsf	3,5	;RP0=1, select bank1
  1672  00A7' 1303               	bcf	3,6	;RP1=0, select bank1
  1673  00A8' 0089'              	movwf	((?_sprintf+1)^(0+128)+9)
  1674  00A9' 3000'              	movlw	(low (_d| 0))& (0+255)
  1675  00AA' 120A' 118A' 2000' 120A' 118A' 	fcall	_sprintf
  1676  00AF'                    l5293:
  1677                           
  1678                           ;lab_3.c: 69: 
  1679  00AF' 3000'              	movlw	(low (_d| 0))& (0+255)
  1680  00B0' 0084'              	movwf	Wr_USART_String@a
  1681  00B1' 3000               	movlw	0
  1682  00B2' 0085'              	movwf	Wr_USART_String@a+1
  1683  00B3' 120A' 118A' 2000' 120A' 118A' 	fcall	_Wr_USART_String
  1684  00B8'                    l5295:
  1685                           
  1686                           ;lab_3.c: 70: float val(uint8_t b){
  1687  00B8' 300D               	movlw	13
  1688  00B9' 120A' 118A' 2000' 120A' 118A' 	fcall	_Wr_USART
  1689  00BE'                    l5297:
  1690                           
  1691                           ;lab_3.c: 71:     return b*0.0196;
  1692  00BE' 300A               	movlw	10
  1693  00BF' 120A' 118A' 2000' 120A' 118A' 	fcall	_Wr_USART
  1694  00C4'                    l5299:
  1695                           
  1696                           ;lab_3.c: 72: }
  1697  00C4' 120A' 118A' 2000' 120A' 118A' 	fcall	_Clear
  1698  00C9'                    l5301:
  1699                           
  1700                           ;lab_3.c: 73: 
  1701  00C9' 0187'              	clrf	LCD_move_cursor@b
  1702  00CA' 0A87'              	incf	LCD_move_cursor@b,f
  1703  00CB' 3001               	movlw	1
  1704  00CC' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_move_cursor
  1705  00D1'                    l5303:
  1706                           
  1707                           ;lab_3.c: 74: void __attribute__((picinterrupt(("")))) ISR(){
  1708  00D1' 30B9               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1709  00D2' 0087'              	movwf	LCD_data_string@a
  1710  00D3' 3080               	movlw	128
  1711  00D4' 0088'              	movwf	LCD_data_string@a+1
  1712  00D5' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_data_string
  1713  00DA'                    l5305:
  1714                           
  1715                           ;lab_3.c: 75:     if (RCIF == 1){
  1716  00DA' 0187'              	clrf	LCD_move_cursor@b
  1717  00DB' 3002               	movlw	2
  1718  00DC' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_move_cursor
  1719  00E1'                    l5307:
  1720                           
  1721                           ;lab_3.c: 76:         RCIF = 0;
  1722  00E1' 3000'              	movlw	(low (_d| 0))& (0+255)
  1723  00E2' 0087'              	movwf	LCD_data_string@a
  1724  00E3' 3000               	movlw	0
  1725  00E4' 0088'              	movwf	LCD_data_string@a+1
  1726  00E5' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_data_string
  1727  00EA'                    l5309:
  1728                           
  1729                           ;lab_3.c: 77:         valUSART= Rd_USART();
  1730  00EA' 3006               	movlw	6
  1731  00EB' 1283               	bcf	3,5	;RP0=0, select bank0
  1732  00EC' 1303               	bcf	3,6	;RP1=0, select bank0
  1733  00ED' 00CE'              	movwf	??_main+2
  1734  00EE' 3013               	movlw	19
  1735  00EF' 00CD'              	movwf	??_main+1
  1736  00F0' 30AD               	movlw	173
  1737  00F1' 00CC'              	movwf	??_main
  1738  00F2'                    u9367:
  1739  00F2' 0BCC'              	decfsz	??_main,f
  1740  00F3' 2800'              	goto	u9367
  1741  00F4' 0BCD'              	decfsz	??_main+1,f
  1742  00F5' 2800'              	goto	u9367
  1743  00F6' 0BCE'              	decfsz	??_main+2,f
  1744  00F7' 2800'              	goto	u9367
  1745  00F8' 2800'              	goto	l5281
  1746  00F9' 120A' 118A' 2800'  	ljmp	start
  1747  00FC'                    __end_of_main:
  1748                           
  1749                           	psect	text1
  1750  0000'                    __ptext1:	
  1751 ;; *************** function _val *****************
  1752 ;; Defined at:
  1753 ;;		line 104 in file "lab_3.c"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  b               1    wreg     unsigned char 
  1756 ;; Auto vars:     Size  Location     Type
  1757 ;;  b               1   44[BANK0 ] unsigned char 
  1758 ;; Return value:  Size  Location     Type
  1759 ;;                  4   36[BANK0 ] float 
  1760 ;; Registers used:
  1761 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1762 ;; Tracked objects:
  1763 ;;		On entry : 0/0
  1764 ;;		On exit  : 0/0
  1765 ;;		Unchanged: 0/0
  1766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1767 ;;      Params:         0       4       0       0       0
  1768 ;;      Locals:         0       1       0       0       0
  1769 ;;      Temps:          0       4       0       0       0
  1770 ;;      Totals:         0       9       0       0       0
  1771 ;;Total ram usage:        9 bytes
  1772 ;; Hardware stack levels used:    1
  1773 ;; Hardware stack levels required when called:    4
  1774 ;; This function calls:
  1775 ;;		___flmul
  1776 ;;		___xxtofl
  1777 ;; This function is called by:
  1778 ;;		_main
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           
  1783                           ;psect for function _val
  1784  0000'                    _val:
  1785                           
  1786                           ;incstack = 0
  1787                           ; Regs used in _val: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1788                           ;val@b stored from wreg
  1789  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  1790  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  1791  0002' 00AC'              	movwf	val@b
  1792  0003'                    l4953:
  1793  0003' 303C               	movlw	60
  1794  0004' 008D'              	movwf	___flmul@b+3
  1795  0005' 30A0               	movlw	160
  1796  0006' 008C'              	movwf	___flmul@b+2
  1797  0007' 3090               	movlw	144
  1798  0008' 008B'              	movwf	___flmul@b+1
  1799  0009' 302E               	movlw	46
  1800  000A' 008A'              	movwf	___flmul@b
  1801  000B' 082C'              	movf	val@b,w
  1802  000C' 00A8'              	movwf	??_val
  1803  000D' 01A9'              	clrf	??_val+1
  1804  000E' 01AA'              	clrf	??_val+2
  1805  000F' 01AB'              	clrf	??_val+3
  1806  0010' 082B'              	movf	??_val+3,w
  1807  0011' 0086'              	movwf	___xxtofl@val+3
  1808  0012' 082A'              	movf	??_val+2,w
  1809  0013' 0085'              	movwf	___xxtofl@val+2
  1810  0014' 0829'              	movf	??_val+1,w
  1811  0015' 0084'              	movwf	___xxtofl@val+1
  1812  0016' 0828'              	movf	??_val,w
  1813  0017' 0083'              	movwf	___xxtofl@val
  1814  0018' 3001               	movlw	1
  1815  0019' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
  1816  001E' 0806'              	movf	?___xxtofl+3,w
  1817  001F' 1283               	bcf	3,5	;RP0=0, select bank0
  1818  0020' 1303               	bcf	3,6	;RP1=0, select bank0
  1819  0021' 0091'              	movwf	___flmul@a+3
  1820  0022' 0805'              	movf	?___xxtofl+2,w
  1821  0023' 0090'              	movwf	___flmul@a+2
  1822  0024' 0804'              	movf	?___xxtofl+1,w
  1823  0025' 008F'              	movwf	___flmul@a+1
  1824  0026' 0803'              	movf	?___xxtofl,w
  1825  0027' 008E'              	movwf	___flmul@a
  1826  0028' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  1827  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  1828  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  1829  002F' 080D'              	movf	?___flmul+3,w
  1830  0030' 00A7'              	movwf	?_val+3
  1831  0031' 080C'              	movf	?___flmul+2,w
  1832  0032' 00A6'              	movwf	?_val+2
  1833  0033' 080B'              	movf	?___flmul+1,w
  1834  0034' 00A5'              	movwf	?_val+1
  1835  0035' 080A'              	movf	?___flmul,w
  1836  0036' 00A4'              	movwf	?_val
  1837  0037'                    l80:
  1838  0037' 0008               	return
  1839  0038'                    __end_of_val:
  1840                           
  1841                           	psect	text2
  1842  0000'                    __ptext2:	
  1843 ;; *************** function _sprintf *****************
  1844 ;; Defined at:
  1845 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  sp              1    wreg     PTR unsigned char 
  1848 ;;		 -> d(20), 
  1849 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1850 ;;		 -> STR_2(19), 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  sp              1   23[BANK3 ] PTR unsigned char 
  1853 ;;		 -> d(20), 
  1854 ;;  fval            4   19[BANK3 ] PTR unsigned char 
  1855 ;;  val             4   13[BANK3 ] unsigned long 
  1856 ;;  tmpval          4    9[BANK3 ] struct .
  1857 ;;  prec            2   24[BANK3 ] int 
  1858 ;;  eexp            2   17[BANK3 ] int 
  1859 ;;  width           2    7[BANK3 ] int 
  1860 ;;  flag            2    5[BANK3 ] unsigned short 
  1861 ;;  cp              2    0        PTR const unsigned char 
  1862 ;;  len             2    0        unsigned int 
  1863 ;;  c               1   26[BANK3 ] unsigned char 
  1864 ;;  ap              1    4[BANK3 ] PTR void [1]
  1865 ;;		 -> ?_sprintf(2), 
  1866 ;;  d               1    0        unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  2    8[BANK1 ] int 
  1869 ;; Registers used:
  1870 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1876 ;;      Params:         0       0      11       0       0
  1877 ;;      Locals:         0       0       0      27       0
  1878 ;;      Temps:          0       0       5       0       0
  1879 ;;      Totals:         0       0      16      27       0
  1880 ;;Total ram usage:       43 bytes
  1881 ;; Hardware stack levels used:    1
  1882 ;; Hardware stack levels required when called:    5
  1883 ;; This function calls:
  1884 ;;		___awdiv
  1885 ;;		___fladd
  1886 ;;		___fleq
  1887 ;;		___flge
  1888 ;;		___flmul
  1889 ;;		___flneg
  1890 ;;		___flsub
  1891 ;;		___fltol
  1892 ;;		___lldiv
  1893 ;;		___llmod
  1894 ;;		___wmul
  1895 ;;		___xxtofl
  1896 ;;		__div_to_l_
  1897 ;;		__tdiv_to_l_
  1898 ;;		_fround
  1899 ;;		_isdigit
  1900 ;;		_scale
  1901 ;; This function is called by:
  1902 ;;		_main
  1903 ;; This function uses a non-reentrant model
  1904 ;;
  1905                           
  1906                           
  1907                           ;psect for function _sprintf
  1908  0000'                    _sprintf:
  1909                           
  1910                           ;incstack = 0
  1911                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1912                           ;sprintf@sp stored from wreg
  1913  0000' 1683               	bsf	3,5	;RP0=1, select bank3
  1914  0001' 1703               	bsf	3,6	;RP1=1, select bank3
  1915  0002' 0080'              	movwf	sprintf@sp^(0+384)
  1916  0003'                    l4957:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1919  0003' 3000'              	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1920  0004' 1683               	bsf	3,5	;RP0=1, select bank1
  1921  0005' 1303               	bcf	3,6	;RP1=0, select bank1
  1922  0006' 0080'              	movwf	??_sprintf^(0+128)
  1923  0007' 0800'              	movf	??_sprintf^(0+128),w
  1924  0008' 1683               	bsf	3,5	;RP0=1, select bank3
  1925  0009' 1703               	bsf	3,6	;RP1=1, select bank3
  1926  000A' 0080'              	movwf	sprintf@ap^(0+384)
  1927  000B'                    L1:
  1928                           
  1929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1930  000B' 120A' 118A' 2800'  	goto	l5239
  1931  000E'                    l4959:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1934  000E' 3025               	movlw	37
  1935  000F' 0600'              	xorwf	sprintf@c^(0+384),w
  1936  0010' 1903               	btfsc	3,2
  1937  0011' 2800'              	goto	u8781
  1938  0012' 2800'              	goto	u8780
  1939  0013'                    u8781:
  1940  0013' 2800'              	goto	l4965
  1941  0014'                    u8780:
  1942  0014'                    l4961:
  1943                           
  1944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1945  0014' 0800'              	movf	sprintf@c^(0+384),w
  1946  0015' 1683               	bsf	3,5	;RP0=1, select bank1
  1947  0016' 1303               	bcf	3,6	;RP1=0, select bank1
  1948  0017' 0080'              	movwf	??_sprintf^(0+128)
  1949  0018' 1683               	bsf	3,5	;RP0=1, select bank3
  1950  0019' 1703               	bsf	3,6	;RP1=1, select bank3
  1951  001A' 0800'              	movf	sprintf@sp^(0+384),w
  1952  001B' 0084               	movwf	4
  1953  001C' 1683               	bsf	3,5	;RP0=1, select bank1
  1954  001D' 1303               	bcf	3,6	;RP1=0, select bank1
  1955  001E' 0800'              	movf	??_sprintf^(0+128),w
  1956  001F' 1383               	bcf	3,7	;select IRP bank0
  1957  0020' 0080               	movwf	0
  1958  0021'                    l4963:
  1959  0021' 3001               	movlw	1
  1960  0022' 0080'              	movwf	??_sprintf^(0+128)
  1961  0023' 0800'              	movf	??_sprintf^(0+128),w
  1962  0024' 1683               	bsf	3,5	;RP0=1, select bank3
  1963  0025' 1703               	bsf	3,6	;RP1=1, select bank3
  1964  0026' 0780'              	addwf	sprintf@sp^(0+384),f
  1965                           
  1966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1967  0027' 2800'              	goto	L1
  1968  0028'                    l4965:
  1969                           
  1970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1971  0028' 0180'              	clrf	sprintf@width^(0+384)
  1972  0029' 0180'              	clrf	(sprintf@width+1)^(0+384)
  1973                           
  1974                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1975  002A' 0180'              	clrf	sprintf@flag^(0+384)
  1976  002B' 0180'              	clrf	(sprintf@flag+1)^(0+384)
  1977  002C'                    l4967:
  1978                           
  1979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1980  002C' 1683               	bsf	3,5	;RP0=1, select bank1
  1981  002D' 1303               	bcf	3,6	;RP1=0, select bank1
  1982  002E' 0800'              	movf	sprintf@f^(0+128),w
  1983  002F' 0084               	movwf	4
  1984  0030' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  1985  0035' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  1986  003A' 1C03               	btfss	3,0
  1987  003B' 2800'              	goto	u8791
  1988  003C' 2800'              	goto	u8790
  1989  003D'                    u8791:
  1990  003D' 2800'              	goto	l4979
  1991  003E'                    u8790:
  1992  003E'                    l4969:
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1995  003E' 1683               	bsf	3,5	;RP0=1, select bank3
  1996  003F' 1703               	bsf	3,6	;RP1=1, select bank3
  1997  0040' 0180'              	clrf	sprintf@width^(0+384)
  1998  0041' 0180'              	clrf	(sprintf@width+1)^(0+384)
  1999  0042'                    l4971:
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2002  0042' 300A               	movlw	10
  2003  0043' 0083'              	movwf	___wmul@multiplier
  2004  0044' 3000               	movlw	0
  2005  0045' 0084'              	movwf	___wmul@multiplier+1
  2006  0046' 1683               	bsf	3,5	;RP0=1, select bank3
  2007  0047' 1703               	bsf	3,6	;RP1=1, select bank3
  2008  0048' 0800'              	movf	(sprintf@width+1)^(0+384),w
  2009  0049' 0086'              	movwf	___wmul@multiplicand+1
  2010  004A' 0800'              	movf	sprintf@width^(0+384),w
  2011  004B' 0085'              	movwf	___wmul@multiplicand
  2012  004C' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2013  0051' 0804'              	movf	?___wmul+1,w
  2014  0052' 1683               	bsf	3,5	;RP0=1, select bank3
  2015  0053' 1703               	bsf	3,6	;RP1=1, select bank3
  2016  0054' 0080'              	movwf	(sprintf@width+1)^(0+384)
  2017  0055' 0803'              	movf	?___wmul,w
  2018  0056' 0080'              	movwf	sprintf@width^(0+384)
  2019  0057'                    l4973:
  2020                           
  2021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2022  0057' 1683               	bsf	3,5	;RP0=1, select bank1
  2023  0058' 1303               	bcf	3,6	;RP1=0, select bank1
  2024  0059' 0800'              	movf	sprintf@f^(0+128),w
  2025  005A' 0084               	movwf	4
  2026  005B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2027  0060' 3ED0               	addlw	208
  2028  0061' 0080'              	movwf	??_sprintf^(0+128)
  2029  0062' 30FF               	movlw	255
  2030  0063' 1803               	skipnc
  2031  0064' 3000               	movlw	0
  2032  0065' 0081'              	movwf	(??_sprintf^(0+128)+1)
  2033  0066' 0800'              	movf	??_sprintf^(0+128),w
  2034  0067' 1683               	bsf	3,5	;RP0=1, select bank3
  2035  0068' 1703               	bsf	3,6	;RP1=1, select bank3
  2036  0069' 0780'              	addwf	sprintf@width^(0+384),f
  2037  006A' 1803               	skipnc
  2038  006B' 0A80'              	incf	(sprintf@width+1)^(0+384),f
  2039  006C' 1683               	bsf	3,5	;RP0=1, select bank1
  2040  006D' 1303               	bcf	3,6	;RP1=0, select bank1
  2041  006E' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2042  006F' 1683               	bsf	3,5	;RP0=1, select bank3
  2043  0070' 1703               	bsf	3,6	;RP1=1, select bank3
  2044  0071' 0780'              	addwf	(sprintf@width+1)^(0+384),f
  2045  0072'                    l4975:
  2046  0072' 3001               	movlw	1
  2047  0073' 1683               	bsf	3,5	;RP0=1, select bank1
  2048  0074' 1303               	bcf	3,6	;RP1=0, select bank1
  2049  0075' 0080'              	movwf	??_sprintf^(0+128)
  2050  0076' 0800'              	movf	??_sprintf^(0+128),w
  2051  0077' 0780'              	addwf	sprintf@f^(0+128),f
  2052  0078'                    l4977:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2055  0078' 0800'              	movf	sprintf@f^(0+128),w
  2056  0079' 0084               	movwf	4
  2057  007A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2058  007F' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  2059  0084' 1803               	btfsc	3,0
  2060  0085' 2800'              	goto	u8801
  2061  0086' 2800'              	goto	u8800
  2062  0087'                    u8801:
  2063  0087' 2800'              	goto	l4971
  2064  0088'                    u8800:
  2065  0088'                    l4979:
  2066                           
  2067                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2068  0088' 1683               	bsf	3,5	;RP0=1, select bank1
  2069  0089' 1303               	bcf	3,6	;RP1=0, select bank1
  2070  008A' 0800'              	movf	sprintf@f^(0+128),w
  2071  008B' 0084               	movwf	4
  2072  008C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2073  0091' 3A2E               	xorlw	46
  2074  0092' 1D03               	skipz
  2075  0093' 2800'              	goto	u8811
  2076  0094' 2800'              	goto	u8810
  2077  0095'                    u8811:
  2078  0095' 2800'              	goto	l4995
  2079  0096'                    u8810:
  2080  0096'                    l4981:
  2081                           
  2082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2083  0096' 1683               	bsf	3,5	;RP0=1, select bank3
  2084  0097' 1703               	bsf	3,6	;RP1=1, select bank3
  2085  0098' 1701'              	bsf	(sprintf@flag^(0+384)+1),6
  2086  0099'                    l4983:
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2089  0099' 3001               	movlw	1
  2090  009A' 1683               	bsf	3,5	;RP0=1, select bank1
  2091  009B' 1303               	bcf	3,6	;RP1=0, select bank1
  2092  009C' 0080'              	movwf	??_sprintf^(0+128)
  2093  009D' 0800'              	movf	??_sprintf^(0+128),w
  2094  009E' 0780'              	addwf	sprintf@f^(0+128),f
  2095  009F'                    l4985:
  2096                           
  2097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2098  009F' 1683               	bsf	3,5	;RP0=1, select bank3
  2099  00A0' 1703               	bsf	3,6	;RP1=1, select bank3
  2100  00A1' 0180'              	clrf	sprintf@prec^(0+384)
  2101  00A2' 0180'              	clrf	(sprintf@prec+1)^(0+384)
  2102                           
  2103                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2104  00A3' 2800'              	goto	l4993
  2105  00A4'                    l4987:
  2106                           
  2107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2108  00A4' 300A               	movlw	10
  2109  00A5' 0083'              	movwf	___wmul@multiplier
  2110  00A6' 3000               	movlw	0
  2111  00A7' 0084'              	movwf	___wmul@multiplier+1
  2112  00A8' 1683               	bsf	3,5	;RP0=1, select bank3
  2113  00A9' 1703               	bsf	3,6	;RP1=1, select bank3
  2114  00AA' 0800'              	movf	(sprintf@prec+1)^(0+384),w
  2115  00AB' 0086'              	movwf	___wmul@multiplicand+1
  2116  00AC' 0800'              	movf	sprintf@prec^(0+384),w
  2117  00AD' 0085'              	movwf	___wmul@multiplicand
  2118  00AE' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2119  00B3' 0804'              	movf	?___wmul+1,w
  2120  00B4' 1683               	bsf	3,5	;RP0=1, select bank3
  2121  00B5' 1703               	bsf	3,6	;RP1=1, select bank3
  2122  00B6' 0080'              	movwf	(sprintf@prec+1)^(0+384)
  2123  00B7' 0803'              	movf	?___wmul,w
  2124  00B8' 0080'              	movwf	sprintf@prec^(0+384)
  2125  00B9'                    l4989:
  2126                           
  2127                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2128  00B9' 1683               	bsf	3,5	;RP0=1, select bank1
  2129  00BA' 1303               	bcf	3,6	;RP1=0, select bank1
  2130  00BB' 0800'              	movf	sprintf@f^(0+128),w
  2131  00BC' 0084               	movwf	4
  2132  00BD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2133  00C2' 3ED0               	addlw	208
  2134  00C3' 0080'              	movwf	??_sprintf^(0+128)
  2135  00C4' 30FF               	movlw	255
  2136  00C5' 1803               	skipnc
  2137  00C6' 3000               	movlw	0
  2138  00C7' 0081'              	movwf	(??_sprintf^(0+128)+1)
  2139  00C8' 0800'              	movf	??_sprintf^(0+128),w
  2140  00C9' 1683               	bsf	3,5	;RP0=1, select bank3
  2141  00CA' 1703               	bsf	3,6	;RP1=1, select bank3
  2142  00CB' 0780'              	addwf	sprintf@prec^(0+384),f
  2143  00CC' 1803               	skipnc
  2144  00CD' 0A80'              	incf	(sprintf@prec+1)^(0+384),f
  2145  00CE' 1683               	bsf	3,5	;RP0=1, select bank1
  2146  00CF' 1303               	bcf	3,6	;RP1=0, select bank1
  2147  00D0' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2148  00D1' 1683               	bsf	3,5	;RP0=1, select bank3
  2149  00D2' 1703               	bsf	3,6	;RP1=1, select bank3
  2150  00D3' 0780'              	addwf	(sprintf@prec+1)^(0+384),f
  2151  00D4'                    l4991:
  2152  00D4' 3001               	movlw	1
  2153  00D5' 1683               	bsf	3,5	;RP0=1, select bank1
  2154  00D6' 1303               	bcf	3,6	;RP1=0, select bank1
  2155  00D7' 0080'              	movwf	??_sprintf^(0+128)
  2156  00D8' 0800'              	movf	??_sprintf^(0+128),w
  2157  00D9' 0780'              	addwf	sprintf@f^(0+128),f
  2158  00DA'                    l4993:
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2161  00DA' 1303               	bcf	3,6	;RP1=0, select bank1
  2162  00DB' 0800'              	movf	sprintf@f^(0+128),w
  2163  00DC' 0084               	movwf	4
  2164  00DD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2165  00E2' 120A' 118A' 2000' 120A' 118A' 	fcall	_isdigit
  2166  00E7' 1803               	btfsc	3,0
  2167  00E8' 2800'              	goto	u8821
  2168  00E9' 2800'              	goto	u8820
  2169  00EA'                    u8821:
  2170  00EA' 2800'              	goto	l4987
  2171  00EB'                    u8820:
  2172  00EB' 2800'              	goto	l5001
  2173  00EC'                    l4995:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2176  00EC' 1683               	bsf	3,5	;RP0=1, select bank3
  2177  00ED' 1703               	bsf	3,6	;RP1=1, select bank3
  2178  00EE' 0180'              	clrf	sprintf@prec^(0+384)
  2179  00EF' 0180'              	clrf	(sprintf@prec+1)^(0+384)
  2180  00F0'                    l4997:
  2181                           
  2182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2183  00F0' 1601'              	bsf	(sprintf@flag^(0+384)+1),4
  2184  00F1' 2800'              	goto	l5001
  2185  00F2'                    l390:	
  2186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2187                           
  2188                           
  2189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2190  00F2' 1683               	bsf	3,5	;RP0=1, select bank3
  2191  00F3' 1703               	bsf	3,6	;RP1=1, select bank3
  2192  00F4' 1501'              	bsf	(sprintf@flag^(0+384)+1),2
  2193                           
  2194                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2195  00F5' 2800'              	goto	l5003
  2196  00F6'                    l5001:
  2197  00F6' 3001               	movlw	1
  2198  00F7' 1683               	bsf	3,5	;RP0=1, select bank1
  2199  00F8' 1303               	bcf	3,6	;RP1=0, select bank1
  2200  00F9' 0780'              	addwf	sprintf@f^(0+128),f
  2201  00FA' 30FF               	movlw	-1
  2202  00FB' 0700'              	addwf	sprintf@f^(0+128),w
  2203  00FC' 0084               	movwf	4
  2204  00FD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2205  0102' 1683               	bsf	3,5	;RP0=1, select bank3
  2206  0103' 1703               	bsf	3,6	;RP1=1, select bank3
  2207  0104' 0080'              	movwf	sprintf@c^(0+384)
  2208  0105' 1683               	bsf	3,5	;RP0=1, select bank1
  2209  0106' 1303               	bcf	3,6	;RP1=0, select bank1
  2210  0107' 0080'              	movwf	??_sprintf^(0+128)
  2211  0108' 0181'              	clrf	(??_sprintf^(0+128)+1)
  2212                           
  2213                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2214                           ; Switch size 1, requested type "simple"
  2215                           ; Number of cases is 1, Range of values is 0 to 0
  2216                           ; switch strategies available:
  2217                           ; Name         Instructions Cycles
  2218                           ; simple_byte            4     3 (average)
  2219                           ; direct_byte           11     8 (fixed)
  2220                           ; jumptable            260     6 (fixed)
  2221                           ;	Chosen strategy is simple_byte
  2222  0109' 0800'              	movf	(??_sprintf+1)^(0+128),w
  2223  010A' 3A00               	xorlw	0	; case 0
  2224  010B' 1903               	skipnz
  2225  010C' 2800'              	goto	l5361
  2226  010D' 2800'              	goto	L1
  2227  010E'                    l5361:
  2228                           
  2229                           ; Switch size 1, requested type "simple"
  2230                           ; Number of cases is 4, Range of values is 0 to 105
  2231                           ; switch strategies available:
  2232                           ; Name         Instructions Cycles
  2233                           ; simple_byte           13     7 (average)
  2234                           ; jumptable            260     6 (fixed)
  2235                           ;	Chosen strategy is simple_byte
  2236  010E' 0800'              	movf	??_sprintf^(0+128),w
  2237  010F' 3A00               	xorlw	0	; case 0
  2238  0110' 1903               	skipnz
  2239  0111' 2800'              	goto	L3
  2240  0112' 3A64               	xorlw	100	; case 100
  2241  0113' 1903               	skipnz
  2242  0114' 2800'              	goto	l5003
  2243  0115' 3A02               	xorlw	2	; case 102
  2244  0116' 1903               	skipnz
  2245  0117' 2800'              	goto	l390
  2246  0118' 3A0F               	xorlw	15	; case 105
  2247  0119' 1903               	skipnz
  2248  011A' 2800'              	goto	l5003
  2249  011B' 2800'              	goto	L1
  2250  011C'                    l5003:
  2251                           
  2252                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2253  011C' 3000               	movlw	0
  2254  011D' 1683               	bsf	3,5	;RP0=1, select bank3
  2255  011E' 1703               	bsf	3,6	;RP1=1, select bank3
  2256  011F' 0500'              	andwf	sprintf@flag^(0+384),w
  2257  0120' 1683               	bsf	3,5	;RP0=1, select bank1
  2258  0121' 1303               	bcf	3,6	;RP1=0, select bank1
  2259  0122' 0080'              	movwf	??_sprintf^(0+128)
  2260  0123' 3007               	movlw	7
  2261  0124' 1683               	bsf	3,5	;RP0=1, select bank3
  2262  0125' 1703               	bsf	3,6	;RP1=1, select bank3
  2263  0126' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
  2264  0127' 1683               	bsf	3,5	;RP0=1, select bank1
  2265  0128' 1303               	bcf	3,6	;RP1=0, select bank1
  2266  0129' 0080'              	movwf	(??_sprintf+1)^(0+128)
  2267  012A' 0800'              	movf	??_sprintf^(0+128),w
  2268  012B' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
  2269  012C' 1903               	btfsc	3,2
  2270  012D' 2800'              	goto	u8831
  2271  012E' 2800'              	goto	u8830
  2272  012F'                    u8831:
  2273  012F' 120A' 118A' 2800'  	goto	l5161
  2274  0132'                    u8830:
  2275  0132'                    l5005:
  2276                           
  2277                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2278  0132' 1683               	bsf	3,5	;RP0=1, select bank3
  2279  0133' 1703               	bsf	3,6	;RP1=1, select bank3
  2280  0134' 1E00'              	btfss	(sprintf@flag+1)^(0+384),4
  2281  0135' 2800'              	goto	u8841
  2282  0136' 2800'              	goto	u8840
  2283  0137'                    u8841:
  2284  0137' 2800'              	goto	l5009
  2285  0138'                    u8840:
  2286  0138'                    l5007:
  2287                           
  2288                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2289  0138' 3006               	movlw	6
  2290  0139' 0080'              	movwf	sprintf@prec^(0+384)
  2291  013A' 3000               	movlw	0
  2292  013B' 0081'              	movwf	(sprintf@prec^(0+384)+1)
  2293  013C'                    l5009:
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2296  013C' 0800'              	movf	sprintf@ap^(0+384),w
  2297  013D' 0084               	movwf	4
  2298  013E' 1383               	bcf	3,7	;select IRP bank0
  2299  013F' 0800               	movf	0,w
  2300  0140' 0080'              	movwf	sprintf@fval^(0+384)
  2301  0141' 0A84               	incf	4,f
  2302  0142' 0800               	movf	0,w
  2303  0143' 0080'              	movwf	(sprintf@fval+1)^(0+384)
  2304  0144' 0A84               	incf	4,f
  2305  0145' 0800               	movf	0,w
  2306  0146' 0080'              	movwf	(sprintf@fval+2)^(0+384)
  2307  0147' 0A84               	incf	4,f
  2308  0148' 0800               	movf	0,w
  2309  0149' 0080'              	movwf	(sprintf@fval+3)^(0+384)
  2310  014A'                    l5011:
  2311  014A' 3004               	movlw	4
  2312  014B' 1683               	bsf	3,5	;RP0=1, select bank1
  2313  014C' 1303               	bcf	3,6	;RP1=0, select bank1
  2314  014D' 0080'              	movwf	??_sprintf^(0+128)
  2315  014E' 0800'              	movf	??_sprintf^(0+128),w
  2316  014F' 1683               	bsf	3,5	;RP0=1, select bank3
  2317  0150' 1703               	bsf	3,6	;RP1=1, select bank3
  2318  0151' 0780'              	addwf	sprintf@ap^(0+384),f
  2319  0152'                    l5013:
  2320                           
  2321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2322  0152' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  2323  0153' 1283               	bcf	3,5	;RP0=0, select bank0
  2324  0154' 1303               	bcf	3,6	;RP1=0, select bank0
  2325  0155' 0083'              	movwf	___flge@ff1+3
  2326  0156' 1683               	bsf	3,5	;RP0=1, select bank3
  2327  0157' 1703               	bsf	3,6	;RP1=1, select bank3
  2328  0158' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  2329  0159' 1283               	bcf	3,5	;RP0=0, select bank0
  2330  015A' 1303               	bcf	3,6	;RP1=0, select bank0
  2331  015B' 0082'              	movwf	___flge@ff1+2
  2332  015C' 1683               	bsf	3,5	;RP0=1, select bank3
  2333  015D' 1703               	bsf	3,6	;RP1=1, select bank3
  2334  015E' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  2335  015F' 1283               	bcf	3,5	;RP0=0, select bank0
  2336  0160' 1303               	bcf	3,6	;RP1=0, select bank0
  2337  0161' 0081'              	movwf	___flge@ff1+1
  2338  0162' 1683               	bsf	3,5	;RP0=1, select bank3
  2339  0163' 1703               	bsf	3,6	;RP1=1, select bank3
  2340  0164' 0800'              	movf	sprintf@fval^(0+384),w
  2341  0165' 1283               	bcf	3,5	;RP0=0, select bank0
  2342  0166' 1303               	bcf	3,6	;RP1=0, select bank0
  2343  0167' 0080'              	movwf	___flge@ff1
  2344  0168' 3000               	movlw	0
  2345  0169' 0087'              	movwf	___flge@ff2+3
  2346  016A' 3000               	movlw	0
  2347  016B' 0086'              	movwf	___flge@ff2+2
  2348  016C' 3000               	movlw	0
  2349  016D' 0085'              	movwf	___flge@ff2+1
  2350  016E' 3000               	movlw	0
  2351  016F' 0084'              	movwf	___flge@ff2
  2352  0170' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2353  0175' 1803               	btfsc	3,0
  2354  0176' 2800'              	goto	u8851
  2355  0177' 2800'              	goto	u8850
  2356  0178'                    u8851:
  2357  0178' 2800'              	goto	l5019
  2358  0179'                    u8850:
  2359  0179'                    l5015:
  2360                           
  2361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2362  0179' 1683               	bsf	3,5	;RP0=1, select bank3
  2363  017A' 1703               	bsf	3,6	;RP1=1, select bank3
  2364  017B' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  2365  017C' 0086'              	movwf	___flneg@f1+3
  2366  017D' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  2367  017E' 0085'              	movwf	___flneg@f1+2
  2368  017F' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  2369  0180' 0084'              	movwf	___flneg@f1+1
  2370  0181' 0800'              	movf	sprintf@fval^(0+384),w
  2371  0182' 0083'              	movwf	___flneg@f1
  2372  0183' 120A' 118A' 2000' 120A' 118A' 	fcall	___flneg
  2373  0188' 0806'              	movf	?___flneg+3,w
  2374  0189' 1683               	bsf	3,5	;RP0=1, select bank3
  2375  018A' 1703               	bsf	3,6	;RP1=1, select bank3
  2376  018B' 0080'              	movwf	(sprintf@fval+3)^(0+384)
  2377  018C' 0805'              	movf	?___flneg+2,w
  2378  018D' 0080'              	movwf	(sprintf@fval+2)^(0+384)
  2379  018E' 0804'              	movf	?___flneg+1,w
  2380  018F' 0080'              	movwf	(sprintf@fval+1)^(0+384)
  2381  0190' 0803'              	movf	?___flneg,w
  2382  0191' 0080'              	movwf	sprintf@fval^(0+384)
  2383  0192'                    l5017:
  2384                           
  2385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2386  0192' 3003               	movlw	3
  2387  0193' 0480'              	iorwf	sprintf@flag^(0+384),f
  2388  0194' 3000               	movlw	0
  2389  0195' 0480'              	iorwf	(sprintf@flag+1)^(0+384),f
  2390  0196'                    l5019:
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2393  0196' 1683               	bsf	3,5	;RP0=1, select bank3
  2394  0197' 1703               	bsf	3,6	;RP1=1, select bank3
  2395  0198' 0180'              	clrf	sprintf@eexp^(0+384)
  2396  0199' 0180'              	clrf	(sprintf@eexp+1)^(0+384)
  2397  019A'                    l5021:
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2400  019A' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  2401  019B' 1283               	bcf	3,5	;RP0=0, select bank0
  2402  019C' 1303               	bcf	3,6	;RP1=0, select bank0
  2403  019D' 0083'              	movwf	___fleq@ff1+3
  2404  019E' 1683               	bsf	3,5	;RP0=1, select bank3
  2405  019F' 1703               	bsf	3,6	;RP1=1, select bank3
  2406  01A0' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  2407  01A1' 1283               	bcf	3,5	;RP0=0, select bank0
  2408  01A2' 1303               	bcf	3,6	;RP1=0, select bank0
  2409  01A3' 0082'              	movwf	___fleq@ff1+2
  2410  01A4' 1683               	bsf	3,5	;RP0=1, select bank3
  2411  01A5' 1703               	bsf	3,6	;RP1=1, select bank3
  2412  01A6' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  2413  01A7' 1283               	bcf	3,5	;RP0=0, select bank0
  2414  01A8' 1303               	bcf	3,6	;RP1=0, select bank0
  2415  01A9' 0081'              	movwf	___fleq@ff1+1
  2416  01AA' 1683               	bsf	3,5	;RP0=1, select bank3
  2417  01AB' 1703               	bsf	3,6	;RP1=1, select bank3
  2418  01AC' 0800'              	movf	sprintf@fval^(0+384),w
  2419  01AD' 1283               	bcf	3,5	;RP0=0, select bank0
  2420  01AE' 1303               	bcf	3,6	;RP1=0, select bank0
  2421  01AF' 0080'              	movwf	___fleq@ff1
  2422  01B0' 3000               	movlw	0
  2423  01B1' 0087'              	movwf	___fleq@ff2+3
  2424  01B2' 3000               	movlw	0
  2425  01B3' 0086'              	movwf	___fleq@ff2+2
  2426  01B4' 3000               	movlw	0
  2427  01B5' 0085'              	movwf	___fleq@ff2+1
  2428  01B6' 3000               	movlw	0
  2429  01B7' 0084'              	movwf	___fleq@ff2
  2430  01B8' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
  2431  01BD' 1803               	btfsc	3,0
  2432  01BE' 2800'              	goto	u8861
  2433  01BF' 2800'              	goto	u8860
  2434  01C0'                    u8861:
  2435  01C0' 2800'              	goto	l5047
  2436  01C1'                    u8860:
  2437  01C1'                    l5023:
  2438                           
  2439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2440  01C1' 1003               	clrc
  2441  01C2' 1683               	bsf	3,5	;RP0=1, select bank3
  2442  01C3' 1703               	bsf	3,6	;RP1=1, select bank3
  2443  01C4' 0D00'              	rlf	(sprintf@fval+2)^(0+384),w
  2444  01C5' 0D00'              	rlf	(sprintf@fval+3)^(0+384),w
  2445  01C6' 3E82               	addlw	130
  2446  01C7' 0080'              	movwf	sprintf@eexp^(0+384)
  2447  01C8' 30FF               	movlw	255
  2448  01C9' 1803               	skipnc
  2449  01CA' 3000               	movlw	0
  2450  01CB' 0081'              	movwf	(sprintf@eexp^(0+384)+1)
  2451  01CC'                    l5025:
  2452                           
  2453                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2454  01CC' 30FF               	movlw	255
  2455  01CD' 0780'              	addwf	sprintf@eexp^(0+384),f
  2456  01CE' 1803               	skipnc
  2457  01CF' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
  2458  01D0' 30FF               	movlw	255
  2459  01D1' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
  2460  01D2'                    l5027:
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2463  01D2' 3003               	movlw	3
  2464  01D3' 0083'              	movwf	___wmul@multiplier
  2465  01D4' 3000               	movlw	0
  2466  01D5' 0084'              	movwf	___wmul@multiplier+1
  2467  01D6' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
  2468  01D7' 0086'              	movwf	___wmul@multiplicand+1
  2469  01D8' 0800'              	movf	sprintf@eexp^(0+384),w
  2470  01D9' 0085'              	movwf	___wmul@multiplicand
  2471  01DA' 120A' 118A' 2000' 120A' 118A' 	fcall	___wmul
  2472  01DF' 0804'              	movf	?___wmul+1,w
  2473  01E0' 1683               	bsf	3,5	;RP0=1, select bank3
  2474  01E1' 1703               	bsf	3,6	;RP1=1, select bank3
  2475  01E2' 0080'              	movwf	(sprintf@eexp+1)^(0+384)
  2476  01E3' 0803'              	movf	?___wmul,w
  2477  01E4' 0080'              	movwf	sprintf@eexp^(0+384)
  2478  01E5'                    l5029:
  2479                           
  2480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2481  01E5' 300A               	movlw	10
  2482  01E6' 1283               	bcf	3,5	;RP0=0, select bank0
  2483  01E7' 1303               	bcf	3,6	;RP1=0, select bank0
  2484  01E8' 0080'              	movwf	___awdiv@divisor
  2485  01E9' 3000               	movlw	0
  2486  01EA' 0081'              	movwf	___awdiv@divisor+1
  2487  01EB' 1683               	bsf	3,5	;RP0=1, select bank3
  2488  01EC' 1703               	bsf	3,6	;RP1=1, select bank3
  2489  01ED' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
  2490  01EE' 1283               	bcf	3,5	;RP0=0, select bank0
  2491  01EF' 1303               	bcf	3,6	;RP1=0, select bank0
  2492  01F0' 0083'              	movwf	___awdiv@dividend+1
  2493  01F1' 1683               	bsf	3,5	;RP0=1, select bank3
  2494  01F2' 1703               	bsf	3,6	;RP1=1, select bank3
  2495  01F3' 0800'              	movf	sprintf@eexp^(0+384),w
  2496  01F4' 1283               	bcf	3,5	;RP0=0, select bank0
  2497  01F5' 1303               	bcf	3,6	;RP1=0, select bank0
  2498  01F6' 0082'              	movwf	___awdiv@dividend
  2499  01F7' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2500  01FC' 1283               	bcf	3,5	;RP0=0, select bank0
  2501  01FD' 1303               	bcf	3,6	;RP1=0, select bank0
  2502  01FE' 0801'              	movf	?___awdiv+1,w
  2503  01FF' 1683               	bsf	3,5	;RP0=1, select bank3
  2504  0200' 1703               	bsf	3,6	;RP1=1, select bank3
  2505  0201' 0080'              	movwf	(sprintf@eexp+1)^(0+384)
  2506  0202' 1283               	bcf	3,5	;RP0=0, select bank0
  2507  0203' 1303               	bcf	3,6	;RP1=0, select bank0
  2508  0204' 0800'              	movf	?___awdiv,w
  2509  0205' 1683               	bsf	3,5	;RP0=1, select bank3
  2510  0206' 1703               	bsf	3,6	;RP1=1, select bank3
  2511  0207' 0080'              	movwf	sprintf@eexp^(0+384)
  2512  0208'                    l5031:
  2513                           
  2514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2515  0208' 1F80'              	btfss	(sprintf@eexp+1)^(0+384),7
  2516  0209' 2800'              	goto	u8871
  2517  020A' 2800'              	goto	u8870
  2518  020B'                    u8871:
  2519  020B' 2800'              	goto	l5035
  2520  020C'                    u8870:
  2521  020C'                    l5033:
  2522                           
  2523                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2524  020C' 30FF               	movlw	255
  2525  020D' 0780'              	addwf	sprintf@eexp^(0+384),f
  2526  020E' 1803               	skipnc
  2527  020F' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
  2528  0210' 30FF               	movlw	255
  2529  0211' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
  2530  0212'                    l5035:
  2531                           
  2532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2533  0212' 0300'              	decf	sprintf@eexp^(0+384),w
  2534  0213' 3AFF               	xorlw	255
  2535  0214' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
  2536  0219' 1283               	bcf	3,5	;RP0=0, select bank0
  2537  021A' 1303               	bcf	3,6	;RP1=0, select bank0
  2538  021B' 0827'              	movf	?_scale+3,w
  2539  021C' 1683               	bsf	3,5	;RP0=1, select bank3
  2540  021D' 1703               	bsf	3,6	;RP1=1, select bank3
  2541  021E' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
  2542  021F' 1283               	bcf	3,5	;RP0=0, select bank0
  2543  0220' 1303               	bcf	3,6	;RP1=0, select bank0
  2544  0221' 0826'              	movf	?_scale+2,w
  2545  0222' 1683               	bsf	3,5	;RP0=1, select bank3
  2546  0223' 1703               	bsf	3,6	;RP1=1, select bank3
  2547  0224' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
  2548  0225' 1283               	bcf	3,5	;RP0=0, select bank0
  2549  0226' 1303               	bcf	3,6	;RP1=0, select bank0
  2550  0227' 0825'              	movf	?_scale+1,w
  2551  0228' 1683               	bsf	3,5	;RP0=1, select bank3
  2552  0229' 1703               	bsf	3,6	;RP1=1, select bank3
  2553  022A' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
  2554  022B' 1283               	bcf	3,5	;RP0=0, select bank0
  2555  022C' 1303               	bcf	3,6	;RP1=0, select bank0
  2556  022D' 0824'              	movf	?_scale,w
  2557  022E' 1683               	bsf	3,5	;RP0=1, select bank3
  2558  022F' 1703               	bsf	3,6	;RP1=1, select bank3
  2559  0230' 0080'              	movwf	sprintf@tmpval^(0+384)
  2560  0231'                    l5037:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2563  0231' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  2564  0232' 1283               	bcf	3,5	;RP0=0, select bank0
  2565  0233' 1303               	bcf	3,6	;RP1=0, select bank0
  2566  0234' 008D'              	movwf	___flmul@b+3
  2567  0235' 1683               	bsf	3,5	;RP0=1, select bank3
  2568  0236' 1703               	bsf	3,6	;RP1=1, select bank3
  2569  0237' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  2570  0238' 1283               	bcf	3,5	;RP0=0, select bank0
  2571  0239' 1303               	bcf	3,6	;RP1=0, select bank0
  2572  023A' 008C'              	movwf	___flmul@b+2
  2573  023B' 1683               	bsf	3,5	;RP0=1, select bank3
  2574  023C' 1703               	bsf	3,6	;RP1=1, select bank3
  2575  023D' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  2576  023E' 1283               	bcf	3,5	;RP0=0, select bank0
  2577  023F' 1303               	bcf	3,6	;RP1=0, select bank0
  2578  0240' 008B'              	movwf	___flmul@b+1
  2579  0241' 1683               	bsf	3,5	;RP0=1, select bank3
  2580  0242' 1703               	bsf	3,6	;RP1=1, select bank3
  2581  0243' 0800'              	movf	sprintf@fval^(0+384),w
  2582  0244' 1283               	bcf	3,5	;RP0=0, select bank0
  2583  0245' 1303               	bcf	3,6	;RP1=0, select bank0
  2584  0246' 008A'              	movwf	___flmul@b
  2585  0247' 1683               	bsf	3,5	;RP0=1, select bank3
  2586  0248' 1703               	bsf	3,6	;RP1=1, select bank3
  2587  0249' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
  2588  024A' 1283               	bcf	3,5	;RP0=0, select bank0
  2589  024B' 1303               	bcf	3,6	;RP1=0, select bank0
  2590  024C' 0091'              	movwf	___flmul@a+3
  2591  024D' 1683               	bsf	3,5	;RP0=1, select bank3
  2592  024E' 1703               	bsf	3,6	;RP1=1, select bank3
  2593  024F' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
  2594  0250' 1283               	bcf	3,5	;RP0=0, select bank0
  2595  0251' 1303               	bcf	3,6	;RP1=0, select bank0
  2596  0252' 0090'              	movwf	___flmul@a+2
  2597  0253' 1683               	bsf	3,5	;RP0=1, select bank3
  2598  0254' 1703               	bsf	3,6	;RP1=1, select bank3
  2599  0255' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
  2600  0256' 1283               	bcf	3,5	;RP0=0, select bank0
  2601  0257' 1303               	bcf	3,6	;RP1=0, select bank0
  2602  0258' 008F'              	movwf	___flmul@a+1
  2603  0259' 1683               	bsf	3,5	;RP0=1, select bank3
  2604  025A' 1703               	bsf	3,6	;RP1=1, select bank3
  2605  025B' 0800'              	movf	sprintf@tmpval^(0+384),w
  2606  025C' 1283               	bcf	3,5	;RP0=0, select bank0
  2607  025D' 1303               	bcf	3,6	;RP1=0, select bank0
  2608  025E' 008E'              	movwf	___flmul@a
  2609  025F' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  2610  0264' 1283               	bcf	3,5	;RP0=0, select bank0
  2611  0265' 1303               	bcf	3,6	;RP1=0, select bank0
  2612  0266' 080D'              	movf	?___flmul+3,w
  2613  0267' 1683               	bsf	3,5	;RP0=1, select bank3
  2614  0268' 1703               	bsf	3,6	;RP1=1, select bank3
  2615  0269' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
  2616  026A' 1283               	bcf	3,5	;RP0=0, select bank0
  2617  026B' 1303               	bcf	3,6	;RP1=0, select bank0
  2618  026C' 080C'              	movf	?___flmul+2,w
  2619  026D' 1683               	bsf	3,5	;RP0=1, select bank3
  2620  026E' 1703               	bsf	3,6	;RP1=1, select bank3
  2621  026F' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
  2622  0270' 1283               	bcf	3,5	;RP0=0, select bank0
  2623  0271' 1303               	bcf	3,6	;RP1=0, select bank0
  2624  0272' 080B'              	movf	?___flmul+1,w
  2625  0273' 1683               	bsf	3,5	;RP0=1, select bank3
  2626  0274' 1703               	bsf	3,6	;RP1=1, select bank3
  2627  0275' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
  2628  0276' 1283               	bcf	3,5	;RP0=0, select bank0
  2629  0277' 1303               	bcf	3,6	;RP1=0, select bank0
  2630  0278' 080A'              	movf	?___flmul,w
  2631  0279' 1683               	bsf	3,5	;RP0=1, select bank3
  2632  027A' 1703               	bsf	3,6	;RP1=1, select bank3
  2633  027B' 0080'              	movwf	sprintf@tmpval^(0+384)
  2634  027C'                    l5039:
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2637  027C' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
  2638  027D' 1283               	bcf	3,5	;RP0=0, select bank0
  2639  027E' 1303               	bcf	3,6	;RP1=0, select bank0
  2640  027F' 0083'              	movwf	___flge@ff1+3
  2641  0280' 1683               	bsf	3,5	;RP0=1, select bank3
  2642  0281' 1703               	bsf	3,6	;RP1=1, select bank3
  2643  0282' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
  2644  0283' 1283               	bcf	3,5	;RP0=0, select bank0
  2645  0284' 1303               	bcf	3,6	;RP1=0, select bank0
  2646  0285' 0082'              	movwf	___flge@ff1+2
  2647  0286' 1683               	bsf	3,5	;RP0=1, select bank3
  2648  0287' 1703               	bsf	3,6	;RP1=1, select bank3
  2649  0288' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
  2650  0289' 1283               	bcf	3,5	;RP0=0, select bank0
  2651  028A' 1303               	bcf	3,6	;RP1=0, select bank0
  2652  028B' 0081'              	movwf	___flge@ff1+1
  2653  028C' 1683               	bsf	3,5	;RP0=1, select bank3
  2654  028D' 1703               	bsf	3,6	;RP1=1, select bank3
  2655  028E' 0800'              	movf	sprintf@tmpval^(0+384),w
  2656  028F' 1283               	bcf	3,5	;RP0=0, select bank0
  2657  0290' 1303               	bcf	3,6	;RP1=0, select bank0
  2658  0291' 0080'              	movwf	___flge@ff1
  2659  0292' 303F               	movlw	63
  2660  0293' 0087'              	movwf	___flge@ff2+3
  2661  0294' 3080               	movlw	128
  2662  0295' 0086'              	movwf	___flge@ff2+2
  2663  0296' 3000               	movlw	0
  2664  0297' 0085'              	movwf	___flge@ff2+1
  2665  0298' 3000               	movlw	0
  2666  0299' 0084'              	movwf	___flge@ff2
  2667  029A' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2668  029F' 1803               	btfsc	3,0
  2669  02A0' 2800'              	goto	u8881
  2670  02A1' 2800'              	goto	u8880
  2671  02A2'                    u8881:
  2672  02A2' 2800'              	goto	l5043
  2673  02A3'                    u8880:
  2674  02A3'                    l5041:
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2677  02A3' 30FF               	movlw	255
  2678  02A4' 1683               	bsf	3,5	;RP0=1, select bank3
  2679  02A5' 1703               	bsf	3,6	;RP1=1, select bank3
  2680  02A6' 0780'              	addwf	sprintf@eexp^(0+384),f
  2681  02A7' 1803               	skipnc
  2682  02A8' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
  2683  02A9' 30FF               	movlw	255
  2684  02AA' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
  2685  02AB' 2800'              	goto	l5047
  2686  02AC'                    l5043:
  2687  02AC' 1683               	bsf	3,5	;RP0=1, select bank3
  2688  02AD' 1703               	bsf	3,6	;RP1=1, select bank3
  2689  02AE' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
  2690  02AF' 1283               	bcf	3,5	;RP0=0, select bank0
  2691  02B0' 1303               	bcf	3,6	;RP1=0, select bank0
  2692  02B1' 0083'              	movwf	___flge@ff1+3
  2693  02B2' 1683               	bsf	3,5	;RP0=1, select bank3
  2694  02B3' 1703               	bsf	3,6	;RP1=1, select bank3
  2695  02B4' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
  2696  02B5' 1283               	bcf	3,5	;RP0=0, select bank0
  2697  02B6' 1303               	bcf	3,6	;RP1=0, select bank0
  2698  02B7' 0082'              	movwf	___flge@ff1+2
  2699  02B8' 1683               	bsf	3,5	;RP0=1, select bank3
  2700  02B9' 1703               	bsf	3,6	;RP1=1, select bank3
  2701  02BA' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
  2702  02BB' 1283               	bcf	3,5	;RP0=0, select bank0
  2703  02BC' 1303               	bcf	3,6	;RP1=0, select bank0
  2704  02BD' 0081'              	movwf	___flge@ff1+1
  2705  02BE' 1683               	bsf	3,5	;RP0=1, select bank3
  2706  02BF' 1703               	bsf	3,6	;RP1=1, select bank3
  2707  02C0' 0800'              	movf	sprintf@tmpval^(0+384),w
  2708  02C1' 1283               	bcf	3,5	;RP0=0, select bank0
  2709  02C2' 1303               	bcf	3,6	;RP1=0, select bank0
  2710  02C3' 0080'              	movwf	___flge@ff1
  2711  02C4' 3041               	movlw	65
  2712  02C5' 0087'              	movwf	___flge@ff2+3
  2713  02C6' 3020               	movlw	32
  2714  02C7' 0086'              	movwf	___flge@ff2+2
  2715  02C8' 3000               	movlw	0
  2716  02C9' 0085'              	movwf	___flge@ff2+1
  2717  02CA' 3000               	movlw	0
  2718  02CB' 0084'              	movwf	___flge@ff2
  2719  02CC' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
  2720  02D1' 1C03               	btfss	3,0
  2721  02D2' 2800'              	goto	u8891
  2722  02D3' 2800'              	goto	u8890
  2723  02D4'                    u8891:
  2724  02D4' 2800'              	goto	l5047
  2725  02D5'                    u8890:
  2726  02D5'                    l5045:
  2727                           
  2728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2729  02D5' 3001               	movlw	1
  2730  02D6' 1683               	bsf	3,5	;RP0=1, select bank3
  2731  02D7' 1703               	bsf	3,6	;RP1=1, select bank3
  2732  02D8' 0780'              	addwf	sprintf@eexp^(0+384),f
  2733  02D9' 1803               	skipnc
  2734  02DA' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
  2735  02DB' 3000               	movlw	0
  2736  02DC' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
  2737  02DD'                    l5047:
  2738                           
  2739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2740  02DD' 1683               	bsf	3,5	;RP0=1, select bank3
  2741  02DE' 1703               	bsf	3,6	;RP1=1, select bank3
  2742  02DF' 0800'              	movf	(sprintf@prec+1)^(0+384),w
  2743  02E0' 3A80               	xorlw	128
  2744  02E1' 00FF               	movwf	btemp+1
  2745  02E2' 3080               	movlw	128
  2746  02E3' 027F               	subwf	btemp+1,w
  2747  02E4' 1D03               	skipz
  2748  02E5' 2800'              	goto	u8905
  2749  02E6' 300D               	movlw	13
  2750  02E7' 0200'              	subwf	sprintf@prec^(0+384),w
  2751  02E8'                    u8905:
  2752  02E8' 1803               	skipnc
  2753  02E9' 2800'              	goto	u8901
  2754  02EA' 2800'              	goto	u8900
  2755  02EB'                    u8901:
  2756  02EB' 2800'              	goto	l5051
  2757  02EC'                    u8900:
  2758  02EC'                    l5049:
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2761  02EC' 1683               	bsf	3,5	;RP0=1, select bank3
  2762  02ED' 1703               	bsf	3,6	;RP1=1, select bank3
  2763  02EE' 0800'              	movf	sprintf@prec^(0+384),w
  2764  02EF' 120A' 118A' 2000' 120A' 118A' 	fcall	_fround
  2765  02F4' 1283               	bcf	3,5	;RP0=0, select bank0
  2766  02F5' 1303               	bcf	3,6	;RP1=0, select bank0
  2767  02F6' 0827'              	movf	?_fround+3,w
  2768  02F7' 00BB'              	movwf	___fladd@b+3
  2769  02F8' 0826'              	movf	?_fround+2,w
  2770  02F9' 00BA'              	movwf	___fladd@b+2
  2771  02FA' 0825'              	movf	?_fround+1,w
  2772  02FB' 00B9'              	movwf	___fladd@b+1
  2773  02FC' 0824'              	movf	?_fround,w
  2774  02FD' 00B8'              	movwf	___fladd@b
  2775  02FE' 1683               	bsf	3,5	;RP0=1, select bank3
  2776  02FF' 1703               	bsf	3,6	;RP1=1, select bank3
  2777  0300' 0800'              	movf	(sprintf@fval+3)^(0+384),w
  2778  0301' 1283               	bcf	3,5	;RP0=0, select bank0
  2779  0302' 1303               	bcf	3,6	;RP1=0, select bank0
  2780  0303' 00BF'              	movwf	___fladd@a+3
  2781  0304' 1683               	bsf	3,5	;RP0=1, select bank3
  2782  0305' 1703               	bsf	3,6	;RP1=1, select bank3
  2783  0306' 0800'              	movf	(sprintf@fval+2)^(0+384),w
  2784  0307' 1283               	bcf	3,5	;RP0=0, select bank0
  2785  0308' 1303               	bcf	3,6	;RP1=0, select bank0
  2786  0309' 00BE'              	movwf	___fladd@a+2
  2787  030A' 1683               	bsf	3,5	;RP0=1, select bank3
  2788  030B' 1703               	bsf	3,6	;RP1=1, select bank3
  2789  030C' 0800'              	movf	(sprintf@fval+1)^(0+384),w
  2790  030D' 1283               	bcf	3,5	;RP0=0, select bank0
  2791  030E' 1303               	bcf	3,6	;RP1=0, select bank0
  2792  030F' 00BD'              	movwf	___fladd@a+1
  2793  0310' 1683               	bsf	3,5	;RP0=1, select bank3
  2794  0311' 1703               	bsf	3,6	;RP1=1, select bank3
  2795  0312' 0800'              	movf	sprintf@fval^(0+384),w
  2796  0313' 1283               	bcf	3,5	;RP0=0, select bank0
  2797  0314' 1303               	bcf	3,6	;RP1=0, select bank0
  2798  0315' 00BC'              	movwf	___fladd@a
  2799  0316' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  2800  031B' 1283               	bcf	3,5	;RP0=0, select bank0
  2801  031C' 1303               	bcf	3,6	;RP1=0, select bank0
  2802  031D' 083B'              	movf	?___fladd+3,w
  2803  031E' 1683               	bsf	3,5	;RP0=1, select bank3
  2804  031F' 1703               	bsf	3,6	;RP1=1, select bank3
  2805  0320' 0080'              	movwf	(sprintf@fval+3)^(0+384)
  2806  0321' 1283               	bcf	3,5	;RP0=0, select bank0
  2807  0322' 1303               	bcf	3,6	;RP1=0, select bank0
  2808  0323' 083A'              	movf	?___fladd+2,w
  2809  0324' 1683               	bsf	3,5	;RP0=1, select bank3
  2810  0325' 1703               	bsf	3,6	;RP1=1, select bank3
  2811  0326' 0080'              	movwf	(sprintf@fval+2)^(0+384)
  2812  0327' 1283               	bcf	3,5	;RP0=0, select bank0
  2813  0328' 1303               	bcf	3,6	;RP1=0, select bank0
  2814  0329' 0839'              	movf	?___fladd+1,w
  2815  032A' 1683               	bsf	3,5	;RP0=1, select bank3
  2816  032B' 1703               	bsf	3,6	;RP1=1, select bank3
  2817  032C' 0080'              	movwf	(sprintf@fval+1)^(0+384)
  2818  032D' 1283               	bcf	3,5	;RP0=0, select bank0
  2819  032E' 1303               	bcf	3,6	;RP1=0, select bank0
  2820  032F' 0838'              	movf	?___fladd,w
  2821  0330' 1683               	bsf	3,5	;RP0=1, select bank3
  2822  0331' 1703               	bsf	3,6	;RP1=1, select bank3
  2823  0332' 0080'              	movwf	sprintf@fval^(0+384)
  2824  0333'                    l5051:
  2825                           
  2826                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2827  0333' 1683               	bsf	3,5	;RP0=1, select bank3
  2828  0334' 1703               	bsf	3,6	;RP1=1, select bank3
  2829  0335' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
  2830  0336' 3A80               	xorlw	128
  2831  0337' 00FF               	movwf	btemp+1
  2832  0338' 3080               	movlw	128
  2833  0339' 027F               	subwf	btemp+1,w
  2834  033A' 1D03               	skipz
  2835  033B' 2800'              	goto	u8915
  2836  033C' 300A               	movlw	10
  2837  033D' 0200'              	subwf	sprintf@eexp^(0+384),w
  2838  033E'                    u8915:
  2839  033E' 1803               	skipnc
  2840  033F' 2800'              	goto	u8911
  2841  0340' 120A' 118A' 2800'  	goto	u8910
  2842  0343'                    u8911:
  2843  0343' 120A' 118A' 2800'  	goto	l5059
  2844  0346'                    L3:
  2845  0346'                    L2:
  2846  0346' 120A' 118A' 2800'  	ljmp	l5241
  2847                           
  2848                           	psect	text3
  2849  0000'                    __ptext3:	
  2850 ;; *************** function _scale *****************
  2851 ;; Defined at:
  2852 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  scl             1    wreg     char 
  2855 ;; Auto vars:     Size  Location     Type
  2856 ;;  scl             1   54[BANK0 ] char 
  2857 ;; Return value:  Size  Location     Type
  2858 ;;                  4   36[BANK0 ] char 
  2859 ;; Registers used:
  2860 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2861 ;; Tracked objects:
  2862 ;;		On entry : 0/0
  2863 ;;		On exit  : 0/0
  2864 ;;		Unchanged: 0/0
  2865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2866 ;;      Params:         0       4       0       0       0
  2867 ;;      Locals:         0       5       0       0       0
  2868 ;;      Temps:          0      10       0       0       0
  2869 ;;      Totals:         0      19       0       0       0
  2870 ;;Total ram usage:       19 bytes
  2871 ;; Hardware stack levels used:    1
  2872 ;; Hardware stack levels required when called:    4
  2873 ;; This function calls:
  2874 ;;		___awdiv
  2875 ;;		___awmod
  2876 ;;		___flmul
  2877 ;; This function is called by:
  2878 ;;		_sprintf
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function _scale
  2884  0000'                    _scale:
  2885                           
  2886                           ;incstack = 0
  2887                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2888                           ;scale@scl stored from wreg
  2889  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  2890  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  2891  0002' 00B6'              	movwf	scale@scl
  2892  0003'                    l4531:
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2895  0003' 1FB6'              	btfss	scale@scl,7
  2896  0004' 2800'              	goto	u7631
  2897  0005' 2800'              	goto	u7630
  2898  0006'                    u7631:
  2899  0006' 2800'              	goto	l4553
  2900  0007'                    u7630:
  2901  0007'                    l4533:
  2902                           
  2903                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2904  0007' 09B6'              	comf	scale@scl,f
  2905  0008' 0AB6'              	incf	scale@scl,f
  2906  0009'                    l4535:
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2909  0009' 0836'              	movf	scale@scl,w
  2910  000A' 3A80               	xorlw	128
  2911  000B' 3E12               	addlw	-238
  2912  000C' 1C03               	skipc
  2913  000D' 2800'              	goto	u7641
  2914  000E' 2800'              	goto	u7640
  2915  000F'                    u7641:
  2916  000F' 2800'              	goto	l4543
  2917  0010'                    u7640:
  2918  0010'                    l4537:
  2919                           
  2920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2921  0010' 300A               	movlw	10
  2922  0011' 0080'              	movwf	___awdiv@divisor
  2923  0012' 3000               	movlw	0
  2924  0013' 0081'              	movwf	___awdiv@divisor+1
  2925  0014' 0836'              	movf	scale@scl,w
  2926  0015' 0085'              	movwf	___awmod@dividend
  2927  0016' 0186'              	clrf	___awmod@dividend+1
  2928  0017' 1B85'              	btfsc	___awmod@dividend,7
  2929  0018' 0386'              	decf	___awmod@dividend+1,f
  2930  0019' 3064               	movlw	100
  2931  001A' 0083'              	movwf	___awmod@divisor
  2932  001B' 3000               	movlw	0
  2933  001C' 0084'              	movwf	___awmod@divisor+1
  2934  001D' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  2935  0022' 0804'              	movf	?___awmod+1,w
  2936  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  2937  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  2938  0025' 0083'              	movwf	___awdiv@dividend+1
  2939  0026' 0803'              	movf	?___awmod,w
  2940  0027' 0082'              	movwf	___awdiv@dividend
  2941  0028' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2942  002D' 1283               	bcf	3,5	;RP0=0, select bank0
  2943  002E' 1303               	bcf	3,6	;RP1=0, select bank0
  2944  002F' 0800'              	movf	?___awdiv,w
  2945  0030' 00A8'              	movwf	??_scale
  2946  0031' 3001               	movlw	1
  2947  0032'                    u7655:
  2948  0032' 1003               	clrc
  2949  0033' 0DA8'              	rlf	??_scale,f
  2950  0034' 3EFF               	addlw	-1
  2951  0035' 1D03               	skipz
  2952  0036' 2800'              	goto	u7655
  2953  0037' 1003               	clrc
  2954  0038' 0D28'              	rlf	??_scale,w
  2955  0039' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2956  003A' 0084               	movwf	4
  2957  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2958  0040' 00A9'              	movwf	??_scale+1
  2959  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2960  0046' 00AA'              	movwf	??_scale+2
  2961  0047' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2962  004C' 00AB'              	movwf	??_scale+3
  2963  004D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2964  0052' 00AC'              	movwf	??_scale+4
  2965  0053' 082C'              	movf	??_scale+4,w
  2966  0054' 008D'              	movwf	___flmul@b+3
  2967  0055' 082B'              	movf	??_scale+3,w
  2968  0056' 008C'              	movwf	___flmul@b+2
  2969  0057' 082A'              	movf	??_scale+2,w
  2970  0058' 008B'              	movwf	___flmul@b+1
  2971  0059' 0829'              	movf	??_scale+1,w
  2972  005A' 008A'              	movwf	___flmul@b
  2973  005B' 3064               	movlw	100
  2974  005C' 0080'              	movwf	___awdiv@divisor
  2975  005D' 3000               	movlw	0
  2976  005E' 0081'              	movwf	___awdiv@divisor+1
  2977  005F' 0836'              	movf	scale@scl,w
  2978  0060' 0082'              	movwf	___awdiv@dividend
  2979  0061' 0183'              	clrf	___awdiv@dividend+1
  2980  0062' 1B82'              	btfsc	___awdiv@dividend,7
  2981  0063' 0383'              	decf	___awdiv@dividend+1,f
  2982  0064' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  2983  0069' 1283               	bcf	3,5	;RP0=0, select bank0
  2984  006A' 1303               	bcf	3,6	;RP1=0, select bank0
  2985  006B' 0800'              	movf	?___awdiv,w
  2986  006C' 00AD'              	movwf	??_scale+5
  2987  006D' 3001               	movlw	1
  2988  006E'                    u7665:
  2989  006E' 1003               	clrc
  2990  006F' 0DAD'              	rlf	??_scale+5,f
  2991  0070' 3EFF               	addlw	-1
  2992  0071' 1D03               	skipz
  2993  0072' 2800'              	goto	u7665
  2994  0073' 1003               	clrc
  2995  0074' 0D2D'              	rlf	??_scale+5,w
  2996  0075' 3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2997  0076' 0084               	movwf	4
  2998  0077' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  2999  007C' 00AE'              	movwf	??_scale+6
  3000  007D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3001  0082' 00AF'              	movwf	??_scale+7
  3002  0083' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3003  0088' 00B0'              	movwf	??_scale+8
  3004  0089' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3005  008E' 00B1'              	movwf	??_scale+9
  3006  008F' 0831'              	movf	??_scale+9,w
  3007  0090' 0091'              	movwf	___flmul@a+3
  3008  0091' 0830'              	movf	??_scale+8,w
  3009  0092' 0090'              	movwf	___flmul@a+2
  3010  0093' 082F'              	movf	??_scale+7,w
  3011  0094' 008F'              	movwf	___flmul@a+1
  3012  0095' 082E'              	movf	??_scale+6,w
  3013  0096' 008E'              	movwf	___flmul@a
  3014  0097' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3015  009C' 1283               	bcf	3,5	;RP0=0, select bank0
  3016  009D' 1303               	bcf	3,6	;RP1=0, select bank0
  3017  009E' 080D'              	movf	?___flmul+3,w
  3018  009F' 00B5'              	movwf	_scale$1161+3
  3019  00A0' 080C'              	movf	?___flmul+2,w
  3020  00A1' 00B4'              	movwf	_scale$1161+2
  3021  00A2' 080B'              	movf	?___flmul+1,w
  3022  00A3' 00B3'              	movwf	_scale$1161+1
  3023  00A4' 080A'              	movf	?___flmul,w
  3024  00A5' 00B2'              	movwf	_scale$1161
  3025                           
  3026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3027  00A6' 300A               	movlw	10
  3028  00A7' 0083'              	movwf	___awmod@divisor
  3029  00A8' 3000               	movlw	0
  3030  00A9' 0084'              	movwf	___awmod@divisor+1
  3031  00AA' 0836'              	movf	scale@scl,w
  3032  00AB' 0085'              	movwf	___awmod@dividend
  3033  00AC' 0186'              	clrf	___awmod@dividend+1
  3034  00AD' 1B85'              	btfsc	___awmod@dividend,7
  3035  00AE' 0386'              	decf	___awmod@dividend+1,f
  3036  00AF' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3037  00B4' 0803'              	movf	?___awmod,w
  3038  00B5' 1283               	bcf	3,5	;RP0=0, select bank0
  3039  00B6' 1303               	bcf	3,6	;RP1=0, select bank0
  3040  00B7' 00A8'              	movwf	??_scale
  3041  00B8' 3001               	movlw	1
  3042  00B9'                    u7675:
  3043  00B9' 1003               	clrc
  3044  00BA' 0DA8'              	rlf	??_scale,f
  3045  00BB' 3EFF               	addlw	-1
  3046  00BC' 1D03               	skipz
  3047  00BD' 2800'              	goto	u7675
  3048  00BE' 1003               	clrc
  3049  00BF' 0D28'              	rlf	??_scale,w
  3050  00C0' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3051  00C1' 0084               	movwf	4
  3052  00C2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3053  00C7' 00A9'              	movwf	??_scale+1
  3054  00C8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3055  00CD' 00AA'              	movwf	??_scale+2
  3056  00CE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3057  00D3' 00AB'              	movwf	??_scale+3
  3058  00D4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3059  00D9' 00AC'              	movwf	??_scale+4
  3060  00DA' 082C'              	movf	??_scale+4,w
  3061  00DB' 008D'              	movwf	___flmul@b+3
  3062  00DC' 082B'              	movf	??_scale+3,w
  3063  00DD' 008C'              	movwf	___flmul@b+2
  3064  00DE' 082A'              	movf	??_scale+2,w
  3065  00DF' 008B'              	movwf	___flmul@b+1
  3066  00E0' 0829'              	movf	??_scale+1,w
  3067  00E1' 008A'              	movwf	___flmul@b
  3068  00E2' 0835'              	movf	_scale$1161+3,w
  3069  00E3' 0091'              	movwf	___flmul@a+3
  3070  00E4' 0834'              	movf	_scale$1161+2,w
  3071  00E5' 0090'              	movwf	___flmul@a+2
  3072  00E6' 0833'              	movf	_scale$1161+1,w
  3073  00E7' 008F'              	movwf	___flmul@a+1
  3074  00E8' 0832'              	movf	_scale$1161,w
  3075  00E9' 008E'              	movwf	___flmul@a
  3076  00EA' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3077  00EF' 1283               	bcf	3,5	;RP0=0, select bank0
  3078  00F0' 1303               	bcf	3,6	;RP1=0, select bank0
  3079  00F1' 080D'              	movf	?___flmul+3,w
  3080  00F2' 00A7'              	movwf	?_scale+3
  3081  00F3' 080C'              	movf	?___flmul+2,w
  3082  00F4' 00A6'              	movwf	?_scale+2
  3083  00F5' 080B'              	movf	?___flmul+1,w
  3084  00F6' 00A5'              	movwf	?_scale+1
  3085  00F7' 080A'              	movf	?___flmul,w
  3086  00F8' 00A4'              	movwf	?_scale
  3087  00F9' 2800'              	goto	l368
  3088  00FA'                    l4543:
  3089  00FA' 0836'              	movf	scale@scl,w
  3090  00FB' 3A80               	xorlw	128
  3091  00FC' 3E75               	addlw	-139
  3092  00FD' 1C03               	skipc
  3093  00FE' 2800'              	goto	u7681
  3094  00FF' 2800'              	goto	u7680
  3095  0100'                    u7681:
  3096  0100' 2800'              	goto	l4549
  3097  0101'                    u7680:
  3098  0101'                    l4545:
  3099                           
  3100                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3101  0101' 300A               	movlw	10
  3102  0102' 0083'              	movwf	___awmod@divisor
  3103  0103' 3000               	movlw	0
  3104  0104' 0084'              	movwf	___awmod@divisor+1
  3105  0105' 0836'              	movf	scale@scl,w
  3106  0106' 0085'              	movwf	___awmod@dividend
  3107  0107' 0186'              	clrf	___awmod@dividend+1
  3108  0108' 1B85'              	btfsc	___awmod@dividend,7
  3109  0109' 0386'              	decf	___awmod@dividend+1,f
  3110  010A' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3111  010F' 0803'              	movf	?___awmod,w
  3112  0110' 1283               	bcf	3,5	;RP0=0, select bank0
  3113  0111' 1303               	bcf	3,6	;RP1=0, select bank0
  3114  0112' 00A8'              	movwf	??_scale
  3115  0113' 3001               	movlw	1
  3116  0114'                    u7695:
  3117  0114' 1003               	clrc
  3118  0115' 0DA8'              	rlf	??_scale,f
  3119  0116' 3EFF               	addlw	-1
  3120  0117' 1D03               	skipz
  3121  0118' 2800'              	goto	u7695
  3122  0119' 1003               	clrc
  3123  011A' 0D28'              	rlf	??_scale,w
  3124  011B' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3125  011C' 0084               	movwf	4
  3126  011D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3127  0122' 00A9'              	movwf	??_scale+1
  3128  0123' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3129  0128' 00AA'              	movwf	??_scale+2
  3130  0129' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3131  012E' 00AB'              	movwf	??_scale+3
  3132  012F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3133  0134' 00AC'              	movwf	??_scale+4
  3134  0135' 082C'              	movf	??_scale+4,w
  3135  0136' 008D'              	movwf	___flmul@b+3
  3136  0137' 082B'              	movf	??_scale+3,w
  3137  0138' 008C'              	movwf	___flmul@b+2
  3138  0139' 082A'              	movf	??_scale+2,w
  3139  013A' 008B'              	movwf	___flmul@b+1
  3140  013B' 0829'              	movf	??_scale+1,w
  3141  013C' 008A'              	movwf	___flmul@b
  3142  013D' 300A               	movlw	10
  3143  013E' 0080'              	movwf	___awdiv@divisor
  3144  013F' 3000               	movlw	0
  3145  0140' 0081'              	movwf	___awdiv@divisor+1
  3146  0141' 0836'              	movf	scale@scl,w
  3147  0142' 0082'              	movwf	___awdiv@dividend
  3148  0143' 0183'              	clrf	___awdiv@dividend+1
  3149  0144' 1B82'              	btfsc	___awdiv@dividend,7
  3150  0145' 0383'              	decf	___awdiv@dividend+1,f
  3151  0146' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3152  014B' 1283               	bcf	3,5	;RP0=0, select bank0
  3153  014C' 1303               	bcf	3,6	;RP1=0, select bank0
  3154  014D' 0800'              	movf	?___awdiv,w
  3155  014E' 00AD'              	movwf	??_scale+5
  3156  014F' 3001               	movlw	1
  3157  0150'                    u7705:
  3158  0150' 1003               	clrc
  3159  0151' 0DAD'              	rlf	??_scale+5,f
  3160  0152' 3EFF               	addlw	-1
  3161  0153' 1D03               	skipz
  3162  0154' 2800'              	goto	u7705
  3163  0155' 1003               	clrc
  3164  0156' 0D2D'              	rlf	??_scale+5,w
  3165  0157' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3166  0158' 0084               	movwf	4
  3167  0159' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3168  015E' 00AE'              	movwf	??_scale+6
  3169  015F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3170  0164' 00AF'              	movwf	??_scale+7
  3171  0165' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3172  016A' 00B0'              	movwf	??_scale+8
  3173  016B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3174  0170' 00B1'              	movwf	??_scale+9
  3175  0171' 0831'              	movf	??_scale+9,w
  3176  0172' 0091'              	movwf	___flmul@a+3
  3177  0173' 0830'              	movf	??_scale+8,w
  3178  0174' 0090'              	movwf	___flmul@a+2
  3179  0175' 082F'              	movf	??_scale+7,w
  3180  0176' 008F'              	movwf	___flmul@a+1
  3181  0177' 082E'              	movf	??_scale+6,w
  3182  0178' 008E'              	movwf	___flmul@a
  3183  0179' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3184  017E' 1283               	bcf	3,5	;RP0=0, select bank0
  3185  017F' 1303               	bcf	3,6	;RP1=0, select bank0
  3186  0180' 080D'              	movf	?___flmul+3,w
  3187  0181' 00A7'              	movwf	?_scale+3
  3188  0182' 080C'              	movf	?___flmul+2,w
  3189  0183' 00A6'              	movwf	?_scale+2
  3190  0184' 080B'              	movf	?___flmul+1,w
  3191  0185' 00A5'              	movwf	?_scale+1
  3192  0186' 080A'              	movf	?___flmul,w
  3193  0187' 00A4'              	movwf	?_scale
  3194  0188' 2800'              	goto	l368
  3195  0189'                    l4549:
  3196                           
  3197                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3198  0189' 0836'              	movf	scale@scl,w
  3199  018A' 00A8'              	movwf	??_scale
  3200  018B' 3001               	movlw	1
  3201  018C'                    u7715:
  3202  018C' 1003               	clrc
  3203  018D' 0DA8'              	rlf	??_scale,f
  3204  018E' 3EFF               	addlw	-1
  3205  018F' 1D03               	skipz
  3206  0190' 2800'              	goto	u7715
  3207  0191' 1003               	clrc
  3208  0192' 0D28'              	rlf	??_scale,w
  3209  0193' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3210  0194' 0084               	movwf	4
  3211  0195' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3212  019A' 00A9'              	movwf	??_scale+1
  3213  019B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3214  01A0' 00AA'              	movwf	??_scale+2
  3215  01A1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3216  01A6' 00AB'              	movwf	??_scale+3
  3217  01A7' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3218  01AC' 00AC'              	movwf	??_scale+4
  3219  01AD' 082C'              	movf	??_scale+4,w
  3220  01AE' 00A7'              	movwf	?_scale+3
  3221  01AF' 082B'              	movf	??_scale+3,w
  3222  01B0' 00A6'              	movwf	?_scale+2
  3223  01B1' 082A'              	movf	??_scale+2,w
  3224  01B2' 00A5'              	movwf	?_scale+1
  3225  01B3' 0829'              	movf	??_scale+1,w
  3226  01B4' 00A4'              	movwf	?_scale
  3227  01B5' 2800'              	goto	l368
  3228  01B6'                    l4553:
  3229                           
  3230                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3231  01B6' 0836'              	movf	scale@scl,w
  3232  01B7' 3A80               	xorlw	128
  3233  01B8' 3E12               	addlw	-238
  3234  01B9' 1C03               	skipc
  3235  01BA' 2800'              	goto	u7721
  3236  01BB' 2800'              	goto	u7720
  3237  01BC'                    u7721:
  3238  01BC' 2800'              	goto	l4561
  3239  01BD'                    u7720:
  3240  01BD'                    l4555:
  3241                           
  3242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3243  01BD' 300A               	movlw	10
  3244  01BE' 0080'              	movwf	___awdiv@divisor
  3245  01BF' 3000               	movlw	0
  3246  01C0' 0081'              	movwf	___awdiv@divisor+1
  3247  01C1' 0836'              	movf	scale@scl,w
  3248  01C2' 0085'              	movwf	___awmod@dividend
  3249  01C3' 0186'              	clrf	___awmod@dividend+1
  3250  01C4' 1B85'              	btfsc	___awmod@dividend,7
  3251  01C5' 0386'              	decf	___awmod@dividend+1,f
  3252  01C6' 3064               	movlw	100
  3253  01C7' 0083'              	movwf	___awmod@divisor
  3254  01C8' 3000               	movlw	0
  3255  01C9' 0084'              	movwf	___awmod@divisor+1
  3256  01CA' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3257  01CF' 0804'              	movf	?___awmod+1,w
  3258  01D0' 1283               	bcf	3,5	;RP0=0, select bank0
  3259  01D1' 1303               	bcf	3,6	;RP1=0, select bank0
  3260  01D2' 0083'              	movwf	___awdiv@dividend+1
  3261  01D3' 0803'              	movf	?___awmod,w
  3262  01D4' 0082'              	movwf	___awdiv@dividend
  3263  01D5' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3264  01DA' 1283               	bcf	3,5	;RP0=0, select bank0
  3265  01DB' 1303               	bcf	3,6	;RP1=0, select bank0
  3266  01DC' 0800'              	movf	?___awdiv,w
  3267  01DD' 00A8'              	movwf	??_scale
  3268  01DE' 3001               	movlw	1
  3269  01DF'                    u7735:
  3270  01DF' 1003               	clrc
  3271  01E0' 0DA8'              	rlf	??_scale,f
  3272  01E1' 3EFF               	addlw	-1
  3273  01E2' 1D03               	skipz
  3274  01E3' 2800'              	goto	u7735
  3275  01E4' 1003               	clrc
  3276  01E5' 0D28'              	rlf	??_scale,w
  3277  01E6' 3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3278  01E7' 0084               	movwf	4
  3279  01E8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3280  01ED' 00A9'              	movwf	??_scale+1
  3281  01EE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3282  01F3' 00AA'              	movwf	??_scale+2
  3283  01F4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3284  01F9' 00AB'              	movwf	??_scale+3
  3285  01FA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3286  01FF' 00AC'              	movwf	??_scale+4
  3287  0200' 082C'              	movf	??_scale+4,w
  3288  0201' 008D'              	movwf	___flmul@b+3
  3289  0202' 082B'              	movf	??_scale+3,w
  3290  0203' 008C'              	movwf	___flmul@b+2
  3291  0204' 082A'              	movf	??_scale+2,w
  3292  0205' 008B'              	movwf	___flmul@b+1
  3293  0206' 0829'              	movf	??_scale+1,w
  3294  0207' 008A'              	movwf	___flmul@b
  3295  0208' 3064               	movlw	100
  3296  0209' 0080'              	movwf	___awdiv@divisor
  3297  020A' 3000               	movlw	0
  3298  020B' 0081'              	movwf	___awdiv@divisor+1
  3299  020C' 0836'              	movf	scale@scl,w
  3300  020D' 0082'              	movwf	___awdiv@dividend
  3301  020E' 0183'              	clrf	___awdiv@dividend+1
  3302  020F' 1B82'              	btfsc	___awdiv@dividend,7
  3303  0210' 0383'              	decf	___awdiv@dividend+1,f
  3304  0211' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3305  0216' 1283               	bcf	3,5	;RP0=0, select bank0
  3306  0217' 1303               	bcf	3,6	;RP1=0, select bank0
  3307  0218' 0800'              	movf	?___awdiv,w
  3308  0219' 00AD'              	movwf	??_scale+5
  3309  021A' 3001               	movlw	1
  3310  021B'                    u7745:
  3311  021B' 1003               	clrc
  3312  021C' 0DAD'              	rlf	??_scale+5,f
  3313  021D' 3EFF               	addlw	-1
  3314  021E' 1D03               	skipz
  3315  021F' 2800'              	goto	u7745
  3316  0220' 1003               	clrc
  3317  0221' 0D2D'              	rlf	??_scale+5,w
  3318  0222' 3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3319  0223' 0084               	movwf	4
  3320  0224' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3321  0229' 00AE'              	movwf	??_scale+6
  3322  022A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3323  022F' 00AF'              	movwf	??_scale+7
  3324  0230' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3325  0235' 00B0'              	movwf	??_scale+8
  3326  0236' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3327  023B' 00B1'              	movwf	??_scale+9
  3328  023C' 0831'              	movf	??_scale+9,w
  3329  023D' 0091'              	movwf	___flmul@a+3
  3330  023E' 0830'              	movf	??_scale+8,w
  3331  023F' 0090'              	movwf	___flmul@a+2
  3332  0240' 082F'              	movf	??_scale+7,w
  3333  0241' 008F'              	movwf	___flmul@a+1
  3334  0242' 082E'              	movf	??_scale+6,w
  3335  0243' 008E'              	movwf	___flmul@a
  3336  0244' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3337  0249' 1283               	bcf	3,5	;RP0=0, select bank0
  3338  024A' 1303               	bcf	3,6	;RP1=0, select bank0
  3339  024B' 080D'              	movf	?___flmul+3,w
  3340  024C' 00B5'              	movwf	_scale$1161+3
  3341  024D' 080C'              	movf	?___flmul+2,w
  3342  024E' 00B4'              	movwf	_scale$1161+2
  3343  024F' 080B'              	movf	?___flmul+1,w
  3344  0250' 00B3'              	movwf	_scale$1161+1
  3345  0251' 080A'              	movf	?___flmul,w
  3346  0252' 00B2'              	movwf	_scale$1161
  3347                           
  3348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3349  0253' 300A               	movlw	10
  3350  0254' 0083'              	movwf	___awmod@divisor
  3351  0255' 3000               	movlw	0
  3352  0256' 0084'              	movwf	___awmod@divisor+1
  3353  0257' 0836'              	movf	scale@scl,w
  3354  0258' 0085'              	movwf	___awmod@dividend
  3355  0259' 0186'              	clrf	___awmod@dividend+1
  3356  025A' 1B85'              	btfsc	___awmod@dividend,7
  3357  025B' 0386'              	decf	___awmod@dividend+1,f
  3358  025C' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3359  0261' 0803'              	movf	?___awmod,w
  3360  0262' 1283               	bcf	3,5	;RP0=0, select bank0
  3361  0263' 1303               	bcf	3,6	;RP1=0, select bank0
  3362  0264' 00A8'              	movwf	??_scale
  3363  0265' 3001               	movlw	1
  3364  0266'                    u7755:
  3365  0266' 1003               	clrc
  3366  0267' 0DA8'              	rlf	??_scale,f
  3367  0268' 3EFF               	addlw	-1
  3368  0269' 1D03               	skipz
  3369  026A' 2800'              	goto	u7755
  3370  026B' 1003               	clrc
  3371  026C' 0D28'              	rlf	??_scale,w
  3372  026D' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3373  026E' 0084               	movwf	4
  3374  026F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3375  0274' 00A9'              	movwf	??_scale+1
  3376  0275' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3377  027A' 00AA'              	movwf	??_scale+2
  3378  027B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3379  0280' 00AB'              	movwf	??_scale+3
  3380  0281' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3381  0286' 00AC'              	movwf	??_scale+4
  3382  0287' 082C'              	movf	??_scale+4,w
  3383  0288' 008D'              	movwf	___flmul@b+3
  3384  0289' 082B'              	movf	??_scale+3,w
  3385  028A' 008C'              	movwf	___flmul@b+2
  3386  028B' 082A'              	movf	??_scale+2,w
  3387  028C' 008B'              	movwf	___flmul@b+1
  3388  028D' 0829'              	movf	??_scale+1,w
  3389  028E' 008A'              	movwf	___flmul@b
  3390  028F' 0835'              	movf	_scale$1161+3,w
  3391  0290' 0091'              	movwf	___flmul@a+3
  3392  0291' 0834'              	movf	_scale$1161+2,w
  3393  0292' 0090'              	movwf	___flmul@a+2
  3394  0293' 0833'              	movf	_scale$1161+1,w
  3395  0294' 008F'              	movwf	___flmul@a+1
  3396  0295' 0832'              	movf	_scale$1161,w
  3397  0296' 008E'              	movwf	___flmul@a
  3398  0297' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3399  029C' 1283               	bcf	3,5	;RP0=0, select bank0
  3400  029D' 1303               	bcf	3,6	;RP1=0, select bank0
  3401  029E' 080D'              	movf	?___flmul+3,w
  3402  029F' 00A7'              	movwf	?_scale+3
  3403  02A0' 080C'              	movf	?___flmul+2,w
  3404  02A1' 00A6'              	movwf	?_scale+2
  3405  02A2' 080B'              	movf	?___flmul+1,w
  3406  02A3' 00A5'              	movwf	?_scale+1
  3407  02A4' 080A'              	movf	?___flmul,w
  3408  02A5' 00A4'              	movwf	?_scale
  3409  02A6' 2800'              	goto	l368
  3410  02A7'                    l4561:
  3411  02A7' 0836'              	movf	scale@scl,w
  3412  02A8' 3A80               	xorlw	128
  3413  02A9' 3E75               	addlw	-139
  3414  02AA' 1C03               	skipc
  3415  02AB' 2800'              	goto	u7761
  3416  02AC' 2800'              	goto	u7760
  3417  02AD'                    u7761:
  3418  02AD' 2800'              	goto	l4567
  3419  02AE'                    u7760:
  3420  02AE'                    l4563:
  3421                           
  3422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3423  02AE' 300A               	movlw	10
  3424  02AF' 0083'              	movwf	___awmod@divisor
  3425  02B0' 3000               	movlw	0
  3426  02B1' 0084'              	movwf	___awmod@divisor+1
  3427  02B2' 0836'              	movf	scale@scl,w
  3428  02B3' 0085'              	movwf	___awmod@dividend
  3429  02B4' 0186'              	clrf	___awmod@dividend+1
  3430  02B5' 1B85'              	btfsc	___awmod@dividend,7
  3431  02B6' 0386'              	decf	___awmod@dividend+1,f
  3432  02B7' 120A' 118A' 2000' 120A' 118A' 	fcall	___awmod
  3433  02BC' 0803'              	movf	?___awmod,w
  3434  02BD' 1283               	bcf	3,5	;RP0=0, select bank0
  3435  02BE' 1303               	bcf	3,6	;RP1=0, select bank0
  3436  02BF' 00A8'              	movwf	??_scale
  3437  02C0' 3001               	movlw	1
  3438  02C1'                    u7775:
  3439  02C1' 1003               	clrc
  3440  02C2' 0DA8'              	rlf	??_scale,f
  3441  02C3' 3EFF               	addlw	-1
  3442  02C4' 1D03               	skipz
  3443  02C5' 2800'              	goto	u7775
  3444  02C6' 1003               	clrc
  3445  02C7' 0D28'              	rlf	??_scale,w
  3446  02C8' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3447  02C9' 0084               	movwf	4
  3448  02CA' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3449  02CF' 00A9'              	movwf	??_scale+1
  3450  02D0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3451  02D5' 00AA'              	movwf	??_scale+2
  3452  02D6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3453  02DB' 00AB'              	movwf	??_scale+3
  3454  02DC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3455  02E1' 00AC'              	movwf	??_scale+4
  3456  02E2' 082C'              	movf	??_scale+4,w
  3457  02E3' 008D'              	movwf	___flmul@b+3
  3458  02E4' 082B'              	movf	??_scale+3,w
  3459  02E5' 008C'              	movwf	___flmul@b+2
  3460  02E6' 082A'              	movf	??_scale+2,w
  3461  02E7' 008B'              	movwf	___flmul@b+1
  3462  02E8' 0829'              	movf	??_scale+1,w
  3463  02E9' 008A'              	movwf	___flmul@b
  3464  02EA' 300A               	movlw	10
  3465  02EB' 0080'              	movwf	___awdiv@divisor
  3466  02EC' 3000               	movlw	0
  3467  02ED' 0081'              	movwf	___awdiv@divisor+1
  3468  02EE' 0836'              	movf	scale@scl,w
  3469  02EF' 0082'              	movwf	___awdiv@dividend
  3470  02F0' 0183'              	clrf	___awdiv@dividend+1
  3471  02F1' 1B82'              	btfsc	___awdiv@dividend,7
  3472  02F2' 0383'              	decf	___awdiv@dividend+1,f
  3473  02F3' 120A' 118A' 2000' 120A' 118A' 	fcall	___awdiv
  3474  02F8' 1283               	bcf	3,5	;RP0=0, select bank0
  3475  02F9' 1303               	bcf	3,6	;RP1=0, select bank0
  3476  02FA' 0800'              	movf	?___awdiv,w
  3477  02FB' 00AD'              	movwf	??_scale+5
  3478  02FC' 3001               	movlw	1
  3479  02FD'                    u7785:
  3480  02FD' 1003               	clrc
  3481  02FE' 0DAD'              	rlf	??_scale+5,f
  3482  02FF' 3EFF               	addlw	-1
  3483  0300' 1D03               	skipz
  3484  0301' 2800'              	goto	u7785
  3485  0302' 1003               	clrc
  3486  0303' 0D2D'              	rlf	??_scale+5,w
  3487  0304' 3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3488  0305' 0084               	movwf	4
  3489  0306' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3490  030B' 00AE'              	movwf	??_scale+6
  3491  030C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3492  0311' 00AF'              	movwf	??_scale+7
  3493  0312' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3494  0317' 00B0'              	movwf	??_scale+8
  3495  0318' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3496  031D' 00B1'              	movwf	??_scale+9
  3497  031E' 0831'              	movf	??_scale+9,w
  3498  031F' 0091'              	movwf	___flmul@a+3
  3499  0320' 0830'              	movf	??_scale+8,w
  3500  0321' 0090'              	movwf	___flmul@a+2
  3501  0322' 082F'              	movf	??_scale+7,w
  3502  0323' 008F'              	movwf	___flmul@a+1
  3503  0324' 082E'              	movf	??_scale+6,w
  3504  0325' 008E'              	movwf	___flmul@a
  3505  0326' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  3506  032B' 1283               	bcf	3,5	;RP0=0, select bank0
  3507  032C' 1303               	bcf	3,6	;RP1=0, select bank0
  3508  032D' 080D'              	movf	?___flmul+3,w
  3509  032E' 00A7'              	movwf	?_scale+3
  3510  032F' 080C'              	movf	?___flmul+2,w
  3511  0330' 00A6'              	movwf	?_scale+2
  3512  0331' 080B'              	movf	?___flmul+1,w
  3513  0332' 00A5'              	movwf	?_scale+1
  3514  0333' 080A'              	movf	?___flmul,w
  3515  0334' 00A4'              	movwf	?_scale
  3516  0335' 2800'              	goto	l368
  3517  0336'                    l4567:
  3518                           
  3519                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3520  0336' 0836'              	movf	scale@scl,w
  3521  0337' 00A8'              	movwf	??_scale
  3522  0338' 3001               	movlw	1
  3523  0339'                    u7795:
  3524  0339' 1003               	clrc
  3525  033A' 0DA8'              	rlf	??_scale,f
  3526  033B' 3EFF               	addlw	-1
  3527  033C' 1D03               	skipz
  3528  033D' 2800'              	goto	u7795
  3529  033E' 1003               	clrc
  3530  033F' 0D28'              	rlf	??_scale,w
  3531  0340' 3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3532  0341' 0084               	movwf	4
  3533  0342' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3534  0347' 00A9'              	movwf	??_scale+1
  3535  0348' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3536  034D' 00AA'              	movwf	??_scale+2
  3537  034E' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3538  0353' 00AB'              	movwf	??_scale+3
  3539  0354' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  3540  0359' 00AC'              	movwf	??_scale+4
  3541  035A' 082C'              	movf	??_scale+4,w
  3542  035B' 00A7'              	movwf	?_scale+3
  3543  035C' 082B'              	movf	??_scale+3,w
  3544  035D' 00A6'              	movwf	?_scale+2
  3545  035E' 082A'              	movf	??_scale+2,w
  3546  035F' 00A5'              	movwf	?_scale+1
  3547  0360' 0829'              	movf	??_scale+1,w
  3548  0361' 00A4'              	movwf	?_scale
  3549  0362'                    l368:
  3550  0362' 0008               	return
  3551  0363'                    __end_of_scale:
  3552                           
  3553                           	psect	text4
  3554  0000'                    __ptext4:	
  3555 ;; *************** function ___awmod *****************
  3556 ;; Defined at:
  3557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  divisor         2    3[COMMON] int 
  3560 ;;  dividend        2    5[COMMON] int 
  3561 ;; Auto vars:     Size  Location     Type
  3562 ;;  sign            1    9[COMMON] unsigned char 
  3563 ;;  counter         1    8[COMMON] unsigned char 
  3564 ;; Return value:  Size  Location     Type
  3565 ;;                  2    3[COMMON] int 
  3566 ;; Registers used:
  3567 ;;		wreg, status,2, status,0
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3573 ;;      Params:         4       0       0       0       0
  3574 ;;      Locals:         2       0       0       0       0
  3575 ;;      Temps:          1       0       0       0       0
  3576 ;;      Totals:         7       0       0       0       0
  3577 ;;Total ram usage:        7 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; Hardware stack levels required when called:    2
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_scale
  3584 ;; This function uses a non-reentrant model
  3585 ;;
  3586                           
  3587                           
  3588                           ;psect for function ___awmod
  3589  0000'                    ___awmod:
  3590  0000'                    l4069:	
  3591                           ;incstack = 0
  3592                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3593                           
  3594  0000' 0189'              	clrf	___awmod@sign
  3595  0001'                    l4071:
  3596  0001' 1F86'              	btfss	___awmod@dividend+1,7
  3597  0002' 2800'              	goto	u6501
  3598  0003' 2800'              	goto	u6500
  3599  0004'                    u6501:
  3600  0004' 2800'              	goto	l4077
  3601  0005'                    u6500:
  3602  0005'                    l4073:
  3603  0005' 0985'              	comf	___awmod@dividend,f
  3604  0006' 0986'              	comf	___awmod@dividend+1,f
  3605  0007' 0A85'              	incf	___awmod@dividend,f
  3606  0008' 1903               	skipnz
  3607  0009' 0A86'              	incf	___awmod@dividend+1,f
  3608  000A'                    l4075:
  3609  000A' 0189'              	clrf	___awmod@sign
  3610  000B' 0A89'              	incf	___awmod@sign,f
  3611  000C'                    l4077:
  3612  000C' 1F84'              	btfss	___awmod@divisor+1,7
  3613  000D' 2800'              	goto	u6511
  3614  000E' 2800'              	goto	u6510
  3615  000F'                    u6511:
  3616  000F' 2800'              	goto	l4081
  3617  0010'                    u6510:
  3618  0010'                    l4079:
  3619  0010' 0983'              	comf	___awmod@divisor,f
  3620  0011' 0984'              	comf	___awmod@divisor+1,f
  3621  0012' 0A83'              	incf	___awmod@divisor,f
  3622  0013' 1903               	skipnz
  3623  0014' 0A84'              	incf	___awmod@divisor+1,f
  3624  0015'                    l4081:
  3625  0015' 0803'              	movf	___awmod@divisor,w
  3626  0016' 0404'              	iorwf	___awmod@divisor+1,w
  3627  0017' 1903               	btfsc	3,2
  3628  0018' 2800'              	goto	u6521
  3629  0019' 2800'              	goto	u6520
  3630  001A'                    u6521:
  3631  001A' 2800'              	goto	l4099
  3632  001B'                    u6520:
  3633  001B'                    l4083:
  3634  001B' 0188'              	clrf	___awmod@counter
  3635  001C' 0A88'              	incf	___awmod@counter,f
  3636  001D' 2800'              	goto	l4089
  3637  001E'                    l4085:
  3638  001E' 3001               	movlw	1
  3639  001F'                    u6535:
  3640  001F' 1003               	clrc
  3641  0020' 0D83'              	rlf	___awmod@divisor,f
  3642  0021' 0D84'              	rlf	___awmod@divisor+1,f
  3643  0022' 3EFF               	addlw	-1
  3644  0023' 1D03               	skipz
  3645  0024' 2800'              	goto	u6535
  3646  0025'                    l4087:
  3647  0025' 3001               	movlw	1
  3648  0026' 0087'              	movwf	??___awmod
  3649  0027' 0807'              	movf	??___awmod,w
  3650  0028' 0788'              	addwf	___awmod@counter,f
  3651  0029'                    l4089:
  3652  0029' 1F84'              	btfss	___awmod@divisor+1,7
  3653  002A' 2800'              	goto	u6541
  3654  002B' 2800'              	goto	u6540
  3655  002C'                    u6541:
  3656  002C' 2800'              	goto	l4085
  3657  002D'                    u6540:
  3658  002D'                    l4091:
  3659  002D' 0804'              	movf	___awmod@divisor+1,w
  3660  002E' 0206'              	subwf	___awmod@dividend+1,w
  3661  002F' 1D03               	skipz
  3662  0030' 2800'              	goto	u6555
  3663  0031' 0803'              	movf	___awmod@divisor,w
  3664  0032' 0205'              	subwf	___awmod@dividend,w
  3665  0033'                    u6555:
  3666  0033' 1C03               	skipc
  3667  0034' 2800'              	goto	u6551
  3668  0035' 2800'              	goto	u6550
  3669  0036'                    u6551:
  3670  0036' 2800'              	goto	l4095
  3671  0037'                    u6550:
  3672  0037'                    l4093:
  3673  0037' 0803'              	movf	___awmod@divisor,w
  3674  0038' 0285'              	subwf	___awmod@dividend,f
  3675  0039' 0804'              	movf	___awmod@divisor+1,w
  3676  003A' 1C03               	skipc
  3677  003B' 0386'              	decf	___awmod@dividend+1,f
  3678  003C' 0286'              	subwf	___awmod@dividend+1,f
  3679  003D'                    l4095:
  3680  003D' 3001               	movlw	1
  3681  003E'                    u6565:
  3682  003E' 1003               	clrc
  3683  003F' 0C84'              	rrf	___awmod@divisor+1,f
  3684  0040' 0C83'              	rrf	___awmod@divisor,f
  3685  0041' 3EFF               	addlw	-1
  3686  0042' 1D03               	skipz
  3687  0043' 2800'              	goto	u6565
  3688  0044'                    l4097:
  3689  0044' 3001               	movlw	1
  3690  0045' 0288'              	subwf	___awmod@counter,f
  3691  0046' 1D03               	btfss	3,2
  3692  0047' 2800'              	goto	u6571
  3693  0048' 2800'              	goto	u6570
  3694  0049'                    u6571:
  3695  0049' 2800'              	goto	l4091
  3696  004A'                    u6570:
  3697  004A'                    l4099:
  3698  004A' 0809'              	movf	___awmod@sign,w
  3699  004B' 1903               	btfsc	3,2
  3700  004C' 2800'              	goto	u6581
  3701  004D' 2800'              	goto	u6580
  3702  004E'                    u6581:
  3703  004E' 2800'              	goto	l4103
  3704  004F'                    u6580:
  3705  004F'                    l4101:
  3706  004F' 0985'              	comf	___awmod@dividend,f
  3707  0050' 0986'              	comf	___awmod@dividend+1,f
  3708  0051' 0A85'              	incf	___awmod@dividend,f
  3709  0052' 1903               	skipnz
  3710  0053' 0A86'              	incf	___awmod@dividend+1,f
  3711  0054'                    l4103:
  3712  0054' 0806'              	movf	___awmod@dividend+1,w
  3713  0055' 0084'              	movwf	?___awmod+1
  3714  0056' 0805'              	movf	___awmod@dividend,w
  3715  0057' 0083'              	movwf	?___awmod
  3716  0058'                    l630:
  3717  0058' 0008               	return
  3718  0059'                    __end_of___awmod:
  3719                           
  3720                           	psect	text5
  3721  0000'                    __ptext5:	
  3722 ;; *************** function ___awdiv *****************
  3723 ;; Defined at:
  3724 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3725 ;; Parameters:    Size  Location     Type
  3726 ;;  divisor         2    0[BANK0 ] int 
  3727 ;;  dividend        2    2[BANK0 ] int 
  3728 ;; Auto vars:     Size  Location     Type
  3729 ;;  quotient        2    7[BANK0 ] int 
  3730 ;;  sign            1    6[BANK0 ] unsigned char 
  3731 ;;  counter         1    5[BANK0 ] unsigned char 
  3732 ;; Return value:  Size  Location     Type
  3733 ;;                  2    0[BANK0 ] int 
  3734 ;; Registers used:
  3735 ;;		wreg, status,2, status,0
  3736 ;; Tracked objects:
  3737 ;;		On entry : 0/0
  3738 ;;		On exit  : 0/0
  3739 ;;		Unchanged: 0/0
  3740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3741 ;;      Params:         0       4       0       0       0
  3742 ;;      Locals:         0       4       0       0       0
  3743 ;;      Temps:          0       1       0       0       0
  3744 ;;      Totals:         0       9       0       0       0
  3745 ;;Total ram usage:        9 bytes
  3746 ;; Hardware stack levels used:    1
  3747 ;; Hardware stack levels required when called:    2
  3748 ;; This function calls:
  3749 ;;		Nothing
  3750 ;; This function is called by:
  3751 ;;		_scale
  3752 ;;		_sprintf
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           
  3757                           ;psect for function ___awdiv
  3758  0000'                    ___awdiv:
  3759  0000'                    l4025:	
  3760                           ;incstack = 0
  3761                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3762                           
  3763  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  3764  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  3765  0002' 0186'              	clrf	___awdiv@sign
  3766  0003'                    l4027:
  3767  0003' 1F81'              	btfss	___awdiv@divisor+1,7
  3768  0004' 2800'              	goto	u6401
  3769  0005' 2800'              	goto	u6400
  3770  0006'                    u6401:
  3771  0006' 2800'              	goto	l4033
  3772  0007'                    u6400:
  3773  0007'                    l4029:
  3774  0007' 0980'              	comf	___awdiv@divisor,f
  3775  0008' 0981'              	comf	___awdiv@divisor+1,f
  3776  0009' 0A80'              	incf	___awdiv@divisor,f
  3777  000A' 1903               	skipnz
  3778  000B' 0A81'              	incf	___awdiv@divisor+1,f
  3779  000C'                    l4031:
  3780  000C' 0186'              	clrf	___awdiv@sign
  3781  000D' 0A86'              	incf	___awdiv@sign,f
  3782  000E'                    l4033:
  3783  000E' 1F83'              	btfss	___awdiv@dividend+1,7
  3784  000F' 2800'              	goto	u6411
  3785  0010' 2800'              	goto	u6410
  3786  0011'                    u6411:
  3787  0011' 2800'              	goto	l4039
  3788  0012'                    u6410:
  3789  0012'                    l4035:
  3790  0012' 0982'              	comf	___awdiv@dividend,f
  3791  0013' 0983'              	comf	___awdiv@dividend+1,f
  3792  0014' 0A82'              	incf	___awdiv@dividend,f
  3793  0015' 1903               	skipnz
  3794  0016' 0A83'              	incf	___awdiv@dividend+1,f
  3795  0017'                    l4037:
  3796  0017' 3001               	movlw	1
  3797  0018' 0084'              	movwf	??___awdiv
  3798  0019' 0804'              	movf	??___awdiv,w
  3799  001A' 0686'              	xorwf	___awdiv@sign,f
  3800  001B'                    l4039:
  3801  001B' 0187'              	clrf	___awdiv@quotient
  3802  001C' 0188'              	clrf	___awdiv@quotient+1
  3803  001D'                    l4041:
  3804  001D' 0800'              	movf	___awdiv@divisor,w
  3805  001E' 0401'              	iorwf	___awdiv@divisor+1,w
  3806  001F' 1903               	btfsc	3,2
  3807  0020' 2800'              	goto	u6421
  3808  0021' 2800'              	goto	u6420
  3809  0022'                    u6421:
  3810  0022' 2800'              	goto	l4061
  3811  0023'                    u6420:
  3812  0023'                    l4043:
  3813  0023' 0185'              	clrf	___awdiv@counter
  3814  0024' 0A85'              	incf	___awdiv@counter,f
  3815  0025' 2800'              	goto	l4049
  3816  0026'                    l4045:
  3817  0026' 3001               	movlw	1
  3818  0027'                    u6435:
  3819  0027' 1003               	clrc
  3820  0028' 0D80'              	rlf	___awdiv@divisor,f
  3821  0029' 0D81'              	rlf	___awdiv@divisor+1,f
  3822  002A' 3EFF               	addlw	-1
  3823  002B' 1D03               	skipz
  3824  002C' 2800'              	goto	u6435
  3825  002D'                    l4047:
  3826  002D' 3001               	movlw	1
  3827  002E' 0084'              	movwf	??___awdiv
  3828  002F' 0804'              	movf	??___awdiv,w
  3829  0030' 0785'              	addwf	___awdiv@counter,f
  3830  0031'                    l4049:
  3831  0031' 1F81'              	btfss	___awdiv@divisor+1,7
  3832  0032' 2800'              	goto	u6441
  3833  0033' 2800'              	goto	u6440
  3834  0034'                    u6441:
  3835  0034' 2800'              	goto	l4045
  3836  0035'                    u6440:
  3837  0035'                    l4051:
  3838  0035' 3001               	movlw	1
  3839  0036'                    u6455:
  3840  0036' 1003               	clrc
  3841  0037' 0D87'              	rlf	___awdiv@quotient,f
  3842  0038' 0D88'              	rlf	___awdiv@quotient+1,f
  3843  0039' 3EFF               	addlw	-1
  3844  003A' 1D03               	skipz
  3845  003B' 2800'              	goto	u6455
  3846  003C' 0801'              	movf	___awdiv@divisor+1,w
  3847  003D' 0203'              	subwf	___awdiv@dividend+1,w
  3848  003E' 1D03               	skipz
  3849  003F' 2800'              	goto	u6465
  3850  0040' 0800'              	movf	___awdiv@divisor,w
  3851  0041' 0202'              	subwf	___awdiv@dividend,w
  3852  0042'                    u6465:
  3853  0042' 1C03               	skipc
  3854  0043' 2800'              	goto	u6461
  3855  0044' 2800'              	goto	u6460
  3856  0045'                    u6461:
  3857  0045' 2800'              	goto	l4057
  3858  0046'                    u6460:
  3859  0046'                    l4053:
  3860  0046' 0800'              	movf	___awdiv@divisor,w
  3861  0047' 0282'              	subwf	___awdiv@dividend,f
  3862  0048' 0801'              	movf	___awdiv@divisor+1,w
  3863  0049' 1C03               	skipc
  3864  004A' 0383'              	decf	___awdiv@dividend+1,f
  3865  004B' 0283'              	subwf	___awdiv@dividend+1,f
  3866  004C'                    l4055:
  3867  004C' 1407'              	bsf	___awdiv@quotient,0
  3868  004D'                    l4057:
  3869  004D' 3001               	movlw	1
  3870  004E'                    u6475:
  3871  004E' 1003               	clrc
  3872  004F' 0C81'              	rrf	___awdiv@divisor+1,f
  3873  0050' 0C80'              	rrf	___awdiv@divisor,f
  3874  0051' 3EFF               	addlw	-1
  3875  0052' 1D03               	skipz
  3876  0053' 2800'              	goto	u6475
  3877  0054'                    l4059:
  3878  0054' 3001               	movlw	1
  3879  0055' 0285'              	subwf	___awdiv@counter,f
  3880  0056' 1D03               	btfss	3,2
  3881  0057' 2800'              	goto	u6481
  3882  0058' 2800'              	goto	u6480
  3883  0059'                    u6481:
  3884  0059' 2800'              	goto	l4051
  3885  005A'                    u6480:
  3886  005A'                    l4061:
  3887  005A' 0806'              	movf	___awdiv@sign,w
  3888  005B' 1903               	btfsc	3,2
  3889  005C' 2800'              	goto	u6491
  3890  005D' 2800'              	goto	u6490
  3891  005E'                    u6491:
  3892  005E' 2800'              	goto	l4065
  3893  005F'                    u6490:
  3894  005F'                    l4063:
  3895  005F' 0987'              	comf	___awdiv@quotient,f
  3896  0060' 0988'              	comf	___awdiv@quotient+1,f
  3897  0061' 0A87'              	incf	___awdiv@quotient,f
  3898  0062' 1903               	skipnz
  3899  0063' 0A88'              	incf	___awdiv@quotient+1,f
  3900  0064'                    l4065:
  3901  0064' 0808'              	movf	___awdiv@quotient+1,w
  3902  0065' 0081'              	movwf	?___awdiv+1
  3903  0066' 0807'              	movf	___awdiv@quotient,w
  3904  0067' 0080'              	movwf	?___awdiv
  3905  0068'                    l617:
  3906  0068' 0008               	return
  3907  0069'                    __end_of___awdiv:
  3908                           
  3909                           	psect	text6
  3910  0000'                    __ptext6:	
  3911 ;; *************** function _isdigit *****************
  3912 ;; Defined at:
  3913 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  c               1    wreg     unsigned char 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;  c               1    4[COMMON] unsigned char 
  3918 ;; Return value:  Size  Location     Type
  3919 ;;		None               void
  3920 ;; Registers used:
  3921 ;;		wreg, status,2, status,0
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3927 ;;      Params:         0       0       0       0       0
  3928 ;;      Locals:         2       0       0       0       0
  3929 ;;      Temps:          0       0       0       0       0
  3930 ;;      Totals:         2       0       0       0       0
  3931 ;;Total ram usage:        2 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; Hardware stack levels required when called:    2
  3934 ;; This function calls:
  3935 ;;		Nothing
  3936 ;; This function is called by:
  3937 ;;		_sprintf
  3938 ;; This function uses a non-reentrant model
  3939 ;;
  3940                           
  3941                           
  3942                           ;psect for function _isdigit
  3943  0000'                    _isdigit:
  3944                           
  3945                           ;incstack = 0
  3946                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3947                           ;isdigit@c stored from wreg
  3948  0000' 0084'              	movwf	isdigit@c
  3949  0001'                    l4571:
  3950  0001' 0183'              	clrf	_isdigit$988
  3951  0002'                    l4573:
  3952  0002' 303A               	movlw	58
  3953  0003' 0204'              	subwf	isdigit@c,w
  3954  0004' 1803               	skipnc
  3955  0005' 2800'              	goto	u7801
  3956  0006' 2800'              	goto	u7800
  3957  0007'                    u7801:
  3958  0007' 2800'              	goto	l4579
  3959  0008'                    u7800:
  3960  0008'                    l4575:
  3961  0008' 3030               	movlw	48
  3962  0009' 0204'              	subwf	isdigit@c,w
  3963  000A' 1C03               	skipc
  3964  000B' 2800'              	goto	u7811
  3965  000C' 2800'              	goto	u7810
  3966  000D'                    u7811:
  3967  000D' 2800'              	goto	l4579
  3968  000E'                    u7810:
  3969  000E'                    l4577:
  3970  000E' 0183'              	clrf	_isdigit$988
  3971  000F' 0A83'              	incf	_isdigit$988,f
  3972  0010'                    l4579:
  3973  0010' 0C03'              	rrf	_isdigit$988,w
  3974  0011'                    l951:
  3975  0011' 0008               	return
  3976  0012'                    __end_of_isdigit:
  3977                           
  3978                           	psect	text7
  3979  0000'                    __ptext7:	
  3980 ;; *************** function _fround *****************
  3981 ;; Defined at:
  3982 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3983 ;; Parameters:    Size  Location     Type
  3984 ;;  prec            1    wreg     unsigned char 
  3985 ;; Auto vars:     Size  Location     Type
  3986 ;;  prec            1   55[BANK0 ] unsigned char 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  4   36[BANK0 ] unsigned char 
  3989 ;; Registers used:
  3990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3996 ;;      Params:         0       4       0       0       0
  3997 ;;      Locals:         0       9       0       0       0
  3998 ;;      Temps:          0       7       0       0       0
  3999 ;;      Totals:         0      20       0       0       0
  4000 ;;Total ram usage:       20 bytes
  4001 ;; Hardware stack levels used:    1
  4002 ;; Hardware stack levels required when called:    4
  4003 ;; This function calls:
  4004 ;;		___flmul
  4005 ;;		___lwdiv
  4006 ;;		___lwmod
  4007 ;; This function is called by:
  4008 ;;		_sprintf
  4009 ;; This function uses a non-reentrant model
  4010 ;;
  4011                           
  4012                           
  4013                           ;psect for function _fround
  4014  0000'                    _fround:
  4015                           
  4016                           ;incstack = 0
  4017                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4018                           ;fround@prec stored from wreg
  4019  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4020  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4021  0002' 00B7'              	movwf	fround@prec
  4022  0003'                    l4513:
  4023                           
  4024                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4025  0003' 306E               	movlw	110
  4026  0004' 0237'              	subwf	fround@prec,w
  4027  0005' 1C03               	skipc
  4028  0006' 2800'              	goto	u7551
  4029  0007' 2800'              	goto	u7550
  4030  0008'                    u7551:
  4031  0008' 2800'              	goto	l4521
  4032  0009'                    u7550:
  4033  0009'                    l4515:
  4034                           
  4035                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4036  0009' 303F               	movlw	63
  4037  000A' 008D'              	movwf	___flmul@b+3
  4038  000B' 3000               	movlw	0
  4039  000C' 008C'              	movwf	___flmul@b+2
  4040  000D' 3000               	movlw	0
  4041  000E' 008B'              	movwf	___flmul@b+1
  4042  000F' 3000               	movlw	0
  4043  0010' 008A'              	movwf	___flmul@b
  4044  0011' 3064               	movlw	100
  4045  0012' 0080'              	movwf	___lwdiv@divisor
  4046  0013' 3000               	movlw	0
  4047  0014' 0081'              	movwf	___lwdiv@divisor+1
  4048  0015' 0837'              	movf	fround@prec,w
  4049  0016' 00A8'              	movwf	??_fround
  4050  0017' 01A9'              	clrf	??_fround+1
  4051  0018' 0828'              	movf	??_fround,w
  4052  0019' 0082'              	movwf	___lwdiv@dividend
  4053  001A' 0829'              	movf	??_fround+1,w
  4054  001B' 0083'              	movwf	___lwdiv@dividend+1
  4055  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4056  0021' 1283               	bcf	3,5	;RP0=0, select bank0
  4057  0022' 1303               	bcf	3,6	;RP1=0, select bank0
  4058  0023' 0800'              	movf	?___lwdiv,w
  4059  0024' 00AA'              	movwf	??_fround+2
  4060  0025' 3001               	movlw	1
  4061  0026'                    u7565:
  4062  0026' 1003               	clrc
  4063  0027' 0DAA'              	rlf	??_fround+2,f
  4064  0028' 3EFF               	addlw	-1
  4065  0029' 1D03               	skipz
  4066  002A' 2800'              	goto	u7565
  4067  002B' 1003               	clrc
  4068  002C' 0D2A'              	rlf	??_fround+2,w
  4069  002D' 3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4070  002E' 0084               	movwf	4
  4071  002F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4072  0034' 00AB'              	movwf	??_fround+3
  4073  0035' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4074  003A' 00AC'              	movwf	??_fround+4
  4075  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4076  0040' 00AD'              	movwf	??_fround+5
  4077  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4078  0046' 00AE'              	movwf	??_fround+6
  4079  0047' 082E'              	movf	??_fround+6,w
  4080  0048' 0091'              	movwf	___flmul@a+3
  4081  0049' 082D'              	movf	??_fround+5,w
  4082  004A' 0090'              	movwf	___flmul@a+2
  4083  004B' 082C'              	movf	??_fround+4,w
  4084  004C' 008F'              	movwf	___flmul@a+1
  4085  004D' 082B'              	movf	??_fround+3,w
  4086  004E' 008E'              	movwf	___flmul@a
  4087  004F' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4088  0054' 1283               	bcf	3,5	;RP0=0, select bank0
  4089  0055' 1303               	bcf	3,6	;RP1=0, select bank0
  4090  0056' 080D'              	movf	?___flmul+3,w
  4091  0057' 00B6'              	movwf	_fround$1159+3
  4092  0058' 080C'              	movf	?___flmul+2,w
  4093  0059' 00B5'              	movwf	_fround$1159+2
  4094  005A' 080B'              	movf	?___flmul+1,w
  4095  005B' 00B4'              	movwf	_fround$1159+1
  4096  005C' 080A'              	movf	?___flmul,w
  4097  005D' 00B3'              	movwf	_fround$1159
  4098                           
  4099                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4100  005E' 300A               	movlw	10
  4101  005F' 0080'              	movwf	___lwdiv@divisor
  4102  0060' 3000               	movlw	0
  4103  0061' 0081'              	movwf	___lwdiv@divisor+1
  4104  0062' 0837'              	movf	fround@prec,w
  4105  0063' 00A8'              	movwf	??_fround
  4106  0064' 01A9'              	clrf	??_fround+1
  4107  0065' 0828'              	movf	??_fround,w
  4108  0066' 0085'              	movwf	___lwmod@dividend
  4109  0067' 0829'              	movf	??_fround+1,w
  4110  0068' 0086'              	movwf	___lwmod@dividend+1
  4111  0069' 3064               	movlw	100
  4112  006A' 0083'              	movwf	___lwmod@divisor
  4113  006B' 3000               	movlw	0
  4114  006C' 0084'              	movwf	___lwmod@divisor+1
  4115  006D' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4116  0072' 0804'              	movf	?___lwmod+1,w
  4117  0073' 1283               	bcf	3,5	;RP0=0, select bank0
  4118  0074' 1303               	bcf	3,6	;RP1=0, select bank0
  4119  0075' 0083'              	movwf	___lwdiv@dividend+1
  4120  0076' 0803'              	movf	?___lwmod,w
  4121  0077' 0082'              	movwf	___lwdiv@dividend
  4122  0078' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4123  007D' 1283               	bcf	3,5	;RP0=0, select bank0
  4124  007E' 1303               	bcf	3,6	;RP1=0, select bank0
  4125  007F' 0800'              	movf	?___lwdiv,w
  4126  0080' 00AA'              	movwf	??_fround+2
  4127  0081' 3001               	movlw	1
  4128  0082'                    u7575:
  4129  0082' 1003               	clrc
  4130  0083' 0DAA'              	rlf	??_fround+2,f
  4131  0084' 3EFF               	addlw	-1
  4132  0085' 1D03               	skipz
  4133  0086' 2800'              	goto	u7575
  4134  0087' 1003               	clrc
  4135  0088' 0D2A'              	rlf	??_fround+2,w
  4136  0089' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4137  008A' 0084               	movwf	4
  4138  008B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4139  0090' 00AB'              	movwf	??_fround+3
  4140  0091' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4141  0096' 00AC'              	movwf	??_fround+4
  4142  0097' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4143  009C' 00AD'              	movwf	??_fround+5
  4144  009D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4145  00A2' 00AE'              	movwf	??_fround+6
  4146  00A3' 082E'              	movf	??_fround+6,w
  4147  00A4' 008D'              	movwf	___flmul@b+3
  4148  00A5' 082D'              	movf	??_fround+5,w
  4149  00A6' 008C'              	movwf	___flmul@b+2
  4150  00A7' 082C'              	movf	??_fround+4,w
  4151  00A8' 008B'              	movwf	___flmul@b+1
  4152  00A9' 082B'              	movf	??_fround+3,w
  4153  00AA' 008A'              	movwf	___flmul@b
  4154  00AB' 0836'              	movf	_fround$1159+3,w
  4155  00AC' 0091'              	movwf	___flmul@a+3
  4156  00AD' 0835'              	movf	_fround$1159+2,w
  4157  00AE' 0090'              	movwf	___flmul@a+2
  4158  00AF' 0834'              	movf	_fround$1159+1,w
  4159  00B0' 008F'              	movwf	___flmul@a+1
  4160  00B1' 0833'              	movf	_fround$1159,w
  4161  00B2' 008E'              	movwf	___flmul@a
  4162  00B3' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4163  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
  4164  00B9' 1303               	bcf	3,6	;RP1=0, select bank0
  4165  00BA' 080D'              	movf	?___flmul+3,w
  4166  00BB' 00B2'              	movwf	_fround$1160+3
  4167  00BC' 080C'              	movf	?___flmul+2,w
  4168  00BD' 00B1'              	movwf	_fround$1160+2
  4169  00BE' 080B'              	movf	?___flmul+1,w
  4170  00BF' 00B0'              	movwf	_fround$1160+1
  4171  00C0' 080A'              	movf	?___flmul,w
  4172  00C1' 00AF'              	movwf	_fround$1160
  4173                           
  4174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4175  00C2' 300A               	movlw	10
  4176  00C3' 0083'              	movwf	___lwmod@divisor
  4177  00C4' 3000               	movlw	0
  4178  00C5' 0084'              	movwf	___lwmod@divisor+1
  4179  00C6' 0837'              	movf	fround@prec,w
  4180  00C7' 00A8'              	movwf	??_fround
  4181  00C8' 01A9'              	clrf	??_fround+1
  4182  00C9' 0828'              	movf	??_fround,w
  4183  00CA' 0085'              	movwf	___lwmod@dividend
  4184  00CB' 0829'              	movf	??_fround+1,w
  4185  00CC' 0086'              	movwf	___lwmod@dividend+1
  4186  00CD' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4187  00D2' 0803'              	movf	?___lwmod,w
  4188  00D3' 1283               	bcf	3,5	;RP0=0, select bank0
  4189  00D4' 1303               	bcf	3,6	;RP1=0, select bank0
  4190  00D5' 00AA'              	movwf	??_fround+2
  4191  00D6' 3001               	movlw	1
  4192  00D7'                    u7585:
  4193  00D7' 1003               	clrc
  4194  00D8' 0DAA'              	rlf	??_fround+2,f
  4195  00D9' 3EFF               	addlw	-1
  4196  00DA' 1D03               	skipz
  4197  00DB' 2800'              	goto	u7585
  4198  00DC' 1003               	clrc
  4199  00DD' 0D2A'              	rlf	??_fround+2,w
  4200  00DE' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4201  00DF' 0084               	movwf	4
  4202  00E0' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4203  00E5' 00AB'              	movwf	??_fround+3
  4204  00E6' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4205  00EB' 00AC'              	movwf	??_fround+4
  4206  00EC' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4207  00F1' 00AD'              	movwf	??_fround+5
  4208  00F2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4209  00F7' 00AE'              	movwf	??_fround+6
  4210  00F8' 082E'              	movf	??_fround+6,w
  4211  00F9' 008D'              	movwf	___flmul@b+3
  4212  00FA' 082D'              	movf	??_fround+5,w
  4213  00FB' 008C'              	movwf	___flmul@b+2
  4214  00FC' 082C'              	movf	??_fround+4,w
  4215  00FD' 008B'              	movwf	___flmul@b+1
  4216  00FE' 082B'              	movf	??_fround+3,w
  4217  00FF' 008A'              	movwf	___flmul@b
  4218  0100' 0832'              	movf	_fround$1160+3,w
  4219  0101' 0091'              	movwf	___flmul@a+3
  4220  0102' 0831'              	movf	_fround$1160+2,w
  4221  0103' 0090'              	movwf	___flmul@a+2
  4222  0104' 0830'              	movf	_fround$1160+1,w
  4223  0105' 008F'              	movwf	___flmul@a+1
  4224  0106' 082F'              	movf	_fround$1160,w
  4225  0107' 008E'              	movwf	___flmul@a
  4226  0108' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4227  010D' 1283               	bcf	3,5	;RP0=0, select bank0
  4228  010E' 1303               	bcf	3,6	;RP1=0, select bank0
  4229  010F' 080D'              	movf	?___flmul+3,w
  4230  0110' 00A7'              	movwf	?_fround+3
  4231  0111' 080C'              	movf	?___flmul+2,w
  4232  0112' 00A6'              	movwf	?_fround+2
  4233  0113' 080B'              	movf	?___flmul+1,w
  4234  0114' 00A5'              	movwf	?_fround+1
  4235  0115' 080A'              	movf	?___flmul,w
  4236  0116' 00A4'              	movwf	?_fround
  4237  0117' 2800'              	goto	l361
  4238  0118'                    l4521:
  4239  0118' 300B               	movlw	11
  4240  0119' 0237'              	subwf	fround@prec,w
  4241  011A' 1C03               	skipc
  4242  011B' 2800'              	goto	u7591
  4243  011C' 2800'              	goto	u7590
  4244  011D'                    u7591:
  4245  011D' 2800'              	goto	l4527
  4246  011E'                    u7590:
  4247  011E'                    l4523:
  4248                           
  4249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4250  011E' 303F               	movlw	63
  4251  011F' 008D'              	movwf	___flmul@b+3
  4252  0120' 3000               	movlw	0
  4253  0121' 008C'              	movwf	___flmul@b+2
  4254  0122' 3000               	movlw	0
  4255  0123' 008B'              	movwf	___flmul@b+1
  4256  0124' 3000               	movlw	0
  4257  0125' 008A'              	movwf	___flmul@b
  4258  0126' 300A               	movlw	10
  4259  0127' 0080'              	movwf	___lwdiv@divisor
  4260  0128' 3000               	movlw	0
  4261  0129' 0081'              	movwf	___lwdiv@divisor+1
  4262  012A' 0837'              	movf	fround@prec,w
  4263  012B' 00A8'              	movwf	??_fround
  4264  012C' 01A9'              	clrf	??_fround+1
  4265  012D' 0828'              	movf	??_fround,w
  4266  012E' 0082'              	movwf	___lwdiv@dividend
  4267  012F' 0829'              	movf	??_fround+1,w
  4268  0130' 0083'              	movwf	___lwdiv@dividend+1
  4269  0131' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwdiv
  4270  0136' 1283               	bcf	3,5	;RP0=0, select bank0
  4271  0137' 1303               	bcf	3,6	;RP1=0, select bank0
  4272  0138' 0800'              	movf	?___lwdiv,w
  4273  0139' 00AA'              	movwf	??_fround+2
  4274  013A' 3001               	movlw	1
  4275  013B'                    u7605:
  4276  013B' 1003               	clrc
  4277  013C' 0DAA'              	rlf	??_fround+2,f
  4278  013D' 3EFF               	addlw	-1
  4279  013E' 1D03               	skipz
  4280  013F' 2800'              	goto	u7605
  4281  0140' 1003               	clrc
  4282  0141' 0D2A'              	rlf	??_fround+2,w
  4283  0142' 3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4284  0143' 0084               	movwf	4
  4285  0144' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4286  0149' 00AB'              	movwf	??_fround+3
  4287  014A' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4288  014F' 00AC'              	movwf	??_fround+4
  4289  0150' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4290  0155' 00AD'              	movwf	??_fround+5
  4291  0156' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4292  015B' 00AE'              	movwf	??_fround+6
  4293  015C' 082E'              	movf	??_fround+6,w
  4294  015D' 0091'              	movwf	___flmul@a+3
  4295  015E' 082D'              	movf	??_fround+5,w
  4296  015F' 0090'              	movwf	___flmul@a+2
  4297  0160' 082C'              	movf	??_fround+4,w
  4298  0161' 008F'              	movwf	___flmul@a+1
  4299  0162' 082B'              	movf	??_fround+3,w
  4300  0163' 008E'              	movwf	___flmul@a
  4301  0164' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4302  0169' 1283               	bcf	3,5	;RP0=0, select bank0
  4303  016A' 1303               	bcf	3,6	;RP1=0, select bank0
  4304  016B' 080D'              	movf	?___flmul+3,w
  4305  016C' 00B6'              	movwf	_fround$1159+3
  4306  016D' 080C'              	movf	?___flmul+2,w
  4307  016E' 00B5'              	movwf	_fround$1159+2
  4308  016F' 080B'              	movf	?___flmul+1,w
  4309  0170' 00B4'              	movwf	_fround$1159+1
  4310  0171' 080A'              	movf	?___flmul,w
  4311  0172' 00B3'              	movwf	_fround$1159
  4312                           
  4313                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4314  0173' 300A               	movlw	10
  4315  0174' 0083'              	movwf	___lwmod@divisor
  4316  0175' 3000               	movlw	0
  4317  0176' 0084'              	movwf	___lwmod@divisor+1
  4318  0177' 0837'              	movf	fround@prec,w
  4319  0178' 00A8'              	movwf	??_fround
  4320  0179' 01A9'              	clrf	??_fround+1
  4321  017A' 0828'              	movf	??_fround,w
  4322  017B' 0085'              	movwf	___lwmod@dividend
  4323  017C' 0829'              	movf	??_fround+1,w
  4324  017D' 0086'              	movwf	___lwmod@dividend+1
  4325  017E' 120A' 118A' 2000' 120A' 118A' 	fcall	___lwmod
  4326  0183' 0803'              	movf	?___lwmod,w
  4327  0184' 1283               	bcf	3,5	;RP0=0, select bank0
  4328  0185' 1303               	bcf	3,6	;RP1=0, select bank0
  4329  0186' 00AA'              	movwf	??_fround+2
  4330  0187' 3001               	movlw	1
  4331  0188'                    u7615:
  4332  0188' 1003               	clrc
  4333  0189' 0DAA'              	rlf	??_fround+2,f
  4334  018A' 3EFF               	addlw	-1
  4335  018B' 1D03               	skipz
  4336  018C' 2800'              	goto	u7615
  4337  018D' 1003               	clrc
  4338  018E' 0D2A'              	rlf	??_fround+2,w
  4339  018F' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4340  0190' 0084               	movwf	4
  4341  0191' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4342  0196' 00AB'              	movwf	??_fround+3
  4343  0197' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4344  019C' 00AC'              	movwf	??_fround+4
  4345  019D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4346  01A2' 00AD'              	movwf	??_fround+5
  4347  01A3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4348  01A8' 00AE'              	movwf	??_fround+6
  4349  01A9' 082E'              	movf	??_fround+6,w
  4350  01AA' 008D'              	movwf	___flmul@b+3
  4351  01AB' 082D'              	movf	??_fround+5,w
  4352  01AC' 008C'              	movwf	___flmul@b+2
  4353  01AD' 082C'              	movf	??_fround+4,w
  4354  01AE' 008B'              	movwf	___flmul@b+1
  4355  01AF' 082B'              	movf	??_fround+3,w
  4356  01B0' 008A'              	movwf	___flmul@b
  4357  01B1' 0836'              	movf	_fround$1159+3,w
  4358  01B2' 0091'              	movwf	___flmul@a+3
  4359  01B3' 0835'              	movf	_fround$1159+2,w
  4360  01B4' 0090'              	movwf	___flmul@a+2
  4361  01B5' 0834'              	movf	_fround$1159+1,w
  4362  01B6' 008F'              	movwf	___flmul@a+1
  4363  01B7' 0833'              	movf	_fround$1159,w
  4364  01B8' 008E'              	movwf	___flmul@a
  4365  01B9' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4366  01BE' 1283               	bcf	3,5	;RP0=0, select bank0
  4367  01BF' 1303               	bcf	3,6	;RP1=0, select bank0
  4368  01C0' 080D'              	movf	?___flmul+3,w
  4369  01C1' 00A7'              	movwf	?_fround+3
  4370  01C2' 080C'              	movf	?___flmul+2,w
  4371  01C3' 00A6'              	movwf	?_fround+2
  4372  01C4' 080B'              	movf	?___flmul+1,w
  4373  01C5' 00A5'              	movwf	?_fround+1
  4374  01C6' 080A'              	movf	?___flmul,w
  4375  01C7' 00A4'              	movwf	?_fround
  4376  01C8' 2800'              	goto	l361
  4377  01C9'                    l4527:
  4378                           
  4379                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4380  01C9' 303F               	movlw	63
  4381  01CA' 008D'              	movwf	___flmul@b+3
  4382  01CB' 3000               	movlw	0
  4383  01CC' 008C'              	movwf	___flmul@b+2
  4384  01CD' 3000               	movlw	0
  4385  01CE' 008B'              	movwf	___flmul@b+1
  4386  01CF' 3000               	movlw	0
  4387  01D0' 008A'              	movwf	___flmul@b
  4388  01D1' 0837'              	movf	fround@prec,w
  4389  01D2' 00A8'              	movwf	??_fround
  4390  01D3' 3001               	movlw	1
  4391  01D4'                    u7625:
  4392  01D4' 1003               	clrc
  4393  01D5' 0DA8'              	rlf	??_fround,f
  4394  01D6' 3EFF               	addlw	-1
  4395  01D7' 1D03               	skipz
  4396  01D8' 2800'              	goto	u7625
  4397  01D9' 1003               	clrc
  4398  01DA' 0D28'              	rlf	??_fround,w
  4399  01DB' 3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4400  01DC' 0084               	movwf	4
  4401  01DD' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4402  01E2' 00A9'              	movwf	??_fround+1
  4403  01E3' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4404  01E8' 00AA'              	movwf	??_fround+2
  4405  01E9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4406  01EE' 00AB'              	movwf	??_fround+3
  4407  01EF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
  4408  01F4' 00AC'              	movwf	??_fround+4
  4409  01F5' 082C'              	movf	??_fround+4,w
  4410  01F6' 0091'              	movwf	___flmul@a+3
  4411  01F7' 082B'              	movf	??_fround+3,w
  4412  01F8' 0090'              	movwf	___flmul@a+2
  4413  01F9' 082A'              	movf	??_fround+2,w
  4414  01FA' 008F'              	movwf	___flmul@a+1
  4415  01FB' 0829'              	movf	??_fround+1,w
  4416  01FC' 008E'              	movwf	___flmul@a
  4417  01FD' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
  4418  0202' 1283               	bcf	3,5	;RP0=0, select bank0
  4419  0203' 1303               	bcf	3,6	;RP1=0, select bank0
  4420  0204' 080D'              	movf	?___flmul+3,w
  4421  0205' 00A7'              	movwf	?_fround+3
  4422  0206' 080C'              	movf	?___flmul+2,w
  4423  0207' 00A6'              	movwf	?_fround+2
  4424  0208' 080B'              	movf	?___flmul+1,w
  4425  0209' 00A5'              	movwf	?_fround+1
  4426  020A' 080A'              	movf	?___flmul,w
  4427  020B' 00A4'              	movwf	?_fround
  4428  020C'                    l361:
  4429  020C' 0008               	return
  4430  020D'                    __end_of_fround:
  4431                           
  4432                           	psect	text8
  4433  0000'                    __ptext8:	
  4434 ;; *************** function ___lwmod *****************
  4435 ;; Defined at:
  4436 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4437 ;; Parameters:    Size  Location     Type
  4438 ;;  divisor         2    3[COMMON] unsigned int 
  4439 ;;  dividend        2    5[COMMON] unsigned int 
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  counter         1    8[COMMON] unsigned char 
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  2    3[COMMON] unsigned int 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4451 ;;      Params:         4       0       0       0       0
  4452 ;;      Locals:         1       0       0       0       0
  4453 ;;      Temps:          1       0       0       0       0
  4454 ;;      Totals:         6       0       0       0       0
  4455 ;;Total ram usage:        6 bytes
  4456 ;; Hardware stack levels used:    1
  4457 ;; Hardware stack levels required when called:    2
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_fround
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465                           
  4466                           ;psect for function ___lwmod
  4467  0000'                    ___lwmod:
  4468  0000'                    l4133:	
  4469                           ;incstack = 0
  4470                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4471                           
  4472  0000' 0803'              	movf	___lwmod@divisor,w
  4473  0001' 0404'              	iorwf	___lwmod@divisor+1,w
  4474  0002' 1903               	btfsc	3,2
  4475  0003' 2800'              	goto	u6661
  4476  0004' 2800'              	goto	u6660
  4477  0005'                    u6661:
  4478  0005' 2800'              	goto	l4151
  4479  0006'                    u6660:
  4480  0006'                    l4135:
  4481  0006' 0188'              	clrf	___lwmod@counter
  4482  0007' 0A88'              	incf	___lwmod@counter,f
  4483  0008' 2800'              	goto	l4141
  4484  0009'                    l4137:
  4485  0009' 3001               	movlw	1
  4486  000A'                    u6675:
  4487  000A' 1003               	clrc
  4488  000B' 0D83'              	rlf	___lwmod@divisor,f
  4489  000C' 0D84'              	rlf	___lwmod@divisor+1,f
  4490  000D' 3EFF               	addlw	-1
  4491  000E' 1D03               	skipz
  4492  000F' 2800'              	goto	u6675
  4493  0010'                    l4139:
  4494  0010' 3001               	movlw	1
  4495  0011' 0087'              	movwf	??___lwmod
  4496  0012' 0807'              	movf	??___lwmod,w
  4497  0013' 0788'              	addwf	___lwmod@counter,f
  4498  0014'                    l4141:
  4499  0014' 1F84'              	btfss	___lwmod@divisor+1,7
  4500  0015' 2800'              	goto	u6681
  4501  0016' 2800'              	goto	u6680
  4502  0017'                    u6681:
  4503  0017' 2800'              	goto	l4137
  4504  0018'                    u6680:
  4505  0018'                    l4143:
  4506  0018' 0804'              	movf	___lwmod@divisor+1,w
  4507  0019' 0206'              	subwf	___lwmod@dividend+1,w
  4508  001A' 1D03               	skipz
  4509  001B' 2800'              	goto	u6695
  4510  001C' 0803'              	movf	___lwmod@divisor,w
  4511  001D' 0205'              	subwf	___lwmod@dividend,w
  4512  001E'                    u6695:
  4513  001E' 1C03               	skipc
  4514  001F' 2800'              	goto	u6691
  4515  0020' 2800'              	goto	u6690
  4516  0021'                    u6691:
  4517  0021' 2800'              	goto	l4147
  4518  0022'                    u6690:
  4519  0022'                    l4145:
  4520  0022' 0803'              	movf	___lwmod@divisor,w
  4521  0023' 0285'              	subwf	___lwmod@dividend,f
  4522  0024' 0804'              	movf	___lwmod@divisor+1,w
  4523  0025' 1C03               	skipc
  4524  0026' 0386'              	decf	___lwmod@dividend+1,f
  4525  0027' 0286'              	subwf	___lwmod@dividend+1,f
  4526  0028'                    l4147:
  4527  0028' 3001               	movlw	1
  4528  0029'                    u6705:
  4529  0029' 1003               	clrc
  4530  002A' 0C84'              	rrf	___lwmod@divisor+1,f
  4531  002B' 0C83'              	rrf	___lwmod@divisor,f
  4532  002C' 3EFF               	addlw	-1
  4533  002D' 1D03               	skipz
  4534  002E' 2800'              	goto	u6705
  4535  002F'                    l4149:
  4536  002F' 3001               	movlw	1
  4537  0030' 0288'              	subwf	___lwmod@counter,f
  4538  0031' 1D03               	btfss	3,2
  4539  0032' 2800'              	goto	u6711
  4540  0033' 2800'              	goto	u6710
  4541  0034'                    u6711:
  4542  0034' 2800'              	goto	l4143
  4543  0035'                    u6710:
  4544  0035'                    l4151:
  4545  0035' 0806'              	movf	___lwmod@dividend+1,w
  4546  0036' 0084'              	movwf	?___lwmod+1
  4547  0037' 0805'              	movf	___lwmod@dividend,w
  4548  0038' 0083'              	movwf	?___lwmod
  4549  0039'                    l780:
  4550  0039' 0008               	return
  4551  003A'                    __end_of___lwmod:
  4552                           
  4553                           	psect	text9
  4554  0000'                    __ptext9:	
  4555 ;; *************** function ___lwdiv *****************
  4556 ;; Defined at:
  4557 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;  divisor         2    0[BANK0 ] unsigned int 
  4560 ;;  dividend        2    2[BANK0 ] unsigned int 
  4561 ;; Auto vars:     Size  Location     Type
  4562 ;;  quotient        2    5[BANK0 ] unsigned int 
  4563 ;;  counter         1    4[BANK0 ] unsigned char 
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  2    0[BANK0 ] unsigned int 
  4566 ;; Registers used:
  4567 ;;		wreg, status,2, status,0
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4573 ;;      Params:         0       4       0       0       0
  4574 ;;      Locals:         0       3       0       0       0
  4575 ;;      Temps:          1       0       0       0       0
  4576 ;;      Totals:         1       7       0       0       0
  4577 ;;Total ram usage:        8 bytes
  4578 ;; Hardware stack levels used:    1
  4579 ;; Hardware stack levels required when called:    2
  4580 ;; This function calls:
  4581 ;;		Nothing
  4582 ;; This function is called by:
  4583 ;;		_fround
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           
  4588                           ;psect for function ___lwdiv
  4589  0000'                    ___lwdiv:
  4590  0000'                    l4107:	
  4591                           ;incstack = 0
  4592                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4593                           
  4594  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4595  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4596  0002' 0185'              	clrf	___lwdiv@quotient
  4597  0003' 0186'              	clrf	___lwdiv@quotient+1
  4598  0004'                    l4109:
  4599  0004' 0800'              	movf	___lwdiv@divisor,w
  4600  0005' 0401'              	iorwf	___lwdiv@divisor+1,w
  4601  0006' 1903               	btfsc	3,2
  4602  0007' 2800'              	goto	u6591
  4603  0008' 2800'              	goto	u6590
  4604  0009'                    u6591:
  4605  0009' 2800'              	goto	l4129
  4606  000A'                    u6590:
  4607  000A'                    l4111:
  4608  000A' 0184'              	clrf	___lwdiv@counter
  4609  000B' 0A84'              	incf	___lwdiv@counter,f
  4610  000C' 2800'              	goto	l4117
  4611  000D'                    l4113:
  4612  000D' 3001               	movlw	1
  4613  000E'                    u6605:
  4614  000E' 1003               	clrc
  4615  000F' 0D80'              	rlf	___lwdiv@divisor,f
  4616  0010' 0D81'              	rlf	___lwdiv@divisor+1,f
  4617  0011' 3EFF               	addlw	-1
  4618  0012' 1D03               	skipz
  4619  0013' 2800'              	goto	u6605
  4620  0014'                    l4115:
  4621  0014' 3001               	movlw	1
  4622  0015' 0089'              	movwf	??___lwdiv
  4623  0016' 0809'              	movf	??___lwdiv,w
  4624  0017' 0784'              	addwf	___lwdiv@counter,f
  4625  0018'                    l4117:
  4626  0018' 1F81'              	btfss	___lwdiv@divisor+1,7
  4627  0019' 2800'              	goto	u6611
  4628  001A' 2800'              	goto	u6610
  4629  001B'                    u6611:
  4630  001B' 2800'              	goto	l4113
  4631  001C'                    u6610:
  4632  001C'                    l4119:
  4633  001C' 3001               	movlw	1
  4634  001D'                    u6625:
  4635  001D' 1003               	clrc
  4636  001E' 0D85'              	rlf	___lwdiv@quotient,f
  4637  001F' 0D86'              	rlf	___lwdiv@quotient+1,f
  4638  0020' 3EFF               	addlw	-1
  4639  0021' 1D03               	skipz
  4640  0022' 2800'              	goto	u6625
  4641  0023' 0801'              	movf	___lwdiv@divisor+1,w
  4642  0024' 0203'              	subwf	___lwdiv@dividend+1,w
  4643  0025' 1D03               	skipz
  4644  0026' 2800'              	goto	u6635
  4645  0027' 0800'              	movf	___lwdiv@divisor,w
  4646  0028' 0202'              	subwf	___lwdiv@dividend,w
  4647  0029'                    u6635:
  4648  0029' 1C03               	skipc
  4649  002A' 2800'              	goto	u6631
  4650  002B' 2800'              	goto	u6630
  4651  002C'                    u6631:
  4652  002C' 2800'              	goto	l4125
  4653  002D'                    u6630:
  4654  002D'                    l4121:
  4655  002D' 0800'              	movf	___lwdiv@divisor,w
  4656  002E' 0282'              	subwf	___lwdiv@dividend,f
  4657  002F' 0801'              	movf	___lwdiv@divisor+1,w
  4658  0030' 1C03               	skipc
  4659  0031' 0383'              	decf	___lwdiv@dividend+1,f
  4660  0032' 0283'              	subwf	___lwdiv@dividend+1,f
  4661  0033'                    l4123:
  4662  0033' 1405'              	bsf	___lwdiv@quotient,0
  4663  0034'                    l4125:
  4664  0034' 3001               	movlw	1
  4665  0035'                    u6645:
  4666  0035' 1003               	clrc
  4667  0036' 0C81'              	rrf	___lwdiv@divisor+1,f
  4668  0037' 0C80'              	rrf	___lwdiv@divisor,f
  4669  0038' 3EFF               	addlw	-1
  4670  0039' 1D03               	skipz
  4671  003A' 2800'              	goto	u6645
  4672  003B'                    l4127:
  4673  003B' 3001               	movlw	1
  4674  003C' 0284'              	subwf	___lwdiv@counter,f
  4675  003D' 1D03               	btfss	3,2
  4676  003E' 2800'              	goto	u6651
  4677  003F' 2800'              	goto	u6650
  4678  0040'                    u6651:
  4679  0040' 2800'              	goto	l4119
  4680  0041'                    u6650:
  4681  0041'                    l4129:
  4682  0041' 0806'              	movf	___lwdiv@quotient+1,w
  4683  0042' 0081'              	movwf	?___lwdiv+1
  4684  0043' 0805'              	movf	___lwdiv@quotient,w
  4685  0044' 0080'              	movwf	?___lwdiv
  4686  0045'                    l770:
  4687  0045' 0008               	return
  4688  0046'                    __end_of___lwdiv:
  4689                           
  4690                           	psect	text10
  4691  0000'                    __ptext10:	
  4692 ;; *************** function ___flmul *****************
  4693 ;; Defined at:
  4694 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  b               4   10[BANK0 ] unsigned int 
  4697 ;;  a               4   14[BANK0 ] unsigned int 
  4698 ;; Auto vars:     Size  Location     Type
  4699 ;;  prod            4   30[BANK0 ] struct .
  4700 ;;  grs             4   25[BANK0 ] unsigned long 
  4701 ;;  temp            2   34[BANK0 ] struct .
  4702 ;;  bexp            1   29[BANK0 ] unsigned char 
  4703 ;;  aexp            1   24[BANK0 ] unsigned char 
  4704 ;;  sign            1   23[BANK0 ] unsigned char 
  4705 ;; Return value:  Size  Location     Type
  4706 ;;                  4   10[BANK0 ] unsigned char 
  4707 ;; Registers used:
  4708 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4709 ;; Tracked objects:
  4710 ;;		On entry : 0/0
  4711 ;;		On exit  : 0/0
  4712 ;;		Unchanged: 0/0
  4713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4714 ;;      Params:         0       8       0       0       0
  4715 ;;      Locals:         0      13       0       0       0
  4716 ;;      Temps:          0       5       0       0       0
  4717 ;;      Totals:         0      26       0       0       0
  4718 ;;Total ram usage:       26 bytes
  4719 ;; Hardware stack levels used:    1
  4720 ;; Hardware stack levels required when called:    3
  4721 ;; This function calls:
  4722 ;;		__Umul8_16
  4723 ;; This function is called by:
  4724 ;;		_val
  4725 ;;		_fround
  4726 ;;		_scale
  4727 ;;		_sprintf
  4728 ;; This function uses a non-reentrant model
  4729 ;;
  4730                           
  4731                           
  4732                           ;psect for function ___flmul
  4733  0000'                    ___flmul:
  4734  0000'                    l4349:	
  4735                           ;incstack = 0
  4736                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4737                           
  4738  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  4739  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  4740  0002' 080D'              	movf	___flmul@b+3,w
  4741  0003' 3980               	andlw	128
  4742  0004' 0092'              	movwf	??___flmul
  4743  0005' 0812'              	movf	??___flmul,w
  4744  0006' 0097'              	movwf	___flmul@sign
  4745  0007'                    l4351:
  4746  0007' 080D'              	movf	___flmul@b+3,w
  4747  0008' 0092'              	movwf	??___flmul
  4748  0009' 0712'              	addwf	??___flmul,w
  4749  000A' 0093'              	movwf	??___flmul+1
  4750  000B' 0813'              	movf	??___flmul+1,w
  4751  000C' 009D'              	movwf	___flmul@bexp
  4752  000D'                    l4353:
  4753  000D' 1F8C'              	btfss	___flmul@b+2,7
  4754  000E' 2800'              	goto	u7181
  4755  000F' 2800'              	goto	u7180
  4756  0010'                    u7181:
  4757  0010' 2800'              	goto	l4357
  4758  0011'                    u7180:
  4759  0011'                    l4355:
  4760  0011' 141D'              	bsf	___flmul@bexp,0
  4761  0012'                    l4357:
  4762  0012' 081D'              	movf	___flmul@bexp,w
  4763  0013' 1903               	btfsc	3,2
  4764  0014' 2800'              	goto	u7191
  4765  0015' 2800'              	goto	u7190
  4766  0016'                    u7191:
  4767  0016' 2800'              	goto	l4365
  4768  0017'                    u7190:
  4769  0017'                    l4359:
  4770  0017' 0A1D'              	incf	___flmul@bexp,w
  4771  0018' 1D03               	btfss	3,2
  4772  0019' 2800'              	goto	u7201
  4773  001A' 2800'              	goto	u7200
  4774  001B'                    u7201:
  4775  001B' 2800'              	goto	l4363
  4776  001C'                    u7200:
  4777  001C'                    l4361:
  4778  001C' 3000               	movlw	0
  4779  001D' 008D'              	movwf	___flmul@b+3
  4780  001E' 3000               	movlw	0
  4781  001F' 008C'              	movwf	___flmul@b+2
  4782  0020' 3000               	movlw	0
  4783  0021' 008B'              	movwf	___flmul@b+1
  4784  0022' 3000               	movlw	0
  4785  0023' 008A'              	movwf	___flmul@b
  4786  0024'                    l4363:
  4787  0024' 178C'              	bsf	___flmul@b+2,7
  4788  0025' 2800'              	goto	l4367
  4789  0026'                    l4365:
  4790  0026' 3000               	movlw	0
  4791  0027' 008D'              	movwf	___flmul@b+3
  4792  0028' 3000               	movlw	0
  4793  0029' 008C'              	movwf	___flmul@b+2
  4794  002A' 3000               	movlw	0
  4795  002B' 008B'              	movwf	___flmul@b+1
  4796  002C' 3000               	movlw	0
  4797  002D' 008A'              	movwf	___flmul@b
  4798  002E'                    l4367:
  4799  002E' 0811'              	movf	___flmul@a+3,w
  4800  002F' 3980               	andlw	128
  4801  0030' 0092'              	movwf	??___flmul
  4802  0031' 0812'              	movf	??___flmul,w
  4803  0032' 0697'              	xorwf	___flmul@sign,f
  4804  0033'                    l4369:
  4805  0033' 0811'              	movf	___flmul@a+3,w
  4806  0034' 0092'              	movwf	??___flmul
  4807  0035' 0712'              	addwf	??___flmul,w
  4808  0036' 0093'              	movwf	??___flmul+1
  4809  0037' 0813'              	movf	??___flmul+1,w
  4810  0038' 0098'              	movwf	___flmul@aexp
  4811  0039'                    l4371:
  4812  0039' 1F90'              	btfss	___flmul@a+2,7
  4813  003A' 2800'              	goto	u7211
  4814  003B' 2800'              	goto	u7210
  4815  003C'                    u7211:
  4816  003C' 2800'              	goto	l4375
  4817  003D'                    u7210:
  4818  003D'                    l4373:
  4819  003D' 1418'              	bsf	___flmul@aexp,0
  4820  003E'                    l4375:
  4821  003E' 0818'              	movf	___flmul@aexp,w
  4822  003F' 1903               	btfsc	3,2
  4823  0040' 2800'              	goto	u7221
  4824  0041' 2800'              	goto	u7220
  4825  0042'                    u7221:
  4826  0042' 2800'              	goto	l4383
  4827  0043'                    u7220:
  4828  0043'                    l4377:
  4829  0043' 0A18'              	incf	___flmul@aexp,w
  4830  0044' 1D03               	btfss	3,2
  4831  0045' 2800'              	goto	u7231
  4832  0046' 2800'              	goto	u7230
  4833  0047'                    u7231:
  4834  0047' 2800'              	goto	l4381
  4835  0048'                    u7230:
  4836  0048'                    l4379:
  4837  0048' 3000               	movlw	0
  4838  0049' 0091'              	movwf	___flmul@a+3
  4839  004A' 3000               	movlw	0
  4840  004B' 0090'              	movwf	___flmul@a+2
  4841  004C' 3000               	movlw	0
  4842  004D' 008F'              	movwf	___flmul@a+1
  4843  004E' 3000               	movlw	0
  4844  004F' 008E'              	movwf	___flmul@a
  4845  0050'                    l4381:
  4846  0050' 1790'              	bsf	___flmul@a+2,7
  4847  0051' 2800'              	goto	l4385
  4848  0052'                    l4383:
  4849  0052' 3000               	movlw	0
  4850  0053' 0091'              	movwf	___flmul@a+3
  4851  0054' 3000               	movlw	0
  4852  0055' 0090'              	movwf	___flmul@a+2
  4853  0056' 3000               	movlw	0
  4854  0057' 008F'              	movwf	___flmul@a+1
  4855  0058' 3000               	movlw	0
  4856  0059' 008E'              	movwf	___flmul@a
  4857  005A'                    l4385:
  4858  005A' 0818'              	movf	___flmul@aexp,w
  4859  005B' 1903               	btfsc	3,2
  4860  005C' 2800'              	goto	u7241
  4861  005D' 2800'              	goto	u7240
  4862  005E'                    u7241:
  4863  005E' 2800'              	goto	l4389
  4864  005F'                    u7240:
  4865  005F'                    l4387:
  4866  005F' 081D'              	movf	___flmul@bexp,w
  4867  0060' 1D03               	btfss	3,2
  4868  0061' 2800'              	goto	u7251
  4869  0062' 2800'              	goto	u7250
  4870  0063'                    u7251:
  4871  0063' 2800'              	goto	l4393
  4872  0064'                    u7250:
  4873  0064'                    l4389:
  4874  0064' 3000               	movlw	0
  4875  0065' 008D'              	movwf	?___flmul+3
  4876  0066' 3000               	movlw	0
  4877  0067' 008C'              	movwf	?___flmul+2
  4878  0068' 3000               	movlw	0
  4879  0069' 008B'              	movwf	?___flmul+1
  4880  006A' 3000               	movlw	0
  4881  006B' 008A'              	movwf	?___flmul
  4882  006C' 2800'              	goto	l887
  4883  006D'                    l4393:
  4884  006D' 080A'              	movf	___flmul@b,w
  4885  006E' 0092'              	movwf	??___flmul
  4886  006F' 0812'              	movf	??___flmul,w
  4887  0070' 0083'              	movwf	__Umul8_16@multiplicand
  4888  0071' 0810'              	movf	___flmul@a+2,w
  4889  0072' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  4890  0077' 0804'              	movf	?__Umul8_16+1,w
  4891  0078' 1283               	bcf	3,5	;RP0=0, select bank0
  4892  0079' 1303               	bcf	3,6	;RP1=0, select bank0
  4893  007A' 00A3'              	movwf	___flmul@temp+1
  4894  007B' 0803'              	movf	?__Umul8_16,w
  4895  007C' 00A2'              	movwf	___flmul@temp
  4896  007D'                    l4395:
  4897  007D' 0822'              	movf	___flmul@temp,w
  4898  007E' 0092'              	movwf	??___flmul
  4899  007F' 0193'              	clrf	??___flmul+1
  4900  0080' 0194'              	clrf	??___flmul+2
  4901  0081' 0195'              	clrf	??___flmul+3
  4902  0082' 0815'              	movf	??___flmul+3,w
  4903  0083' 009C'              	movwf	___flmul@grs+3
  4904  0084' 0814'              	movf	??___flmul+2,w
  4905  0085' 009B'              	movwf	___flmul@grs+2
  4906  0086' 0813'              	movf	??___flmul+1,w
  4907  0087' 009A'              	movwf	___flmul@grs+1
  4908  0088' 0812'              	movf	??___flmul,w
  4909  0089' 0099'              	movwf	___flmul@grs
  4910  008A'                    l4397:
  4911  008A' 0823'              	movf	___flmul@temp+1,w
  4912  008B' 0092'              	movwf	??___flmul
  4913  008C' 0193'              	clrf	??___flmul+1
  4914  008D' 0194'              	clrf	??___flmul+2
  4915  008E' 0195'              	clrf	??___flmul+3
  4916  008F' 0815'              	movf	??___flmul+3,w
  4917  0090' 00A1'              	movwf	___flmul@prod+3
  4918  0091' 0814'              	movf	??___flmul+2,w
  4919  0092' 00A0'              	movwf	___flmul@prod+2
  4920  0093' 0813'              	movf	??___flmul+1,w
  4921  0094' 009F'              	movwf	___flmul@prod+1
  4922  0095' 0812'              	movf	??___flmul,w
  4923  0096' 009E'              	movwf	___flmul@prod
  4924  0097' 080B'              	movf	___flmul@b+1,w
  4925  0098' 0092'              	movwf	??___flmul
  4926  0099' 0812'              	movf	??___flmul,w
  4927  009A' 0083'              	movwf	__Umul8_16@multiplicand
  4928  009B' 080F'              	movf	___flmul@a+1,w
  4929  009C' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  4930  00A1' 0804'              	movf	?__Umul8_16+1,w
  4931  00A2' 1283               	bcf	3,5	;RP0=0, select bank0
  4932  00A3' 1303               	bcf	3,6	;RP1=0, select bank0
  4933  00A4' 00A3'              	movwf	___flmul@temp+1
  4934  00A5' 0803'              	movf	?__Umul8_16,w
  4935  00A6' 00A2'              	movwf	___flmul@temp
  4936  00A7'                    l4399:
  4937  00A7' 0822'              	movf	___flmul@temp,w
  4938  00A8' 0092'              	movwf	??___flmul
  4939  00A9' 0193'              	clrf	??___flmul+1
  4940  00AA' 0194'              	clrf	??___flmul+2
  4941  00AB' 0195'              	clrf	??___flmul+3
  4942  00AC' 0812'              	movf	??___flmul,w
  4943  00AD' 0799'              	addwf	___flmul@grs,f
  4944  00AE' 0813'              	movf	??___flmul+1,w
  4945  00AF' 1103               	clrz
  4946  00B0' 1803               	skipnc
  4947  00B1' 3E01               	addlw	1
  4948  00B2' 1903               	skipnz
  4949  00B3' 2800'              	goto	u7261
  4950  00B4' 079A'              	addwf	___flmul@grs+1,f
  4951  00B5'                    u7261:
  4952  00B5' 0814'              	movf	??___flmul+2,w
  4953  00B6' 1103               	clrz
  4954  00B7' 1803               	skipnc
  4955  00B8' 3E01               	addlw	1
  4956  00B9' 1903               	skipnz
  4957  00BA' 2800'              	goto	u7262
  4958  00BB' 079B'              	addwf	___flmul@grs+2,f
  4959  00BC'                    u7262:
  4960  00BC' 0815'              	movf	??___flmul+3,w
  4961  00BD' 1103               	clrz
  4962  00BE' 1803               	skipnc
  4963  00BF' 3E01               	addlw	1
  4964  00C0' 1903               	skipnz
  4965  00C1' 2800'              	goto	u7263
  4966  00C2' 079C'              	addwf	___flmul@grs+3,f
  4967  00C3'                    u7263:
  4968  00C3'                    l4401:
  4969  00C3' 0823'              	movf	___flmul@temp+1,w
  4970  00C4' 0092'              	movwf	??___flmul
  4971  00C5' 0193'              	clrf	??___flmul+1
  4972  00C6' 0194'              	clrf	??___flmul+2
  4973  00C7' 0195'              	clrf	??___flmul+3
  4974  00C8' 0812'              	movf	??___flmul,w
  4975  00C9' 079E'              	addwf	___flmul@prod,f
  4976  00CA' 0813'              	movf	??___flmul+1,w
  4977  00CB' 1103               	clrz
  4978  00CC' 1803               	skipnc
  4979  00CD' 3E01               	addlw	1
  4980  00CE' 1903               	skipnz
  4981  00CF' 2800'              	goto	u7271
  4982  00D0' 079F'              	addwf	___flmul@prod+1,f
  4983  00D1'                    u7271:
  4984  00D1' 0814'              	movf	??___flmul+2,w
  4985  00D2' 1103               	clrz
  4986  00D3' 1803               	skipnc
  4987  00D4' 3E01               	addlw	1
  4988  00D5' 1903               	skipnz
  4989  00D6' 2800'              	goto	u7272
  4990  00D7' 07A0'              	addwf	___flmul@prod+2,f
  4991  00D8'                    u7272:
  4992  00D8' 0815'              	movf	??___flmul+3,w
  4993  00D9' 1103               	clrz
  4994  00DA' 1803               	skipnc
  4995  00DB' 3E01               	addlw	1
  4996  00DC' 1903               	skipnz
  4997  00DD' 2800'              	goto	u7273
  4998  00DE' 07A1'              	addwf	___flmul@prod+3,f
  4999  00DF'                    u7273:
  5000  00DF' 080C'              	movf	___flmul@b+2,w
  5001  00E0' 0092'              	movwf	??___flmul
  5002  00E1' 0812'              	movf	??___flmul,w
  5003  00E2' 0083'              	movwf	__Umul8_16@multiplicand
  5004  00E3' 080E'              	movf	___flmul@a,w
  5005  00E4' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5006  00E9' 0804'              	movf	?__Umul8_16+1,w
  5007  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
  5008  00EB' 1303               	bcf	3,6	;RP1=0, select bank0
  5009  00EC' 00A3'              	movwf	___flmul@temp+1
  5010  00ED' 0803'              	movf	?__Umul8_16,w
  5011  00EE' 00A2'              	movwf	___flmul@temp
  5012  00EF'                    l4403:
  5013  00EF' 0822'              	movf	___flmul@temp,w
  5014  00F0' 0092'              	movwf	??___flmul
  5015  00F1' 0193'              	clrf	??___flmul+1
  5016  00F2' 0194'              	clrf	??___flmul+2
  5017  00F3' 0195'              	clrf	??___flmul+3
  5018  00F4' 0812'              	movf	??___flmul,w
  5019  00F5' 0799'              	addwf	___flmul@grs,f
  5020  00F6' 0813'              	movf	??___flmul+1,w
  5021  00F7' 1103               	clrz
  5022  00F8' 1803               	skipnc
  5023  00F9' 3E01               	addlw	1
  5024  00FA' 1903               	skipnz
  5025  00FB' 2800'              	goto	u7281
  5026  00FC' 079A'              	addwf	___flmul@grs+1,f
  5027  00FD'                    u7281:
  5028  00FD' 0814'              	movf	??___flmul+2,w
  5029  00FE' 1103               	clrz
  5030  00FF' 1803               	skipnc
  5031  0100' 3E01               	addlw	1
  5032  0101' 1903               	skipnz
  5033  0102' 2800'              	goto	u7282
  5034  0103' 079B'              	addwf	___flmul@grs+2,f
  5035  0104'                    u7282:
  5036  0104' 0815'              	movf	??___flmul+3,w
  5037  0105' 1103               	clrz
  5038  0106' 1803               	skipnc
  5039  0107' 3E01               	addlw	1
  5040  0108' 1903               	skipnz
  5041  0109' 2800'              	goto	u7283
  5042  010A' 079C'              	addwf	___flmul@grs+3,f
  5043  010B'                    u7283:
  5044  010B'                    l4405:
  5045  010B' 0823'              	movf	___flmul@temp+1,w
  5046  010C' 0092'              	movwf	??___flmul
  5047  010D' 0193'              	clrf	??___flmul+1
  5048  010E' 0194'              	clrf	??___flmul+2
  5049  010F' 0195'              	clrf	??___flmul+3
  5050  0110' 0812'              	movf	??___flmul,w
  5051  0111' 079E'              	addwf	___flmul@prod,f
  5052  0112' 0813'              	movf	??___flmul+1,w
  5053  0113' 1103               	clrz
  5054  0114' 1803               	skipnc
  5055  0115' 3E01               	addlw	1
  5056  0116' 1903               	skipnz
  5057  0117' 2800'              	goto	u7291
  5058  0118' 079F'              	addwf	___flmul@prod+1,f
  5059  0119'                    u7291:
  5060  0119' 0814'              	movf	??___flmul+2,w
  5061  011A' 1103               	clrz
  5062  011B' 1803               	skipnc
  5063  011C' 3E01               	addlw	1
  5064  011D' 1903               	skipnz
  5065  011E' 2800'              	goto	u7292
  5066  011F' 07A0'              	addwf	___flmul@prod+2,f
  5067  0120'                    u7292:
  5068  0120' 0815'              	movf	??___flmul+3,w
  5069  0121' 1103               	clrz
  5070  0122' 1803               	skipnc
  5071  0123' 3E01               	addlw	1
  5072  0124' 1903               	skipnz
  5073  0125' 2800'              	goto	u7293
  5074  0126' 07A1'              	addwf	___flmul@prod+3,f
  5075  0127'                    u7293:
  5076  0127'                    l4407:
  5077  0127' 3008               	movlw	8
  5078  0128' 0092'              	movwf	??___flmul
  5079  0129'                    u7305:
  5080  0129' 1003               	clrc
  5081  012A' 0D99'              	rlf	___flmul@grs,f
  5082  012B' 0D9A'              	rlf	___flmul@grs+1,f
  5083  012C' 0D9B'              	rlf	___flmul@grs+2,f
  5084  012D' 0D9C'              	rlf	___flmul@grs+3,f
  5085  012E' 0B92'              	decfsz	??___flmul,f
  5086  012F' 2800'              	goto	u7305
  5087  0130'                    l4409:
  5088  0130' 080B'              	movf	___flmul@b+1,w
  5089  0131' 0092'              	movwf	??___flmul
  5090  0132' 0812'              	movf	??___flmul,w
  5091  0133' 0083'              	movwf	__Umul8_16@multiplicand
  5092  0134' 080E'              	movf	___flmul@a,w
  5093  0135' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5094  013A' 0804'              	movf	?__Umul8_16+1,w
  5095  013B' 1283               	bcf	3,5	;RP0=0, select bank0
  5096  013C' 1303               	bcf	3,6	;RP1=0, select bank0
  5097  013D' 00A3'              	movwf	___flmul@temp+1
  5098  013E' 0803'              	movf	?__Umul8_16,w
  5099  013F' 00A2'              	movwf	___flmul@temp
  5100  0140'                    l4411:
  5101  0140' 0822'              	movf	___flmul@temp,w
  5102  0141' 0092'              	movwf	??___flmul
  5103  0142' 0823'              	movf	___flmul@temp+1,w
  5104  0143' 0093'              	movwf	??___flmul+1
  5105  0144' 0194'              	clrf	??___flmul+2
  5106  0145' 0195'              	clrf	??___flmul+3
  5107  0146' 0812'              	movf	??___flmul,w
  5108  0147' 0799'              	addwf	___flmul@grs,f
  5109  0148' 0813'              	movf	??___flmul+1,w
  5110  0149' 1103               	clrz
  5111  014A' 1803               	skipnc
  5112  014B' 3E01               	addlw	1
  5113  014C' 1903               	skipnz
  5114  014D' 2800'              	goto	u7311
  5115  014E' 079A'              	addwf	___flmul@grs+1,f
  5116  014F'                    u7311:
  5117  014F' 0814'              	movf	??___flmul+2,w
  5118  0150' 1103               	clrz
  5119  0151' 1803               	skipnc
  5120  0152' 3E01               	addlw	1
  5121  0153' 1903               	skipnz
  5122  0154' 2800'              	goto	u7312
  5123  0155' 079B'              	addwf	___flmul@grs+2,f
  5124  0156'                    u7312:
  5125  0156' 0815'              	movf	??___flmul+3,w
  5126  0157' 1103               	clrz
  5127  0158' 1803               	skipnc
  5128  0159' 3E01               	addlw	1
  5129  015A' 1903               	skipnz
  5130  015B' 2800'              	goto	u7313
  5131  015C' 079C'              	addwf	___flmul@grs+3,f
  5132  015D'                    u7313:
  5133  015D'                    l4413:
  5134  015D' 080A'              	movf	___flmul@b,w
  5135  015E' 0092'              	movwf	??___flmul
  5136  015F' 0812'              	movf	??___flmul,w
  5137  0160' 0083'              	movwf	__Umul8_16@multiplicand
  5138  0161' 080F'              	movf	___flmul@a+1,w
  5139  0162' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5140  0167' 0804'              	movf	?__Umul8_16+1,w
  5141  0168' 1283               	bcf	3,5	;RP0=0, select bank0
  5142  0169' 1303               	bcf	3,6	;RP1=0, select bank0
  5143  016A' 00A3'              	movwf	___flmul@temp+1
  5144  016B' 0803'              	movf	?__Umul8_16,w
  5145  016C' 00A2'              	movwf	___flmul@temp
  5146  016D'                    l4415:
  5147  016D' 0822'              	movf	___flmul@temp,w
  5148  016E' 0092'              	movwf	??___flmul
  5149  016F' 0823'              	movf	___flmul@temp+1,w
  5150  0170' 0093'              	movwf	??___flmul+1
  5151  0171' 0194'              	clrf	??___flmul+2
  5152  0172' 0195'              	clrf	??___flmul+3
  5153  0173' 0812'              	movf	??___flmul,w
  5154  0174' 0799'              	addwf	___flmul@grs,f
  5155  0175' 0813'              	movf	??___flmul+1,w
  5156  0176' 1103               	clrz
  5157  0177' 1803               	skipnc
  5158  0178' 3E01               	addlw	1
  5159  0179' 1903               	skipnz
  5160  017A' 2800'              	goto	u7321
  5161  017B' 079A'              	addwf	___flmul@grs+1,f
  5162  017C'                    u7321:
  5163  017C' 0814'              	movf	??___flmul+2,w
  5164  017D' 1103               	clrz
  5165  017E' 1803               	skipnc
  5166  017F' 3E01               	addlw	1
  5167  0180' 1903               	skipnz
  5168  0181' 2800'              	goto	u7322
  5169  0182' 079B'              	addwf	___flmul@grs+2,f
  5170  0183'                    u7322:
  5171  0183' 0815'              	movf	??___flmul+3,w
  5172  0184' 1103               	clrz
  5173  0185' 1803               	skipnc
  5174  0186' 3E01               	addlw	1
  5175  0187' 1903               	skipnz
  5176  0188' 2800'              	goto	u7323
  5177  0189' 079C'              	addwf	___flmul@grs+3,f
  5178  018A'                    u7323:
  5179  018A'                    l4417:
  5180  018A' 3008               	movlw	8
  5181  018B' 0092'              	movwf	??___flmul
  5182  018C'                    u7335:
  5183  018C' 1003               	clrc
  5184  018D' 0D99'              	rlf	___flmul@grs,f
  5185  018E' 0D9A'              	rlf	___flmul@grs+1,f
  5186  018F' 0D9B'              	rlf	___flmul@grs+2,f
  5187  0190' 0D9C'              	rlf	___flmul@grs+3,f
  5188  0191' 0B92'              	decfsz	??___flmul,f
  5189  0192' 2800'              	goto	u7335
  5190  0193' 080A'              	movf	___flmul@b,w
  5191  0194' 0092'              	movwf	??___flmul
  5192  0195' 0812'              	movf	??___flmul,w
  5193  0196' 0083'              	movwf	__Umul8_16@multiplicand
  5194  0197' 080E'              	movf	___flmul@a,w
  5195  0198' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5196  019D' 0804'              	movf	?__Umul8_16+1,w
  5197  019E' 1283               	bcf	3,5	;RP0=0, select bank0
  5198  019F' 1303               	bcf	3,6	;RP1=0, select bank0
  5199  01A0' 00A3'              	movwf	___flmul@temp+1
  5200  01A1' 0803'              	movf	?__Umul8_16,w
  5201  01A2' 00A2'              	movwf	___flmul@temp
  5202  01A3'                    l4419:
  5203  01A3' 0822'              	movf	___flmul@temp,w
  5204  01A4' 0092'              	movwf	??___flmul
  5205  01A5' 0823'              	movf	___flmul@temp+1,w
  5206  01A6' 0093'              	movwf	??___flmul+1
  5207  01A7' 0194'              	clrf	??___flmul+2
  5208  01A8' 0195'              	clrf	??___flmul+3
  5209  01A9' 0812'              	movf	??___flmul,w
  5210  01AA' 0799'              	addwf	___flmul@grs,f
  5211  01AB' 0813'              	movf	??___flmul+1,w
  5212  01AC' 1103               	clrz
  5213  01AD' 1803               	skipnc
  5214  01AE' 3E01               	addlw	1
  5215  01AF' 1903               	skipnz
  5216  01B0' 2800'              	goto	u7341
  5217  01B1' 079A'              	addwf	___flmul@grs+1,f
  5218  01B2'                    u7341:
  5219  01B2' 0814'              	movf	??___flmul+2,w
  5220  01B3' 1103               	clrz
  5221  01B4' 1803               	skipnc
  5222  01B5' 3E01               	addlw	1
  5223  01B6' 1903               	skipnz
  5224  01B7' 2800'              	goto	u7342
  5225  01B8' 079B'              	addwf	___flmul@grs+2,f
  5226  01B9'                    u7342:
  5227  01B9' 0815'              	movf	??___flmul+3,w
  5228  01BA' 1103               	clrz
  5229  01BB' 1803               	skipnc
  5230  01BC' 3E01               	addlw	1
  5231  01BD' 1903               	skipnz
  5232  01BE' 2800'              	goto	u7343
  5233  01BF' 079C'              	addwf	___flmul@grs+3,f
  5234  01C0'                    u7343:
  5235  01C0'                    l4421:
  5236  01C0' 080B'              	movf	___flmul@b+1,w
  5237  01C1' 0092'              	movwf	??___flmul
  5238  01C2' 0812'              	movf	??___flmul,w
  5239  01C3' 0083'              	movwf	__Umul8_16@multiplicand
  5240  01C4' 0810'              	movf	___flmul@a+2,w
  5241  01C5' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5242  01CA' 0804'              	movf	?__Umul8_16+1,w
  5243  01CB' 1283               	bcf	3,5	;RP0=0, select bank0
  5244  01CC' 1303               	bcf	3,6	;RP1=0, select bank0
  5245  01CD' 00A3'              	movwf	___flmul@temp+1
  5246  01CE' 0803'              	movf	?__Umul8_16,w
  5247  01CF' 00A2'              	movwf	___flmul@temp
  5248  01D0' 0822'              	movf	___flmul@temp,w
  5249  01D1' 0092'              	movwf	??___flmul
  5250  01D2' 0823'              	movf	___flmul@temp+1,w
  5251  01D3' 0093'              	movwf	??___flmul+1
  5252  01D4' 0194'              	clrf	??___flmul+2
  5253  01D5' 0195'              	clrf	??___flmul+3
  5254  01D6' 0812'              	movf	??___flmul,w
  5255  01D7' 079E'              	addwf	___flmul@prod,f
  5256  01D8' 0813'              	movf	??___flmul+1,w
  5257  01D9' 1103               	clrz
  5258  01DA' 1803               	skipnc
  5259  01DB' 3E01               	addlw	1
  5260  01DC' 1903               	skipnz
  5261  01DD' 2800'              	goto	u7351
  5262  01DE' 079F'              	addwf	___flmul@prod+1,f
  5263  01DF'                    u7351:
  5264  01DF' 0814'              	movf	??___flmul+2,w
  5265  01E0' 1103               	clrz
  5266  01E1' 1803               	skipnc
  5267  01E2' 3E01               	addlw	1
  5268  01E3' 1903               	skipnz
  5269  01E4' 2800'              	goto	u7352
  5270  01E5' 07A0'              	addwf	___flmul@prod+2,f
  5271  01E6'                    u7352:
  5272  01E6' 0815'              	movf	??___flmul+3,w
  5273  01E7' 1103               	clrz
  5274  01E8' 1803               	skipnc
  5275  01E9' 3E01               	addlw	1
  5276  01EA' 1903               	skipnz
  5277  01EB' 2800'              	goto	u7353
  5278  01EC' 07A1'              	addwf	___flmul@prod+3,f
  5279  01ED'                    u7353:
  5280  01ED'                    l4423:
  5281  01ED' 080C'              	movf	___flmul@b+2,w
  5282  01EE' 0092'              	movwf	??___flmul
  5283  01EF' 0812'              	movf	??___flmul,w
  5284  01F0' 0083'              	movwf	__Umul8_16@multiplicand
  5285  01F1' 080F'              	movf	___flmul@a+1,w
  5286  01F2' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5287  01F7' 0804'              	movf	?__Umul8_16+1,w
  5288  01F8' 1283               	bcf	3,5	;RP0=0, select bank0
  5289  01F9' 1303               	bcf	3,6	;RP1=0, select bank0
  5290  01FA' 00A3'              	movwf	___flmul@temp+1
  5291  01FB' 0803'              	movf	?__Umul8_16,w
  5292  01FC' 00A2'              	movwf	___flmul@temp
  5293  01FD'                    l4425:
  5294  01FD' 0822'              	movf	___flmul@temp,w
  5295  01FE' 0092'              	movwf	??___flmul
  5296  01FF' 0823'              	movf	___flmul@temp+1,w
  5297  0200' 0093'              	movwf	??___flmul+1
  5298  0201' 0194'              	clrf	??___flmul+2
  5299  0202' 0195'              	clrf	??___flmul+3
  5300  0203' 0812'              	movf	??___flmul,w
  5301  0204' 079E'              	addwf	___flmul@prod,f
  5302  0205' 0813'              	movf	??___flmul+1,w
  5303  0206' 1103               	clrz
  5304  0207' 1803               	skipnc
  5305  0208' 3E01               	addlw	1
  5306  0209' 1903               	skipnz
  5307  020A' 2800'              	goto	u7361
  5308  020B' 079F'              	addwf	___flmul@prod+1,f
  5309  020C'                    u7361:
  5310  020C' 0814'              	movf	??___flmul+2,w
  5311  020D' 1103               	clrz
  5312  020E' 1803               	skipnc
  5313  020F' 3E01               	addlw	1
  5314  0210' 1903               	skipnz
  5315  0211' 2800'              	goto	u7362
  5316  0212' 07A0'              	addwf	___flmul@prod+2,f
  5317  0213'                    u7362:
  5318  0213' 0815'              	movf	??___flmul+3,w
  5319  0214' 1103               	clrz
  5320  0215' 1803               	skipnc
  5321  0216' 3E01               	addlw	1
  5322  0217' 1903               	skipnz
  5323  0218' 2800'              	goto	u7363
  5324  0219' 07A1'              	addwf	___flmul@prod+3,f
  5325  021A'                    u7363:
  5326  021A' 080C'              	movf	___flmul@b+2,w
  5327  021B' 0092'              	movwf	??___flmul
  5328  021C' 0812'              	movf	??___flmul,w
  5329  021D' 0083'              	movwf	__Umul8_16@multiplicand
  5330  021E' 0810'              	movf	___flmul@a+2,w
  5331  021F' 120A' 118A' 2000' 120A' 118A' 	fcall	__Umul8_16
  5332  0224' 0804'              	movf	?__Umul8_16+1,w
  5333  0225' 1283               	bcf	3,5	;RP0=0, select bank0
  5334  0226' 1303               	bcf	3,6	;RP1=0, select bank0
  5335  0227' 00A3'              	movwf	___flmul@temp+1
  5336  0228' 0803'              	movf	?__Umul8_16,w
  5337  0229' 00A2'              	movwf	___flmul@temp
  5338  022A'                    l4427:
  5339  022A' 0822'              	movf	___flmul@temp,w
  5340  022B' 0092'              	movwf	??___flmul
  5341  022C' 0823'              	movf	___flmul@temp+1,w
  5342  022D' 0093'              	movwf	??___flmul+1
  5343  022E' 0194'              	clrf	??___flmul+2
  5344  022F' 0195'              	clrf	??___flmul+3
  5345  0230' 3008               	movlw	8
  5346  0231'                    u7375:
  5347  0231' 1003               	clrc
  5348  0232' 0D92'              	rlf	??___flmul,f
  5349  0233' 0D93'              	rlf	??___flmul+1,f
  5350  0234' 0D94'              	rlf	??___flmul+2,f
  5351  0235' 0D95'              	rlf	??___flmul+3,f
  5352  0236'                    u7370:
  5353  0236' 3EFF               	addlw	-1
  5354  0237' 1D03               	skipz
  5355  0238' 2800'              	goto	u7375
  5356  0239' 0812'              	movf	??___flmul,w
  5357  023A' 079E'              	addwf	___flmul@prod,f
  5358  023B' 0813'              	movf	??___flmul+1,w
  5359  023C' 1103               	clrz
  5360  023D' 1803               	skipnc
  5361  023E' 3E01               	addlw	1
  5362  023F' 1903               	skipnz
  5363  0240' 2800'              	goto	u7381
  5364  0241' 079F'              	addwf	___flmul@prod+1,f
  5365  0242'                    u7381:
  5366  0242' 0814'              	movf	??___flmul+2,w
  5367  0243' 1103               	clrz
  5368  0244' 1803               	skipnc
  5369  0245' 3E01               	addlw	1
  5370  0246' 1903               	skipnz
  5371  0247' 2800'              	goto	u7382
  5372  0248' 07A0'              	addwf	___flmul@prod+2,f
  5373  0249'                    u7382:
  5374  0249' 0815'              	movf	??___flmul+3,w
  5375  024A' 1103               	clrz
  5376  024B' 1803               	skipnc
  5377  024C' 3E01               	addlw	1
  5378  024D' 1903               	skipnz
  5379  024E' 2800'              	goto	u7383
  5380  024F' 07A1'              	addwf	___flmul@prod+3,f
  5381  0250'                    u7383:
  5382  0250'                    l4429:
  5383  0250' 0819'              	movf	___flmul@grs,w
  5384  0251' 0092'              	movwf	??___flmul
  5385  0252' 081A'              	movf	___flmul@grs+1,w
  5386  0253' 0093'              	movwf	??___flmul+1
  5387  0254' 081B'              	movf	___flmul@grs+2,w
  5388  0255' 0094'              	movwf	??___flmul+2
  5389  0256' 081C'              	movf	___flmul@grs+3,w
  5390  0257' 0095'              	movwf	??___flmul+3
  5391  0258' 3018               	movlw	24
  5392  0259'                    u7395:
  5393  0259' 1003               	clrc
  5394  025A' 0C95'              	rrf	??___flmul+3,f
  5395  025B' 0C94'              	rrf	??___flmul+2,f
  5396  025C' 0C93'              	rrf	??___flmul+1,f
  5397  025D' 0C92'              	rrf	??___flmul,f
  5398  025E'                    u7390:
  5399  025E' 3EFF               	addlw	-1
  5400  025F' 1D03               	skipz
  5401  0260' 2800'              	goto	u7395
  5402  0261' 0812'              	movf	??___flmul,w
  5403  0262' 079E'              	addwf	___flmul@prod,f
  5404  0263' 0813'              	movf	??___flmul+1,w
  5405  0264' 1103               	clrz
  5406  0265' 1803               	skipnc
  5407  0266' 3E01               	addlw	1
  5408  0267' 1903               	skipnz
  5409  0268' 2800'              	goto	u7401
  5410  0269' 079F'              	addwf	___flmul@prod+1,f
  5411  026A'                    u7401:
  5412  026A' 0814'              	movf	??___flmul+2,w
  5413  026B' 1103               	clrz
  5414  026C' 1803               	skipnc
  5415  026D' 3E01               	addlw	1
  5416  026E' 1903               	skipnz
  5417  026F' 2800'              	goto	u7402
  5418  0270' 07A0'              	addwf	___flmul@prod+2,f
  5419  0271'                    u7402:
  5420  0271' 0815'              	movf	??___flmul+3,w
  5421  0272' 1103               	clrz
  5422  0273' 1803               	skipnc
  5423  0274' 3E01               	addlw	1
  5424  0275' 1903               	skipnz
  5425  0276' 2800'              	goto	u7403
  5426  0277' 07A1'              	addwf	___flmul@prod+3,f
  5427  0278'                    u7403:
  5428  0278'                    l4431:
  5429  0278' 3008               	movlw	8
  5430  0279' 0092'              	movwf	??___flmul
  5431  027A'                    u7415:
  5432  027A' 1003               	clrc
  5433  027B' 0D99'              	rlf	___flmul@grs,f
  5434  027C' 0D9A'              	rlf	___flmul@grs+1,f
  5435  027D' 0D9B'              	rlf	___flmul@grs+2,f
  5436  027E' 0D9C'              	rlf	___flmul@grs+3,f
  5437  027F' 0B92'              	decfsz	??___flmul,f
  5438  0280' 2800'              	goto	u7415
  5439  0281'                    l4433:
  5440  0281' 081D'              	movf	___flmul@bexp,w
  5441  0282' 0718'              	addwf	___flmul@aexp,w
  5442  0283' 0092'              	movwf	??___flmul
  5443  0284' 0193'              	clrf	??___flmul+1
  5444  0285' 0D93'              	rlf	??___flmul+1,f
  5445  0286' 0812'              	movf	??___flmul,w
  5446  0287' 3E82               	addlw	130
  5447  0288' 00A2'              	movwf	___flmul@temp
  5448  0289' 0813'              	movf	??___flmul+1,w
  5449  028A' 1803               	skipnc
  5450  028B' 3E01               	addlw	1
  5451  028C' 3EFF               	addlw	255
  5452  028D' 00A3'              	movwf	___flmul@temp+1
  5453  028E' 2800'              	goto	l4445
  5454  028F'                    l4435:
  5455  028F' 3001               	movlw	1
  5456  0290' 0092'              	movwf	??___flmul
  5457  0291'                    u7425:
  5458  0291' 1003               	clrc
  5459  0292' 0D9E'              	rlf	___flmul@prod,f
  5460  0293' 0D9F'              	rlf	___flmul@prod+1,f
  5461  0294' 0DA0'              	rlf	___flmul@prod+2,f
  5462  0295' 0DA1'              	rlf	___flmul@prod+3,f
  5463  0296' 0B92'              	decfsz	??___flmul,f
  5464  0297' 2800'              	goto	u7425
  5465  0298'                    l4437:
  5466  0298' 1F9C'              	btfss	___flmul@grs+3,7
  5467  0299' 2800'              	goto	u7431
  5468  029A' 2800'              	goto	u7430
  5469  029B'                    u7431:
  5470  029B' 2800'              	goto	l4441
  5471  029C'                    u7430:
  5472  029C'                    l4439:
  5473  029C' 141E'              	bsf	___flmul@prod,0
  5474  029D'                    l4441:
  5475  029D' 3001               	movlw	1
  5476  029E' 0092'              	movwf	??___flmul
  5477  029F'                    u7445:
  5478  029F' 1003               	clrc
  5479  02A0' 0D99'              	rlf	___flmul@grs,f
  5480  02A1' 0D9A'              	rlf	___flmul@grs+1,f
  5481  02A2' 0D9B'              	rlf	___flmul@grs+2,f
  5482  02A3' 0D9C'              	rlf	___flmul@grs+3,f
  5483  02A4' 0B92'              	decfsz	??___flmul,f
  5484  02A5' 2800'              	goto	u7445
  5485  02A6'                    l4443:
  5486  02A6' 30FF               	movlw	255
  5487  02A7' 07A2'              	addwf	___flmul@temp,f
  5488  02A8' 1803               	skipnc
  5489  02A9' 0AA3'              	incf	___flmul@temp+1,f
  5490  02AA' 30FF               	movlw	255
  5491  02AB' 07A3'              	addwf	___flmul@temp+1,f
  5492  02AC'                    l4445:
  5493  02AC' 1FA0'              	btfss	___flmul@prod+2,7
  5494  02AD' 2800'              	goto	u7451
  5495  02AE' 2800'              	goto	u7450
  5496  02AF'                    u7451:
  5497  02AF' 2800'              	goto	l4435
  5498  02B0'                    u7450:
  5499  02B0'                    l4447:
  5500  02B0' 0198'              	clrf	___flmul@aexp
  5501  02B1'                    l4449:
  5502  02B1' 1F9C'              	btfss	___flmul@grs+3,7
  5503  02B2' 2800'              	goto	u7461
  5504  02B3' 2800'              	goto	u7460
  5505  02B4'                    u7461:
  5506  02B4' 2800'              	goto	l4457
  5507  02B5'                    u7460:
  5508  02B5'                    l4451:
  5509  02B5' 30FF               	movlw	255
  5510  02B6' 0519'              	andwf	___flmul@grs,w
  5511  02B7' 0092'              	movwf	??___flmul
  5512  02B8' 30FF               	movlw	255
  5513  02B9' 051A'              	andwf	___flmul@grs+1,w
  5514  02BA' 0093'              	movwf	??___flmul+1
  5515  02BB' 30FF               	movlw	255
  5516  02BC' 051B'              	andwf	___flmul@grs+2,w
  5517  02BD' 0094'              	movwf	??___flmul+2
  5518  02BE' 307F               	movlw	127
  5519  02BF' 051C'              	andwf	___flmul@grs+3,w
  5520  02C0' 0095'              	movwf	??___flmul+3
  5521  02C1' 0815'              	movf	??___flmul+3,w
  5522  02C2' 0414'              	iorwf	??___flmul+2,w
  5523  02C3' 0413'              	iorwf	??___flmul+1,w
  5524  02C4' 0412'              	iorwf	??___flmul,w
  5525  02C5' 1903               	skipnz
  5526  02C6' 2800'              	goto	u7471
  5527  02C7' 2800'              	goto	u7470
  5528  02C8'                    u7471:
  5529  02C8' 2800'              	goto	l893
  5530  02C9'                    u7470:
  5531  02C9'                    l4453:
  5532  02C9' 0198'              	clrf	___flmul@aexp
  5533  02CA' 0A98'              	incf	___flmul@aexp,f
  5534  02CB' 2800'              	goto	l4457
  5535  02CC'                    l893:
  5536  02CC' 1C1E'              	btfss	___flmul@prod,0
  5537  02CD' 2800'              	goto	u7481
  5538  02CE' 2800'              	goto	u7480
  5539  02CF'                    u7481:
  5540  02CF' 2800'              	goto	l4457
  5541  02D0'                    u7480:
  5542  02D0' 2800'              	goto	l4453
  5543  02D1'                    l4457:
  5544  02D1' 0818'              	movf	___flmul@aexp,w
  5545  02D2' 1903               	btfsc	3,2
  5546  02D3' 2800'              	goto	u7491
  5547  02D4' 2800'              	goto	u7490
  5548  02D5'                    u7491:
  5549  02D5' 2800'              	goto	l4467
  5550  02D6'                    u7490:
  5551  02D6'                    l4459:
  5552  02D6' 3001               	movlw	1
  5553  02D7' 079E'              	addwf	___flmul@prod,f
  5554  02D8' 3000               	movlw	0
  5555  02D9' 1803               	skipnc
  5556  02DA' 3001               	movlw	1
  5557  02DB' 079F'              	addwf	___flmul@prod+1,f
  5558  02DC' 3000               	movlw	0
  5559  02DD' 1803               	skipnc
  5560  02DE' 3001               	movlw	1
  5561  02DF' 07A0'              	addwf	___flmul@prod+2,f
  5562  02E0' 3000               	movlw	0
  5563  02E1' 1803               	skipnc
  5564  02E2' 3001               	movlw	1
  5565  02E3' 07A1'              	addwf	___flmul@prod+3,f
  5566  02E4'                    l4461:
  5567  02E4' 1C21'              	btfss	___flmul@prod+3,0
  5568  02E5' 2800'              	goto	u7501
  5569  02E6' 2800'              	goto	u7500
  5570  02E7'                    u7501:
  5571  02E7' 2800'              	goto	l4467
  5572  02E8'                    u7500:
  5573  02E8'                    l4463:
  5574  02E8' 081E'              	movf	___flmul@prod,w
  5575  02E9' 0092'              	movwf	??___flmul
  5576  02EA' 081F'              	movf	___flmul@prod+1,w
  5577  02EB' 0093'              	movwf	??___flmul+1
  5578  02EC' 0820'              	movf	___flmul@prod+2,w
  5579  02ED' 0094'              	movwf	??___flmul+2
  5580  02EE' 0821'              	movf	___flmul@prod+3,w
  5581  02EF' 0095'              	movwf	??___flmul+3
  5582  02F0' 3001               	movlw	1
  5583  02F1' 0096'              	movwf	??___flmul+4
  5584  02F2'                    u7515:
  5585  02F2' 0D15'              	rlf	??___flmul+3,w
  5586  02F3' 0C95'              	rrf	??___flmul+3,f
  5587  02F4' 0C94'              	rrf	??___flmul+2,f
  5588  02F5' 0C93'              	rrf	??___flmul+1,f
  5589  02F6' 0C92'              	rrf	??___flmul,f
  5590  02F7'                    u7510:
  5591  02F7' 0B96'              	decfsz	??___flmul+4,f
  5592  02F8' 2800'              	goto	u7515
  5593  02F9' 0815'              	movf	??___flmul+3,w
  5594  02FA' 00A1'              	movwf	___flmul@prod+3
  5595  02FB' 0814'              	movf	??___flmul+2,w
  5596  02FC' 00A0'              	movwf	___flmul@prod+2
  5597  02FD' 0813'              	movf	??___flmul+1,w
  5598  02FE' 009F'              	movwf	___flmul@prod+1
  5599  02FF' 0812'              	movf	??___flmul,w
  5600  0300' 009E'              	movwf	___flmul@prod
  5601  0301'                    l4465:
  5602  0301' 3001               	movlw	1
  5603  0302' 07A2'              	addwf	___flmul@temp,f
  5604  0303' 1803               	skipnc
  5605  0304' 0AA3'              	incf	___flmul@temp+1,f
  5606  0305' 3000               	movlw	0
  5607  0306' 07A3'              	addwf	___flmul@temp+1,f
  5608  0307'                    l4467:
  5609  0307' 0823'              	movf	___flmul@temp+1,w
  5610  0308' 3A80               	xorlw	128
  5611  0309' 00FF               	movwf	btemp+1
  5612  030A' 3080               	movlw	128
  5613  030B' 027F               	subwf	btemp+1,w
  5614  030C' 1D03               	skipz
  5615  030D' 2800'              	goto	u7525
  5616  030E' 30FF               	movlw	255
  5617  030F' 0222'              	subwf	___flmul@temp,w
  5618  0310'                    u7525:
  5619  0310' 1C03               	skipc
  5620  0311' 2800'              	goto	u7521
  5621  0312' 2800'              	goto	u7520
  5622  0313'                    u7521:
  5623  0313' 2800'              	goto	l4471
  5624  0314'                    u7520:
  5625  0314'                    l4469:
  5626  0314' 307F               	movlw	127
  5627  0315' 1283               	bcf	3,5	;RP0=0, select bank0
  5628  0316' 1303               	bcf	3,6	;RP1=0, select bank0
  5629  0317' 00A1'              	movwf	___flmul@prod+3
  5630  0318' 3080               	movlw	128
  5631  0319' 00A0'              	movwf	___flmul@prod+2
  5632  031A' 3000               	movlw	0
  5633  031B' 009F'              	movwf	___flmul@prod+1
  5634  031C' 3000               	movlw	0
  5635  031D' 009E'              	movwf	___flmul@prod
  5636  031E' 2800'              	goto	l899
  5637  031F'                    l4471:
  5638  031F' 1283               	bcf	3,5	;RP0=0, select bank0
  5639  0320' 1303               	bcf	3,6	;RP1=0, select bank0
  5640  0321' 0823'              	movf	___flmul@temp+1,w
  5641  0322' 3A80               	xorlw	128
  5642  0323' 00FF               	movwf	btemp+1
  5643  0324' 3080               	movlw	128
  5644  0325' 027F               	subwf	btemp+1,w
  5645  0326' 1D03               	skipz
  5646  0327' 2800'              	goto	u7535
  5647  0328' 3001               	movlw	1
  5648  0329' 0222'              	subwf	___flmul@temp,w
  5649  032A'                    u7535:
  5650  032A' 1803               	skipnc
  5651  032B' 2800'              	goto	u7531
  5652  032C' 2800'              	goto	u7530
  5653  032D'                    u7531:
  5654  032D' 2800'              	goto	l4477
  5655  032E'                    u7530:
  5656  032E'                    l4473:
  5657  032E' 3000               	movlw	0
  5658  032F' 1283               	bcf	3,5	;RP0=0, select bank0
  5659  0330' 1303               	bcf	3,6	;RP1=0, select bank0
  5660  0331' 00A1'              	movwf	___flmul@prod+3
  5661  0332' 3000               	movlw	0
  5662  0333' 00A0'              	movwf	___flmul@prod+2
  5663  0334' 3000               	movlw	0
  5664  0335' 009F'              	movwf	___flmul@prod+1
  5665  0336' 3000               	movlw	0
  5666  0337' 009E'              	movwf	___flmul@prod
  5667  0338'                    l4475:
  5668  0338' 0197'              	clrf	___flmul@sign
  5669  0339' 2800'              	goto	l899
  5670  033A'                    l4477:
  5671  033A' 1283               	bcf	3,5	;RP0=0, select bank0
  5672  033B' 1303               	bcf	3,6	;RP1=0, select bank0
  5673  033C' 0822'              	movf	___flmul@temp,w
  5674  033D' 0092'              	movwf	??___flmul
  5675  033E' 0812'              	movf	??___flmul,w
  5676  033F' 009D'              	movwf	___flmul@bexp
  5677  0340' 30FF               	movlw	255
  5678  0341' 059E'              	andwf	___flmul@prod,f
  5679  0342' 30FF               	movlw	255
  5680  0343' 059F'              	andwf	___flmul@prod+1,f
  5681  0344' 307F               	movlw	127
  5682  0345' 05A0'              	andwf	___flmul@prod+2,f
  5683  0346' 3000               	movlw	0
  5684  0347' 05A1'              	andwf	___flmul@prod+3,f
  5685  0348'                    l4479:
  5686  0348' 1C1D'              	btfss	___flmul@bexp,0
  5687  0349' 2800'              	goto	u7541
  5688  034A' 2800'              	goto	u7540
  5689  034B'                    u7541:
  5690  034B' 2800'              	goto	l4483
  5691  034C'                    u7540:
  5692  034C'                    l4481:
  5693  034C' 17A0'              	bsf	___flmul@prod+2,7
  5694  034D'                    l4483:
  5695  034D' 081D'              	movf	___flmul@bexp,w
  5696  034E' 0092'              	movwf	??___flmul
  5697  034F' 1003               	clrc
  5698  0350' 0C12'              	rrf	??___flmul,w
  5699  0351' 0093'              	movwf	??___flmul+1
  5700  0352' 0813'              	movf	??___flmul+1,w
  5701  0353' 00A1'              	movwf	___flmul@prod+3
  5702  0354'                    l899:
  5703  0354' 0817'              	movf	___flmul@sign,w
  5704  0355' 0092'              	movwf	??___flmul
  5705  0356' 0812'              	movf	??___flmul,w
  5706  0357' 04A1'              	iorwf	___flmul@prod+3,f
  5707  0358'                    l4485:
  5708  0358' 0821'              	movf	___flmul@prod+3,w
  5709  0359' 008D'              	movwf	?___flmul+3
  5710  035A' 0820'              	movf	___flmul@prod+2,w
  5711  035B' 008C'              	movwf	?___flmul+2
  5712  035C' 081F'              	movf	___flmul@prod+1,w
  5713  035D' 008B'              	movwf	?___flmul+1
  5714  035E' 081E'              	movf	___flmul@prod,w
  5715  035F' 008A'              	movwf	?___flmul
  5716  0360'                    l887:
  5717  0360' 0008               	return
  5718  0361'                    __end_of___flmul:
  5719                           
  5720                           	psect	text11
  5721  0000'                    __ptext11:	
  5722 ;; *************** function __Umul8_16 *****************
  5723 ;; Defined at:
  5724 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  multiplier      1    wreg     unsigned char 
  5727 ;;  multiplicand    1    3[COMMON] unsigned char 
  5728 ;; Auto vars:     Size  Location     Type
  5729 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5730 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5731 ;;  product         2    0[BANK0 ] unsigned int 
  5732 ;; Return value:  Size  Location     Type
  5733 ;;                  2    3[COMMON] unsigned int 
  5734 ;; Registers used:
  5735 ;;		wreg, status,2, status,0
  5736 ;; Tracked objects:
  5737 ;;		On entry : 0/0
  5738 ;;		On exit  : 0/0
  5739 ;;		Unchanged: 0/0
  5740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5741 ;;      Params:         2       0       0       0       0
  5742 ;;      Locals:         0       5       0       0       0
  5743 ;;      Temps:          2       0       0       0       0
  5744 ;;      Totals:         4       5       0       0       0
  5745 ;;Total ram usage:        9 bytes
  5746 ;; Hardware stack levels used:    1
  5747 ;; Hardware stack levels required when called:    2
  5748 ;; This function calls:
  5749 ;;		Nothing
  5750 ;; This function is called by:
  5751 ;;		___flmul
  5752 ;; This function uses a non-reentrant model
  5753 ;;
  5754                           
  5755                           
  5756                           ;psect for function __Umul8_16
  5757  0000'                    __Umul8_16:
  5758                           
  5759                           ;incstack = 0
  5760                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5761                           ;__Umul8_16@multiplier stored from wreg
  5762  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5763  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5764  0002' 0084'              	movwf	__Umul8_16@multiplier
  5765  0003'                    l3993:
  5766  0003' 0180'              	clrf	__Umul8_16@product
  5767  0004' 0181'              	clrf	__Umul8_16@product+1
  5768  0005'                    l3995:
  5769  0005' 0803'              	movf	__Umul8_16@multiplicand,w
  5770  0006' 0085'              	movwf	??__Umul8_16
  5771  0007' 0186'              	clrf	??__Umul8_16+1
  5772  0008' 0805'              	movf	??__Umul8_16,w
  5773  0009' 0082'              	movwf	__Umul8_16@word_mpld
  5774  000A' 0806'              	movf	??__Umul8_16+1,w
  5775  000B' 0083'              	movwf	__Umul8_16@word_mpld+1
  5776  000C'                    l3997:
  5777  000C' 1C04'              	btfss	__Umul8_16@multiplier,0
  5778  000D' 2800'              	goto	u6291
  5779  000E' 2800'              	goto	u6290
  5780  000F'                    u6291:
  5781  000F' 2800'              	goto	l906
  5782  0010'                    u6290:
  5783  0010'                    l3999:
  5784  0010' 0802'              	movf	__Umul8_16@word_mpld,w
  5785  0011' 0780'              	addwf	__Umul8_16@product,f
  5786  0012' 1803               	skipnc
  5787  0013' 0A81'              	incf	__Umul8_16@product+1,f
  5788  0014' 0803'              	movf	__Umul8_16@word_mpld+1,w
  5789  0015' 0781'              	addwf	__Umul8_16@product+1,f
  5790  0016'                    l906:
  5791  0016' 3001               	movlw	1
  5792  0017'                    u6305:
  5793  0017' 1003               	clrc
  5794  0018' 0D82'              	rlf	__Umul8_16@word_mpld,f
  5795  0019' 0D83'              	rlf	__Umul8_16@word_mpld+1,f
  5796  001A' 3EFF               	addlw	-1
  5797  001B' 1D03               	skipz
  5798  001C' 2800'              	goto	u6305
  5799  001D' 1003               	clrc
  5800  001E' 0C84'              	rrf	__Umul8_16@multiplier,f
  5801  001F'                    l4001:
  5802  001F' 0804'              	movf	__Umul8_16@multiplier,w
  5803  0020' 1D03               	btfss	3,2
  5804  0021' 2800'              	goto	u6311
  5805  0022' 2800'              	goto	u6310
  5806  0023'                    u6311:
  5807  0023' 2800'              	goto	l3997
  5808  0024'                    u6310:
  5809  0024'                    l4003:
  5810  0024' 0801'              	movf	__Umul8_16@product+1,w
  5811  0025' 0084'              	movwf	?__Umul8_16+1
  5812  0026' 0800'              	movf	__Umul8_16@product,w
  5813  0027' 0083'              	movwf	?__Umul8_16
  5814  0028'                    l908:
  5815  0028' 0008               	return
  5816  0029'                    __end_of__Umul8_16:
  5817                           
  5818                           	psect	text12
  5819  0000'                    __ptext12:	
  5820 ;; *************** function __tdiv_to_l_ *****************
  5821 ;; Defined at:
  5822 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  f1              4    0[BANK0 ] float 
  5825 ;;  f2              4    4[BANK0 ] float 
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;  quot            4    8[BANK0 ] unsigned long 
  5828 ;;  exp1            1   13[BANK0 ] unsigned char 
  5829 ;;  cntr            1   12[BANK0 ] unsigned char 
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  4    0[BANK0 ] unsigned long 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2, status,0
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5839 ;;      Params:         0       8       0       0       0
  5840 ;;      Locals:         0       6       0       0       0
  5841 ;;      Temps:          4       0       0       0       0
  5842 ;;      Totals:         4      14       0       0       0
  5843 ;;Total ram usage:       18 bytes
  5844 ;; Hardware stack levels used:    1
  5845 ;; Hardware stack levels required when called:    2
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_sprintf
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           
  5854                           ;psect for function __tdiv_to_l_
  5855  0000'                    __tdiv_to_l_:
  5856  0000'                    l4583:	
  5857                           ;incstack = 0
  5858                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5859                           
  5860  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  5861  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  5862  0002' 0800'              	movf	__tdiv_to_l_@f1,w
  5863  0003' 0083'              	movwf	??__tdiv_to_l_
  5864  0004' 0801'              	movf	__tdiv_to_l_@f1+1,w
  5865  0005' 0084'              	movwf	??__tdiv_to_l_+1
  5866  0006' 0802'              	movf	__tdiv_to_l_@f1+2,w
  5867  0007' 0085'              	movwf	??__tdiv_to_l_+2
  5868  0008' 1003               	clrc
  5869  0009' 0D04'              	rlf	??__tdiv_to_l_+1,w
  5870  000A' 0D05'              	rlf	??__tdiv_to_l_+2,w
  5871  000B' 0086'              	movwf	??__tdiv_to_l_+3
  5872  000C' 0806'              	movf	??__tdiv_to_l_+3,w
  5873  000D' 008D'              	movwf	__tdiv_to_l_@exp1
  5874  000E' 080D'              	movf	__tdiv_to_l_@exp1,w
  5875  000F' 1D03               	btfss	3,2
  5876  0010' 2800'              	goto	u7821
  5877  0011' 2800'              	goto	u7820
  5878  0012'                    u7821:
  5879  0012' 2800'              	goto	l4589
  5880  0013'                    u7820:
  5881  0013'                    l4585:
  5882  0013' 3000               	movlw	0
  5883  0014' 0083'              	movwf	?__tdiv_to_l_+3
  5884  0015' 3000               	movlw	0
  5885  0016' 0082'              	movwf	?__tdiv_to_l_+2
  5886  0017' 3000               	movlw	0
  5887  0018' 0081'              	movwf	?__tdiv_to_l_+1
  5888  0019' 3000               	movlw	0
  5889  001A' 0080'              	movwf	?__tdiv_to_l_
  5890  001B' 2800'              	goto	l681
  5891  001C'                    l4589:
  5892  001C' 0804'              	movf	__tdiv_to_l_@f2,w
  5893  001D' 0083'              	movwf	??__tdiv_to_l_
  5894  001E' 0805'              	movf	__tdiv_to_l_@f2+1,w
  5895  001F' 0084'              	movwf	??__tdiv_to_l_+1
  5896  0020' 0806'              	movf	__tdiv_to_l_@f2+2,w
  5897  0021' 0085'              	movwf	??__tdiv_to_l_+2
  5898  0022' 1003               	clrc
  5899  0023' 0D04'              	rlf	??__tdiv_to_l_+1,w
  5900  0024' 0D05'              	rlf	??__tdiv_to_l_+2,w
  5901  0025' 0086'              	movwf	??__tdiv_to_l_+3
  5902  0026' 0806'              	movf	??__tdiv_to_l_+3,w
  5903  0027' 008C'              	movwf	__tdiv_to_l_@cntr
  5904  0028' 080C'              	movf	__tdiv_to_l_@cntr,w
  5905  0029' 1D03               	btfss	3,2
  5906  002A' 2800'              	goto	u7831
  5907  002B' 2800'              	goto	u7830
  5908  002C'                    u7831:
  5909  002C' 2800'              	goto	l682
  5910  002D'                    u7830:
  5911  002D' 2800'              	goto	l4585
  5912  002E'                    l682:
  5913  002E' 1781'              	bsf	__tdiv_to_l_@f1+1,7
  5914  002F'                    l4595:
  5915  002F' 30FF               	movlw	255
  5916  0030' 0580'              	andwf	__tdiv_to_l_@f1,f
  5917  0031' 30FF               	movlw	255
  5918  0032' 0581'              	andwf	__tdiv_to_l_@f1+1,f
  5919  0033' 3000               	movlw	0
  5920  0034' 0582'              	andwf	__tdiv_to_l_@f1+2,f
  5921  0035'                    l4597:
  5922  0035' 1785'              	bsf	__tdiv_to_l_@f2+1,7
  5923  0036' 30FF               	movlw	255
  5924  0037' 0584'              	andwf	__tdiv_to_l_@f2,f
  5925  0038' 30FF               	movlw	255
  5926  0039' 0585'              	andwf	__tdiv_to_l_@f2+1,f
  5927  003A' 3000               	movlw	0
  5928  003B' 0586'              	andwf	__tdiv_to_l_@f2+2,f
  5929  003C' 3000               	movlw	0
  5930  003D' 008B'              	movwf	__tdiv_to_l_@quot+3
  5931  003E' 3000               	movlw	0
  5932  003F' 008A'              	movwf	__tdiv_to_l_@quot+2
  5933  0040' 3000               	movlw	0
  5934  0041' 0089'              	movwf	__tdiv_to_l_@quot+1
  5935  0042' 3000               	movlw	0
  5936  0043' 0088'              	movwf	__tdiv_to_l_@quot
  5937  0044'                    l4599:
  5938  0044' 307F               	movlw	127
  5939  0045' 028D'              	subwf	__tdiv_to_l_@exp1,f
  5940  0046'                    l4601:
  5941  0046' 3098               	movlw	152
  5942  0047' 070C'              	addwf	__tdiv_to_l_@cntr,w
  5943  0048' 0083'              	movwf	??__tdiv_to_l_
  5944  0049' 0803'              	movf	??__tdiv_to_l_,w
  5945  004A' 028D'              	subwf	__tdiv_to_l_@exp1,f
  5946  004B' 3018               	movlw	24
  5947  004C' 0083'              	movwf	??__tdiv_to_l_
  5948  004D' 0803'              	movf	??__tdiv_to_l_,w
  5949  004E' 008C'              	movwf	__tdiv_to_l_@cntr
  5950  004F'                    l4603:
  5951  004F' 3001               	movlw	1
  5952  0050' 0083'              	movwf	??__tdiv_to_l_
  5953  0051'                    u7845:
  5954  0051' 1003               	clrc
  5955  0052' 0D88'              	rlf	__tdiv_to_l_@quot,f
  5956  0053' 0D89'              	rlf	__tdiv_to_l_@quot+1,f
  5957  0054' 0D8A'              	rlf	__tdiv_to_l_@quot+2,f
  5958  0055' 0D8B'              	rlf	__tdiv_to_l_@quot+3,f
  5959  0056' 0B83'              	decfsz	??__tdiv_to_l_,f
  5960  0057' 2800'              	goto	u7845
  5961  0058'                    l4605:
  5962  0058' 0806'              	movf	__tdiv_to_l_@f2+2,w
  5963  0059' 0202'              	subwf	__tdiv_to_l_@f1+2,w
  5964  005A' 1D03               	skipz
  5965  005B' 2800'              	goto	u7855
  5966  005C' 0805'              	movf	__tdiv_to_l_@f2+1,w
  5967  005D' 0201'              	subwf	__tdiv_to_l_@f1+1,w
  5968  005E' 1D03               	skipz
  5969  005F' 2800'              	goto	u7855
  5970  0060' 0804'              	movf	__tdiv_to_l_@f2,w
  5971  0061' 0200'              	subwf	__tdiv_to_l_@f1,w
  5972  0062'                    u7855:
  5973  0062' 1C03               	skipc
  5974  0063' 2800'              	goto	u7851
  5975  0064' 2800'              	goto	u7850
  5976  0065'                    u7851:
  5977  0065' 2800'              	goto	l4611
  5978  0066'                    u7850:
  5979  0066'                    l4607:
  5980  0066' 0804'              	movf	__tdiv_to_l_@f2,w
  5981  0067' 0280'              	subwf	__tdiv_to_l_@f1,f
  5982  0068' 0805'              	movf	__tdiv_to_l_@f2+1,w
  5983  0069' 1C03               	skipc
  5984  006A' 0F05'              	incfsz	__tdiv_to_l_@f2+1,w
  5985  006B' 0281'              	subwf	__tdiv_to_l_@f1+1,f
  5986  006C' 0806'              	movf	__tdiv_to_l_@f2+2,w
  5987  006D' 1C03               	skipc
  5988  006E' 0A06'              	incf	__tdiv_to_l_@f2+2,w
  5989  006F' 0282'              	subwf	__tdiv_to_l_@f1+2,f
  5990  0070'                    l4609:
  5991  0070' 1408'              	bsf	__tdiv_to_l_@quot,0
  5992  0071'                    l4611:
  5993  0071' 3001               	movlw	1
  5994  0072'                    u7865:
  5995  0072' 1003               	clrc
  5996  0073' 0D80'              	rlf	__tdiv_to_l_@f1,f
  5997  0074' 0D81'              	rlf	__tdiv_to_l_@f1+1,f
  5998  0075' 0D82'              	rlf	__tdiv_to_l_@f1+2,f
  5999  0076' 3EFF               	addlw	-1
  6000  0077' 1D03               	skipz
  6001  0078' 2800'              	goto	u7865
  6002  0079'                    l4613:
  6003  0079' 3001               	movlw	1
  6004  007A' 028C'              	subwf	__tdiv_to_l_@cntr,f
  6005  007B' 1D03               	btfss	3,2
  6006  007C' 2800'              	goto	u7871
  6007  007D' 2800'              	goto	u7870
  6008  007E'                    u7871:
  6009  007E' 2800'              	goto	l4603
  6010  007F'                    u7870:
  6011  007F'                    l685:
  6012  007F' 1F8D'              	btfss	__tdiv_to_l_@exp1,7
  6013  0080' 2800'              	goto	u7881
  6014  0081' 2800'              	goto	u7880
  6015  0082'                    u7881:
  6016  0082' 2800'              	goto	l4623
  6017  0083'                    u7880:
  6018  0083'                    l4615:
  6019  0083' 080D'              	movf	__tdiv_to_l_@exp1,w
  6020  0084' 3A80               	xorlw	128
  6021  0085' 3E97               	addlw	151
  6022  0086' 1803               	skipnc
  6023  0087' 2800'              	goto	u7891
  6024  0088' 2800'              	goto	u7890
  6025  0089'                    u7891:
  6026  0089' 2800'              	goto	l4621
  6027  008A'                    u7890:
  6028  008A' 2800'              	goto	l4585
  6029  008B'                    l4621:
  6030  008B' 3001               	movlw	1
  6031  008C'                    u7905:
  6032  008C' 1003               	clrc
  6033  008D' 0C8B'              	rrf	__tdiv_to_l_@quot+3,f
  6034  008E' 0C8A'              	rrf	__tdiv_to_l_@quot+2,f
  6035  008F' 0C89'              	rrf	__tdiv_to_l_@quot+1,f
  6036  0090' 0C88'              	rrf	__tdiv_to_l_@quot,f
  6037  0091' 3EFF               	addlw	-1
  6038  0092' 1D03               	skipz
  6039  0093' 2800'              	goto	u7905
  6040  0094' 3001               	movlw	1
  6041  0095' 0083'              	movwf	??__tdiv_to_l_
  6042  0096' 0803'              	movf	??__tdiv_to_l_,w
  6043  0097' 078D'              	addwf	__tdiv_to_l_@exp1,f
  6044  0098' 1D03               	btfss	3,2
  6045  0099' 2800'              	goto	u7911
  6046  009A' 2800'              	goto	u7910
  6047  009B'                    u7911:
  6048  009B' 2800'              	goto	l4621
  6049  009C'                    u7910:
  6050  009C' 2800'              	goto	l4631
  6051  009D'                    l4623:
  6052  009D' 3018               	movlw	24
  6053  009E' 020D'              	subwf	__tdiv_to_l_@exp1,w
  6054  009F' 1C03               	skipc
  6055  00A0' 2800'              	goto	u7921
  6056  00A1' 2800'              	goto	u7920
  6057  00A2'                    u7921:
  6058  00A2' 2800'              	goto	l692
  6059  00A3'                    u7920:
  6060  00A3' 2800'              	goto	l4585
  6061  00A4'                    l4629:
  6062  00A4' 3001               	movlw	1
  6063  00A5' 0083'              	movwf	??__tdiv_to_l_
  6064  00A6'                    u7935:
  6065  00A6' 1003               	clrc
  6066  00A7' 0D88'              	rlf	__tdiv_to_l_@quot,f
  6067  00A8' 0D89'              	rlf	__tdiv_to_l_@quot+1,f
  6068  00A9' 0D8A'              	rlf	__tdiv_to_l_@quot+2,f
  6069  00AA' 0D8B'              	rlf	__tdiv_to_l_@quot+3,f
  6070  00AB' 0B83'              	decfsz	??__tdiv_to_l_,f
  6071  00AC' 2800'              	goto	u7935
  6072  00AD' 3001               	movlw	1
  6073  00AE' 028D'              	subwf	__tdiv_to_l_@exp1,f
  6074  00AF'                    l692:
  6075  00AF' 080D'              	movf	__tdiv_to_l_@exp1,w
  6076  00B0' 1D03               	btfss	3,2
  6077  00B1' 2800'              	goto	u7941
  6078  00B2' 2800'              	goto	u7940
  6079  00B3'                    u7941:
  6080  00B3' 2800'              	goto	l4629
  6081  00B4'                    u7940:
  6082  00B4'                    l4631:
  6083  00B4' 080B'              	movf	__tdiv_to_l_@quot+3,w
  6084  00B5' 0083'              	movwf	?__tdiv_to_l_+3
  6085  00B6' 080A'              	movf	__tdiv_to_l_@quot+2,w
  6086  00B7' 0082'              	movwf	?__tdiv_to_l_+2
  6087  00B8' 0809'              	movf	__tdiv_to_l_@quot+1,w
  6088  00B9' 0081'              	movwf	?__tdiv_to_l_+1
  6089  00BA' 0808'              	movf	__tdiv_to_l_@quot,w
  6090  00BB' 0080'              	movwf	?__tdiv_to_l_
  6091  00BC'                    l681:
  6092  00BC' 0008               	return
  6093  00BD'                    __end_of__tdiv_to_l_:
  6094                           
  6095                           	psect	text13
  6096  0000'                    __ptext13:	
  6097 ;; *************** function __div_to_l_ *****************
  6098 ;; Defined at:
  6099 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;  f1              4    0[BANK0 ] unsigned long 
  6102 ;;  f2              4    4[BANK0 ] unsigned long 
  6103 ;; Auto vars:     Size  Location     Type
  6104 ;;  quot            4    4[COMMON] unsigned long 
  6105 ;;  exp1            1    9[COMMON] unsigned char 
  6106 ;;  cntr            1    8[COMMON] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  4    0[BANK0 ] unsigned long 
  6109 ;; Registers used:
  6110 ;;		wreg, status,2, status,0
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6116 ;;      Params:         0       8       0       0       0
  6117 ;;      Locals:         6       0       0       0       0
  6118 ;;      Temps:          1       0       0       0       0
  6119 ;;      Totals:         7       8       0       0       0
  6120 ;;Total ram usage:       15 bytes
  6121 ;; Hardware stack levels used:    1
  6122 ;; Hardware stack levels required when called:    2
  6123 ;; This function calls:
  6124 ;;		Nothing
  6125 ;; This function is called by:
  6126 ;;		_sprintf
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           
  6131                           ;psect for function __div_to_l_
  6132  0000'                    __div_to_l_:
  6133  0000'                    l4635:	
  6134                           ;incstack = 0
  6135                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6136                           
  6137  0000' 1003               	clrc
  6138  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  6139  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  6140  0003' 0D02'              	rlf	__div_to_l_@f1+2,w
  6141  0004' 0D03'              	rlf	__div_to_l_@f1+3,w
  6142  0005' 0083'              	movwf	??__div_to_l_
  6143  0006' 0803'              	movf	??__div_to_l_,w
  6144  0007' 0089'              	movwf	__div_to_l_@exp1
  6145  0008' 0809'              	movf	__div_to_l_@exp1,w
  6146  0009' 1D03               	btfss	3,2
  6147  000A' 2800'              	goto	u7951
  6148  000B' 2800'              	goto	u7950
  6149  000C'                    u7951:
  6150  000C' 2800'              	goto	l4641
  6151  000D'                    u7950:
  6152  000D'                    l4637:
  6153  000D' 3000               	movlw	0
  6154  000E' 0083'              	movwf	?__div_to_l_+3
  6155  000F' 3000               	movlw	0
  6156  0010' 0082'              	movwf	?__div_to_l_+2
  6157  0011' 3000               	movlw	0
  6158  0012' 0081'              	movwf	?__div_to_l_+1
  6159  0013' 3000               	movlw	0
  6160  0014' 0080'              	movwf	?__div_to_l_
  6161  0015' 2800'              	goto	l634
  6162  0016'                    l4641:
  6163  0016' 1003               	clrc
  6164  0017' 0D06'              	rlf	__div_to_l_@f2+2,w
  6165  0018' 0D07'              	rlf	__div_to_l_@f2+3,w
  6166  0019' 0083'              	movwf	??__div_to_l_
  6167  001A' 0803'              	movf	??__div_to_l_,w
  6168  001B' 0088'              	movwf	__div_to_l_@cntr
  6169  001C' 0808'              	movf	__div_to_l_@cntr,w
  6170  001D' 1D03               	btfss	3,2
  6171  001E' 2800'              	goto	u7961
  6172  001F' 2800'              	goto	u7960
  6173  0020'                    u7961:
  6174  0020' 2800'              	goto	l635
  6175  0021'                    u7960:
  6176  0021' 2800'              	goto	l4637
  6177  0022'                    l635:
  6178  0022' 1782'              	bsf	__div_to_l_@f1+2,7
  6179  0023'                    l4647:
  6180  0023' 30FF               	movlw	255
  6181  0024' 0580'              	andwf	__div_to_l_@f1,f
  6182  0025' 30FF               	movlw	255
  6183  0026' 0581'              	andwf	__div_to_l_@f1+1,f
  6184  0027' 30FF               	movlw	255
  6185  0028' 0582'              	andwf	__div_to_l_@f1+2,f
  6186  0029' 3000               	movlw	0
  6187  002A' 0583'              	andwf	__div_to_l_@f1+3,f
  6188  002B'                    l4649:
  6189  002B' 1786'              	bsf	__div_to_l_@f2+2,7
  6190  002C' 30FF               	movlw	255
  6191  002D' 0584'              	andwf	__div_to_l_@f2,f
  6192  002E' 30FF               	movlw	255
  6193  002F' 0585'              	andwf	__div_to_l_@f2+1,f
  6194  0030' 30FF               	movlw	255
  6195  0031' 0586'              	andwf	__div_to_l_@f2+2,f
  6196  0032' 3000               	movlw	0
  6197  0033' 0587'              	andwf	__div_to_l_@f2+3,f
  6198  0034' 3000               	movlw	0
  6199  0035' 0087'              	movwf	__div_to_l_@quot+3
  6200  0036' 3000               	movlw	0
  6201  0037' 0086'              	movwf	__div_to_l_@quot+2
  6202  0038' 3000               	movlw	0
  6203  0039' 0085'              	movwf	__div_to_l_@quot+1
  6204  003A' 3000               	movlw	0
  6205  003B' 0084'              	movwf	__div_to_l_@quot
  6206  003C'                    l4651:
  6207  003C' 307F               	movlw	127
  6208  003D' 0289'              	subwf	__div_to_l_@exp1,f
  6209  003E'                    l4653:
  6210  003E' 30A0               	movlw	160
  6211  003F' 0708'              	addwf	__div_to_l_@cntr,w
  6212  0040' 0083'              	movwf	??__div_to_l_
  6213  0041' 0803'              	movf	??__div_to_l_,w
  6214  0042' 0289'              	subwf	__div_to_l_@exp1,f
  6215  0043' 3020               	movlw	32
  6216  0044' 0083'              	movwf	??__div_to_l_
  6217  0045' 0803'              	movf	??__div_to_l_,w
  6218  0046' 0088'              	movwf	__div_to_l_@cntr
  6219  0047'                    l4655:
  6220  0047' 3001               	movlw	1
  6221  0048' 0083'              	movwf	??__div_to_l_
  6222  0049'                    u7975:
  6223  0049' 1003               	clrc
  6224  004A' 0D84'              	rlf	__div_to_l_@quot,f
  6225  004B' 0D85'              	rlf	__div_to_l_@quot+1,f
  6226  004C' 0D86'              	rlf	__div_to_l_@quot+2,f
  6227  004D' 0D87'              	rlf	__div_to_l_@quot+3,f
  6228  004E' 0B83'              	decfsz	??__div_to_l_,f
  6229  004F' 2800'              	goto	u7975
  6230  0050'                    l4657:
  6231  0050' 0807'              	movf	__div_to_l_@f2+3,w
  6232  0051' 0203'              	subwf	__div_to_l_@f1+3,w
  6233  0052' 1D03               	skipz
  6234  0053' 2800'              	goto	u7985
  6235  0054' 0806'              	movf	__div_to_l_@f2+2,w
  6236  0055' 0202'              	subwf	__div_to_l_@f1+2,w
  6237  0056' 1D03               	skipz
  6238  0057' 2800'              	goto	u7985
  6239  0058' 0805'              	movf	__div_to_l_@f2+1,w
  6240  0059' 0201'              	subwf	__div_to_l_@f1+1,w
  6241  005A' 1D03               	skipz
  6242  005B' 2800'              	goto	u7985
  6243  005C' 0804'              	movf	__div_to_l_@f2,w
  6244  005D' 0200'              	subwf	__div_to_l_@f1,w
  6245  005E'                    u7985:
  6246  005E' 1C03               	skipc
  6247  005F' 2800'              	goto	u7981
  6248  0060' 2800'              	goto	u7980
  6249  0061'                    u7981:
  6250  0061' 2800'              	goto	l4663
  6251  0062'                    u7980:
  6252  0062'                    l4659:
  6253  0062' 0804'              	movf	__div_to_l_@f2,w
  6254  0063' 0280'              	subwf	__div_to_l_@f1,f
  6255  0064' 0805'              	movf	__div_to_l_@f2+1,w
  6256  0065' 1C03               	skipc
  6257  0066' 0F05'              	incfsz	__div_to_l_@f2+1,w
  6258  0067' 0281'              	subwf	__div_to_l_@f1+1,f
  6259  0068' 0806'              	movf	__div_to_l_@f2+2,w
  6260  0069' 1C03               	skipc
  6261  006A' 0F06'              	incfsz	__div_to_l_@f2+2,w
  6262  006B' 0282'              	subwf	__div_to_l_@f1+2,f
  6263  006C' 0807'              	movf	__div_to_l_@f2+3,w
  6264  006D' 1C03               	skipc
  6265  006E' 0F07'              	incfsz	__div_to_l_@f2+3,w
  6266  006F' 0283'              	subwf	__div_to_l_@f1+3,f
  6267  0070'                    l4661:
  6268  0070' 1404'              	bsf	__div_to_l_@quot,0
  6269  0071'                    l4663:
  6270  0071' 3001               	movlw	1
  6271  0072' 0083'              	movwf	??__div_to_l_
  6272  0073'                    u7995:
  6273  0073' 1003               	clrc
  6274  0074' 0D80'              	rlf	__div_to_l_@f1,f
  6275  0075' 0D81'              	rlf	__div_to_l_@f1+1,f
  6276  0076' 0D82'              	rlf	__div_to_l_@f1+2,f
  6277  0077' 0D83'              	rlf	__div_to_l_@f1+3,f
  6278  0078' 0B83'              	decfsz	??__div_to_l_,f
  6279  0079' 2800'              	goto	u7995
  6280  007A'                    l4665:
  6281  007A' 3001               	movlw	1
  6282  007B' 0288'              	subwf	__div_to_l_@cntr,f
  6283  007C' 1D03               	btfss	3,2
  6284  007D' 2800'              	goto	u8001
  6285  007E' 2800'              	goto	u8000
  6286  007F'                    u8001:
  6287  007F' 2800'              	goto	l4655
  6288  0080'                    u8000:
  6289  0080'                    l638:
  6290  0080' 1F89'              	btfss	__div_to_l_@exp1,7
  6291  0081' 2800'              	goto	u8011
  6292  0082' 2800'              	goto	u8010
  6293  0083'                    u8011:
  6294  0083' 2800'              	goto	l4675
  6295  0084'                    u8010:
  6296  0084'                    l4667:
  6297  0084' 0809'              	movf	__div_to_l_@exp1,w
  6298  0085' 3A80               	xorlw	128
  6299  0086' 3E9F               	addlw	159
  6300  0087' 1803               	skipnc
  6301  0088' 2800'              	goto	u8021
  6302  0089' 2800'              	goto	u8020
  6303  008A'                    u8021:
  6304  008A' 2800'              	goto	l4673
  6305  008B'                    u8020:
  6306  008B' 2800'              	goto	l4637
  6307  008C'                    l4673:
  6308  008C' 3001               	movlw	1
  6309  008D'                    u8035:
  6310  008D' 1003               	clrc
  6311  008E' 0C87'              	rrf	__div_to_l_@quot+3,f
  6312  008F' 0C86'              	rrf	__div_to_l_@quot+2,f
  6313  0090' 0C85'              	rrf	__div_to_l_@quot+1,f
  6314  0091' 0C84'              	rrf	__div_to_l_@quot,f
  6315  0092' 3EFF               	addlw	-1
  6316  0093' 1D03               	skipz
  6317  0094' 2800'              	goto	u8035
  6318  0095' 3001               	movlw	1
  6319  0096' 0083'              	movwf	??__div_to_l_
  6320  0097' 0803'              	movf	??__div_to_l_,w
  6321  0098' 0789'              	addwf	__div_to_l_@exp1,f
  6322  0099' 1D03               	btfss	3,2
  6323  009A' 2800'              	goto	u8041
  6324  009B' 2800'              	goto	u8040
  6325  009C'                    u8041:
  6326  009C' 2800'              	goto	l4673
  6327  009D'                    u8040:
  6328  009D' 2800'              	goto	l4683
  6329  009E'                    l4675:
  6330  009E' 3020               	movlw	32
  6331  009F' 0209'              	subwf	__div_to_l_@exp1,w
  6332  00A0' 1C03               	skipc
  6333  00A1' 2800'              	goto	u8051
  6334  00A2' 2800'              	goto	u8050
  6335  00A3'                    u8051:
  6336  00A3' 2800'              	goto	l645
  6337  00A4'                    u8050:
  6338  00A4' 2800'              	goto	l4637
  6339  00A5'                    l4681:
  6340  00A5' 3001               	movlw	1
  6341  00A6' 0083'              	movwf	??__div_to_l_
  6342  00A7'                    u8065:
  6343  00A7' 1003               	clrc
  6344  00A8' 0D84'              	rlf	__div_to_l_@quot,f
  6345  00A9' 0D85'              	rlf	__div_to_l_@quot+1,f
  6346  00AA' 0D86'              	rlf	__div_to_l_@quot+2,f
  6347  00AB' 0D87'              	rlf	__div_to_l_@quot+3,f
  6348  00AC' 0B83'              	decfsz	??__div_to_l_,f
  6349  00AD' 2800'              	goto	u8065
  6350  00AE' 3001               	movlw	1
  6351  00AF' 0289'              	subwf	__div_to_l_@exp1,f
  6352  00B0'                    l645:
  6353  00B0' 0809'              	movf	__div_to_l_@exp1,w
  6354  00B1' 1D03               	btfss	3,2
  6355  00B2' 2800'              	goto	u8071
  6356  00B3' 2800'              	goto	u8070
  6357  00B4'                    u8071:
  6358  00B4' 2800'              	goto	l4681
  6359  00B5'                    u8070:
  6360  00B5'                    l4683:
  6361  00B5' 0807'              	movf	__div_to_l_@quot+3,w
  6362  00B6' 1283               	bcf	3,5	;RP0=0, select bank0
  6363  00B7' 1303               	bcf	3,6	;RP1=0, select bank0
  6364  00B8' 0083'              	movwf	?__div_to_l_+3
  6365  00B9' 0806'              	movf	__div_to_l_@quot+2,w
  6366  00BA' 0082'              	movwf	?__div_to_l_+2
  6367  00BB' 0805'              	movf	__div_to_l_@quot+1,w
  6368  00BC' 0081'              	movwf	?__div_to_l_+1
  6369  00BD' 0804'              	movf	__div_to_l_@quot,w
  6370  00BE' 0080'              	movwf	?__div_to_l_
  6371  00BF'                    l634:
  6372  00BF' 0008               	return
  6373  00C0'                    __end_of__div_to_l_:
  6374                           
  6375                           	psect	text14
  6376  0000'                    __ptext14:	
  6377 ;; *************** function ___xxtofl *****************
  6378 ;; Defined at:
  6379 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  6380 ;; Parameters:    Size  Location     Type
  6381 ;;  sign            1    wreg     unsigned char 
  6382 ;;  val             4    3[COMMON] long 
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;  sign            1    4[BANK0 ] unsigned char 
  6385 ;;  arg             4    6[BANK0 ] unsigned long 
  6386 ;;  exp             1    5[BANK0 ] unsigned char 
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  4    3[COMMON] unsigned char 
  6389 ;; Registers used:
  6390 ;;		wreg, status,2, status,0
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6396 ;;      Params:         4       0       0       0       0
  6397 ;;      Locals:         0       6       0       0       0
  6398 ;;      Temps:          0       4       0       0       0
  6399 ;;      Totals:         4      10       0       0       0
  6400 ;;Total ram usage:       14 bytes
  6401 ;; Hardware stack levels used:    1
  6402 ;; Hardware stack levels required when called:    2
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_val
  6407 ;;		_sprintf
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           
  6412                           ;psect for function ___xxtofl
  6413  0000'                    ___xxtofl:
  6414                           
  6415                           ;incstack = 0
  6416                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6417                           ;___xxtofl@sign stored from wreg
  6418  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  6419  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  6420  0002' 0084'              	movwf	___xxtofl@sign
  6421  0003'                    l4867:
  6422  0003' 0804'              	movf	___xxtofl@sign,w
  6423  0004' 1903               	btfsc	3,2
  6424  0005' 2800'              	goto	u8561
  6425  0006' 2800'              	goto	u8560
  6426  0007'                    u8561:
  6427  0007' 2800'              	goto	l4873
  6428  0008'                    u8560:
  6429  0008'                    l4869:
  6430  0008' 1F86'              	btfss	___xxtofl@val+3,7
  6431  0009' 2800'              	goto	u8571
  6432  000A' 2800'              	goto	u8570
  6433  000B'                    u8571:
  6434  000B' 2800'              	goto	l4873
  6435  000C'                    u8570:
  6436  000C'                    l4871:
  6437  000C' 0903'              	comf	___xxtofl@val,w
  6438  000D' 0086'              	movwf	___xxtofl@arg
  6439  000E' 0904'              	comf	___xxtofl@val+1,w
  6440  000F' 0087'              	movwf	___xxtofl@arg+1
  6441  0010' 0905'              	comf	___xxtofl@val+2,w
  6442  0011' 0088'              	movwf	___xxtofl@arg+2
  6443  0012' 0906'              	comf	___xxtofl@val+3,w
  6444  0013' 0089'              	movwf	___xxtofl@arg+3
  6445  0014' 0A86'              	incf	___xxtofl@arg,f
  6446  0015' 1903               	skipnz
  6447  0016' 0A87'              	incf	___xxtofl@arg+1,f
  6448  0017' 1903               	skipnz
  6449  0018' 0A88'              	incf	___xxtofl@arg+2,f
  6450  0019' 1903               	skipnz
  6451  001A' 0A89'              	incf	___xxtofl@arg+3,f
  6452  001B' 2800'              	goto	l931
  6453  001C'                    l4873:
  6454  001C' 0806'              	movf	___xxtofl@val+3,w
  6455  001D' 0089'              	movwf	___xxtofl@arg+3
  6456  001E' 0805'              	movf	___xxtofl@val+2,w
  6457  001F' 0088'              	movwf	___xxtofl@arg+2
  6458  0020' 0804'              	movf	___xxtofl@val+1,w
  6459  0021' 0087'              	movwf	___xxtofl@arg+1
  6460  0022' 0803'              	movf	___xxtofl@val,w
  6461  0023' 0086'              	movwf	___xxtofl@arg
  6462  0024'                    l931:
  6463  0024' 0806'              	movf	___xxtofl@val+3,w
  6464  0025' 0405'              	iorwf	___xxtofl@val+2,w
  6465  0026' 0404'              	iorwf	___xxtofl@val+1,w
  6466  0027' 0403'              	iorwf	___xxtofl@val,w
  6467  0028' 1D03               	skipz
  6468  0029' 2800'              	goto	u8581
  6469  002A' 2800'              	goto	u8580
  6470  002B'                    u8581:
  6471  002B' 2800'              	goto	l4879
  6472  002C'                    u8580:
  6473  002C'                    l4875:
  6474  002C' 3000               	movlw	0
  6475  002D' 0086'              	movwf	?___xxtofl+3
  6476  002E' 3000               	movlw	0
  6477  002F' 0085'              	movwf	?___xxtofl+2
  6478  0030' 3000               	movlw	0
  6479  0031' 0084'              	movwf	?___xxtofl+1
  6480  0032' 3000               	movlw	0
  6481  0033' 0083'              	movwf	?___xxtofl
  6482  0034' 2800'              	goto	l933
  6483  0035'                    l4879:
  6484  0035' 3096               	movlw	150
  6485  0036' 0080'              	movwf	??___xxtofl
  6486  0037' 0800'              	movf	??___xxtofl,w
  6487  0038' 0085'              	movwf	___xxtofl@exp
  6488  0039' 2800'              	goto	l4883
  6489  003A'                    l4881:
  6490  003A' 3001               	movlw	1
  6491  003B' 0080'              	movwf	??___xxtofl
  6492  003C' 0800'              	movf	??___xxtofl,w
  6493  003D' 0785'              	addwf	___xxtofl@exp,f
  6494  003E' 3001               	movlw	1
  6495  003F'                    u8595:
  6496  003F' 1003               	clrc
  6497  0040' 0C89'              	rrf	___xxtofl@arg+3,f
  6498  0041' 0C88'              	rrf	___xxtofl@arg+2,f
  6499  0042' 0C87'              	rrf	___xxtofl@arg+1,f
  6500  0043' 0C86'              	rrf	___xxtofl@arg,f
  6501  0044' 3EFF               	addlw	-1
  6502  0045' 1D03               	skipz
  6503  0046' 2800'              	goto	u8595
  6504  0047'                    l4883:
  6505  0047' 30FE               	movlw	254
  6506  0048' 0509'              	andwf	___xxtofl@arg+3,w
  6507  0049' 1D03               	btfss	3,2
  6508  004A' 2800'              	goto	u8601
  6509  004B' 2800'              	goto	u8600
  6510  004C'                    u8601:
  6511  004C' 2800'              	goto	l4881
  6512  004D'                    u8600:
  6513  004D' 2800'              	goto	l937
  6514  004E'                    l4885:
  6515  004E' 3001               	movlw	1
  6516  004F' 0080'              	movwf	??___xxtofl
  6517  0050' 0800'              	movf	??___xxtofl,w
  6518  0051' 0785'              	addwf	___xxtofl@exp,f
  6519  0052'                    l4887:
  6520  0052' 3001               	movlw	1
  6521  0053' 0786'              	addwf	___xxtofl@arg,f
  6522  0054' 3000               	movlw	0
  6523  0055' 1803               	skipnc
  6524  0056' 3001               	movlw	1
  6525  0057' 0787'              	addwf	___xxtofl@arg+1,f
  6526  0058' 3000               	movlw	0
  6527  0059' 1803               	skipnc
  6528  005A' 3001               	movlw	1
  6529  005B' 0788'              	addwf	___xxtofl@arg+2,f
  6530  005C' 3000               	movlw	0
  6531  005D' 1803               	skipnc
  6532  005E' 3001               	movlw	1
  6533  005F' 0789'              	addwf	___xxtofl@arg+3,f
  6534  0060'                    l4889:
  6535  0060' 3001               	movlw	1
  6536  0061'                    u8615:
  6537  0061' 1003               	clrc
  6538  0062' 0C89'              	rrf	___xxtofl@arg+3,f
  6539  0063' 0C88'              	rrf	___xxtofl@arg+2,f
  6540  0064' 0C87'              	rrf	___xxtofl@arg+1,f
  6541  0065' 0C86'              	rrf	___xxtofl@arg,f
  6542  0066' 3EFF               	addlw	-1
  6543  0067' 1D03               	skipz
  6544  0068' 2800'              	goto	u8615
  6545  0069'                    l937:
  6546  0069' 30FF               	movlw	255
  6547  006A' 0509'              	andwf	___xxtofl@arg+3,w
  6548  006B' 1D03               	btfss	3,2
  6549  006C' 2800'              	goto	u8621
  6550  006D' 2800'              	goto	u8620
  6551  006E'                    u8621:
  6552  006E' 2800'              	goto	l4885
  6553  006F'                    u8620:
  6554  006F' 2800'              	goto	l4893
  6555  0070'                    l4891:
  6556  0070' 3001               	movlw	1
  6557  0071' 0285'              	subwf	___xxtofl@exp,f
  6558  0072' 3001               	movlw	1
  6559  0073' 0080'              	movwf	??___xxtofl
  6560  0074'                    u8635:
  6561  0074' 1003               	clrc
  6562  0075' 0D86'              	rlf	___xxtofl@arg,f
  6563  0076' 0D87'              	rlf	___xxtofl@arg+1,f
  6564  0077' 0D88'              	rlf	___xxtofl@arg+2,f
  6565  0078' 0D89'              	rlf	___xxtofl@arg+3,f
  6566  0079' 0B80'              	decfsz	??___xxtofl,f
  6567  007A' 2800'              	goto	u8635
  6568  007B'                    l4893:
  6569  007B' 1B88'              	btfsc	___xxtofl@arg+2,7
  6570  007C' 2800'              	goto	u8641
  6571  007D' 2800'              	goto	u8640
  6572  007E'                    u8641:
  6573  007E' 2800'              	goto	l944
  6574  007F'                    u8640:
  6575  007F'                    l4895:
  6576  007F' 3002               	movlw	2
  6577  0080' 0205'              	subwf	___xxtofl@exp,w
  6578  0081' 1803               	skipnc
  6579  0082' 2800'              	goto	u8651
  6580  0083' 2800'              	goto	u8650
  6581  0084'                    u8651:
  6582  0084' 2800'              	goto	l4891
  6583  0085'                    u8650:
  6584  0085'                    l944:
  6585  0085' 1805'              	btfsc	___xxtofl@exp,0
  6586  0086' 2800'              	goto	u8661
  6587  0087' 2800'              	goto	u8660
  6588  0088'                    u8661:
  6589  0088' 2800'              	goto	l945
  6590  0089'                    u8660:
  6591  0089'                    l4897:
  6592  0089' 30FF               	movlw	255
  6593  008A' 0586'              	andwf	___xxtofl@arg,f
  6594  008B' 30FF               	movlw	255
  6595  008C' 0587'              	andwf	___xxtofl@arg+1,f
  6596  008D' 307F               	movlw	127
  6597  008E' 0588'              	andwf	___xxtofl@arg+2,f
  6598  008F' 30FF               	movlw	255
  6599  0090' 0589'              	andwf	___xxtofl@arg+3,f
  6600  0091'                    l945:
  6601  0091' 1003               	clrc
  6602  0092' 0C85'              	rrf	___xxtofl@exp,f
  6603  0093'                    l4899:
  6604  0093' 0805'              	movf	___xxtofl@exp,w
  6605  0094' 0080'              	movwf	??___xxtofl
  6606  0095' 0181'              	clrf	??___xxtofl+1
  6607  0096' 0182'              	clrf	??___xxtofl+2
  6608  0097' 0183'              	clrf	??___xxtofl+3
  6609  0098' 3018               	movlw	24
  6610  0099'                    u8675:
  6611  0099' 1003               	clrc
  6612  009A' 0D80'              	rlf	??___xxtofl,f
  6613  009B' 0D81'              	rlf	??___xxtofl+1,f
  6614  009C' 0D82'              	rlf	??___xxtofl+2,f
  6615  009D' 0D83'              	rlf	??___xxtofl+3,f
  6616  009E'                    u8670:
  6617  009E' 3EFF               	addlw	-1
  6618  009F' 1D03               	skipz
  6619  00A0' 2800'              	goto	u8675
  6620  00A1' 0800'              	movf	??___xxtofl,w
  6621  00A2' 0486'              	iorwf	___xxtofl@arg,f
  6622  00A3' 0801'              	movf	??___xxtofl+1,w
  6623  00A4' 0487'              	iorwf	___xxtofl@arg+1,f
  6624  00A5' 0802'              	movf	??___xxtofl+2,w
  6625  00A6' 0488'              	iorwf	___xxtofl@arg+2,f
  6626  00A7' 0803'              	movf	??___xxtofl+3,w
  6627  00A8' 0489'              	iorwf	___xxtofl@arg+3,f
  6628  00A9'                    l4901:
  6629  00A9' 0804'              	movf	___xxtofl@sign,w
  6630  00AA' 1903               	btfsc	3,2
  6631  00AB' 2800'              	goto	u8681
  6632  00AC' 2800'              	goto	u8680
  6633  00AD'                    u8681:
  6634  00AD' 2800'              	goto	l4907
  6635  00AE'                    u8680:
  6636  00AE'                    l4903:
  6637  00AE' 1F86'              	btfss	___xxtofl@val+3,7
  6638  00AF' 2800'              	goto	u8691
  6639  00B0' 2800'              	goto	u8690
  6640  00B1'                    u8691:
  6641  00B1' 2800'              	goto	l4907
  6642  00B2'                    u8690:
  6643  00B2'                    l4905:
  6644  00B2' 1789'              	bsf	___xxtofl@arg+3,7
  6645  00B3'                    l4907:
  6646  00B3' 0809'              	movf	___xxtofl@arg+3,w
  6647  00B4' 0086'              	movwf	?___xxtofl+3
  6648  00B5' 0808'              	movf	___xxtofl@arg+2,w
  6649  00B6' 0085'              	movwf	?___xxtofl+2
  6650  00B7' 0807'              	movf	___xxtofl@arg+1,w
  6651  00B8' 0084'              	movwf	?___xxtofl+1
  6652  00B9' 0806'              	movf	___xxtofl@arg,w
  6653  00BA' 0083'              	movwf	?___xxtofl
  6654  00BB'                    l933:
  6655  00BB' 0008               	return
  6656  00BC'                    __end_of___xxtofl:
  6657                           
  6658                           	psect	text15
  6659  0000'                    __ptext15:	
  6660 ;; *************** function ___wmul *****************
  6661 ;; Defined at:
  6662 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  multiplier      2    3[COMMON] unsigned int 
  6665 ;;  multiplicand    2    5[COMMON] unsigned int 
  6666 ;; Auto vars:     Size  Location     Type
  6667 ;;  product         2    7[COMMON] unsigned int 
  6668 ;; Return value:  Size  Location     Type
  6669 ;;                  2    3[COMMON] unsigned int 
  6670 ;; Registers used:
  6671 ;;		wreg, status,2, status,0
  6672 ;; Tracked objects:
  6673 ;;		On entry : 0/0
  6674 ;;		On exit  : 0/0
  6675 ;;		Unchanged: 0/0
  6676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6677 ;;      Params:         4       0       0       0       0
  6678 ;;      Locals:         2       0       0       0       0
  6679 ;;      Temps:          0       0       0       0       0
  6680 ;;      Totals:         6       0       0       0       0
  6681 ;;Total ram usage:        6 bytes
  6682 ;; Hardware stack levels used:    1
  6683 ;; Hardware stack levels required when called:    2
  6684 ;; This function calls:
  6685 ;;		Nothing
  6686 ;; This function is called by:
  6687 ;;		_sprintf
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691                           
  6692                           ;psect for function ___wmul
  6693  0000'                    ___wmul:
  6694  0000'                    l4687:	
  6695                           ;incstack = 0
  6696                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6697                           
  6698  0000' 0187'              	clrf	___wmul@product
  6699  0001' 0188'              	clrf	___wmul@product+1
  6700  0002'                    l4689:
  6701  0002' 1C03'              	btfss	___wmul@multiplier,0
  6702  0003' 2800'              	goto	u8081
  6703  0004' 2800'              	goto	u8080
  6704  0005'                    u8081:
  6705  0005' 2800'              	goto	l464
  6706  0006'                    u8080:
  6707  0006'                    l4691:
  6708  0006' 0805'              	movf	___wmul@multiplicand,w
  6709  0007' 0787'              	addwf	___wmul@product,f
  6710  0008' 1803               	skipnc
  6711  0009' 0A88'              	incf	___wmul@product+1,f
  6712  000A' 0806'              	movf	___wmul@multiplicand+1,w
  6713  000B' 0788'              	addwf	___wmul@product+1,f
  6714  000C'                    l464:
  6715  000C' 3001               	movlw	1
  6716  000D'                    u8095:
  6717  000D' 1003               	clrc
  6718  000E' 0D85'              	rlf	___wmul@multiplicand,f
  6719  000F' 0D86'              	rlf	___wmul@multiplicand+1,f
  6720  0010' 3EFF               	addlw	-1
  6721  0011' 1D03               	skipz
  6722  0012' 2800'              	goto	u8095
  6723  0013'                    l4693:
  6724  0013' 3001               	movlw	1
  6725  0014'                    u8105:
  6726  0014' 1003               	clrc
  6727  0015' 0C84'              	rrf	___wmul@multiplier+1,f
  6728  0016' 0C83'              	rrf	___wmul@multiplier,f
  6729  0017' 3EFF               	addlw	-1
  6730  0018' 1D03               	skipz
  6731  0019' 2800'              	goto	u8105
  6732  001A'                    l4695:
  6733  001A' 0803'              	movf	___wmul@multiplier,w
  6734  001B' 0404'              	iorwf	___wmul@multiplier+1,w
  6735  001C' 1D03               	btfss	3,2
  6736  001D' 2800'              	goto	u8111
  6737  001E' 2800'              	goto	u8110
  6738  001F'                    u8111:
  6739  001F' 2800'              	goto	l4689
  6740  0020'                    u8110:
  6741  0020'                    l4697:
  6742  0020' 0808'              	movf	___wmul@product+1,w
  6743  0021' 0084'              	movwf	?___wmul+1
  6744  0022' 0807'              	movf	___wmul@product,w
  6745  0023' 0083'              	movwf	?___wmul
  6746  0024'                    l466:
  6747  0024' 0008               	return
  6748  0025'                    __end_of___wmul:
  6749                           
  6750                           	psect	text16
  6751  0000'                    __ptext16:	
  6752 ;; *************** function ___llmod *****************
  6753 ;; Defined at:
  6754 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6755 ;; Parameters:    Size  Location     Type
  6756 ;;  divisor         4    8[BANK0 ] unsigned long 
  6757 ;;  dividend        4   12[BANK0 ] unsigned long 
  6758 ;; Auto vars:     Size  Location     Type
  6759 ;;  counter         1   16[BANK0 ] unsigned char 
  6760 ;; Return value:  Size  Location     Type
  6761 ;;                  4    8[BANK0 ] unsigned long 
  6762 ;; Registers used:
  6763 ;;		wreg, status,2, status,0
  6764 ;; Tracked objects:
  6765 ;;		On entry : 0/0
  6766 ;;		On exit  : 0/0
  6767 ;;		Unchanged: 0/0
  6768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6769 ;;      Params:         0       8       0       0       0
  6770 ;;      Locals:         0       1       0       0       0
  6771 ;;      Temps:          1       0       0       0       0
  6772 ;;      Totals:         1       9       0       0       0
  6773 ;;Total ram usage:       10 bytes
  6774 ;; Hardware stack levels used:    1
  6775 ;; Hardware stack levels required when called:    2
  6776 ;; This function calls:
  6777 ;;		Nothing
  6778 ;; This function is called by:
  6779 ;;		_sprintf
  6780 ;; This function uses a non-reentrant model
  6781 ;;
  6782                           
  6783                           
  6784                           ;psect for function ___llmod
  6785  0000'                    ___llmod:
  6786  0000'                    l4841:	
  6787                           ;incstack = 0
  6788                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6789                           
  6790  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  6791  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  6792  0002' 080B'              	movf	___llmod@divisor+3,w
  6793  0003' 040A'              	iorwf	___llmod@divisor+2,w
  6794  0004' 0409'              	iorwf	___llmod@divisor+1,w
  6795  0005' 0408'              	iorwf	___llmod@divisor,w
  6796  0006' 1903               	skipnz
  6797  0007' 2800'              	goto	u8501
  6798  0008' 2800'              	goto	u8500
  6799  0009'                    u8501:
  6800  0009' 2800'              	goto	l4857
  6801  000A'                    u8500:
  6802  000A'                    l4843:
  6803  000A' 0190'              	clrf	___llmod@counter
  6804  000B' 0A90'              	incf	___llmod@counter,f
  6805  000C' 2800'              	goto	l4847
  6806  000D'                    l4845:
  6807  000D' 3001               	movlw	1
  6808  000E' 0089'              	movwf	??___llmod
  6809  000F'                    u8515:
  6810  000F' 1003               	clrc
  6811  0010' 0D88'              	rlf	___llmod@divisor,f
  6812  0011' 0D89'              	rlf	___llmod@divisor+1,f
  6813  0012' 0D8A'              	rlf	___llmod@divisor+2,f
  6814  0013' 0D8B'              	rlf	___llmod@divisor+3,f
  6815  0014' 0B89'              	decfsz	??___llmod,f
  6816  0015' 2800'              	goto	u8515
  6817  0016' 3001               	movlw	1
  6818  0017' 0089'              	movwf	??___llmod
  6819  0018' 0809'              	movf	??___llmod,w
  6820  0019' 0790'              	addwf	___llmod@counter,f
  6821  001A'                    l4847:
  6822  001A' 1F8B'              	btfss	___llmod@divisor+3,7
  6823  001B' 2800'              	goto	u8521
  6824  001C' 2800'              	goto	u8520
  6825  001D'                    u8521:
  6826  001D' 2800'              	goto	l4845
  6827  001E'                    u8520:
  6828  001E'                    l4849:
  6829  001E' 080B'              	movf	___llmod@divisor+3,w
  6830  001F' 020F'              	subwf	___llmod@dividend+3,w
  6831  0020' 1D03               	skipz
  6832  0021' 2800'              	goto	u8535
  6833  0022' 080A'              	movf	___llmod@divisor+2,w
  6834  0023' 020E'              	subwf	___llmod@dividend+2,w
  6835  0024' 1D03               	skipz
  6836  0025' 2800'              	goto	u8535
  6837  0026' 0809'              	movf	___llmod@divisor+1,w
  6838  0027' 020D'              	subwf	___llmod@dividend+1,w
  6839  0028' 1D03               	skipz
  6840  0029' 2800'              	goto	u8535
  6841  002A' 0808'              	movf	___llmod@divisor,w
  6842  002B' 020C'              	subwf	___llmod@dividend,w
  6843  002C'                    u8535:
  6844  002C' 1C03               	skipc
  6845  002D' 2800'              	goto	u8531
  6846  002E' 2800'              	goto	u8530
  6847  002F'                    u8531:
  6848  002F' 2800'              	goto	l4853
  6849  0030'                    u8530:
  6850  0030'                    l4851:
  6851  0030' 0808'              	movf	___llmod@divisor,w
  6852  0031' 028C'              	subwf	___llmod@dividend,f
  6853  0032' 0809'              	movf	___llmod@divisor+1,w
  6854  0033' 1C03               	skipc
  6855  0034' 0F09'              	incfsz	___llmod@divisor+1,w
  6856  0035' 028D'              	subwf	___llmod@dividend+1,f
  6857  0036' 080A'              	movf	___llmod@divisor+2,w
  6858  0037' 1C03               	skipc
  6859  0038' 0F0A'              	incfsz	___llmod@divisor+2,w
  6860  0039' 028E'              	subwf	___llmod@dividend+2,f
  6861  003A' 080B'              	movf	___llmod@divisor+3,w
  6862  003B' 1C03               	skipc
  6863  003C' 0F0B'              	incfsz	___llmod@divisor+3,w
  6864  003D' 028F'              	subwf	___llmod@dividend+3,f
  6865  003E'                    l4853:
  6866  003E' 3001               	movlw	1
  6867  003F'                    u8545:
  6868  003F' 1003               	clrc
  6869  0040' 0C8B'              	rrf	___llmod@divisor+3,f
  6870  0041' 0C8A'              	rrf	___llmod@divisor+2,f
  6871  0042' 0C89'              	rrf	___llmod@divisor+1,f
  6872  0043' 0C88'              	rrf	___llmod@divisor,f
  6873  0044' 3EFF               	addlw	-1
  6874  0045' 1D03               	skipz
  6875  0046' 2800'              	goto	u8545
  6876  0047'                    l4855:
  6877  0047' 3001               	movlw	1
  6878  0048' 0290'              	subwf	___llmod@counter,f
  6879  0049' 1D03               	btfss	3,2
  6880  004A' 2800'              	goto	u8551
  6881  004B' 2800'              	goto	u8550
  6882  004C'                    u8551:
  6883  004C' 2800'              	goto	l4849
  6884  004D'                    u8550:
  6885  004D'                    l4857:
  6886  004D' 080F'              	movf	___llmod@dividend+3,w
  6887  004E' 008B'              	movwf	?___llmod+3
  6888  004F' 080E'              	movf	___llmod@dividend+2,w
  6889  0050' 008A'              	movwf	?___llmod+2
  6890  0051' 080D'              	movf	___llmod@dividend+1,w
  6891  0052' 0089'              	movwf	?___llmod+1
  6892  0053' 080C'              	movf	___llmod@dividend,w
  6893  0054' 0088'              	movwf	?___llmod
  6894  0055'                    l720:
  6895  0055' 0008               	return
  6896  0056'                    __end_of___llmod:
  6897                           
  6898                           	psect	text17
  6899  0000'                    __ptext17:	
  6900 ;; *************** function ___lldiv *****************
  6901 ;; Defined at:
  6902 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6903 ;; Parameters:    Size  Location     Type
  6904 ;;  divisor         4    0[BANK0 ] unsigned long 
  6905 ;;  dividend        4    4[BANK0 ] unsigned long 
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;  quotient        4    4[COMMON] unsigned long 
  6908 ;;  counter         1    8[COMMON] unsigned char 
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  4    0[BANK0 ] unsigned long 
  6911 ;; Registers used:
  6912 ;;		wreg, status,2, status,0
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6918 ;;      Params:         0       8       0       0       0
  6919 ;;      Locals:         5       0       0       0       0
  6920 ;;      Temps:          1       0       0       0       0
  6921 ;;      Totals:         6       8       0       0       0
  6922 ;;Total ram usage:       14 bytes
  6923 ;; Hardware stack levels used:    1
  6924 ;; Hardware stack levels required when called:    2
  6925 ;; This function calls:
  6926 ;;		Nothing
  6927 ;; This function is called by:
  6928 ;;		_sprintf
  6929 ;; This function uses a non-reentrant model
  6930 ;;
  6931                           
  6932                           
  6933                           ;psect for function ___lldiv
  6934  0000'                    ___lldiv:
  6935  0000'                    l4701:	
  6936                           ;incstack = 0
  6937                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6938                           
  6939  0000' 3000               	movlw	0
  6940  0001' 0087'              	movwf	___lldiv@quotient+3
  6941  0002' 3000               	movlw	0
  6942  0003' 0086'              	movwf	___lldiv@quotient+2
  6943  0004' 3000               	movlw	0
  6944  0005' 0085'              	movwf	___lldiv@quotient+1
  6945  0006' 3000               	movlw	0
  6946  0007' 0084'              	movwf	___lldiv@quotient
  6947  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  6948  0009' 1303               	bcf	3,6	;RP1=0, select bank0
  6949  000A' 0803'              	movf	___lldiv@divisor+3,w
  6950  000B' 0402'              	iorwf	___lldiv@divisor+2,w
  6951  000C' 0401'              	iorwf	___lldiv@divisor+1,w
  6952  000D' 0400'              	iorwf	___lldiv@divisor,w
  6953  000E' 1903               	skipnz
  6954  000F' 2800'              	goto	u8121
  6955  0010' 2800'              	goto	u8120
  6956  0011'                    u8121:
  6957  0011' 2800'              	goto	l4721
  6958  0012'                    u8120:
  6959  0012'                    l4703:
  6960  0012' 0188'              	clrf	___lldiv@counter
  6961  0013' 0A88'              	incf	___lldiv@counter,f
  6962  0014' 2800'              	goto	l4707
  6963  0015'                    l4705:
  6964  0015' 3001               	movlw	1
  6965  0016' 0083'              	movwf	??___lldiv
  6966  0017'                    u8135:
  6967  0017' 1003               	clrc
  6968  0018' 0D80'              	rlf	___lldiv@divisor,f
  6969  0019' 0D81'              	rlf	___lldiv@divisor+1,f
  6970  001A' 0D82'              	rlf	___lldiv@divisor+2,f
  6971  001B' 0D83'              	rlf	___lldiv@divisor+3,f
  6972  001C' 0B83'              	decfsz	??___lldiv,f
  6973  001D' 2800'              	goto	u8135
  6974  001E' 3001               	movlw	1
  6975  001F' 0083'              	movwf	??___lldiv
  6976  0020' 0803'              	movf	??___lldiv,w
  6977  0021' 0788'              	addwf	___lldiv@counter,f
  6978  0022'                    l4707:
  6979  0022' 1F83'              	btfss	___lldiv@divisor+3,7
  6980  0023' 2800'              	goto	u8141
  6981  0024' 2800'              	goto	u8140
  6982  0025'                    u8141:
  6983  0025' 2800'              	goto	l4705
  6984  0026'                    u8140:
  6985  0026'                    l4709:
  6986  0026' 3001               	movlw	1
  6987  0027' 0083'              	movwf	??___lldiv
  6988  0028'                    u8155:
  6989  0028' 1003               	clrc
  6990  0029' 0D84'              	rlf	___lldiv@quotient,f
  6991  002A' 0D85'              	rlf	___lldiv@quotient+1,f
  6992  002B' 0D86'              	rlf	___lldiv@quotient+2,f
  6993  002C' 0D87'              	rlf	___lldiv@quotient+3,f
  6994  002D' 0B83'              	decfsz	??___lldiv,f
  6995  002E' 2800'              	goto	u8155
  6996  002F'                    l4711:
  6997  002F' 0803'              	movf	___lldiv@divisor+3,w
  6998  0030' 0207'              	subwf	___lldiv@dividend+3,w
  6999  0031' 1D03               	skipz
  7000  0032' 2800'              	goto	u8165
  7001  0033' 0802'              	movf	___lldiv@divisor+2,w
  7002  0034' 0206'              	subwf	___lldiv@dividend+2,w
  7003  0035' 1D03               	skipz
  7004  0036' 2800'              	goto	u8165
  7005  0037' 0801'              	movf	___lldiv@divisor+1,w
  7006  0038' 0205'              	subwf	___lldiv@dividend+1,w
  7007  0039' 1D03               	skipz
  7008  003A' 2800'              	goto	u8165
  7009  003B' 0800'              	movf	___lldiv@divisor,w
  7010  003C' 0204'              	subwf	___lldiv@dividend,w
  7011  003D'                    u8165:
  7012  003D' 1C03               	skipc
  7013  003E' 2800'              	goto	u8161
  7014  003F' 2800'              	goto	u8160
  7015  0040'                    u8161:
  7016  0040' 2800'              	goto	l4717
  7017  0041'                    u8160:
  7018  0041'                    l4713:
  7019  0041' 0800'              	movf	___lldiv@divisor,w
  7020  0042' 0284'              	subwf	___lldiv@dividend,f
  7021  0043' 0801'              	movf	___lldiv@divisor+1,w
  7022  0044' 1C03               	skipc
  7023  0045' 0F01'              	incfsz	___lldiv@divisor+1,w
  7024  0046' 0285'              	subwf	___lldiv@dividend+1,f
  7025  0047' 0802'              	movf	___lldiv@divisor+2,w
  7026  0048' 1C03               	skipc
  7027  0049' 0F02'              	incfsz	___lldiv@divisor+2,w
  7028  004A' 0286'              	subwf	___lldiv@dividend+2,f
  7029  004B' 0803'              	movf	___lldiv@divisor+3,w
  7030  004C' 1C03               	skipc
  7031  004D' 0F03'              	incfsz	___lldiv@divisor+3,w
  7032  004E' 0287'              	subwf	___lldiv@dividend+3,f
  7033  004F'                    l4715:
  7034  004F' 1404'              	bsf	___lldiv@quotient,0
  7035  0050'                    l4717:
  7036  0050' 3001               	movlw	1
  7037  0051'                    u8175:
  7038  0051' 1003               	clrc
  7039  0052' 0C83'              	rrf	___lldiv@divisor+3,f
  7040  0053' 0C82'              	rrf	___lldiv@divisor+2,f
  7041  0054' 0C81'              	rrf	___lldiv@divisor+1,f
  7042  0055' 0C80'              	rrf	___lldiv@divisor,f
  7043  0056' 3EFF               	addlw	-1
  7044  0057' 1D03               	skipz
  7045  0058' 2800'              	goto	u8175
  7046  0059'                    l4719:
  7047  0059' 3001               	movlw	1
  7048  005A' 0288'              	subwf	___lldiv@counter,f
  7049  005B' 1D03               	btfss	3,2
  7050  005C' 2800'              	goto	u8181
  7051  005D' 2800'              	goto	u8180
  7052  005E'                    u8181:
  7053  005E' 2800'              	goto	l4709
  7054  005F'                    u8180:
  7055  005F'                    l4721:
  7056  005F' 0807'              	movf	___lldiv@quotient+3,w
  7057  0060' 0083'              	movwf	?___lldiv+3
  7058  0061' 0806'              	movf	___lldiv@quotient+2,w
  7059  0062' 0082'              	movwf	?___lldiv+2
  7060  0063' 0805'              	movf	___lldiv@quotient+1,w
  7061  0064' 0081'              	movwf	?___lldiv+1
  7062  0065' 0804'              	movf	___lldiv@quotient,w
  7063  0066' 0080'              	movwf	?___lldiv
  7064  0067'                    l500:
  7065  0067' 0008               	return
  7066  0068'                    __end_of___lldiv:
  7067                           
  7068                           	psect	text18
  7069  0000'                    __ptext18:	
  7070 ;; *************** function ___fltol *****************
  7071 ;; Defined at:
  7072 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7073 ;; Parameters:    Size  Location     Type
  7074 ;;  f1              4   55[BANK0 ] unsigned long 
  7075 ;; Auto vars:     Size  Location     Type
  7076 ;;  exp1            1   65[BANK0 ] unsigned char 
  7077 ;;  sign1           1   64[BANK0 ] unsigned char 
  7078 ;; Return value:  Size  Location     Type
  7079 ;;                  4   55[BANK0 ] long 
  7080 ;; Registers used:
  7081 ;;		wreg, status,2, status,0
  7082 ;; Tracked objects:
  7083 ;;		On entry : 0/0
  7084 ;;		On exit  : 0/0
  7085 ;;		Unchanged: 0/0
  7086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7087 ;;      Params:         0       4       0       0       0
  7088 ;;      Locals:         0       2       0       0       0
  7089 ;;      Temps:          0       5       0       0       0
  7090 ;;      Totals:         0      11       0       0       0
  7091 ;;Total ram usage:       11 bytes
  7092 ;; Hardware stack levels used:    1
  7093 ;; Hardware stack levels required when called:    2
  7094 ;; This function calls:
  7095 ;;		Nothing
  7096 ;; This function is called by:
  7097 ;;		_sprintf
  7098 ;; This function uses a non-reentrant model
  7099 ;;
  7100                           
  7101                           
  7102                           ;psect for function ___fltol
  7103  0000'                    ___fltol:
  7104  0000'                    l4805:	
  7105                           ;incstack = 0
  7106                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7107                           
  7108  0000' 1003               	clrc
  7109  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  7110  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  7111  0003' 0D39'              	rlf	___fltol@f1+2,w
  7112  0004' 0D3A'              	rlf	___fltol@f1+3,w
  7113  0005' 00BB'              	movwf	??___fltol
  7114  0006' 083B'              	movf	??___fltol,w
  7115  0007' 00C1'              	movwf	___fltol@exp1
  7116  0008' 0841'              	movf	___fltol@exp1,w
  7117  0009' 1D03               	btfss	3,2
  7118  000A' 2800'              	goto	u8401
  7119  000B' 2800'              	goto	u8400
  7120  000C'                    u8401:
  7121  000C' 2800'              	goto	l4811
  7122  000D'                    u8400:
  7123  000D'                    l4807:
  7124  000D' 3000               	movlw	0
  7125  000E' 00BA'              	movwf	?___fltol+3
  7126  000F' 3000               	movlw	0
  7127  0010' 00B9'              	movwf	?___fltol+2
  7128  0011' 3000               	movlw	0
  7129  0012' 00B8'              	movwf	?___fltol+1
  7130  0013' 3000               	movlw	0
  7131  0014' 00B7'              	movwf	?___fltol
  7132  0015' 2800'              	goto	l667
  7133  0016'                    l4811:
  7134  0016' 0837'              	movf	___fltol@f1,w
  7135  0017' 00BB'              	movwf	??___fltol
  7136  0018' 0838'              	movf	___fltol@f1+1,w
  7137  0019' 00BC'              	movwf	??___fltol+1
  7138  001A' 0839'              	movf	___fltol@f1+2,w
  7139  001B' 00BD'              	movwf	??___fltol+2
  7140  001C' 083A'              	movf	___fltol@f1+3,w
  7141  001D' 00BE'              	movwf	??___fltol+3
  7142  001E' 301F               	movlw	31
  7143  001F'                    u8415:
  7144  001F' 1003               	clrc
  7145  0020' 0CBE'              	rrf	??___fltol+3,f
  7146  0021' 0CBD'              	rrf	??___fltol+2,f
  7147  0022' 0CBC'              	rrf	??___fltol+1,f
  7148  0023' 0CBB'              	rrf	??___fltol,f
  7149  0024'                    u8410:
  7150  0024' 3EFF               	addlw	-1
  7151  0025' 1D03               	skipz
  7152  0026' 2800'              	goto	u8415
  7153  0027' 083B'              	movf	??___fltol,w
  7154  0028' 00BF'              	movwf	??___fltol+4
  7155  0029' 083F'              	movf	??___fltol+4,w
  7156  002A' 00C0'              	movwf	___fltol@sign1
  7157  002B'                    l4813:
  7158  002B' 17B9'              	bsf	___fltol@f1+2,7
  7159  002C'                    l4815:
  7160  002C' 30FF               	movlw	255
  7161  002D' 05B7'              	andwf	___fltol@f1,f
  7162  002E' 30FF               	movlw	255
  7163  002F' 05B8'              	andwf	___fltol@f1+1,f
  7164  0030' 30FF               	movlw	255
  7165  0031' 05B9'              	andwf	___fltol@f1+2,f
  7166  0032' 3000               	movlw	0
  7167  0033' 05BA'              	andwf	___fltol@f1+3,f
  7168  0034'                    l4817:
  7169  0034' 3096               	movlw	150
  7170  0035' 02C1'              	subwf	___fltol@exp1,f
  7171  0036'                    l4819:
  7172  0036' 1FC1'              	btfss	___fltol@exp1,7
  7173  0037' 2800'              	goto	u8421
  7174  0038' 2800'              	goto	u8420
  7175  0039'                    u8421:
  7176  0039' 2800'              	goto	l4829
  7177  003A'                    u8420:
  7178  003A'                    l4821:
  7179  003A' 0841'              	movf	___fltol@exp1,w
  7180  003B' 3A80               	xorlw	128
  7181  003C' 3E97               	addlw	151
  7182  003D' 1803               	skipnc
  7183  003E' 2800'              	goto	u8431
  7184  003F' 2800'              	goto	u8430
  7185  0040'                    u8431:
  7186  0040' 2800'              	goto	l4827
  7187  0041'                    u8430:
  7188  0041' 2800'              	goto	l4807
  7189  0042'                    l4827:
  7190  0042' 3001               	movlw	1
  7191  0043'                    u8445:
  7192  0043' 1003               	clrc
  7193  0044' 0CBA'              	rrf	___fltol@f1+3,f
  7194  0045' 0CB9'              	rrf	___fltol@f1+2,f
  7195  0046' 0CB8'              	rrf	___fltol@f1+1,f
  7196  0047' 0CB7'              	rrf	___fltol@f1,f
  7197  0048' 3EFF               	addlw	-1
  7198  0049' 1D03               	skipz
  7199  004A' 2800'              	goto	u8445
  7200  004B' 3001               	movlw	1
  7201  004C' 00BB'              	movwf	??___fltol
  7202  004D' 083B'              	movf	??___fltol,w
  7203  004E' 07C1'              	addwf	___fltol@exp1,f
  7204  004F' 1D03               	btfss	3,2
  7205  0050' 2800'              	goto	u8451
  7206  0051' 2800'              	goto	u8450
  7207  0052'                    u8451:
  7208  0052' 2800'              	goto	l4827
  7209  0053'                    u8450:
  7210  0053' 2800'              	goto	l4837
  7211  0054'                    l4829:
  7212  0054' 3020               	movlw	32
  7213  0055' 0241'              	subwf	___fltol@exp1,w
  7214  0056' 1C03               	skipc
  7215  0057' 2800'              	goto	u8461
  7216  0058' 2800'              	goto	u8460
  7217  0059'                    u8461:
  7218  0059' 2800'              	goto	l674
  7219  005A'                    u8460:
  7220  005A' 2800'              	goto	l4807
  7221  005B'                    l4835:
  7222  005B' 3001               	movlw	1
  7223  005C' 00BB'              	movwf	??___fltol
  7224  005D'                    u8475:
  7225  005D' 1003               	clrc
  7226  005E' 0DB7'              	rlf	___fltol@f1,f
  7227  005F' 0DB8'              	rlf	___fltol@f1+1,f
  7228  0060' 0DB9'              	rlf	___fltol@f1+2,f
  7229  0061' 0DBA'              	rlf	___fltol@f1+3,f
  7230  0062' 0BBB'              	decfsz	??___fltol,f
  7231  0063' 2800'              	goto	u8475
  7232  0064' 3001               	movlw	1
  7233  0065' 02C1'              	subwf	___fltol@exp1,f
  7234  0066'                    l674:
  7235  0066' 0841'              	movf	___fltol@exp1,w
  7236  0067' 1D03               	btfss	3,2
  7237  0068' 2800'              	goto	u8481
  7238  0069' 2800'              	goto	u8480
  7239  006A'                    u8481:
  7240  006A' 2800'              	goto	l4835
  7241  006B'                    u8480:
  7242  006B'                    l4837:
  7243  006B' 0840'              	movf	___fltol@sign1,w
  7244  006C' 1903               	btfsc	3,2
  7245  006D' 2800'              	goto	u8491
  7246  006E' 2800'              	goto	u8490
  7247  006F'                    u8491:
  7248  006F' 2800'              	goto	l677
  7249  0070'                    u8490:
  7250  0070'                    l4839:
  7251  0070' 09B7'              	comf	___fltol@f1,f
  7252  0071' 09B8'              	comf	___fltol@f1+1,f
  7253  0072' 09B9'              	comf	___fltol@f1+2,f
  7254  0073' 09BA'              	comf	___fltol@f1+3,f
  7255  0074' 0AB7'              	incf	___fltol@f1,f
  7256  0075' 1903               	skipnz
  7257  0076' 0AB8'              	incf	___fltol@f1+1,f
  7258  0077' 1903               	skipnz
  7259  0078' 0AB9'              	incf	___fltol@f1+2,f
  7260  0079' 1903               	skipnz
  7261  007A' 0ABA'              	incf	___fltol@f1+3,f
  7262  007B'                    l677:
  7263  007B'                    l667:
  7264  007B' 0008               	return
  7265  007C'                    __end_of___fltol:
  7266                           
  7267                           	psect	text19
  7268  0000'                    __ptext19:	
  7269 ;; *************** function ___flsub *****************
  7270 ;; Defined at:
  7271 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7272 ;; Parameters:    Size  Location     Type
  7273 ;;  a               4    0[BANK1 ] long 
  7274 ;;  b               4    4[BANK1 ] long 
  7275 ;; Auto vars:     Size  Location     Type
  7276 ;;		None
  7277 ;; Return value:  Size  Location     Type
  7278 ;;                  4    0[BANK1 ] long 
  7279 ;; Registers used:
  7280 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7281 ;; Tracked objects:
  7282 ;;		On entry : 0/0
  7283 ;;		On exit  : 0/0
  7284 ;;		Unchanged: 0/0
  7285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7286 ;;      Params:         0       0       8       0       0
  7287 ;;      Locals:         0       0       0       0       0
  7288 ;;      Temps:          0       0       0       0       0
  7289 ;;      Totals:         0       0       8       0       0
  7290 ;;Total ram usage:        8 bytes
  7291 ;; Hardware stack levels used:    1
  7292 ;; Hardware stack levels required when called:    3
  7293 ;; This function calls:
  7294 ;;		___fladd
  7295 ;; This function is called by:
  7296 ;;		_sprintf
  7297 ;; This function uses a non-reentrant model
  7298 ;;
  7299                           
  7300                           
  7301                           ;psect for function ___flsub
  7302  0000'                    ___flsub:
  7303  0000'                    l4861:	
  7304                           ;incstack = 0
  7305                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7306                           
  7307  0000' 3080               	movlw	128
  7308  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  7309  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  7310  0003' 0680'              	xorwf	(___flsub@a+3)^(0+128),f
  7311  0004'                    l4863:
  7312  0004' 0800'              	movf	(___flsub@b+3)^(0+128),w
  7313  0005' 1283               	bcf	3,5	;RP0=0, select bank0
  7314  0006' 1303               	bcf	3,6	;RP1=0, select bank0
  7315  0007' 00BB'              	movwf	___fladd@b+3
  7316  0008' 1683               	bsf	3,5	;RP0=1, select bank1
  7317  0009' 1303               	bcf	3,6	;RP1=0, select bank1
  7318  000A' 0800'              	movf	(___flsub@b+2)^(0+128),w
  7319  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  7320  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  7321  000D' 00BA'              	movwf	___fladd@b+2
  7322  000E' 1683               	bsf	3,5	;RP0=1, select bank1
  7323  000F' 1303               	bcf	3,6	;RP1=0, select bank1
  7324  0010' 0800'              	movf	(___flsub@b+1)^(0+128),w
  7325  0011' 1283               	bcf	3,5	;RP0=0, select bank0
  7326  0012' 1303               	bcf	3,6	;RP1=0, select bank0
  7327  0013' 00B9'              	movwf	___fladd@b+1
  7328  0014' 1683               	bsf	3,5	;RP0=1, select bank1
  7329  0015' 1303               	bcf	3,6	;RP1=0, select bank1
  7330  0016' 0800'              	movf	___flsub@b^(0+128),w
  7331  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  7332  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  7333  0019' 00B8'              	movwf	___fladd@b
  7334  001A' 1683               	bsf	3,5	;RP0=1, select bank1
  7335  001B' 1303               	bcf	3,6	;RP1=0, select bank1
  7336  001C' 0800'              	movf	(___flsub@a+3)^(0+128),w
  7337  001D' 1283               	bcf	3,5	;RP0=0, select bank0
  7338  001E' 1303               	bcf	3,6	;RP1=0, select bank0
  7339  001F' 00BF'              	movwf	___fladd@a+3
  7340  0020' 1683               	bsf	3,5	;RP0=1, select bank1
  7341  0021' 1303               	bcf	3,6	;RP1=0, select bank1
  7342  0022' 0800'              	movf	(___flsub@a+2)^(0+128),w
  7343  0023' 1283               	bcf	3,5	;RP0=0, select bank0
  7344  0024' 1303               	bcf	3,6	;RP1=0, select bank0
  7345  0025' 00BE'              	movwf	___fladd@a+2
  7346  0026' 1683               	bsf	3,5	;RP0=1, select bank1
  7347  0027' 1303               	bcf	3,6	;RP1=0, select bank1
  7348  0028' 0800'              	movf	(___flsub@a+1)^(0+128),w
  7349  0029' 1283               	bcf	3,5	;RP0=0, select bank0
  7350  002A' 1303               	bcf	3,6	;RP1=0, select bank0
  7351  002B' 00BD'              	movwf	___fladd@a+1
  7352  002C' 1683               	bsf	3,5	;RP0=1, select bank1
  7353  002D' 1303               	bcf	3,6	;RP1=0, select bank1
  7354  002E' 0800'              	movf	___flsub@a^(0+128),w
  7355  002F' 1283               	bcf	3,5	;RP0=0, select bank0
  7356  0030' 1303               	bcf	3,6	;RP1=0, select bank0
  7357  0031' 00BC'              	movwf	___fladd@a
  7358  0032' 120A' 118A' 2000' 120A' 118A' 	fcall	___fladd
  7359  0037' 1283               	bcf	3,5	;RP0=0, select bank0
  7360  0038' 1303               	bcf	3,6	;RP1=0, select bank0
  7361  0039' 083B'              	movf	?___fladd+3,w
  7362  003A' 1683               	bsf	3,5	;RP0=1, select bank1
  7363  003B' 1303               	bcf	3,6	;RP1=0, select bank1
  7364  003C' 0080'              	movwf	(?___flsub+3)^(0+128)
  7365  003D' 1283               	bcf	3,5	;RP0=0, select bank0
  7366  003E' 1303               	bcf	3,6	;RP1=0, select bank0
  7367  003F' 083A'              	movf	?___fladd+2,w
  7368  0040' 1683               	bsf	3,5	;RP0=1, select bank1
  7369  0041' 1303               	bcf	3,6	;RP1=0, select bank1
  7370  0042' 0080'              	movwf	(?___flsub+2)^(0+128)
  7371  0043' 1283               	bcf	3,5	;RP0=0, select bank0
  7372  0044' 1303               	bcf	3,6	;RP1=0, select bank0
  7373  0045' 0839'              	movf	?___fladd+1,w
  7374  0046' 1683               	bsf	3,5	;RP0=1, select bank1
  7375  0047' 1303               	bcf	3,6	;RP1=0, select bank1
  7376  0048' 0080'              	movwf	(?___flsub+1)^(0+128)
  7377  0049' 1283               	bcf	3,5	;RP0=0, select bank0
  7378  004A' 1303               	bcf	3,6	;RP1=0, select bank0
  7379  004B' 0838'              	movf	?___fladd,w
  7380  004C' 1683               	bsf	3,5	;RP0=1, select bank1
  7381  004D' 1303               	bcf	3,6	;RP1=0, select bank1
  7382  004E' 0080'              	movwf	?___flsub^(0+128)
  7383  004F'                    l837:
  7384  004F' 0008               	return
  7385  0050'                    __end_of___flsub:
  7386                           
  7387                           	psect	text20
  7388  0000'                    __ptext20:	
  7389 ;; *************** function ___fladd *****************
  7390 ;; Defined at:
  7391 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;  b               4   56[BANK0 ] long 
  7394 ;;  a               4   60[BANK0 ] long 
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;  grs             1   75[BANK0 ] unsigned char 
  7397 ;;  bexp            1   74[BANK0 ] unsigned char 
  7398 ;;  aexp            1   73[BANK0 ] unsigned char 
  7399 ;;  signs           1   72[BANK0 ] unsigned char 
  7400 ;; Return value:  Size  Location     Type
  7401 ;;                  4   56[BANK0 ] unsigned char 
  7402 ;; Registers used:
  7403 ;;		wreg, status,2, status,0, btemp+1
  7404 ;; Tracked objects:
  7405 ;;		On entry : 0/0
  7406 ;;		On exit  : 0/0
  7407 ;;		Unchanged: 0/0
  7408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7409 ;;      Params:         0       8       0       0       0
  7410 ;;      Locals:         0       4       0       0       0
  7411 ;;      Temps:          0       8       0       0       0
  7412 ;;      Totals:         0      20       0       0       0
  7413 ;;Total ram usage:       20 bytes
  7414 ;; Hardware stack levels used:    1
  7415 ;; Hardware stack levels required when called:    2
  7416 ;; This function calls:
  7417 ;;		Nothing
  7418 ;; This function is called by:
  7419 ;;		_sprintf
  7420 ;;		___flsub
  7421 ;; This function uses a non-reentrant model
  7422 ;;
  7423                           
  7424                           
  7425                           ;psect for function ___fladd
  7426  0000'                    ___fladd:
  7427  0000'                    l4155:	
  7428                           ;incstack = 0
  7429                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7430                           
  7431  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  7432  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  7433  0002' 083B'              	movf	___fladd@b+3,w
  7434  0003' 3980               	andlw	128
  7435  0004' 00C0'              	movwf	??___fladd
  7436  0005' 0840'              	movf	??___fladd,w
  7437  0006' 00C8'              	movwf	___fladd@signs
  7438  0007'                    l4157:
  7439  0007' 083B'              	movf	___fladd@b+3,w
  7440  0008' 00C0'              	movwf	??___fladd
  7441  0009' 0740'              	addwf	??___fladd,w
  7442  000A' 00C1'              	movwf	??___fladd+1
  7443  000B' 0841'              	movf	??___fladd+1,w
  7444  000C' 00CA'              	movwf	___fladd@bexp
  7445  000D'                    l4159:
  7446  000D' 1FBA'              	btfss	___fladd@b+2,7
  7447  000E' 2800'              	goto	u6721
  7448  000F' 2800'              	goto	u6720
  7449  0010'                    u6721:
  7450  0010' 2800'              	goto	l4163
  7451  0011'                    u6720:
  7452  0011'                    l4161:
  7453  0011' 144A'              	bsf	___fladd@bexp,0
  7454  0012'                    l4163:
  7455  0012' 084A'              	movf	___fladd@bexp,w
  7456  0013' 1903               	btfsc	3,2
  7457  0014' 2800'              	goto	u6731
  7458  0015' 2800'              	goto	u6730
  7459  0016'                    u6731:
  7460  0016' 2800'              	goto	l4173
  7461  0017'                    u6730:
  7462  0017'                    l4165:
  7463  0017' 0A4A'              	incf	___fladd@bexp,w
  7464  0018' 1D03               	btfss	3,2
  7465  0019' 2800'              	goto	u6741
  7466  001A' 2800'              	goto	u6740
  7467  001B'                    u6741:
  7468  001B' 2800'              	goto	l4169
  7469  001C'                    u6740:
  7470  001C'                    l4167:
  7471  001C' 3000               	movlw	0
  7472  001D' 00BB'              	movwf	___fladd@b+3
  7473  001E' 3000               	movlw	0
  7474  001F' 00BA'              	movwf	___fladd@b+2
  7475  0020' 3000               	movlw	0
  7476  0021' 00B9'              	movwf	___fladd@b+1
  7477  0022' 3000               	movlw	0
  7478  0023' 00B8'              	movwf	___fladd@b
  7479  0024'                    l4169:
  7480  0024' 17BA'              	bsf	___fladd@b+2,7
  7481  0025'                    l4171:
  7482  0025' 01BB'              	clrf	___fladd@b+3
  7483  0026' 2800'              	goto	l4175
  7484  0027'                    l4173:
  7485  0027' 3000               	movlw	0
  7486  0028' 00BB'              	movwf	___fladd@b+3
  7487  0029' 3000               	movlw	0
  7488  002A' 00BA'              	movwf	___fladd@b+2
  7489  002B' 3000               	movlw	0
  7490  002C' 00B9'              	movwf	___fladd@b+1
  7491  002D' 3000               	movlw	0
  7492  002E' 00B8'              	movwf	___fladd@b
  7493  002F'                    l4175:
  7494  002F' 083F'              	movf	___fladd@a+3,w
  7495  0030' 3980               	andlw	128
  7496  0031' 00C0'              	movwf	??___fladd
  7497  0032' 0840'              	movf	??___fladd,w
  7498  0033' 00C9'              	movwf	___fladd@aexp
  7499  0034'                    l4177:
  7500  0034' 0849'              	movf	___fladd@aexp,w
  7501  0035' 0648'              	xorwf	___fladd@signs,w
  7502  0036' 1903               	skipnz
  7503  0037' 2800'              	goto	u6751
  7504  0038' 2800'              	goto	u6750
  7505  0039'                    u6751:
  7506  0039' 2800'              	goto	l4181
  7507  003A'                    u6750:
  7508  003A'                    l4179:
  7509  003A' 1748'              	bsf	___fladd@signs,6
  7510  003B'                    l4181:
  7511  003B' 083F'              	movf	___fladd@a+3,w
  7512  003C' 00C0'              	movwf	??___fladd
  7513  003D' 0740'              	addwf	??___fladd,w
  7514  003E' 00C1'              	movwf	??___fladd+1
  7515  003F' 0841'              	movf	??___fladd+1,w
  7516  0040' 00C9'              	movwf	___fladd@aexp
  7517  0041'                    l4183:
  7518  0041' 1FBE'              	btfss	___fladd@a+2,7
  7519  0042' 2800'              	goto	u6761
  7520  0043' 2800'              	goto	u6760
  7521  0044'                    u6761:
  7522  0044' 2800'              	goto	l4187
  7523  0045'                    u6760:
  7524  0045'                    l4185:
  7525  0045' 1449'              	bsf	___fladd@aexp,0
  7526  0046'                    l4187:
  7527  0046' 0849'              	movf	___fladd@aexp,w
  7528  0047' 1903               	btfsc	3,2
  7529  0048' 2800'              	goto	u6771
  7530  0049' 2800'              	goto	u6770
  7531  004A'                    u6771:
  7532  004A' 2800'              	goto	l4197
  7533  004B'                    u6770:
  7534  004B'                    l4189:
  7535  004B' 0A49'              	incf	___fladd@aexp,w
  7536  004C' 1D03               	btfss	3,2
  7537  004D' 2800'              	goto	u6781
  7538  004E' 2800'              	goto	u6780
  7539  004F'                    u6781:
  7540  004F' 2800'              	goto	l4193
  7541  0050'                    u6780:
  7542  0050'                    l4191:
  7543  0050' 3000               	movlw	0
  7544  0051' 00BF'              	movwf	___fladd@a+3
  7545  0052' 3000               	movlw	0
  7546  0053' 00BE'              	movwf	___fladd@a+2
  7547  0054' 3000               	movlw	0
  7548  0055' 00BD'              	movwf	___fladd@a+1
  7549  0056' 3000               	movlw	0
  7550  0057' 00BC'              	movwf	___fladd@a
  7551  0058'                    l4193:
  7552  0058' 17BE'              	bsf	___fladd@a+2,7
  7553  0059'                    l4195:
  7554  0059' 01BF'              	clrf	___fladd@a+3
  7555  005A' 2800'              	goto	l791
  7556  005B'                    l4197:
  7557  005B' 3000               	movlw	0
  7558  005C' 00BF'              	movwf	___fladd@a+3
  7559  005D' 3000               	movlw	0
  7560  005E' 00BE'              	movwf	___fladd@a+2
  7561  005F' 3000               	movlw	0
  7562  0060' 00BD'              	movwf	___fladd@a+1
  7563  0061' 3000               	movlw	0
  7564  0062' 00BC'              	movwf	___fladd@a
  7565  0063'                    l791:
  7566  0063' 084A'              	movf	___fladd@bexp,w
  7567  0064' 0249'              	subwf	___fladd@aexp,w
  7568  0065' 1803               	skipnc
  7569  0066' 2800'              	goto	u6791
  7570  0067' 2800'              	goto	u6790
  7571  0068'                    u6791:
  7572  0068' 2800'              	goto	l4233
  7573  0069'                    u6790:
  7574  0069'                    l4199:
  7575  0069' 1F48'              	btfss	___fladd@signs,6
  7576  006A' 2800'              	goto	u6801
  7577  006B' 2800'              	goto	u6800
  7578  006C'                    u6801:
  7579  006C' 2800'              	goto	l4203
  7580  006D'                    u6800:
  7581  006D'                    l4201:
  7582  006D' 3080               	movlw	128
  7583  006E' 00C0'              	movwf	??___fladd
  7584  006F' 0840'              	movf	??___fladd,w
  7585  0070' 06C8'              	xorwf	___fladd@signs,f
  7586  0071'                    l4203:
  7587  0071' 084A'              	movf	___fladd@bexp,w
  7588  0072' 00C0'              	movwf	??___fladd
  7589  0073' 0840'              	movf	??___fladd,w
  7590  0074' 00CB'              	movwf	___fladd@grs
  7591  0075'                    l4205:
  7592  0075' 0849'              	movf	___fladd@aexp,w
  7593  0076' 00C0'              	movwf	??___fladd
  7594  0077' 0840'              	movf	??___fladd,w
  7595  0078' 00CA'              	movwf	___fladd@bexp
  7596  0079'                    l4207:
  7597  0079' 084B'              	movf	___fladd@grs,w
  7598  007A' 00C0'              	movwf	??___fladd
  7599  007B' 0840'              	movf	??___fladd,w
  7600  007C' 00C9'              	movwf	___fladd@aexp
  7601  007D'                    l4209:
  7602  007D' 0838'              	movf	___fladd@b,w
  7603  007E' 00C0'              	movwf	??___fladd
  7604  007F' 0840'              	movf	??___fladd,w
  7605  0080' 00CB'              	movwf	___fladd@grs
  7606  0081'                    l4211:
  7607  0081' 083C'              	movf	___fladd@a,w
  7608  0082' 00C0'              	movwf	??___fladd
  7609  0083' 0840'              	movf	??___fladd,w
  7610  0084' 00B8'              	movwf	___fladd@b
  7611  0085'                    l4213:
  7612  0085' 084B'              	movf	___fladd@grs,w
  7613  0086' 00C0'              	movwf	??___fladd
  7614  0087' 0840'              	movf	??___fladd,w
  7615  0088' 00BC'              	movwf	___fladd@a
  7616  0089'                    l4215:
  7617  0089' 0839'              	movf	___fladd@b+1,w
  7618  008A' 00C0'              	movwf	??___fladd
  7619  008B' 0840'              	movf	??___fladd,w
  7620  008C' 00CB'              	movwf	___fladd@grs
  7621  008D'                    l4217:
  7622  008D' 083D'              	movf	___fladd@a+1,w
  7623  008E' 00C0'              	movwf	??___fladd
  7624  008F' 0840'              	movf	??___fladd,w
  7625  0090' 00B9'              	movwf	___fladd@b+1
  7626  0091'                    l4219:
  7627  0091' 084B'              	movf	___fladd@grs,w
  7628  0092' 00C0'              	movwf	??___fladd
  7629  0093' 0840'              	movf	??___fladd,w
  7630  0094' 00BD'              	movwf	___fladd@a+1
  7631  0095'                    l4221:
  7632  0095' 083A'              	movf	___fladd@b+2,w
  7633  0096' 00C0'              	movwf	??___fladd
  7634  0097' 0840'              	movf	??___fladd,w
  7635  0098' 00CB'              	movwf	___fladd@grs
  7636  0099'                    l4223:
  7637  0099' 083E'              	movf	___fladd@a+2,w
  7638  009A' 00C0'              	movwf	??___fladd
  7639  009B' 0840'              	movf	??___fladd,w
  7640  009C' 00BA'              	movwf	___fladd@b+2
  7641  009D'                    l4225:
  7642  009D' 084B'              	movf	___fladd@grs,w
  7643  009E' 00C0'              	movwf	??___fladd
  7644  009F' 0840'              	movf	??___fladd,w
  7645  00A0' 00BE'              	movwf	___fladd@a+2
  7646  00A1'                    l4227:
  7647  00A1' 083B'              	movf	___fladd@b+3,w
  7648  00A2' 00C0'              	movwf	??___fladd
  7649  00A3' 0840'              	movf	??___fladd,w
  7650  00A4' 00CB'              	movwf	___fladd@grs
  7651  00A5'                    l4229:
  7652  00A5' 083F'              	movf	___fladd@a+3,w
  7653  00A6' 00C0'              	movwf	??___fladd
  7654  00A7' 0840'              	movf	??___fladd,w
  7655  00A8' 00BB'              	movwf	___fladd@b+3
  7656  00A9'                    l4231:
  7657  00A9' 084B'              	movf	___fladd@grs,w
  7658  00AA' 00C0'              	movwf	??___fladd
  7659  00AB' 0840'              	movf	??___fladd,w
  7660  00AC' 00BF'              	movwf	___fladd@a+3
  7661  00AD'                    l4233:
  7662  00AD' 01CB'              	clrf	___fladd@grs
  7663  00AE'                    l4235:
  7664  00AE' 0849'              	movf	___fladd@aexp,w
  7665  00AF' 00C0'              	movwf	??___fladd
  7666  00B0' 01C1'              	clrf	??___fladd+1
  7667  00B1' 0841'              	movf	??___fladd+1,w
  7668  00B2' 00C3'              	movwf	??___fladd+3
  7669  00B3' 084A'              	movf	___fladd@bexp,w
  7670  00B4' 0240'              	subwf	??___fladd,w
  7671  00B5' 00C2'              	movwf	??___fladd+2
  7672  00B6' 1C03               	skipc
  7673  00B7' 03C3'              	decf	??___fladd+3,f
  7674  00B8' 0843'              	movf	??___fladd+3,w
  7675  00B9' 3A80               	xorlw	128
  7676  00BA' 00FF               	movwf	btemp+1
  7677  00BB' 3080               	movlw	128
  7678  00BC' 027F               	subwf	btemp+1,w
  7679  00BD' 1D03               	skipz
  7680  00BE' 2800'              	goto	u6815
  7681  00BF' 301A               	movlw	26
  7682  00C0' 0242'              	subwf	??___fladd+2,w
  7683  00C1'                    u6815:
  7684  00C1' 1C03               	skipc
  7685  00C2' 2800'              	goto	u6811
  7686  00C3' 2800'              	goto	u6810
  7687  00C4'                    u6811:
  7688  00C4' 2800'              	goto	l4251
  7689  00C5'                    u6810:
  7690  00C5'                    l4237:
  7691  00C5' 1283               	bcf	3,5	;RP0=0, select bank0
  7692  00C6' 1303               	bcf	3,6	;RP1=0, select bank0
  7693  00C7' 083B'              	movf	___fladd@b+3,w
  7694  00C8' 043A'              	iorwf	___fladd@b+2,w
  7695  00C9' 0439'              	iorwf	___fladd@b+1,w
  7696  00CA' 0438'              	iorwf	___fladd@b,w
  7697  00CB' 1D03               	skipz
  7698  00CC' 2800'              	goto	u6821
  7699  00CD' 2800'              	goto	u6820
  7700  00CE'                    u6821:
  7701  00CE' 3001               	movlw	1
  7702  00CF' 2800'              	goto	u6830
  7703  00D0'                    u6820:
  7704  00D0' 3000               	movlw	0
  7705  00D1'                    u6830:
  7706  00D1' 00C0'              	movwf	??___fladd
  7707  00D2' 0840'              	movf	??___fladd,w
  7708  00D3' 00CB'              	movwf	___fladd@grs
  7709  00D4' 3000               	movlw	0
  7710  00D5' 00BB'              	movwf	___fladd@b+3
  7711  00D6' 3000               	movlw	0
  7712  00D7' 00BA'              	movwf	___fladd@b+2
  7713  00D8' 3000               	movlw	0
  7714  00D9' 00B9'              	movwf	___fladd@b+1
  7715  00DA' 3000               	movlw	0
  7716  00DB' 00B8'              	movwf	___fladd@b
  7717  00DC' 0849'              	movf	___fladd@aexp,w
  7718  00DD' 00C0'              	movwf	??___fladd
  7719  00DE' 0840'              	movf	??___fladd,w
  7720  00DF' 00CA'              	movwf	___fladd@bexp
  7721  00E0' 2800'              	goto	l795
  7722  00E1'                    l797:
  7723  00E1' 1C4B'              	btfss	___fladd@grs,0
  7724  00E2' 2800'              	goto	u6841
  7725  00E3' 2800'              	goto	u6840
  7726  00E4'                    u6841:
  7727  00E4' 2800'              	goto	l4241
  7728  00E5'                    u6840:
  7729  00E5'                    l4239:
  7730  00E5' 084B'              	movf	___fladd@grs,w
  7731  00E6' 00C0'              	movwf	??___fladd
  7732  00E7' 1003               	clrc
  7733  00E8' 0C40'              	rrf	??___fladd,w
  7734  00E9' 3801               	iorlw	1
  7735  00EA' 00C1'              	movwf	??___fladd+1
  7736  00EB' 0841'              	movf	??___fladd+1,w
  7737  00EC' 00CB'              	movwf	___fladd@grs
  7738  00ED' 2800'              	goto	l4243
  7739  00EE'                    l4241:
  7740  00EE' 1003               	clrc
  7741  00EF' 0CCB'              	rrf	___fladd@grs,f
  7742  00F0'                    l4243:
  7743  00F0' 1C38'              	btfss	___fladd@b,0
  7744  00F1' 2800'              	goto	u6851
  7745  00F2' 2800'              	goto	u6850
  7746  00F3'                    u6851:
  7747  00F3' 2800'              	goto	l4247
  7748  00F4'                    u6850:
  7749  00F4'                    l4245:
  7750  00F4' 17CB'              	bsf	___fladd@grs,7
  7751  00F5'                    l4247:
  7752  00F5' 3001               	movlw	1
  7753  00F6' 00C0'              	movwf	??___fladd
  7754  00F7'                    u6865:
  7755  00F7' 0D3B'              	rlf	___fladd@b+3,w
  7756  00F8' 0CBB'              	rrf	___fladd@b+3,f
  7757  00F9' 0CBA'              	rrf	___fladd@b+2,f
  7758  00FA' 0CB9'              	rrf	___fladd@b+1,f
  7759  00FB' 0CB8'              	rrf	___fladd@b,f
  7760  00FC' 0B80'              	decfsz	??___fladd& (0+127),f
  7761  00FD' 2800'              	goto	u6865
  7762  00FE'                    l4249:
  7763  00FE' 3001               	movlw	1
  7764  00FF' 00C0'              	movwf	??___fladd
  7765  0100' 0840'              	movf	??___fladd,w
  7766  0101' 07CA'              	addwf	___fladd@bexp,f
  7767  0102'                    l4251:
  7768  0102' 1283               	bcf	3,5	;RP0=0, select bank0
  7769  0103' 1303               	bcf	3,6	;RP1=0, select bank0
  7770  0104' 0849'              	movf	___fladd@aexp,w
  7771  0105' 024A'              	subwf	___fladd@bexp,w
  7772  0106' 1C03               	skipc
  7773  0107' 2800'              	goto	u6871
  7774  0108' 2800'              	goto	u6870
  7775  0109'                    u6871:
  7776  0109' 2800'              	goto	l797
  7777  010A'                    u6870:
  7778  010A'                    l795:
  7779  010A' 1B48'              	btfsc	___fladd@signs,6
  7780  010B' 2800'              	goto	u6881
  7781  010C' 2800'              	goto	u6880
  7782  010D'                    u6881:
  7783  010D' 2800'              	goto	l4277
  7784  010E'                    u6880:
  7785  010E'                    l4253:
  7786  010E' 084A'              	movf	___fladd@bexp,w
  7787  010F' 1D03               	btfss	3,2
  7788  0110' 2800'              	goto	u6891
  7789  0111' 2800'              	goto	u6890
  7790  0112'                    u6891:
  7791  0112' 2800'              	goto	l4259
  7792  0113'                    u6890:
  7793  0113'                    l4255:
  7794  0113' 3000               	movlw	0
  7795  0114' 00BB'              	movwf	?___fladd+3
  7796  0115' 3000               	movlw	0
  7797  0116' 00BA'              	movwf	?___fladd+2
  7798  0117' 3000               	movlw	0
  7799  0118' 00B9'              	movwf	?___fladd+1
  7800  0119' 3000               	movlw	0
  7801  011A' 00B8'              	movwf	?___fladd
  7802  011B' 2800'              	goto	l804
  7803  011C'                    l4259:
  7804  011C' 083C'              	movf	___fladd@a,w
  7805  011D' 07B8'              	addwf	___fladd@b,f
  7806  011E' 083D'              	movf	___fladd@a+1,w
  7807  011F' 1103               	clrz
  7808  0120' 1803               	skipnc
  7809  0121' 3E01               	addlw	1
  7810  0122' 1903               	skipnz
  7811  0123' 2800'              	goto	u6901
  7812  0124' 07B9'              	addwf	___fladd@b+1,f
  7813  0125'                    u6901:
  7814  0125' 083E'              	movf	___fladd@a+2,w
  7815  0126' 1103               	clrz
  7816  0127' 1803               	skipnc
  7817  0128' 3E01               	addlw	1
  7818  0129' 1903               	skipnz
  7819  012A' 2800'              	goto	u6902
  7820  012B' 07BA'              	addwf	___fladd@b+2,f
  7821  012C'                    u6902:
  7822  012C' 083F'              	movf	___fladd@a+3,w
  7823  012D' 1103               	clrz
  7824  012E' 1803               	skipnc
  7825  012F' 3E01               	addlw	1
  7826  0130' 1903               	skipnz
  7827  0131' 2800'              	goto	u6903
  7828  0132' 07BB'              	addwf	___fladd@b+3,f
  7829  0133'                    u6903:
  7830  0133'                    l4261:
  7831  0133' 1C3B'              	btfss	___fladd@b+3,0
  7832  0134' 2800'              	goto	u6911
  7833  0135' 2800'              	goto	u6910
  7834  0136'                    u6911:
  7835  0136' 2800'              	goto	l4311
  7836  0137'                    u6910:
  7837  0137'                    l4263:
  7838  0137' 1C4B'              	btfss	___fladd@grs,0
  7839  0138' 2800'              	goto	u6921
  7840  0139' 2800'              	goto	u6920
  7841  013A'                    u6921:
  7842  013A' 2800'              	goto	l4267
  7843  013B'                    u6920:
  7844  013B'                    l4265:
  7845  013B' 084B'              	movf	___fladd@grs,w
  7846  013C' 00C0'              	movwf	??___fladd
  7847  013D' 1003               	clrc
  7848  013E' 0C40'              	rrf	??___fladd,w
  7849  013F' 3801               	iorlw	1
  7850  0140' 00C1'              	movwf	??___fladd+1
  7851  0141' 0841'              	movf	??___fladd+1,w
  7852  0142' 00CB'              	movwf	___fladd@grs
  7853  0143' 2800'              	goto	l4269
  7854  0144'                    l4267:
  7855  0144' 1003               	clrc
  7856  0145' 0CCB'              	rrf	___fladd@grs,f
  7857  0146'                    l4269:
  7858  0146' 1C38'              	btfss	___fladd@b,0
  7859  0147' 2800'              	goto	u6931
  7860  0148' 2800'              	goto	u6930
  7861  0149'                    u6931:
  7862  0149' 2800'              	goto	l4273
  7863  014A'                    u6930:
  7864  014A'                    l4271:
  7865  014A' 17CB'              	bsf	___fladd@grs,7
  7866  014B'                    l4273:
  7867  014B' 3001               	movlw	1
  7868  014C' 00C0'              	movwf	??___fladd
  7869  014D'                    u6945:
  7870  014D' 0D3B'              	rlf	___fladd@b+3,w
  7871  014E' 0CBB'              	rrf	___fladd@b+3,f
  7872  014F' 0CBA'              	rrf	___fladd@b+2,f
  7873  0150' 0CB9'              	rrf	___fladd@b+1,f
  7874  0151' 0CB8'              	rrf	___fladd@b,f
  7875  0152' 0B80'              	decfsz	??___fladd& (0+127),f
  7876  0153' 2800'              	goto	u6945
  7877  0154'                    l4275:
  7878  0154' 3001               	movlw	1
  7879  0155' 00C0'              	movwf	??___fladd
  7880  0156' 0840'              	movf	??___fladd,w
  7881  0157' 07CA'              	addwf	___fladd@bexp,f
  7882  0158' 2800'              	goto	l4311
  7883  0159'                    l4277:
  7884  0159' 083B'              	movf	___fladd@b+3,w
  7885  015A' 3A80               	xorlw	128
  7886  015B' 00FF               	movwf	btemp+1
  7887  015C' 083F'              	movf	___fladd@a+3,w
  7888  015D' 3A80               	xorlw	128
  7889  015E' 027F               	subwf	btemp+1,w
  7890  015F' 1D03               	skipz
  7891  0160' 2800'              	goto	u6953
  7892  0161' 083E'              	movf	___fladd@a+2,w
  7893  0162' 023A'              	subwf	___fladd@b+2,w
  7894  0163' 1D03               	skipz
  7895  0164' 2800'              	goto	u6953
  7896  0165' 083D'              	movf	___fladd@a+1,w
  7897  0166' 0239'              	subwf	___fladd@b+1,w
  7898  0167' 1D03               	skipz
  7899  0168' 2800'              	goto	u6953
  7900  0169' 083C'              	movf	___fladd@a,w
  7901  016A' 0238'              	subwf	___fladd@b,w
  7902  016B'                    u6953:
  7903  016B' 1803               	skipnc
  7904  016C' 2800'              	goto	u6951
  7905  016D' 2800'              	goto	u6950
  7906  016E'                    u6951:
  7907  016E' 2800'              	goto	l4287
  7908  016F'                    u6950:
  7909  016F'                    l4279:
  7910  016F' 30FF               	movlw	255
  7911  0170' 00C0'              	movwf	??___fladd
  7912  0171' 30FF               	movlw	255
  7913  0172' 00C1'              	movwf	??___fladd+1
  7914  0173' 30FF               	movlw	255
  7915  0174' 00C2'              	movwf	??___fladd+2
  7916  0175' 30FF               	movlw	255
  7917  0176' 00C3'              	movwf	??___fladd+3
  7918  0177' 083C'              	movf	___fladd@a,w
  7919  0178' 00C4'              	movwf	??___fladd+4
  7920  0179' 083D'              	movf	___fladd@a+1,w
  7921  017A' 00C5'              	movwf	??___fladd+5
  7922  017B' 083E'              	movf	___fladd@a+2,w
  7923  017C' 00C6'              	movwf	??___fladd+6
  7924  017D' 083F'              	movf	___fladd@a+3,w
  7925  017E' 00C7'              	movwf	??___fladd+7
  7926  017F' 0838'              	movf	___fladd@b,w
  7927  0180' 02C4'              	subwf	??___fladd+4,f
  7928  0181' 0839'              	movf	___fladd@b+1,w
  7929  0182' 1C03               	skipc
  7930  0183' 0F39'              	incfsz	___fladd@b+1,w
  7931  0184' 2800'              	goto	u6961
  7932  0185' 2800'              	goto	u6962
  7933  0186'                    u6961:
  7934  0186' 02C5'              	subwf	??___fladd+5,f
  7935  0187'                    u6962:
  7936  0187' 083A'              	movf	___fladd@b+2,w
  7937  0188' 1C03               	skipc
  7938  0189' 0F3A'              	incfsz	___fladd@b+2,w
  7939  018A' 2800'              	goto	u6963
  7940  018B' 2800'              	goto	u6964
  7941  018C'                    u6963:
  7942  018C' 02C6'              	subwf	??___fladd+6,f
  7943  018D'                    u6964:
  7944  018D' 083B'              	movf	___fladd@b+3,w
  7945  018E' 1C03               	skipc
  7946  018F' 0F3B'              	incfsz	___fladd@b+3,w
  7947  0190' 2800'              	goto	u6965
  7948  0191' 2800'              	goto	u6966
  7949  0192'                    u6965:
  7950  0192' 02C7'              	subwf	??___fladd+7,f
  7951  0193'                    u6966:
  7952  0193' 0844'              	movf	??___fladd+4,w
  7953  0194' 07C0'              	addwf	??___fladd,f
  7954  0195' 0845'              	movf	??___fladd+5,w
  7955  0196' 1803               	skipnc
  7956  0197' 0F45'              	incfsz	??___fladd+5,w
  7957  0198' 2800'              	goto	u6970
  7958  0199' 2800'              	goto	u6971
  7959  019A'                    u6970:
  7960  019A' 07C1'              	addwf	??___fladd+1,f
  7961  019B'                    u6971:
  7962  019B' 0846'              	movf	??___fladd+6,w
  7963  019C' 1803               	skipnc
  7964  019D' 0F46'              	incfsz	??___fladd+6,w
  7965  019E' 2800'              	goto	u6972
  7966  019F' 2800'              	goto	u6973
  7967  01A0'                    u6972:
  7968  01A0' 07C2'              	addwf	??___fladd+2,f
  7969  01A1'                    u6973:
  7970  01A1' 0847'              	movf	??___fladd+7,w
  7971  01A2' 1803               	skipnc
  7972  01A3' 0A47'              	incf	??___fladd+7,w
  7973  01A4' 07C3'              	addwf	??___fladd+3,f
  7974  01A5' 0843'              	movf	??___fladd+3,w
  7975  01A6' 00BB'              	movwf	___fladd@b+3
  7976  01A7' 0842'              	movf	??___fladd+2,w
  7977  01A8' 00BA'              	movwf	___fladd@b+2
  7978  01A9' 0841'              	movf	??___fladd+1,w
  7979  01AA' 00B9'              	movwf	___fladd@b+1
  7980  01AB' 0840'              	movf	??___fladd,w
  7981  01AC' 00B8'              	movwf	___fladd@b
  7982  01AD'                    l4281:
  7983  01AD' 3080               	movlw	128
  7984  01AE' 00C0'              	movwf	??___fladd
  7985  01AF' 0840'              	movf	??___fladd,w
  7986  01B0' 06C8'              	xorwf	___fladd@signs,f
  7987  01B1' 09CB'              	comf	___fladd@grs,f
  7988  01B2' 0ACB'              	incf	___fladd@grs,f
  7989  01B3'                    l4283:
  7990  01B3' 084B'              	movf	___fladd@grs,w
  7991  01B4' 1D03               	btfss	3,2
  7992  01B5' 2800'              	goto	u6981
  7993  01B6' 2800'              	goto	u6980
  7994  01B7'                    u6981:
  7995  01B7' 2800'              	goto	l812
  7996  01B8'                    u6980:
  7997  01B8'                    l4285:
  7998  01B8' 3001               	movlw	1
  7999  01B9' 07B8'              	addwf	___fladd@b,f
  8000  01BA' 3000               	movlw	0
  8001  01BB' 1803               	skipnc
  8002  01BC' 3001               	movlw	1
  8003  01BD' 07B9'              	addwf	___fladd@b+1,f
  8004  01BE' 3000               	movlw	0
  8005  01BF' 1803               	skipnc
  8006  01C0' 3001               	movlw	1
  8007  01C1' 07BA'              	addwf	___fladd@b+2,f
  8008  01C2' 3000               	movlw	0
  8009  01C3' 1803               	skipnc
  8010  01C4' 3001               	movlw	1
  8011  01C5' 07BB'              	addwf	___fladd@b+3,f
  8012  01C6' 2800'              	goto	l812
  8013  01C7'                    l4287:
  8014  01C7' 083C'              	movf	___fladd@a,w
  8015  01C8' 02B8'              	subwf	___fladd@b,f
  8016  01C9' 083D'              	movf	___fladd@a+1,w
  8017  01CA' 1C03               	skipc
  8018  01CB' 0F3D'              	incfsz	___fladd@a+1,w
  8019  01CC' 02B9'              	subwf	___fladd@b+1,f
  8020  01CD' 083E'              	movf	___fladd@a+2,w
  8021  01CE' 1C03               	skipc
  8022  01CF' 0F3E'              	incfsz	___fladd@a+2,w
  8023  01D0' 02BA'              	subwf	___fladd@b+2,f
  8024  01D1' 083F'              	movf	___fladd@a+3,w
  8025  01D2' 1C03               	skipc
  8026  01D3' 0F3F'              	incfsz	___fladd@a+3,w
  8027  01D4' 02BB'              	subwf	___fladd@b+3,f
  8028  01D5'                    l812:
  8029  01D5' 083B'              	movf	___fladd@b+3,w
  8030  01D6' 043A'              	iorwf	___fladd@b+2,w
  8031  01D7' 0439'              	iorwf	___fladd@b+1,w
  8032  01D8' 0438'              	iorwf	___fladd@b,w
  8033  01D9' 1D03               	skipz
  8034  01DA' 2800'              	goto	u6991
  8035  01DB' 2800'              	goto	u6990
  8036  01DC'                    u6991:
  8037  01DC' 2800'              	goto	l4309
  8038  01DD'                    u6990:
  8039  01DD'                    l4289:
  8040  01DD' 084B'              	movf	___fladd@grs,w
  8041  01DE' 1D03               	btfss	3,2
  8042  01DF' 2800'              	goto	u7001
  8043  01E0' 2800'              	goto	u7000
  8044  01E1'                    u7001:
  8045  01E1' 2800'              	goto	l4309
  8046  01E2'                    u7000:
  8047  01E2'                    l4291:
  8048  01E2' 3000               	movlw	0
  8049  01E3' 00BB'              	movwf	?___fladd+3
  8050  01E4' 3000               	movlw	0
  8051  01E5' 00BA'              	movwf	?___fladd+2
  8052  01E6' 3000               	movlw	0
  8053  01E7' 00B9'              	movwf	?___fladd+1
  8054  01E8' 3000               	movlw	0
  8055  01E9' 00B8'              	movwf	?___fladd
  8056  01EA' 2800'              	goto	l804
  8057  01EB'                    l4295:
  8058  01EB' 3001               	movlw	1
  8059  01EC' 00C0'              	movwf	??___fladd
  8060  01ED'                    u7015:
  8061  01ED' 1003               	clrc
  8062  01EE' 0DB8'              	rlf	___fladd@b,f
  8063  01EF' 0DB9'              	rlf	___fladd@b+1,f
  8064  01F0' 0DBA'              	rlf	___fladd@b+2,f
  8065  01F1' 0DBB'              	rlf	___fladd@b+3,f
  8066  01F2' 0BC0'              	decfsz	??___fladd,f
  8067  01F3' 2800'              	goto	u7015
  8068  01F4'                    l4297:
  8069  01F4' 1FCB'              	btfss	___fladd@grs,7
  8070  01F5' 2800'              	goto	u7021
  8071  01F6' 2800'              	goto	u7020
  8072  01F7'                    u7021:
  8073  01F7' 2800'              	goto	l816
  8074  01F8'                    u7020:
  8075  01F8'                    l4299:
  8076  01F8' 1438'              	bsf	___fladd@b,0
  8077  01F9'                    l816:
  8078  01F9' 1C4B'              	btfss	___fladd@grs,0
  8079  01FA' 2800'              	goto	u7031
  8080  01FB' 2800'              	goto	u7030
  8081  01FC'                    u7031:
  8082  01FC' 2800'              	goto	l4303
  8083  01FD'                    u7030:
  8084  01FD'                    l4301:
  8085  01FD' 1403               	setc
  8086  01FE' 0DCB'              	rlf	___fladd@grs,f
  8087  01FF' 2800'              	goto	l4305
  8088  0200'                    l4303:
  8089  0200' 1003               	clrc
  8090  0201' 0DCB'              	rlf	___fladd@grs,f
  8091  0202'                    l4305:
  8092  0202' 084A'              	movf	___fladd@bexp,w
  8093  0203' 1903               	btfsc	3,2
  8094  0204' 2800'              	goto	u7041
  8095  0205' 2800'              	goto	u7040
  8096  0206'                    u7041:
  8097  0206' 2800'              	goto	l4309
  8098  0207'                    u7040:
  8099  0207'                    l4307:
  8100  0207' 3001               	movlw	1
  8101  0208' 02CA'              	subwf	___fladd@bexp,f
  8102  0209'                    l4309:
  8103  0209' 1FBA'              	btfss	___fladd@b+2,7
  8104  020A' 2800'              	goto	u7051
  8105  020B' 2800'              	goto	u7050
  8106  020C'                    u7051:
  8107  020C' 2800'              	goto	l4295
  8108  020D'                    u7050:
  8109  020D'                    l4311:
  8110  020D' 01C9'              	clrf	___fladd@aexp
  8111  020E'                    l4313:
  8112  020E' 1FCB'              	btfss	___fladd@grs,7
  8113  020F' 2800'              	goto	u7061
  8114  0210' 2800'              	goto	u7060
  8115  0211'                    u7061:
  8116  0211' 2800'              	goto	l4321
  8117  0212'                    u7060:
  8118  0212'                    l4315:
  8119  0212' 084B'              	movf	___fladd@grs,w
  8120  0213' 397F               	andlw	127
  8121  0214' 1903               	btfsc	3,2
  8122  0215' 2800'              	goto	u7071
  8123  0216' 2800'              	goto	u7070
  8124  0217'                    u7071:
  8125  0217' 2800'              	goto	l822
  8126  0218'                    u7070:
  8127  0218'                    l4317:
  8128  0218' 01C9'              	clrf	___fladd@aexp
  8129  0219' 0AC9'              	incf	___fladd@aexp,f
  8130  021A' 2800'              	goto	l4321
  8131  021B'                    l822:
  8132  021B' 1C38'              	btfss	___fladd@b,0
  8133  021C' 2800'              	goto	u7081
  8134  021D' 2800'              	goto	u7080
  8135  021E'                    u7081:
  8136  021E' 2800'              	goto	l4321
  8137  021F'                    u7080:
  8138  021F' 2800'              	goto	l4317
  8139  0220'                    l4321:
  8140  0220' 0849'              	movf	___fladd@aexp,w
  8141  0221' 1903               	btfsc	3,2
  8142  0222' 2800'              	goto	u7091
  8143  0223' 2800'              	goto	u7090
  8144  0224'                    u7091:
  8145  0224' 2800'              	goto	l825
  8146  0225'                    u7090:
  8147  0225'                    l4323:
  8148  0225' 3001               	movlw	1
  8149  0226' 07B8'              	addwf	___fladd@b,f
  8150  0227' 3000               	movlw	0
  8151  0228' 1803               	skipnc
  8152  0229' 3001               	movlw	1
  8153  022A' 07B9'              	addwf	___fladd@b+1,f
  8154  022B' 3000               	movlw	0
  8155  022C' 1803               	skipnc
  8156  022D' 3001               	movlw	1
  8157  022E' 07BA'              	addwf	___fladd@b+2,f
  8158  022F' 3000               	movlw	0
  8159  0230' 1803               	skipnc
  8160  0231' 3001               	movlw	1
  8161  0232' 07BB'              	addwf	___fladd@b+3,f
  8162  0233'                    l4325:
  8163  0233' 1C3B'              	btfss	___fladd@b+3,0
  8164  0234' 2800'              	goto	u7101
  8165  0235' 2800'              	goto	u7100
  8166  0236'                    u7101:
  8167  0236' 2800'              	goto	l825
  8168  0237'                    u7100:
  8169  0237'                    l4327:
  8170  0237' 0838'              	movf	___fladd@b,w
  8171  0238' 00C0'              	movwf	??___fladd
  8172  0239' 0839'              	movf	___fladd@b+1,w
  8173  023A' 00C1'              	movwf	??___fladd+1
  8174  023B' 083A'              	movf	___fladd@b+2,w
  8175  023C' 00C2'              	movwf	??___fladd+2
  8176  023D' 083B'              	movf	___fladd@b+3,w
  8177  023E' 00C3'              	movwf	??___fladd+3
  8178  023F' 3001               	movlw	1
  8179  0240' 00C4'              	movwf	??___fladd+4
  8180  0241'                    u7115:
  8181  0241' 0D43'              	rlf	??___fladd+3,w
  8182  0242' 0CC3'              	rrf	??___fladd+3,f
  8183  0243' 0CC2'              	rrf	??___fladd+2,f
  8184  0244' 0CC1'              	rrf	??___fladd+1,f
  8185  0245' 0CC0'              	rrf	??___fladd,f
  8186  0246'                    u7110:
  8187  0246' 0BC4'              	decfsz	??___fladd+4,f
  8188  0247' 2800'              	goto	u7115
  8189  0248' 0843'              	movf	??___fladd+3,w
  8190  0249' 00BB'              	movwf	___fladd@b+3
  8191  024A' 0842'              	movf	??___fladd+2,w
  8192  024B' 00BA'              	movwf	___fladd@b+2
  8193  024C' 0841'              	movf	??___fladd+1,w
  8194  024D' 00B9'              	movwf	___fladd@b+1
  8195  024E' 0840'              	movf	??___fladd,w
  8196  024F' 00B8'              	movwf	___fladd@b
  8197  0250' 0A4A'              	incf	___fladd@bexp,w
  8198  0251' 1903               	btfsc	3,2
  8199  0252' 2800'              	goto	u7121
  8200  0253' 2800'              	goto	u7120
  8201  0254'                    u7121:
  8202  0254' 2800'              	goto	l825
  8203  0255'                    u7120:
  8204  0255'                    l4329:
  8205  0255' 3001               	movlw	1
  8206  0256' 00C0'              	movwf	??___fladd
  8207  0257' 0840'              	movf	??___fladd,w
  8208  0258' 07CA'              	addwf	___fladd@bexp,f
  8209  0259'                    l825:
  8210  0259' 0A4A'              	incf	___fladd@bexp,w
  8211  025A' 1903               	btfsc	3,2
  8212  025B' 2800'              	goto	u7131
  8213  025C' 2800'              	goto	u7130
  8214  025D'                    u7131:
  8215  025D' 2800'              	goto	l4333
  8216  025E'                    u7130:
  8217  025E'                    l4331:
  8218  025E' 084A'              	movf	___fladd@bexp,w
  8219  025F' 1D03               	btfss	3,2
  8220  0260' 2800'              	goto	u7141
  8221  0261' 2800'              	goto	u7140
  8222  0262'                    u7141:
  8223  0262' 2800'              	goto	l4339
  8224  0263'                    u7140:
  8225  0263'                    l4333:
  8226  0263' 3000               	movlw	0
  8227  0264' 00BB'              	movwf	___fladd@b+3
  8228  0265' 3000               	movlw	0
  8229  0266' 00BA'              	movwf	___fladd@b+2
  8230  0267' 3000               	movlw	0
  8231  0268' 00B9'              	movwf	___fladd@b+1
  8232  0269' 3000               	movlw	0
  8233  026A' 00B8'              	movwf	___fladd@b
  8234  026B'                    l4335:
  8235  026B' 084A'              	movf	___fladd@bexp,w
  8236  026C' 1D03               	btfss	3,2
  8237  026D' 2800'              	goto	u7151
  8238  026E' 2800'              	goto	u7150
  8239  026F'                    u7151:
  8240  026F' 2800'              	goto	l4339
  8241  0270'                    u7150:
  8242  0270'                    l4337:
  8243  0270' 01C8'              	clrf	___fladd@signs
  8244  0271'                    l4339:
  8245  0271' 1C4A'              	btfss	___fladd@bexp,0
  8246  0272' 2800'              	goto	u7161
  8247  0273' 2800'              	goto	u7160
  8248  0274'                    u7161:
  8249  0274' 2800'              	goto	l4343
  8250  0275'                    u7160:
  8251  0275'                    l4341:
  8252  0275' 17BA'              	bsf	___fladd@b+2,7
  8253  0276' 2800'              	goto	l833
  8254  0277'                    l4343:
  8255  0277' 307F               	movlw	127
  8256  0278' 00C0'              	movwf	??___fladd
  8257  0279' 0840'              	movf	??___fladd,w
  8258  027A' 05BA'              	andwf	___fladd@b+2,f
  8259  027B'                    l833:
  8260  027B' 084A'              	movf	___fladd@bexp,w
  8261  027C' 00C0'              	movwf	??___fladd
  8262  027D' 1003               	clrc
  8263  027E' 0C40'              	rrf	??___fladd,w
  8264  027F' 00C1'              	movwf	??___fladd+1
  8265  0280' 0841'              	movf	??___fladd+1,w
  8266  0281' 00BB'              	movwf	___fladd@b+3
  8267  0282'                    l4345:
  8268  0282' 1FC8'              	btfss	___fladd@signs,7
  8269  0283' 2800'              	goto	u7171
  8270  0284' 2800'              	goto	u7170
  8271  0285'                    u7171:
  8272  0285' 2800'              	goto	l834
  8273  0286'                    u7170:
  8274  0286'                    l4347:
  8275  0286' 17BB'              	bsf	___fladd@b+3,7
  8276  0287'                    l834:
  8277  0287'                    l804:
  8278  0287' 0008               	return
  8279  0288'                    __end_of___fladd:
  8280                           
  8281                           	psect	text21
  8282  0000'                    __ptext21:	
  8283 ;; *************** function ___flneg *****************
  8284 ;; Defined at:
  8285 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8286 ;; Parameters:    Size  Location     Type
  8287 ;;  f1              4    3[COMMON] unsigned char 
  8288 ;; Auto vars:     Size  Location     Type
  8289 ;;		None
  8290 ;; Return value:  Size  Location     Type
  8291 ;;                  4    3[COMMON] unsigned char 
  8292 ;; Registers used:
  8293 ;;		wreg
  8294 ;; Tracked objects:
  8295 ;;		On entry : 0/0
  8296 ;;		On exit  : 0/0
  8297 ;;		Unchanged: 0/0
  8298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8299 ;;      Params:         4       0       0       0       0
  8300 ;;      Locals:         0       0       0       0       0
  8301 ;;      Temps:          0       0       0       0       0
  8302 ;;      Totals:         4       0       0       0       0
  8303 ;;Total ram usage:        4 bytes
  8304 ;; Hardware stack levels used:    1
  8305 ;; Hardware stack levels required when called:    2
  8306 ;; This function calls:
  8307 ;;		Nothing
  8308 ;; This function is called by:
  8309 ;;		_sprintf
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           
  8314                           ;psect for function ___flneg
  8315  0000'                    ___flneg:
  8316  0000'                    l4797:	
  8317                           ;incstack = 0
  8318                           ; Regs used in ___flneg: [wreg]
  8319                           
  8320  0000' 0806'              	movf	___flneg@f1+3,w
  8321  0001' 0405'              	iorwf	___flneg@f1+2,w
  8322  0002' 0404'              	iorwf	___flneg@f1+1,w
  8323  0003' 0403'              	iorwf	___flneg@f1,w
  8324  0004' 1903               	skipnz
  8325  0005' 2800'              	goto	u8391
  8326  0006' 2800'              	goto	u8390
  8327  0007'                    u8391:
  8328  0007' 2800'              	goto	l4801
  8329  0008'                    u8390:
  8330  0008'                    l4799:
  8331  0008' 3080               	movlw	128
  8332  0009' 0686'              	xorwf	___flneg@f1+3,f
  8333  000A'                    l4801:
  8334  000A'                    l663:
  8335  000A' 0008               	return
  8336  000B'                    __end_of___flneg:
  8337                           
  8338                           	psect	text22
  8339  0000'                    __ptext22:	
  8340 ;; *************** function ___flge *****************
  8341 ;; Defined at:
  8342 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8343 ;; Parameters:    Size  Location     Type
  8344 ;;  ff1             4    0[BANK0 ] unsigned char 
  8345 ;;  ff2             4    4[BANK0 ] unsigned char 
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;		None
  8348 ;; Return value:  Size  Location     Type
  8349 ;;		None               void
  8350 ;; Registers used:
  8351 ;;		wreg, status,2, status,0
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 0/0
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8357 ;;      Params:         0       8       0       0       0
  8358 ;;      Locals:         0       0       0       0       0
  8359 ;;      Temps:          4       0       0       0       0
  8360 ;;      Totals:         4       8       0       0       0
  8361 ;;Total ram usage:       12 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; Hardware stack levels required when called:    2
  8364 ;; This function calls:
  8365 ;;		Nothing
  8366 ;; This function is called by:
  8367 ;;		_sprintf
  8368 ;; This function uses a non-reentrant model
  8369 ;;
  8370                           
  8371                           
  8372                           ;psect for function ___flge
  8373  0000'                    ___flge:
  8374  0000'                    l4777:	
  8375                           ;incstack = 0
  8376                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8377                           
  8378  0000' 3000               	movlw	0
  8379  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  8380  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  8381  0003' 0500'              	andwf	___flge@ff1,w
  8382  0004' 0083'              	movwf	??___flge
  8383  0005' 3000               	movlw	0
  8384  0006' 0501'              	andwf	___flge@ff1+1,w
  8385  0007' 0084'              	movwf	??___flge+1
  8386  0008' 3080               	movlw	128
  8387  0009' 0502'              	andwf	___flge@ff1+2,w
  8388  000A' 0085'              	movwf	??___flge+2
  8389  000B' 307F               	movlw	127
  8390  000C' 0503'              	andwf	___flge@ff1+3,w
  8391  000D' 0086'              	movwf	??___flge+3
  8392  000E' 0806'              	movf	??___flge+3,w
  8393  000F' 0405'              	iorwf	??___flge+2,w
  8394  0010' 0404'              	iorwf	??___flge+1,w
  8395  0011' 0403'              	iorwf	??___flge,w
  8396  0012' 1D03               	skipz
  8397  0013' 2800'              	goto	u8321
  8398  0014' 2800'              	goto	u8320
  8399  0015'                    u8321:
  8400  0015' 2800'              	goto	l655
  8401  0016'                    u8320:
  8402  0016'                    l4779:
  8403  0016' 3000               	movlw	0
  8404  0017' 0083'              	movwf	___flge@ff1+3
  8405  0018' 3000               	movlw	0
  8406  0019' 0082'              	movwf	___flge@ff1+2
  8407  001A' 3000               	movlw	0
  8408  001B' 0081'              	movwf	___flge@ff1+1
  8409  001C' 3000               	movlw	0
  8410  001D' 0080'              	movwf	___flge@ff1
  8411  001E'                    l655:
  8412  001E' 3000               	movlw	0
  8413  001F' 0504'              	andwf	___flge@ff2,w
  8414  0020' 0083'              	movwf	??___flge
  8415  0021' 3000               	movlw	0
  8416  0022' 0505'              	andwf	___flge@ff2+1,w
  8417  0023' 0084'              	movwf	??___flge+1
  8418  0024' 3080               	movlw	128
  8419  0025' 0506'              	andwf	___flge@ff2+2,w
  8420  0026' 0085'              	movwf	??___flge+2
  8421  0027' 307F               	movlw	127
  8422  0028' 0507'              	andwf	___flge@ff2+3,w
  8423  0029' 0086'              	movwf	??___flge+3
  8424  002A' 0806'              	movf	??___flge+3,w
  8425  002B' 0405'              	iorwf	??___flge+2,w
  8426  002C' 0404'              	iorwf	??___flge+1,w
  8427  002D' 0403'              	iorwf	??___flge,w
  8428  002E' 1D03               	skipz
  8429  002F' 2800'              	goto	u8331
  8430  0030' 2800'              	goto	u8330
  8431  0031'                    u8331:
  8432  0031' 2800'              	goto	l4783
  8433  0032'                    u8330:
  8434  0032'                    l4781:
  8435  0032' 3000               	movlw	0
  8436  0033' 0087'              	movwf	___flge@ff2+3
  8437  0034' 3000               	movlw	0
  8438  0035' 0086'              	movwf	___flge@ff2+2
  8439  0036' 3000               	movlw	0
  8440  0037' 0085'              	movwf	___flge@ff2+1
  8441  0038' 3000               	movlw	0
  8442  0039' 0084'              	movwf	___flge@ff2
  8443  003A'                    l4783:
  8444  003A' 1F83'              	btfss	___flge@ff1+3,7
  8445  003B' 2800'              	goto	u8341
  8446  003C' 2800'              	goto	u8340
  8447  003D'                    u8341:
  8448  003D' 2800'              	goto	l4787
  8449  003E'                    u8340:
  8450  003E'                    l4785:
  8451  003E' 3000               	movlw	0
  8452  003F' 0083'              	movwf	??___flge
  8453  0040' 3000               	movlw	0
  8454  0041' 0084'              	movwf	??___flge+1
  8455  0042' 3000               	movlw	0
  8456  0043' 0085'              	movwf	??___flge+2
  8457  0044' 3080               	movlw	128
  8458  0045' 0086'              	movwf	??___flge+3
  8459  0046' 0800'              	movf	___flge@ff1,w
  8460  0047' 0283'              	subwf	??___flge,f
  8461  0048' 0801'              	movf	___flge@ff1+1,w
  8462  0049' 1C03               	skipc
  8463  004A' 0F01'              	incfsz	___flge@ff1+1,w
  8464  004B' 2800'              	goto	u8351
  8465  004C' 2800'              	goto	u8352
  8466  004D'                    u8351:
  8467  004D' 0284'              	subwf	??___flge+1,f
  8468  004E'                    u8352:
  8469  004E' 0802'              	movf	___flge@ff1+2,w
  8470  004F' 1C03               	skipc
  8471  0050' 0F02'              	incfsz	___flge@ff1+2,w
  8472  0051' 2800'              	goto	u8353
  8473  0052' 2800'              	goto	u8354
  8474  0053'                    u8353:
  8475  0053' 0285'              	subwf	??___flge+2,f
  8476  0054'                    u8354:
  8477  0054' 0803'              	movf	___flge@ff1+3,w
  8478  0055' 1C03               	skipc
  8479  0056' 0F03'              	incfsz	___flge@ff1+3,w
  8480  0057' 2800'              	goto	u8355
  8481  0058' 2800'              	goto	u8356
  8482  0059'                    u8355:
  8483  0059' 0286'              	subwf	??___flge+3,f
  8484  005A'                    u8356:
  8485  005A' 0806'              	movf	??___flge+3,w
  8486  005B' 0083'              	movwf	___flge@ff1+3
  8487  005C' 0805'              	movf	??___flge+2,w
  8488  005D' 0082'              	movwf	___flge@ff1+2
  8489  005E' 0804'              	movf	??___flge+1,w
  8490  005F' 0081'              	movwf	___flge@ff1+1
  8491  0060' 0803'              	movf	??___flge,w
  8492  0061' 0080'              	movwf	___flge@ff1
  8493  0062'                    l4787:
  8494  0062' 1F87'              	btfss	___flge@ff2+3,7
  8495  0063' 2800'              	goto	u8361
  8496  0064' 2800'              	goto	u8360
  8497  0065'                    u8361:
  8498  0065' 2800'              	goto	l658
  8499  0066'                    u8360:
  8500  0066'                    l4789:
  8501  0066' 3000               	movlw	0
  8502  0067' 0083'              	movwf	??___flge
  8503  0068' 3000               	movlw	0
  8504  0069' 0084'              	movwf	??___flge+1
  8505  006A' 3000               	movlw	0
  8506  006B' 0085'              	movwf	??___flge+2
  8507  006C' 3080               	movlw	128
  8508  006D' 0086'              	movwf	??___flge+3
  8509  006E' 0804'              	movf	___flge@ff2,w
  8510  006F' 0283'              	subwf	??___flge,f
  8511  0070' 0805'              	movf	___flge@ff2+1,w
  8512  0071' 1C03               	skipc
  8513  0072' 0F05'              	incfsz	___flge@ff2+1,w
  8514  0073' 2800'              	goto	u8371
  8515  0074' 2800'              	goto	u8372
  8516  0075'                    u8371:
  8517  0075' 0284'              	subwf	??___flge+1,f
  8518  0076'                    u8372:
  8519  0076' 0806'              	movf	___flge@ff2+2,w
  8520  0077' 1C03               	skipc
  8521  0078' 0F06'              	incfsz	___flge@ff2+2,w
  8522  0079' 2800'              	goto	u8373
  8523  007A' 2800'              	goto	u8374
  8524  007B'                    u8373:
  8525  007B' 0285'              	subwf	??___flge+2,f
  8526  007C'                    u8374:
  8527  007C' 0807'              	movf	___flge@ff2+3,w
  8528  007D' 1C03               	skipc
  8529  007E' 0F07'              	incfsz	___flge@ff2+3,w
  8530  007F' 2800'              	goto	u8375
  8531  0080' 2800'              	goto	u8376
  8532  0081'                    u8375:
  8533  0081' 0286'              	subwf	??___flge+3,f
  8534  0082'                    u8376:
  8535  0082' 0806'              	movf	??___flge+3,w
  8536  0083' 0087'              	movwf	___flge@ff2+3
  8537  0084' 0805'              	movf	??___flge+2,w
  8538  0085' 0086'              	movwf	___flge@ff2+2
  8539  0086' 0804'              	movf	??___flge+1,w
  8540  0087' 0085'              	movwf	___flge@ff2+1
  8541  0088' 0803'              	movf	??___flge,w
  8542  0089' 0084'              	movwf	___flge@ff2
  8543  008A'                    l658:
  8544  008A' 3080               	movlw	128
  8545  008B' 0683'              	xorwf	___flge@ff1+3,f
  8546  008C' 3080               	movlw	128
  8547  008D' 0687'              	xorwf	___flge@ff2+3,f
  8548  008E' 0807'              	movf	___flge@ff2+3,w
  8549  008F' 0203'              	subwf	___flge@ff1+3,w
  8550  0090' 1D03               	skipz
  8551  0091' 2800'              	goto	u8385
  8552  0092' 0806'              	movf	___flge@ff2+2,w
  8553  0093' 0202'              	subwf	___flge@ff1+2,w
  8554  0094' 1D03               	skipz
  8555  0095' 2800'              	goto	u8385
  8556  0096' 0805'              	movf	___flge@ff2+1,w
  8557  0097' 0201'              	subwf	___flge@ff1+1,w
  8558  0098' 1D03               	skipz
  8559  0099' 2800'              	goto	u8385
  8560  009A' 0804'              	movf	___flge@ff2,w
  8561  009B' 0200'              	subwf	___flge@ff1,w
  8562  009C'                    u8385:
  8563  009C' 1803               	skipnc
  8564  009D' 2800'              	goto	u8381
  8565  009E' 2800'              	goto	u8380
  8566  009F'                    u8381:
  8567  009F' 2800'              	goto	l4793
  8568  00A0'                    u8380:
  8569  00A0'                    l4791:
  8570  00A0' 1003               	clrc
  8571  00A1' 2800'              	goto	l659
  8572  00A2'                    l4793:
  8573  00A2' 1403               	setc
  8574  00A3'                    l659:
  8575  00A3' 0008               	return
  8576  00A4'                    __end_of___flge:
  8577                           
  8578                           	psect	text23
  8579  0000'                    __ptext23:	
  8580 ;; *************** function ___fleq *****************
  8581 ;; Defined at:
  8582 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8583 ;; Parameters:    Size  Location     Type
  8584 ;;  ff1             4    0[BANK0 ] unsigned char 
  8585 ;;  ff2             4    4[BANK0 ] unsigned char 
  8586 ;; Auto vars:     Size  Location     Type
  8587 ;;		None
  8588 ;; Return value:  Size  Location     Type
  8589 ;;		None               void
  8590 ;; Registers used:
  8591 ;;		wreg, status,2, status,0
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8597 ;;      Params:         0       8       0       0       0
  8598 ;;      Locals:         0       0       0       0       0
  8599 ;;      Temps:          4       0       0       0       0
  8600 ;;      Totals:         4       8       0       0       0
  8601 ;;Total ram usage:       12 bytes
  8602 ;; Hardware stack levels used:    1
  8603 ;; Hardware stack levels required when called:    2
  8604 ;; This function calls:
  8605 ;;		Nothing
  8606 ;; This function is called by:
  8607 ;;		_sprintf
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           
  8612                           ;psect for function ___fleq
  8613  0000'                    ___fleq:
  8614  0000'                    l4765:	
  8615                           ;incstack = 0
  8616                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8617                           
  8618  0000' 3000               	movlw	0
  8619  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  8620  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  8621  0003' 0500'              	andwf	___fleq@ff1,w
  8622  0004' 0083'              	movwf	??___fleq
  8623  0005' 3000               	movlw	0
  8624  0006' 0501'              	andwf	___fleq@ff1+1,w
  8625  0007' 0084'              	movwf	??___fleq+1
  8626  0008' 3080               	movlw	128
  8627  0009' 0502'              	andwf	___fleq@ff1+2,w
  8628  000A' 0085'              	movwf	??___fleq+2
  8629  000B' 307F               	movlw	127
  8630  000C' 0503'              	andwf	___fleq@ff1+3,w
  8631  000D' 0086'              	movwf	??___fleq+3
  8632  000E' 0806'              	movf	??___fleq+3,w
  8633  000F' 0405'              	iorwf	??___fleq+2,w
  8634  0010' 0404'              	iorwf	??___fleq+1,w
  8635  0011' 0403'              	iorwf	??___fleq,w
  8636  0012' 1D03               	skipz
  8637  0013' 2800'              	goto	u8291
  8638  0014' 2800'              	goto	u8290
  8639  0015'                    u8291:
  8640  0015' 2800'              	goto	l650
  8641  0016'                    u8290:
  8642  0016'                    l4767:
  8643  0016' 3000               	movlw	0
  8644  0017' 0083'              	movwf	___fleq@ff1+3
  8645  0018' 3000               	movlw	0
  8646  0019' 0082'              	movwf	___fleq@ff1+2
  8647  001A' 3000               	movlw	0
  8648  001B' 0081'              	movwf	___fleq@ff1+1
  8649  001C' 3000               	movlw	0
  8650  001D' 0080'              	movwf	___fleq@ff1
  8651  001E'                    l650:
  8652  001E' 3000               	movlw	0
  8653  001F' 0504'              	andwf	___fleq@ff2,w
  8654  0020' 0083'              	movwf	??___fleq
  8655  0021' 3000               	movlw	0
  8656  0022' 0505'              	andwf	___fleq@ff2+1,w
  8657  0023' 0084'              	movwf	??___fleq+1
  8658  0024' 3080               	movlw	128
  8659  0025' 0506'              	andwf	___fleq@ff2+2,w
  8660  0026' 0085'              	movwf	??___fleq+2
  8661  0027' 307F               	movlw	127
  8662  0028' 0507'              	andwf	___fleq@ff2+3,w
  8663  0029' 0086'              	movwf	??___fleq+3
  8664  002A' 0806'              	movf	??___fleq+3,w
  8665  002B' 0405'              	iorwf	??___fleq+2,w
  8666  002C' 0404'              	iorwf	??___fleq+1,w
  8667  002D' 0403'              	iorwf	??___fleq,w
  8668  002E' 1D03               	skipz
  8669  002F' 2800'              	goto	u8301
  8670  0030' 2800'              	goto	u8300
  8671  0031'                    u8301:
  8672  0031' 2800'              	goto	l651
  8673  0032'                    u8300:
  8674  0032'                    l4769:
  8675  0032' 3000               	movlw	0
  8676  0033' 0087'              	movwf	___fleq@ff2+3
  8677  0034' 3000               	movlw	0
  8678  0035' 0086'              	movwf	___fleq@ff2+2
  8679  0036' 3000               	movlw	0
  8680  0037' 0085'              	movwf	___fleq@ff2+1
  8681  0038' 3000               	movlw	0
  8682  0039' 0084'              	movwf	___fleq@ff2
  8683  003A'                    l651:
  8684  003A' 0807'              	movf	___fleq@ff2+3,w
  8685  003B' 0603'              	xorwf	___fleq@ff1+3,w
  8686  003C' 1D03               	skipz
  8687  003D' 2800'              	goto	u8315
  8688  003E' 0806'              	movf	___fleq@ff2+2,w
  8689  003F' 0602'              	xorwf	___fleq@ff1+2,w
  8690  0040' 1D03               	skipz
  8691  0041' 2800'              	goto	u8315
  8692  0042' 0805'              	movf	___fleq@ff2+1,w
  8693  0043' 0601'              	xorwf	___fleq@ff1+1,w
  8694  0044' 1D03               	skipz
  8695  0045' 2800'              	goto	u8315
  8696  0046' 0804'              	movf	___fleq@ff2,w
  8697  0047' 0600'              	xorwf	___fleq@ff1,w
  8698  0048'                    u8315:
  8699  0048' 1903               	skipnz
  8700  0049' 2800'              	goto	u8311
  8701  004A' 2800'              	goto	u8310
  8702  004B'                    u8311:
  8703  004B' 2800'              	goto	l4773
  8704  004C'                    u8310:
  8705  004C'                    l4771:
  8706  004C' 1003               	clrc
  8707  004D' 2800'              	goto	l652
  8708  004E'                    l4773:
  8709  004E' 1403               	setc
  8710  004F'                    l652:
  8711  004F' 0008               	return
  8712  0050'                    __end_of___fleq:
  8713                           
  8714                           	psect	text24
  8715  0000'                    __ptext24:	
  8716 ;; *************** function _setup *****************
  8717 ;; Defined at:
  8718 ;;		line 86 in file "lab_3.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;		None
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;		None
  8723 ;; Return value:  Size  Location     Type
  8724 ;;                  1    wreg      void 
  8725 ;; Registers used:
  8726 ;;		status,2
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8732 ;;      Params:         0       0       0       0       0
  8733 ;;      Locals:         0       0       0       0       0
  8734 ;;      Temps:          0       0       0       0       0
  8735 ;;      Totals:         0       0       0       0       0
  8736 ;;Total ram usage:        0 bytes
  8737 ;; Hardware stack levels used:    1
  8738 ;; Hardware stack levels required when called:    2
  8739 ;; This function calls:
  8740 ;;		Nothing
  8741 ;; This function is called by:
  8742 ;;		_main
  8743 ;; This function uses a non-reentrant model
  8744 ;;
  8745                           
  8746                           
  8747                           ;psect for function _setup
  8748  0000'                    _setup:
  8749  0000'                    l3437:	
  8750                           ;incstack = 0
  8751                           ; Regs used in _setup: [status,2]
  8752                           
  8753  0000' 1683               	bsf	3,5	;RP0=1, select bank3
  8754  0001' 1703               	bsf	3,6	;RP1=1, select bank3
  8755  0002' 0189               	clrf	9	;volatile
  8756  0003' 0188               	clrf	8	;volatile
  8757  0004' 1683               	bsf	3,5	;RP0=1, select bank1
  8758  0005' 1303               	bcf	3,6	;RP1=0, select bank1
  8759  0006' 0185               	clrf	5	;volatile
  8760  0007' 1283               	bcf	3,5	;RP0=0, select bank0
  8761  0008' 1303               	bcf	3,6	;RP1=0, select bank0
  8762  0009' 0185               	clrf	5	;volatile
  8763  000A' 1683               	bsf	3,5	;RP0=1, select bank1
  8764  000B' 1303               	bcf	3,6	;RP1=0, select bank1
  8765  000C' 0188               	clrf	8	;volatile
  8766  000D' 1283               	bcf	3,5	;RP0=0, select bank0
  8767  000E' 1303               	bcf	3,6	;RP1=0, select bank0
  8768  000F' 0188               	clrf	8	;volatile
  8769  0010' 1683               	bsf	3,5	;RP0=1, select bank1
  8770  0011' 1303               	bcf	3,6	;RP1=0, select bank1
  8771  0012' 0189               	clrf	9	;volatile
  8772  0013' 1283               	bcf	3,5	;RP0=0, select bank0
  8773  0014' 1303               	bcf	3,6	;RP1=0, select bank0
  8774  0015' 0189               	clrf	9	;volatile
  8775  0016'                    l3439:
  8776  0016' 170B               	bsf	11,6	;volatile
  8777  0017'                    l3441:
  8778  0017' 1683               	bsf	3,5	;RP0=1, select bank1
  8779  0018' 1303               	bcf	3,6	;RP1=0, select bank1
  8780  0019' 168C               	bsf	12,5	;volatile
  8781  001A'                    l3443:
  8782  001A' 1283               	bcf	3,5	;RP0=0, select bank0
  8783  001B' 1303               	bcf	3,6	;RP1=0, select bank0
  8784  001C' 128C               	bcf	12,5	;volatile
  8785  001D'                    l3445:
  8786  001D' 178B               	bsf	11,7	;volatile
  8787  001E'                    l77:
  8788  001E' 0008               	return
  8789  001F'                    __end_of_setup:
  8790                           
  8791                           	psect	text25
  8792  0000'                    __ptext25:	
  8793 ;; *************** function _Wr_USART_String *****************
  8794 ;; Defined at:
  8795 ;;		line 33 in file "USART.c"
  8796 ;; Parameters:    Size  Location     Type
  8797 ;;  a               2    4[COMMON] PTR unsigned char 
  8798 ;;		 -> d(20), STR_1(21), 
  8799 ;; Auto vars:     Size  Location     Type
  8800 ;;  i               1    7[COMMON] unsigned char 
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  1    wreg      void 
  8803 ;; Registers used:
  8804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8810 ;;      Params:         2       0       0       0       0
  8811 ;;      Locals:         1       0       0       0       0
  8812 ;;      Temps:          1       0       0       0       0
  8813 ;;      Totals:         4       0       0       0       0
  8814 ;;Total ram usage:        4 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:    3
  8817 ;; This function calls:
  8818 ;;		_Wr_USART
  8819 ;; This function is called by:
  8820 ;;		_main
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           
  8825                           ;psect for function _Wr_USART_String
  8826  0000'                    _Wr_USART_String:
  8827  0000'                    l3553:	
  8828                           ;incstack = 0
  8829                           ; Regs used in _Wr_USART_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8830                           
  8831                           
  8832                           ;USART.c: 34:     uint8_t i;;USART.c: 35:     for(i=0;a[i]!='\0';i++){
  8833  0000' 0187'              	clrf	Wr_USART_String@i
  8834  0001' 2800'              	goto	l3559
  8835  0002'                    l3555:
  8836                           
  8837                           ;USART.c: 36:         Wr_USART(a[i]);
  8838  0002' 0807'              	movf	Wr_USART_String@i,w
  8839  0003' 0704'              	addwf	Wr_USART_String@a,w
  8840  0004' 0084               	movwf	4
  8841  0005' 0805'              	movf	Wr_USART_String@a+1,w
  8842  0006' 1803               	skipnc
  8843  0007' 0A05'              	incf	Wr_USART_String@a+1,w
  8844  0008' 00FF               	movwf	btemp+1
  8845  0009' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  8846  000E' 120A' 118A' 2000' 120A' 118A' 	fcall	_Wr_USART
  8847  0013'                    l3557:
  8848                           
  8849                           ;USART.c: 37:     }
  8850  0013' 3001               	movlw	1
  8851  0014' 0086'              	movwf	??_Wr_USART_String
  8852  0015' 0806'              	movf	??_Wr_USART_String,w
  8853  0016' 0787'              	addwf	Wr_USART_String@i,f
  8854  0017'                    l3559:
  8855  0017' 0807'              	movf	Wr_USART_String@i,w
  8856  0018' 0704'              	addwf	Wr_USART_String@a,w
  8857  0019' 0084               	movwf	4
  8858  001A' 0805'              	movf	Wr_USART_String@a+1,w
  8859  001B' 1803               	skipnc
  8860  001C' 0A05'              	incf	Wr_USART_String@a+1,w
  8861  001D' 1283               	bcf	3,5	;RP0=0, select bank0
  8862  001E' 1303               	bcf	3,6	;RP1=0, select bank0
  8863  001F' 00FF               	movwf	btemp+1
  8864  0020' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  8865  0025' 3A00               	xorlw	0
  8866  0026' 1D03               	skipz
  8867  0027' 2800'              	goto	u5661
  8868  0028' 2800'              	goto	u5660
  8869  0029'                    u5661:
  8870  0029' 2800'              	goto	l3555
  8871  002A'                    u5660:
  8872  002A'                    l253:
  8873  002A' 0008               	return
  8874  002B'                    __end_of_Wr_USART_String:
  8875                           
  8876                           	psect	text26
  8877  0000'                    __ptext26:	
  8878 ;; *************** function _Wr_USART *****************
  8879 ;; Defined at:
  8880 ;;		line 29 in file "USART.c"
  8881 ;; Parameters:    Size  Location     Type
  8882 ;;  a               1    wreg     unsigned char 
  8883 ;; Auto vars:     Size  Location     Type
  8884 ;;  a               1    3[COMMON] unsigned char 
  8885 ;; Return value:  Size  Location     Type
  8886 ;;                  1    wreg      void 
  8887 ;; Registers used:
  8888 ;;		wreg
  8889 ;; Tracked objects:
  8890 ;;		On entry : 0/0
  8891 ;;		On exit  : 0/0
  8892 ;;		Unchanged: 0/0
  8893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8894 ;;      Params:         0       0       0       0       0
  8895 ;;      Locals:         1       0       0       0       0
  8896 ;;      Temps:          0       0       0       0       0
  8897 ;;      Totals:         1       0       0       0       0
  8898 ;;Total ram usage:        1 bytes
  8899 ;; Hardware stack levels used:    1
  8900 ;; Hardware stack levels required when called:    2
  8901 ;; This function calls:
  8902 ;;		Nothing
  8903 ;; This function is called by:
  8904 ;;		_main
  8905 ;;		_Wr_USART_String
  8906 ;; This function uses a non-reentrant model
  8907 ;;
  8908                           
  8909                           
  8910                           ;psect for function _Wr_USART
  8911  0000'                    _Wr_USART:
  8912                           
  8913                           ;incstack = 0
  8914                           ; Regs used in _Wr_USART: [wreg]
  8915                           ;Wr_USART@a stored from wreg
  8916  0000' 0083'              	movwf	Wr_USART@a
  8917  0001'                    l3011:
  8918  0001'                    l244:	
  8919                           ;USART.c: 30:     while(!TRMT);
  8920                           
  8921  0001' 1683               	bsf	3,5	;RP0=1, select bank1
  8922  0002' 1303               	bcf	3,6	;RP1=0, select bank1
  8923  0003' 1C98               	btfss	24,1	;volatile
  8924  0004' 2800'              	goto	u4411
  8925  0005' 2800'              	goto	u4410
  8926  0006'                    u4411:
  8927  0006' 2800'              	goto	l244
  8928  0007'                    u4410:
  8929  0007'                    l3013:
  8930                           
  8931                           ;USART.c: 31:     TXREG=a;
  8932  0007' 0803'              	movf	Wr_USART@a,w
  8933  0008' 1283               	bcf	3,5	;RP0=0, select bank0
  8934  0009' 1303               	bcf	3,6	;RP1=0, select bank0
  8935  000A' 0099               	movwf	25	;volatile
  8936  000B'                    l247:
  8937  000B' 0008               	return
  8938  000C'                    __end_of_Wr_USART:
  8939                           
  8940                           	psect	text27
  8941  0000'                    __ptext27:	
  8942 ;; *************** function _USART_In *****************
  8943 ;; Defined at:
  8944 ;;		line 10 in file "USART.c"
  8945 ;; Parameters:    Size  Location     Type
  8946 ;;  baudrate        4    8[BANK0 ] const long 
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;  x               2   24[BANK0 ] unsigned int 
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  1    wreg      unsigned char 
  8951 ;; Registers used:
  8952 ;;		wreg, status,2, status,0, pclath, cstack
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8958 ;;      Params:         0       4       0       0       0
  8959 ;;      Locals:         0       2       0       0       0
  8960 ;;      Temps:          0      12       0       0       0
  8961 ;;      Totals:         0      18       0       0       0
  8962 ;;Total ram usage:       18 bytes
  8963 ;; Hardware stack levels used:    1
  8964 ;; Hardware stack levels required when called:    3
  8965 ;; This function calls:
  8966 ;;		___aldiv
  8967 ;; This function is called by:
  8968 ;;		_main
  8969 ;; This function uses a non-reentrant model
  8970 ;;
  8971                           
  8972                           
  8973                           ;psect for function _USART_In
  8974  0000'                    _USART_In:
  8975  0000'                    l4911:	
  8976                           ;incstack = 0
  8977                           ; Regs used in _USART_In: [wreg+status,2+status,0+pclath+cstack]
  8978                           
  8979                           
  8980                           ;USART.c: 11:   unsigned int x;;USART.c: 12:   x = (8000000 - baudrate*64)/(baudrate*64)
      +                          ;
  8981  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  8982  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  8983  0002' 0808'              	movf	USART_In@baudrate,w
  8984  0003' 008C'              	movwf	??_USART_In
  8985  0004' 0809'              	movf	USART_In@baudrate+1,w
  8986  0005' 008D'              	movwf	??_USART_In+1
  8987  0006' 080A'              	movf	USART_In@baudrate+2,w
  8988  0007' 008E'              	movwf	??_USART_In+2
  8989  0008' 080B'              	movf	USART_In@baudrate+3,w
  8990  0009' 008F'              	movwf	??_USART_In+3
  8991  000A' 3006               	movlw	6
  8992  000B'                    u8705:
  8993  000B' 1003               	clrc
  8994  000C' 0D8C'              	rlf	??_USART_In,f
  8995  000D' 0D8D'              	rlf	??_USART_In+1,f
  8996  000E' 0D8E'              	rlf	??_USART_In+2,f
  8997  000F' 0D8F'              	rlf	??_USART_In+3,f
  8998  0010'                    u8700:
  8999  0010' 3EFF               	addlw	-1
  9000  0011' 1D03               	skipz
  9001  0012' 2800'              	goto	u8705
  9002  0013' 080F'              	movf	??_USART_In+3,w
  9003  0014' 0083'              	movwf	___aldiv@divisor+3
  9004  0015' 080E'              	movf	??_USART_In+2,w
  9005  0016' 0082'              	movwf	___aldiv@divisor+2
  9006  0017' 080D'              	movf	??_USART_In+1,w
  9007  0018' 0081'              	movwf	___aldiv@divisor+1
  9008  0019' 080C'              	movf	??_USART_In,w
  9009  001A' 0080'              	movwf	___aldiv@divisor
  9010  001B' 0808'              	movf	USART_In@baudrate,w
  9011  001C' 0090'              	movwf	??_USART_In+4
  9012  001D' 0809'              	movf	USART_In@baudrate+1,w
  9013  001E' 0091'              	movwf	??_USART_In+5
  9014  001F' 080A'              	movf	USART_In@baudrate+2,w
  9015  0020' 0092'              	movwf	??_USART_In+6
  9016  0021' 080B'              	movf	USART_In@baudrate+3,w
  9017  0022' 0093'              	movwf	??_USART_In+7
  9018  0023' 3006               	movlw	6
  9019  0024'                    u8715:
  9020  0024' 1003               	clrc
  9021  0025' 0D90'              	rlf	??_USART_In+4,f
  9022  0026' 0D91'              	rlf	??_USART_In+5,f
  9023  0027' 0D92'              	rlf	??_USART_In+6,f
  9024  0028' 0D93'              	rlf	??_USART_In+7,f
  9025  0029'                    u8710:
  9026  0029' 3EFF               	addlw	-1
  9027  002A' 1D03               	skipz
  9028  002B' 2800'              	goto	u8715
  9029  002C' 3000               	movlw	0
  9030  002D' 0094'              	movwf	??_USART_In+8
  9031  002E' 3012               	movlw	18
  9032  002F' 0095'              	movwf	??_USART_In+9
  9033  0030' 307A               	movlw	122
  9034  0031' 0096'              	movwf	??_USART_In+10
  9035  0032' 3000               	movlw	0
  9036  0033' 0097'              	movwf	??_USART_In+11
  9037  0034' 0810'              	movf	??_USART_In+4,w
  9038  0035' 0294'              	subwf	??_USART_In+8,f
  9039  0036' 0811'              	movf	??_USART_In+5,w
  9040  0037' 1C03               	skipc
  9041  0038' 0F11'              	incfsz	??_USART_In+5,w
  9042  0039' 2800'              	goto	u8721
  9043  003A' 2800'              	goto	u8722
  9044  003B'                    u8721:
  9045  003B' 0295'              	subwf	??_USART_In+9,f
  9046  003C'                    u8722:
  9047  003C' 0812'              	movf	??_USART_In+6,w
  9048  003D' 1C03               	skipc
  9049  003E' 0F12'              	incfsz	??_USART_In+6,w
  9050  003F' 2800'              	goto	u8723
  9051  0040' 2800'              	goto	u8724
  9052  0041'                    u8723:
  9053  0041' 0296'              	subwf	??_USART_In+10,f
  9054  0042'                    u8724:
  9055  0042' 0813'              	movf	??_USART_In+7,w
  9056  0043' 1C03               	skipc
  9057  0044' 0F13'              	incfsz	??_USART_In+7,w
  9058  0045' 2800'              	goto	u8725
  9059  0046' 2800'              	goto	u8726
  9060  0047'                    u8725:
  9061  0047' 0297'              	subwf	??_USART_In+11,f
  9062  0048'                    u8726:
  9063  0048' 0817'              	movf	??_USART_In+11,w
  9064  0049' 0087'              	movwf	___aldiv@dividend+3
  9065  004A' 0816'              	movf	??_USART_In+10,w
  9066  004B' 0086'              	movwf	___aldiv@dividend+2
  9067  004C' 0815'              	movf	??_USART_In+9,w
  9068  004D' 0085'              	movwf	___aldiv@dividend+1
  9069  004E' 0814'              	movf	??_USART_In+8,w
  9070  004F' 0084'              	movwf	___aldiv@dividend
  9071  0050' 120A' 118A' 2000' 120A' 118A' 	fcall	___aldiv
  9072  0055' 1283               	bcf	3,5	;RP0=0, select bank0
  9073  0056' 1303               	bcf	3,6	;RP1=0, select bank0
  9074  0057' 0801'              	movf	?___aldiv+1,w
  9075  0058' 0099'              	movwf	USART_In@x+1
  9076  0059' 0800'              	movf	?___aldiv,w
  9077  005A' 0098'              	movwf	USART_In@x
  9078  005B'                    l4913:
  9079                           
  9080                           ;USART.c: 13:   if(x>255){
  9081  005B' 3001               	movlw	1
  9082  005C' 0219'              	subwf	USART_In@x+1,w
  9083  005D' 3000               	movlw	0
  9084  005E' 1903               	skipnz
  9085  005F' 0218'              	subwf	USART_In@x,w
  9086  0060' 1C03               	skipc
  9087  0061' 2800'              	goto	u8731
  9088  0062' 2800'              	goto	u8730
  9089  0063'                    u8731:
  9090  0063' 2800'              	goto	l4919
  9091  0064'                    u8730:
  9092  0064'                    l4915:
  9093                           
  9094                           ;USART.c: 14:     x = (8000000 - baudrate*16)/(baudrate*16);
  9095  0064' 0808'              	movf	USART_In@baudrate,w
  9096  0065' 008C'              	movwf	??_USART_In
  9097  0066' 0809'              	movf	USART_In@baudrate+1,w
  9098  0067' 008D'              	movwf	??_USART_In+1
  9099  0068' 080A'              	movf	USART_In@baudrate+2,w
  9100  0069' 008E'              	movwf	??_USART_In+2
  9101  006A' 080B'              	movf	USART_In@baudrate+3,w
  9102  006B' 008F'              	movwf	??_USART_In+3
  9103  006C' 3004               	movlw	4
  9104  006D'                    u8745:
  9105  006D' 1003               	clrc
  9106  006E' 0D8C'              	rlf	??_USART_In,f
  9107  006F' 0D8D'              	rlf	??_USART_In+1,f
  9108  0070' 0D8E'              	rlf	??_USART_In+2,f
  9109  0071' 0D8F'              	rlf	??_USART_In+3,f
  9110  0072'                    u8740:
  9111  0072' 3EFF               	addlw	-1
  9112  0073' 1D03               	skipz
  9113  0074' 2800'              	goto	u8745
  9114  0075' 080F'              	movf	??_USART_In+3,w
  9115  0076' 0083'              	movwf	___aldiv@divisor+3
  9116  0077' 080E'              	movf	??_USART_In+2,w
  9117  0078' 0082'              	movwf	___aldiv@divisor+2
  9118  0079' 080D'              	movf	??_USART_In+1,w
  9119  007A' 0081'              	movwf	___aldiv@divisor+1
  9120  007B' 080C'              	movf	??_USART_In,w
  9121  007C' 0080'              	movwf	___aldiv@divisor
  9122  007D' 0808'              	movf	USART_In@baudrate,w
  9123  007E' 0090'              	movwf	??_USART_In+4
  9124  007F' 0809'              	movf	USART_In@baudrate+1,w
  9125  0080' 0091'              	movwf	??_USART_In+5
  9126  0081' 080A'              	movf	USART_In@baudrate+2,w
  9127  0082' 0092'              	movwf	??_USART_In+6
  9128  0083' 080B'              	movf	USART_In@baudrate+3,w
  9129  0084' 0093'              	movwf	??_USART_In+7
  9130  0085' 3004               	movlw	4
  9131  0086'                    u8755:
  9132  0086' 1003               	clrc
  9133  0087' 0D90'              	rlf	??_USART_In+4,f
  9134  0088' 0D91'              	rlf	??_USART_In+5,f
  9135  0089' 0D92'              	rlf	??_USART_In+6,f
  9136  008A' 0D93'              	rlf	??_USART_In+7,f
  9137  008B'                    u8750:
  9138  008B' 3EFF               	addlw	-1
  9139  008C' 1D03               	skipz
  9140  008D' 2800'              	goto	u8755
  9141  008E' 3000               	movlw	0
  9142  008F' 0094'              	movwf	??_USART_In+8
  9143  0090' 3012               	movlw	18
  9144  0091' 0095'              	movwf	??_USART_In+9
  9145  0092' 307A               	movlw	122
  9146  0093' 0096'              	movwf	??_USART_In+10
  9147  0094' 3000               	movlw	0
  9148  0095' 0097'              	movwf	??_USART_In+11
  9149  0096' 0810'              	movf	??_USART_In+4,w
  9150  0097' 0294'              	subwf	??_USART_In+8,f
  9151  0098' 0811'              	movf	??_USART_In+5,w
  9152  0099' 1C03               	skipc
  9153  009A' 0F11'              	incfsz	??_USART_In+5,w
  9154  009B' 2800'              	goto	u8761
  9155  009C' 2800'              	goto	u8762
  9156  009D'                    u8761:
  9157  009D' 0295'              	subwf	??_USART_In+9,f
  9158  009E'                    u8762:
  9159  009E' 0812'              	movf	??_USART_In+6,w
  9160  009F' 1C03               	skipc
  9161  00A0' 0F12'              	incfsz	??_USART_In+6,w
  9162  00A1' 2800'              	goto	u8763
  9163  00A2' 2800'              	goto	u8764
  9164  00A3'                    u8763:
  9165  00A3' 0296'              	subwf	??_USART_In+10,f
  9166  00A4'                    u8764:
  9167  00A4' 0813'              	movf	??_USART_In+7,w
  9168  00A5' 1C03               	skipc
  9169  00A6' 0F13'              	incfsz	??_USART_In+7,w
  9170  00A7' 2800'              	goto	u8765
  9171  00A8' 2800'              	goto	u8766
  9172  00A9'                    u8765:
  9173  00A9' 0297'              	subwf	??_USART_In+11,f
  9174  00AA'                    u8766:
  9175  00AA' 0817'              	movf	??_USART_In+11,w
  9176  00AB' 0087'              	movwf	___aldiv@dividend+3
  9177  00AC' 0816'              	movf	??_USART_In+10,w
  9178  00AD' 0086'              	movwf	___aldiv@dividend+2
  9179  00AE' 0815'              	movf	??_USART_In+9,w
  9180  00AF' 0085'              	movwf	___aldiv@dividend+1
  9181  00B0' 0814'              	movf	??_USART_In+8,w
  9182  00B1' 0084'              	movwf	___aldiv@dividend
  9183  00B2' 120A' 118A' 2000' 120A' 118A' 	fcall	___aldiv
  9184  00B7' 1283               	bcf	3,5	;RP0=0, select bank0
  9185  00B8' 1303               	bcf	3,6	;RP1=0, select bank0
  9186  00B9' 0801'              	movf	?___aldiv+1,w
  9187  00BA' 0099'              	movwf	USART_In@x+1
  9188  00BB' 0800'              	movf	?___aldiv,w
  9189  00BC' 0098'              	movwf	USART_In@x
  9190  00BD'                    l4917:
  9191                           
  9192                           ;USART.c: 15:     BRGH = 1;
  9193  00BD' 1683               	bsf	3,5	;RP0=1, select bank1
  9194  00BE' 1303               	bcf	3,6	;RP1=0, select bank1
  9195  00BF' 1518               	bsf	24,2	;volatile
  9196  00C0'                    l4919:
  9197                           
  9198                           ;USART.c: 17:   if(x<256){
  9199  00C0' 3001               	movlw	1
  9200  00C1' 1283               	bcf	3,5	;RP0=0, select bank0
  9201  00C2' 0219'              	subwf	USART_In@x+1,w
  9202  00C3' 3000               	movlw	0
  9203  00C4' 1903               	skipnz
  9204  00C5' 0218'              	subwf	USART_In@x,w
  9205  00C6' 1803               	skipnc
  9206  00C7' 2800'              	goto	u8771
  9207  00C8' 2800'              	goto	u8770
  9208  00C9'                    u8771:
  9209  00C9' 2800'              	goto	l241
  9210  00CA'                    u8770:
  9211  00CA'                    l4921:
  9212                           
  9213                           ;USART.c: 18:     SPBRG = x;
  9214  00CA' 0818'              	movf	USART_In@x,w
  9215  00CB' 1683               	bsf	3,5	;RP0=1, select bank1
  9216  00CC' 1303               	bcf	3,6	;RP1=0, select bank1
  9217  00CD' 0099               	movwf	25	;volatile
  9218  00CE'                    l4923:
  9219                           
  9220                           ;USART.c: 19:     SYNC = 0;
  9221  00CE' 1218               	bcf	24,4	;volatile
  9222  00CF'                    l4925:
  9223                           
  9224                           ;USART.c: 20:     SPEN = 1;
  9225  00CF' 1283               	bcf	3,5	;RP0=0, select bank0
  9226  00D0' 1303               	bcf	3,6	;RP1=0, select bank0
  9227  00D1' 1798               	bsf	24,7	;volatile
  9228  00D2'                    l4927:
  9229                           
  9230                           ;USART.c: 21:     TRISCbits.TRISC7 = 1;
  9231  00D2' 1683               	bsf	3,5	;RP0=1, select bank1
  9232  00D3' 1303               	bcf	3,6	;RP1=0, select bank1
  9233  00D4' 1787               	bsf	7,7	;volatile
  9234  00D5'                    l4929:
  9235                           
  9236                           ;USART.c: 22:     TRISCbits.TRISC6 = 1;
  9237  00D5' 1707               	bsf	7,6	;volatile
  9238  00D6'                    l4931:
  9239                           
  9240                           ;USART.c: 23:     CREN = 1;
  9241  00D6' 1283               	bcf	3,5	;RP0=0, select bank0
  9242  00D7' 1303               	bcf	3,6	;RP1=0, select bank0
  9243  00D8' 1618               	bsf	24,4	;volatile
  9244  00D9'                    l4933:
  9245                           
  9246                           ;USART.c: 24:     TXEN = 1;
  9247  00D9' 1683               	bsf	3,5	;RP0=1, select bank1
  9248  00DA' 1303               	bcf	3,6	;RP1=0, select bank1
  9249  00DB' 1698               	bsf	24,5	;volatile
  9250  00DC'                    l241:
  9251  00DC' 0008               	return
  9252  00DD'                    __end_of_USART_In:
  9253                           
  9254                           	psect	text28
  9255  0000'                    __ptext28:	
  9256 ;; *************** function ___aldiv *****************
  9257 ;; Defined at:
  9258 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
  9259 ;; Parameters:    Size  Location     Type
  9260 ;;  divisor         4    0[BANK0 ] long 
  9261 ;;  dividend        4    4[BANK0 ] long 
  9262 ;; Auto vars:     Size  Location     Type
  9263 ;;  quotient        4    6[COMMON] long 
  9264 ;;  sign            1    5[COMMON] unsigned char 
  9265 ;;  counter         1    4[COMMON] unsigned char 
  9266 ;; Return value:  Size  Location     Type
  9267 ;;                  4    0[BANK0 ] long 
  9268 ;; Registers used:
  9269 ;;		wreg, status,2, status,0
  9270 ;; Tracked objects:
  9271 ;;		On entry : 0/0
  9272 ;;		On exit  : 0/0
  9273 ;;		Unchanged: 0/0
  9274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9275 ;;      Params:         0       8       0       0       0
  9276 ;;      Locals:         6       0       0       0       0
  9277 ;;      Temps:          1       0       0       0       0
  9278 ;;      Totals:         7       8       0       0       0
  9279 ;;Total ram usage:       15 bytes
  9280 ;; Hardware stack levels used:    1
  9281 ;; Hardware stack levels required when called:    2
  9282 ;; This function calls:
  9283 ;;		Nothing
  9284 ;; This function is called by:
  9285 ;;		_USART_In
  9286 ;; This function uses a non-reentrant model
  9287 ;;
  9288                           
  9289                           
  9290                           ;psect for function ___aldiv
  9291  0000'                    ___aldiv:
  9292  0000'                    l4725:	
  9293                           ;incstack = 0
  9294                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  9295                           
  9296  0000' 0185'              	clrf	___aldiv@sign
  9297  0001'                    l4727:
  9298  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  9299  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  9300  0003' 1F83'              	btfss	___aldiv@divisor+3,7
  9301  0004' 2800'              	goto	u8191
  9302  0005' 2800'              	goto	u8190
  9303  0006'                    u8191:
  9304  0006' 2800'              	goto	l529
  9305  0007'                    u8190:
  9306  0007'                    l4729:
  9307  0007' 0980'              	comf	___aldiv@divisor,f
  9308  0008' 0981'              	comf	___aldiv@divisor+1,f
  9309  0009' 0982'              	comf	___aldiv@divisor+2,f
  9310  000A' 0983'              	comf	___aldiv@divisor+3,f
  9311  000B' 0A80'              	incf	___aldiv@divisor,f
  9312  000C' 1903               	skipnz
  9313  000D' 0A81'              	incf	___aldiv@divisor+1,f
  9314  000E' 1903               	skipnz
  9315  000F' 0A82'              	incf	___aldiv@divisor+2,f
  9316  0010' 1903               	skipnz
  9317  0011' 0A83'              	incf	___aldiv@divisor+3,f
  9318  0012' 0185'              	clrf	___aldiv@sign
  9319  0013' 0A85'              	incf	___aldiv@sign,f
  9320  0014'                    l529:
  9321  0014' 1F87'              	btfss	___aldiv@dividend+3,7
  9322  0015' 2800'              	goto	u8201
  9323  0016' 2800'              	goto	u8200
  9324  0017'                    u8201:
  9325  0017' 2800'              	goto	l4735
  9326  0018'                    u8200:
  9327  0018'                    l4731:
  9328  0018' 0984'              	comf	___aldiv@dividend,f
  9329  0019' 0985'              	comf	___aldiv@dividend+1,f
  9330  001A' 0986'              	comf	___aldiv@dividend+2,f
  9331  001B' 0987'              	comf	___aldiv@dividend+3,f
  9332  001C' 0A84'              	incf	___aldiv@dividend,f
  9333  001D' 1903               	skipnz
  9334  001E' 0A85'              	incf	___aldiv@dividend+1,f
  9335  001F' 1903               	skipnz
  9336  0020' 0A86'              	incf	___aldiv@dividend+2,f
  9337  0021' 1903               	skipnz
  9338  0022' 0A87'              	incf	___aldiv@dividend+3,f
  9339  0023'                    l4733:
  9340  0023' 3001               	movlw	1
  9341  0024' 0083'              	movwf	??___aldiv
  9342  0025' 0803'              	movf	??___aldiv,w
  9343  0026' 0685'              	xorwf	___aldiv@sign,f
  9344  0027'                    l4735:
  9345  0027' 3000               	movlw	0
  9346  0028' 0089'              	movwf	___aldiv@quotient+3
  9347  0029' 3000               	movlw	0
  9348  002A' 0088'              	movwf	___aldiv@quotient+2
  9349  002B' 3000               	movlw	0
  9350  002C' 0087'              	movwf	___aldiv@quotient+1
  9351  002D' 3000               	movlw	0
  9352  002E' 0086'              	movwf	___aldiv@quotient
  9353  002F'                    l4737:
  9354  002F' 0803'              	movf	___aldiv@divisor+3,w
  9355  0030' 0402'              	iorwf	___aldiv@divisor+2,w
  9356  0031' 0401'              	iorwf	___aldiv@divisor+1,w
  9357  0032' 0400'              	iorwf	___aldiv@divisor,w
  9358  0033' 1903               	skipnz
  9359  0034' 2800'              	goto	u8211
  9360  0035' 2800'              	goto	u8210
  9361  0036'                    u8211:
  9362  0036' 2800'              	goto	l4757
  9363  0037'                    u8210:
  9364  0037'                    l4739:
  9365  0037' 0184'              	clrf	___aldiv@counter
  9366  0038' 0A84'              	incf	___aldiv@counter,f
  9367  0039' 2800'              	goto	l4743
  9368  003A'                    l4741:
  9369  003A' 3001               	movlw	1
  9370  003B' 0083'              	movwf	??___aldiv
  9371  003C'                    u8225:
  9372  003C' 1003               	clrc
  9373  003D' 0D80'              	rlf	___aldiv@divisor,f
  9374  003E' 0D81'              	rlf	___aldiv@divisor+1,f
  9375  003F' 0D82'              	rlf	___aldiv@divisor+2,f
  9376  0040' 0D83'              	rlf	___aldiv@divisor+3,f
  9377  0041' 0B83'              	decfsz	??___aldiv,f
  9378  0042' 2800'              	goto	u8225
  9379  0043' 3001               	movlw	1
  9380  0044' 0083'              	movwf	??___aldiv
  9381  0045' 0803'              	movf	??___aldiv,w
  9382  0046' 0784'              	addwf	___aldiv@counter,f
  9383  0047'                    l4743:
  9384  0047' 1F83'              	btfss	___aldiv@divisor+3,7
  9385  0048' 2800'              	goto	u8231
  9386  0049' 2800'              	goto	u8230
  9387  004A'                    u8231:
  9388  004A' 2800'              	goto	l4741
  9389  004B'                    u8230:
  9390  004B'                    l4745:
  9391  004B' 3001               	movlw	1
  9392  004C' 0083'              	movwf	??___aldiv
  9393  004D'                    u8245:
  9394  004D' 1003               	clrc
  9395  004E' 0D86'              	rlf	___aldiv@quotient,f
  9396  004F' 0D87'              	rlf	___aldiv@quotient+1,f
  9397  0050' 0D88'              	rlf	___aldiv@quotient+2,f
  9398  0051' 0D89'              	rlf	___aldiv@quotient+3,f
  9399  0052' 0B83'              	decfsz	??___aldiv,f
  9400  0053' 2800'              	goto	u8245
  9401  0054'                    l4747:
  9402  0054' 0803'              	movf	___aldiv@divisor+3,w
  9403  0055' 0207'              	subwf	___aldiv@dividend+3,w
  9404  0056' 1D03               	skipz
  9405  0057' 2800'              	goto	u8255
  9406  0058' 0802'              	movf	___aldiv@divisor+2,w
  9407  0059' 0206'              	subwf	___aldiv@dividend+2,w
  9408  005A' 1D03               	skipz
  9409  005B' 2800'              	goto	u8255
  9410  005C' 0801'              	movf	___aldiv@divisor+1,w
  9411  005D' 0205'              	subwf	___aldiv@dividend+1,w
  9412  005E' 1D03               	skipz
  9413  005F' 2800'              	goto	u8255
  9414  0060' 0800'              	movf	___aldiv@divisor,w
  9415  0061' 0204'              	subwf	___aldiv@dividend,w
  9416  0062'                    u8255:
  9417  0062' 1C03               	skipc
  9418  0063' 2800'              	goto	u8251
  9419  0064' 2800'              	goto	u8250
  9420  0065'                    u8251:
  9421  0065' 2800'              	goto	l4753
  9422  0066'                    u8250:
  9423  0066'                    l4749:
  9424  0066' 0800'              	movf	___aldiv@divisor,w
  9425  0067' 0284'              	subwf	___aldiv@dividend,f
  9426  0068' 0801'              	movf	___aldiv@divisor+1,w
  9427  0069' 1C03               	skipc
  9428  006A' 0F01'              	incfsz	___aldiv@divisor+1,w
  9429  006B' 0285'              	subwf	___aldiv@dividend+1,f
  9430  006C' 0802'              	movf	___aldiv@divisor+2,w
  9431  006D' 1C03               	skipc
  9432  006E' 0F02'              	incfsz	___aldiv@divisor+2,w
  9433  006F' 0286'              	subwf	___aldiv@dividend+2,f
  9434  0070' 0803'              	movf	___aldiv@divisor+3,w
  9435  0071' 1C03               	skipc
  9436  0072' 0F03'              	incfsz	___aldiv@divisor+3,w
  9437  0073' 0287'              	subwf	___aldiv@dividend+3,f
  9438  0074'                    l4751:
  9439  0074' 1406'              	bsf	___aldiv@quotient,0
  9440  0075'                    l4753:
  9441  0075' 3001               	movlw	1
  9442  0076'                    u8265:
  9443  0076' 1003               	clrc
  9444  0077' 0C83'              	rrf	___aldiv@divisor+3,f
  9445  0078' 0C82'              	rrf	___aldiv@divisor+2,f
  9446  0079' 0C81'              	rrf	___aldiv@divisor+1,f
  9447  007A' 0C80'              	rrf	___aldiv@divisor,f
  9448  007B' 3EFF               	addlw	-1
  9449  007C' 1D03               	skipz
  9450  007D' 2800'              	goto	u8265
  9451  007E'                    l4755:
  9452  007E' 3001               	movlw	1
  9453  007F' 0284'              	subwf	___aldiv@counter,f
  9454  0080' 1D03               	btfss	3,2
  9455  0081' 2800'              	goto	u8271
  9456  0082' 2800'              	goto	u8270
  9457  0083'                    u8271:
  9458  0083' 2800'              	goto	l4745
  9459  0084'                    u8270:
  9460  0084'                    l4757:
  9461  0084' 0805'              	movf	___aldiv@sign,w
  9462  0085' 1903               	btfsc	3,2
  9463  0086' 2800'              	goto	u8281
  9464  0087' 2800'              	goto	u8280
  9465  0088'                    u8281:
  9466  0088' 2800'              	goto	l4761
  9467  0089'                    u8280:
  9468  0089'                    l4759:
  9469  0089' 0986'              	comf	___aldiv@quotient,f
  9470  008A' 0987'              	comf	___aldiv@quotient+1,f
  9471  008B' 0988'              	comf	___aldiv@quotient+2,f
  9472  008C' 0989'              	comf	___aldiv@quotient+3,f
  9473  008D' 0A86'              	incf	___aldiv@quotient,f
  9474  008E' 1903               	skipnz
  9475  008F' 0A87'              	incf	___aldiv@quotient+1,f
  9476  0090' 1903               	skipnz
  9477  0091' 0A88'              	incf	___aldiv@quotient+2,f
  9478  0092' 1903               	skipnz
  9479  0093' 0A89'              	incf	___aldiv@quotient+3,f
  9480  0094'                    l4761:
  9481  0094' 0809'              	movf	___aldiv@quotient+3,w
  9482  0095' 0083'              	movwf	?___aldiv+3
  9483  0096' 0808'              	movf	___aldiv@quotient+2,w
  9484  0097' 0082'              	movwf	?___aldiv+2
  9485  0098' 0807'              	movf	___aldiv@quotient+1,w
  9486  0099' 0081'              	movwf	?___aldiv+1
  9487  009A' 0806'              	movf	___aldiv@quotient,w
  9488  009B' 0080'              	movwf	?___aldiv
  9489  009C'                    l539:
  9490  009C' 0008               	return
  9491  009D'                    __end_of___aldiv:
  9492                           
  9493                           	psect	text29
  9494  0000'                    __ptext29:	
  9495 ;; *************** function _LCD_move_cursor *****************
  9496 ;; Defined at:
  9497 ;;		line 66 in file "LCD.c"
  9498 ;; Parameters:    Size  Location     Type
  9499 ;;  a               1    wreg     unsigned char 
  9500 ;;  b               1    7[COMMON] unsigned char 
  9501 ;; Auto vars:     Size  Location     Type
  9502 ;;  a               1    8[COMMON] unsigned char 
  9503 ;;  c               1    9[COMMON] unsigned char 
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  1    wreg      void 
  9506 ;; Registers used:
  9507 ;;		wreg, status,2, status,0, pclath, cstack
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9513 ;;      Params:         1       0       0       0       0
  9514 ;;      Locals:         2       0       0       0       0
  9515 ;;      Temps:          0       0       0       0       0
  9516 ;;      Totals:         3       0       0       0       0
  9517 ;;Total ram usage:        3 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:    4
  9520 ;; This function calls:
  9521 ;;		_LCD_cmd
  9522 ;; This function is called by:
  9523 ;;		_main
  9524 ;; This function uses a non-reentrant model
  9525 ;;
  9526                           
  9527                           
  9528                           ;psect for function _LCD_move_cursor
  9529  0000'                    _LCD_move_cursor:
  9530                           
  9531                           ;incstack = 0
  9532                           ; Regs used in _LCD_move_cursor: [wreg+status,2+status,0+pclath+cstack]
  9533                           ;LCD_move_cursor@a stored from wreg
  9534  0000' 0088'              	movwf	LCD_move_cursor@a
  9535  0001'                    l5251:
  9536                           
  9537                           ;LCD.c: 67:     uint8_t c;;LCD.c: 68:     if(a == 1){
  9538  0001' 0308'              	decf	LCD_move_cursor@a,w
  9539  0002' 1D03               	btfss	3,2
  9540  0003' 2800'              	goto	u9311
  9541  0004' 2800'              	goto	u9310
  9542  0005'                    u9311:
  9543  0005' 2800'              	goto	l5257
  9544  0006'                    u9310:
  9545  0006'                    l5253:
  9546  0006'                    l5255:
  9547                           
  9548                           ;LCD.c: 70:         LCD_cmd(c);
  9549  0006' 3080               	movlw	128
  9550  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_cmd
  9551                           
  9552                           ;LCD.c: 71:     }
  9553  000C' 2800'              	goto	l161
  9554  000D'                    l5257:
  9555  000D' 3002               	movlw	2
  9556  000E' 0608'              	xorwf	LCD_move_cursor@a,w
  9557  000F' 1D03               	btfss	3,2
  9558  0010' 2800'              	goto	u9321
  9559  0011' 2800'              	goto	u9320
  9560  0012'                    u9321:
  9561  0012' 2800'              	goto	l161
  9562  0013'                    u9320:
  9563  0013'                    l5259:
  9564  0013'                    l5261:
  9565                           
  9566                           ;LCD.c: 74:         LCD_cmd(c);
  9567  0013' 0809'              	movf	LCD_move_cursor@c,w
  9568  0014' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_cmd
  9569  0019'                    l161:
  9570  0019' 0008               	return
  9571  001A'                    __end_of_LCD_move_cursor:
  9572                           
  9573                           	psect	text30
  9574  0000'                    __ptext30:	
  9575 ;; *************** function _LCD_data_string *****************
  9576 ;; Defined at:
  9577 ;;		line 59 in file "LCD.c"
  9578 ;; Parameters:    Size  Location     Type
  9579 ;;  a               2    7[COMMON] PTR unsigned char 
  9580 ;;		 -> STR_3(16), d(20), 
  9581 ;; Auto vars:     Size  Location     Type
  9582 ;;  i               2    3[BANK0 ] int 
  9583 ;; Return value:  Size  Location     Type
  9584 ;;                  1    wreg      void 
  9585 ;; Registers used:
  9586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9587 ;; Tracked objects:
  9588 ;;		On entry : 0/0
  9589 ;;		On exit  : 0/0
  9590 ;;		Unchanged: 0/0
  9591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9592 ;;      Params:         2       0       0       0       0
  9593 ;;      Locals:         0       2       0       0       0
  9594 ;;      Temps:          0       3       0       0       0
  9595 ;;      Totals:         2       5       0       0       0
  9596 ;;Total ram usage:        7 bytes
  9597 ;; Hardware stack levels used:    1
  9598 ;; Hardware stack levels required when called:    4
  9599 ;; This function calls:
  9600 ;;		_LCD_data
  9601 ;; This function is called by:
  9602 ;;		_main
  9603 ;; This function uses a non-reentrant model
  9604 ;;
  9605                           
  9606                           
  9607                           ;psect for function _LCD_data_string
  9608  0000'                    _LCD_data_string:
  9609  0000'                    l5263:	
  9610                           ;incstack = 0
  9611                           ; Regs used in _LCD_data_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9612                           
  9613                           
  9614                           ;LCD.c: 60:  int i;;LCD.c: 61:  for(i=0;a[i]!='\0';i++)
  9615  0000' 1283               	bcf	3,5	;RP0=0, select bank0
  9616  0001' 1303               	bcf	3,6	;RP1=0, select bank0
  9617  0002' 0183'              	clrf	LCD_data_string@i
  9618  0003' 0184'              	clrf	LCD_data_string@i+1
  9619  0004' 2800'              	goto	l5269
  9620  0005'                    l5265:
  9621                           
  9622                           ;LCD.c: 62:     LCD_data(a[i]);
  9623  0005' 0803'              	movf	LCD_data_string@i,w
  9624  0006' 0707'              	addwf	LCD_data_string@a,w
  9625  0007' 0081'              	movwf	??_LCD_data_string+1
  9626  0008' 0808'              	movf	LCD_data_string@a+1,w
  9627  0009' 0080'              	movwf	??_LCD_data_string
  9628  000A' 1803               	skipnc
  9629  000B' 0A80'              	incf	??_LCD_data_string,f
  9630  000C' 1F83'              	btfss	LCD_data_string@i,7
  9631  000D' 2800'              	goto	u9330
  9632  000E' 0380'              	decf	??_LCD_data_string,f
  9633  000F'                    u9330:
  9634  000F' 1283               	bcf	3,5	;RP0=0, select bank0
  9635  0010' 1303               	bcf	3,6	;RP1=0, select bank0
  9636  0011' 0800'              	movf	??_LCD_data_string,w
  9637  0012' 0082'              	movwf	??_LCD_data_string+2
  9638  0013' 0802'              	movf	??_LCD_data_string+2,w
  9639  0014' 00FF               	movwf	btemp+1
  9640  0015' 0801'              	movf	??_LCD_data_string+1,w
  9641  0016' 0084               	movwf	4
  9642  0017' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  9643  001C' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_data
  9644  0021'                    l5267:
  9645  0021' 3001               	movlw	1
  9646  0022' 1283               	bcf	3,5	;RP0=0, select bank0
  9647  0023' 1303               	bcf	3,6	;RP1=0, select bank0
  9648  0024' 0783'              	addwf	LCD_data_string@i,f
  9649  0025' 1803               	skipnc
  9650  0026' 0A84'              	incf	LCD_data_string@i+1,f
  9651  0027' 3000               	movlw	0
  9652  0028' 0784'              	addwf	LCD_data_string@i+1,f
  9653  0029'                    l5269:
  9654  0029' 0803'              	movf	LCD_data_string@i,w
  9655  002A' 0707'              	addwf	LCD_data_string@a,w
  9656  002B' 0081'              	movwf	??_LCD_data_string+1
  9657  002C' 0808'              	movf	LCD_data_string@a+1,w
  9658  002D' 0080'              	movwf	??_LCD_data_string
  9659  002E' 1803               	skipnc
  9660  002F' 0A80'              	incf	??_LCD_data_string,f
  9661  0030' 1F83'              	btfss	LCD_data_string@i,7
  9662  0031' 2800'              	goto	u9340
  9663  0032' 0380'              	decf	??_LCD_data_string,f
  9664  0033'                    u9340:
  9665  0033' 1283               	bcf	3,5	;RP0=0, select bank0
  9666  0034' 1303               	bcf	3,6	;RP1=0, select bank0
  9667  0035' 0800'              	movf	??_LCD_data_string,w
  9668  0036' 0082'              	movwf	??_LCD_data_string+2
  9669  0037' 0802'              	movf	??_LCD_data_string+2,w
  9670  0038' 00FF               	movwf	btemp+1
  9671  0039' 0801'              	movf	??_LCD_data_string+1,w
  9672  003A' 0084               	movwf	4
  9673  003B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringtab
  9674  0040' 3A00               	xorlw	0
  9675  0041' 1D03               	skipz
  9676  0042' 2800'              	goto	u9351
  9677  0043' 2800'              	goto	u9350
  9678  0044'                    u9351:
  9679  0044' 2800'              	goto	l5265
  9680  0045'                    u9350:
  9681  0045'                    l155:
  9682  0045' 0008               	return
  9683  0046'                    __end_of_LCD_data_string:
  9684                           
  9685                           	psect	text31
  9686  0000'                    __ptext31:	
  9687 ;; *************** function _LCD_data *****************
  9688 ;; Defined at:
  9689 ;;		line 40 in file "LCD.c"
  9690 ;; Parameters:    Size  Location     Type
  9691 ;;  data            1    wreg     unsigned char 
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;  data            1    6[COMMON] unsigned char 
  9694 ;; Return value:  Size  Location     Type
  9695 ;;                  1    wreg      void 
  9696 ;; Registers used:
  9697 ;;		wreg, status,2, status,0, pclath, cstack
  9698 ;; Tracked objects:
  9699 ;;		On entry : 0/0
  9700 ;;		On exit  : 0/0
  9701 ;;		Unchanged: 0/0
  9702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9703 ;;      Params:         0       0       0       0       0
  9704 ;;      Locals:         1       0       0       0       0
  9705 ;;      Temps:          2       0       0       0       0
  9706 ;;      Totals:         3       0       0       0       0
  9707 ;;Total ram usage:        3 bytes
  9708 ;; Hardware stack levels used:    1
  9709 ;; Hardware stack levels required when called:    3
  9710 ;; This function calls:
  9711 ;;		_LCD_datos
  9712 ;; This function is called by:
  9713 ;;		_LCD_data_string
  9714 ;; This function uses a non-reentrant model
  9715 ;;
  9716                           
  9717                           
  9718                           ;psect for function _LCD_data
  9719  0000'                    _LCD_data:
  9720                           
  9721                           ;incstack = 0
  9722                           ; Regs used in _LCD_data: [wreg+status,2+status,0+pclath+cstack]
  9723                           ;LCD_data@data stored from wreg
  9724  0000' 0086'              	movwf	LCD_data@data
  9725  0001'                    l4501:
  9726                           
  9727                           ;LCD.c: 41:      RE0 = 1;
  9728  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  9729  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  9730  0003' 1409               	bsf	9,0	;volatile
  9731                           
  9732                           ;LCD.c: 42:      RE1 = 0;
  9733  0004' 1089               	bcf	9,1	;volatile
  9734  0005'                    l4503:
  9735                           
  9736                           ;LCD.c: 43:      LCD_datos(data);
  9737  0005' 0806'              	movf	LCD_data@data,w
  9738  0006' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_datos
  9739  000B'                    l4505:
  9740                           
  9741                           ;LCD.c: 44:      RE2 = 1;
  9742  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  9743  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  9744  000D' 1509               	bsf	9,2	;volatile
  9745  000E'                    l4507:
  9746                           
  9747                           ;LCD.c: 45:      _delay((unsigned long)((10)*(8000000/4000.0)));
  9748  000E' 301A               	movlw	26
  9749  000F' 0085'              	movwf	??_LCD_data+1
  9750  0010' 30F8               	movlw	248
  9751  0011' 0084'              	movwf	??_LCD_data
  9752  0012'                    u9377:
  9753  0012' 0B84'              	decfsz	??_LCD_data,f
  9754  0013' 2800'              	goto	u9377
  9755  0014' 0B85'              	decfsz	??_LCD_data+1,f
  9756  0015' 2800'              	goto	u9377
  9757  0016' 0000               	nop
  9758  0017'                    l4509:
  9759                           
  9760                           ;LCD.c: 46:      RE2 = 0;
  9761  0017' 1283               	bcf	3,5	;RP0=0, select bank0
  9762  0018' 1303               	bcf	3,6	;RP1=0, select bank0
  9763  0019' 1109               	bcf	9,2	;volatile
  9764  001A'                    l4511:
  9765                           
  9766                           ;LCD.c: 47:      _delay((unsigned long)((1)*(8000000/4000.0)));
  9767  001A' 3003               	movlw	3
  9768  001B' 0085'              	movwf	??_LCD_data+1
  9769  001C' 3097               	movlw	151
  9770  001D' 0084'              	movwf	??_LCD_data
  9771  001E'                    u9387:
  9772  001E' 0B84'              	decfsz	??_LCD_data,f
  9773  001F' 2800'              	goto	u9387
  9774  0020' 0B85'              	decfsz	??_LCD_data+1,f
  9775  0021' 2800'              	goto	u9387
  9776  0022' 2800'              	nop2
  9777  0023'                    l130:
  9778  0023' 0008               	return
  9779  0024'                    __end_of_LCD_data:
  9780                           
  9781                           	psect	text32
  9782  0000'                    __ptext32:	
  9783 ;; *************** function _LCD_Init *****************
  9784 ;; Defined at:
  9785 ;;		line 18 in file "LCD.c"
  9786 ;; Parameters:    Size  Location     Type
  9787 ;;		None
  9788 ;; Auto vars:     Size  Location     Type
  9789 ;;		None
  9790 ;; Return value:  Size  Location     Type
  9791 ;;                  1    wreg      void 
  9792 ;; Registers used:
  9793 ;;		wreg, status,2, status,0, pclath, cstack
  9794 ;; Tracked objects:
  9795 ;;		On entry : 0/0
  9796 ;;		On exit  : 0/0
  9797 ;;		Unchanged: 0/0
  9798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9799 ;;      Params:         0       0       0       0       0
  9800 ;;      Locals:         0       0       0       0       0
  9801 ;;      Temps:          2       0       0       0       0
  9802 ;;      Totals:         2       0       0       0       0
  9803 ;;Total ram usage:        2 bytes
  9804 ;; Hardware stack levels used:    1
  9805 ;; Hardware stack levels required when called:    4
  9806 ;; This function calls:
  9807 ;;		_LCD_cmd
  9808 ;; This function is called by:
  9809 ;;		_main
  9810 ;; This function uses a non-reentrant model
  9811 ;;
  9812                           
  9813                           
  9814                           ;psect for function _LCD_Init
  9815  0000'                    _LCD_Init:
  9816  0000'                    l4937:	
  9817                           ;incstack = 0
  9818                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  9819                           
  9820                           
  9821                           ;LCD.c: 19:     TRISE = 0;
  9822  0000' 1683               	bsf	3,5	;RP0=1, select bank1
  9823  0001' 1303               	bcf	3,6	;RP1=0, select bank1
  9824  0002' 0189               	clrf	9	;volatile
  9825                           
  9826                           ;LCD.c: 20:     TRISD = 0;
  9827  0003' 0188               	clrf	8	;volatile
  9828  0004'                    l4939:
  9829                           
  9830                           ;LCD.c: 21:     _delay((unsigned long)((5)*(8000000/4000.0)));
  9831  0004' 300D               	movlw	13
  9832  0005' 0088'              	movwf	??_LCD_Init+1
  9833  0006' 30FB               	movlw	251
  9834  0007' 0087'              	movwf	??_LCD_Init
  9835  0008'                    u9397:
  9836  0008' 0B87'              	decfsz	??_LCD_Init,f
  9837  0009' 2800'              	goto	u9397
  9838  000A' 0B88'              	decfsz	??_LCD_Init+1,f
  9839  000B' 2800'              	goto	u9397
  9840  000C' 2800'              	nop2
  9841  000D'                    l4941:
  9842                           
  9843                           ;LCD.c: 22:     LCD_cmd (0x02);
  9844  000D' 3002               	movlw	2
  9845  000E' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_cmd
  9846  0013'                    l4943:
  9847                           
  9848                           ;LCD.c: 23:     LCD_cmd (0x38);
  9849  0013' 3038               	movlw	56
  9850  0014' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_cmd
  9851  0019'                    l4945:
  9852                           
  9853                           ;LCD.c: 24:     LCD_cmd (0x0E);
  9854  0019' 300E               	movlw	14
  9855  001A' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_cmd
  9856  001F'                    l4947:
  9857                           
  9858                           ;LCD.c: 25:     LCD_cmd (0x0C);
  9859  001F' 300C               	movlw	12
  9860  0020' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_cmd
  9861  0025'                    l4949:
  9862                           
  9863                           ;LCD.c: 26:     LCD_cmd (0x06);
  9864  0025' 3006               	movlw	6
  9865  0026' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_cmd
  9866  002B'                    l124:
  9867  002B' 0008               	return
  9868  002C'                    __end_of_LCD_Init:
  9869                           
  9870                           	psect	text33
  9871  0000'                    __ptext33:	
  9872 ;; *************** function _Clear *****************
  9873 ;; Defined at:
  9874 ;;		line 78 in file "LCD.c"
  9875 ;; Parameters:    Size  Location     Type
  9876 ;;		None
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;		None
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  1    wreg      void 
  9881 ;; Registers used:
  9882 ;;		wreg, status,2, status,0, pclath, cstack
  9883 ;; Tracked objects:
  9884 ;;		On entry : 0/0
  9885 ;;		On exit  : 0/0
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9888 ;;      Params:         0       0       0       0       0
  9889 ;;      Locals:         0       0       0       0       0
  9890 ;;      Temps:          0       0       0       0       0
  9891 ;;      Totals:         0       0       0       0       0
  9892 ;;Total ram usage:        0 bytes
  9893 ;; Hardware stack levels used:    1
  9894 ;; Hardware stack levels required when called:    4
  9895 ;; This function calls:
  9896 ;;		_LCD_cmd
  9897 ;; This function is called by:
  9898 ;;		_main
  9899 ;; This function uses a non-reentrant model
  9900 ;;
  9901                           
  9902                           
  9903                           ;psect for function _Clear
  9904  0000'                    _Clear:
  9905  0000'                    l4951:	
  9906                           ;incstack = 0
  9907                           ; Regs used in _Clear: [wreg+status,2+status,0+pclath+cstack]
  9908                           
  9909                           
  9910                           ;LCD.c: 79:     LCD_cmd(0);
  9911  0000' 3000               	movlw	0
  9912  0001' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_cmd
  9913                           
  9914                           ;LCD.c: 80:     LCD_cmd(1);
  9915  0006' 3001               	movlw	1
  9916  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_cmd
  9917  000C'                    l164:
  9918  000C' 0008               	return
  9919  000D'                    __end_of_Clear:
  9920                           
  9921                           	psect	text34
  9922  0000'                    __ptext34:	
  9923 ;; *************** function _LCD_cmd *****************
  9924 ;; Defined at:
  9925 ;;		line 29 in file "LCD.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;  cmd             1    wreg     unsigned char 
  9928 ;; Auto vars:     Size  Location     Type
  9929 ;;  cmd             1    6[COMMON] unsigned char 
  9930 ;; Return value:  Size  Location     Type
  9931 ;;                  1    wreg      void 
  9932 ;; Registers used:
  9933 ;;		wreg, status,2, status,0, pclath, cstack
  9934 ;; Tracked objects:
  9935 ;;		On entry : 0/0
  9936 ;;		On exit  : 0/0
  9937 ;;		Unchanged: 0/0
  9938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9939 ;;      Params:         0       0       0       0       0
  9940 ;;      Locals:         1       0       0       0       0
  9941 ;;      Temps:          2       0       0       0       0
  9942 ;;      Totals:         3       0       0       0       0
  9943 ;;Total ram usage:        3 bytes
  9944 ;; Hardware stack levels used:    1
  9945 ;; Hardware stack levels required when called:    3
  9946 ;; This function calls:
  9947 ;;		_LCD_datos
  9948 ;; This function is called by:
  9949 ;;		_LCD_Init
  9950 ;;		_LCD_move_cursor
  9951 ;;		_Clear
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           
  9956                           ;psect for function _LCD_cmd
  9957  0000'                    _LCD_cmd:
  9958                           
  9959                           ;incstack = 0
  9960                           ; Regs used in _LCD_cmd: [wreg+status,2+status,0+pclath+cstack]
  9961                           ;LCD_cmd@cmd stored from wreg
  9962  0000' 0086'              	movwf	LCD_cmd@cmd
  9963  0001'                    l4489:
  9964                           
  9965                           ;LCD.c: 30:     RE0 = 0;
  9966  0001' 1283               	bcf	3,5	;RP0=0, select bank0
  9967  0002' 1303               	bcf	3,6	;RP1=0, select bank0
  9968  0003' 1009               	bcf	9,0	;volatile
  9969                           
  9970                           ;LCD.c: 31:     RE1 = 0;
  9971  0004' 1089               	bcf	9,1	;volatile
  9972  0005'                    l4491:
  9973                           
  9974                           ;LCD.c: 32:     LCD_datos(cmd);
  9975  0005' 0806'              	movf	LCD_cmd@cmd,w
  9976  0006' 120A' 118A' 2000' 120A' 118A' 	fcall	_LCD_datos
  9977  000B'                    l4493:
  9978                           
  9979                           ;LCD.c: 33:     RE2 = 1;
  9980  000B' 1283               	bcf	3,5	;RP0=0, select bank0
  9981  000C' 1303               	bcf	3,6	;RP1=0, select bank0
  9982  000D' 1509               	bsf	9,2	;volatile
  9983  000E'                    l4495:
  9984                           
  9985                           ;LCD.c: 34:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9986  000E' 301A               	movlw	26
  9987  000F' 0085'              	movwf	??_LCD_cmd+1
  9988  0010' 30F8               	movlw	248
  9989  0011' 0084'              	movwf	??_LCD_cmd
  9990  0012'                    u9407:
  9991  0012' 0B84'              	decfsz	??_LCD_cmd,f
  9992  0013' 2800'              	goto	u9407
  9993  0014' 0B85'              	decfsz	??_LCD_cmd+1,f
  9994  0015' 2800'              	goto	u9407
  9995  0016' 0000               	nop
  9996  0017'                    l4497:
  9997                           
  9998                           ;LCD.c: 35:     RE2 = 0;
  9999  0017' 1283               	bcf	3,5	;RP0=0, select bank0
 10000  0018' 1303               	bcf	3,6	;RP1=0, select bank0
 10001  0019' 1109               	bcf	9,2	;volatile
 10002  001A'                    l4499:
 10003                           
 10004                           ;LCD.c: 36:     _delay((unsigned long)((1)*(8000000/4000.0)));
 10005  001A' 3003               	movlw	3
 10006  001B' 0085'              	movwf	??_LCD_cmd+1
 10007  001C' 3097               	movlw	151
 10008  001D' 0084'              	movwf	??_LCD_cmd
 10009  001E'                    u9417:
 10010  001E' 0B84'              	decfsz	??_LCD_cmd,f
 10011  001F' 2800'              	goto	u9417
 10012  0020' 0B85'              	decfsz	??_LCD_cmd+1,f
 10013  0021' 2800'              	goto	u9417
 10014  0022' 2800'              	nop2
 10015  0023'                    l127:
 10016  0023' 0008               	return
 10017  0024'                    __end_of_LCD_cmd:
 10018                           
 10019                           	psect	text35
 10020  0000'                    __ptext35:	
 10021 ;; *************** function _LCD_datos *****************
 10022 ;; Defined at:
 10023 ;;		line 49 in file "LCD.c"
 10024 ;; Parameters:    Size  Location     Type
 10025 ;;  x               1    wreg     unsigned char 
 10026 ;; Auto vars:     Size  Location     Type
 10027 ;;  x               1    3[COMMON] unsigned char 
 10028 ;; Return value:  Size  Location     Type
 10029 ;;                  1    wreg      void 
 10030 ;; Registers used:
 10031 ;;		wreg
 10032 ;; Tracked objects:
 10033 ;;		On entry : 0/0
 10034 ;;		On exit  : 0/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10037 ;;      Params:         0       0       0       0       0
 10038 ;;      Locals:         1       0       0       0       0
 10039 ;;      Temps:          0       0       0       0       0
 10040 ;;      Totals:         1       0       0       0       0
 10041 ;;Total ram usage:        1 bytes
 10042 ;; Hardware stack levels used:    1
 10043 ;; Hardware stack levels required when called:    2
 10044 ;; This function calls:
 10045 ;;		Nothing
 10046 ;; This function is called by:
 10047 ;;		_LCD_cmd
 10048 ;;		_LCD_data
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052                           
 10053                           ;psect for function _LCD_datos
 10054  0000'                    _LCD_datos:
 10055                           
 10056                           ;incstack = 0
 10057                           ; Regs used in _LCD_datos: [wreg]
 10058                           ;LCD_datos@x stored from wreg
 10059  0000' 0083'              	movwf	LCD_datos@x
 10060  0001'                    l4007:
 10061                           
 10062                           ;LCD.c: 50:     if (x & 1){RD0 = 1;}else{RD0 = 0;}
 10063  0001' 1C03'              	btfss	LCD_datos@x,0
 10064  0002' 2800'              	goto	u6321
 10065  0003' 2800'              	goto	u6320
 10066  0004'                    u6321:
 10067  0004' 2800'              	goto	l133
 10068  0005'                    u6320:
 10069  0005'                    l4009:
 10070  0005' 1283               	bcf	3,5	;RP0=0, select bank0
 10071  0006' 1303               	bcf	3,6	;RP1=0, select bank0
 10072  0007' 1408               	bsf	8,0	;volatile
 10073  0008' 2800'              	goto	l134
 10074  0009'                    l133:
 10075  0009' 1283               	bcf	3,5	;RP0=0, select bank0
 10076  000A' 1303               	bcf	3,6	;RP1=0, select bank0
 10077  000B' 1008               	bcf	8,0	;volatile
 10078  000C'                    l134:
 10079                           
 10080                           ;LCD.c: 51:     if (x & 2){RD1 = 1;}else{RD1 = 0;}
 10081  000C' 1C83'              	btfss	LCD_datos@x,1
 10082  000D' 2800'              	goto	u6331
 10083  000E' 2800'              	goto	u6330
 10084  000F'                    u6331:
 10085  000F' 2800'              	goto	l135
 10086  0010'                    u6330:
 10087  0010'                    l4011:
 10088  0010' 1488               	bsf	8,1	;volatile
 10089  0011' 2800'              	goto	l136
 10090  0012'                    l135:
 10091  0012' 1088               	bcf	8,1	;volatile
 10092  0013'                    l136:
 10093                           
 10094                           ;LCD.c: 52:     if (x & 4){RD2 = 1;}else{RD2 = 0;}
 10095  0013' 1D03'              	btfss	LCD_datos@x,2
 10096  0014' 2800'              	goto	u6341
 10097  0015' 2800'              	goto	u6340
 10098  0016'                    u6341:
 10099  0016' 2800'              	goto	l137
 10100  0017'                    u6340:
 10101  0017'                    l4013:
 10102  0017' 1508               	bsf	8,2	;volatile
 10103  0018' 2800'              	goto	l138
 10104  0019'                    l137:
 10105  0019' 1108               	bcf	8,2	;volatile
 10106  001A'                    l138:
 10107                           
 10108                           ;LCD.c: 53:     if (x & 8){RD3 = 1;}else{RD3 = 0;}
 10109  001A' 1D83'              	btfss	LCD_datos@x,3
 10110  001B' 2800'              	goto	u6351
 10111  001C' 2800'              	goto	u6350
 10112  001D'                    u6351:
 10113  001D' 2800'              	goto	l139
 10114  001E'                    u6350:
 10115  001E'                    l4015:
 10116  001E' 1588               	bsf	8,3	;volatile
 10117  001F' 2800'              	goto	l140
 10118  0020'                    l139:
 10119  0020' 1188               	bcf	8,3	;volatile
 10120  0021'                    l140:
 10121                           
 10122                           ;LCD.c: 54:     if (x & 16){RD4 = 1;}else{RD4 = 0;}
 10123  0021' 1E03'              	btfss	LCD_datos@x,4
 10124  0022' 2800'              	goto	u6361
 10125  0023' 2800'              	goto	u6360
 10126  0024'                    u6361:
 10127  0024' 2800'              	goto	l141
 10128  0025'                    u6360:
 10129  0025'                    l4017:
 10130  0025' 1608               	bsf	8,4	;volatile
 10131  0026' 2800'              	goto	l142
 10132  0027'                    l141:
 10133  0027' 1208               	bcf	8,4	;volatile
 10134  0028'                    l142:
 10135                           
 10136                           ;LCD.c: 55:     if (x & 32){RD5 = 1;}else{RD5 = 0;}
 10137  0028' 1E83'              	btfss	LCD_datos@x,5
 10138  0029' 2800'              	goto	u6371
 10139  002A' 2800'              	goto	u6370
 10140  002B'                    u6371:
 10141  002B' 2800'              	goto	l143
 10142  002C'                    u6370:
 10143  002C'                    l4019:
 10144  002C' 1688               	bsf	8,5	;volatile
 10145  002D' 2800'              	goto	l144
 10146  002E'                    l143:
 10147  002E' 1288               	bcf	8,5	;volatile
 10148  002F'                    l144:
 10149                           
 10150                           ;LCD.c: 56:     if (x & 64){RD6 = 1;}else{RD6 = 0;}
 10151  002F' 1F03'              	btfss	LCD_datos@x,6
 10152  0030' 2800'              	goto	u6381
 10153  0031' 2800'              	goto	u6380
 10154  0032'                    u6381:
 10155  0032' 2800'              	goto	l145
 10156  0033'                    u6380:
 10157  0033'                    l4021:
 10158  0033' 1708               	bsf	8,6	;volatile
 10159  0034' 2800'              	goto	l146
 10160  0035'                    l145:
 10161  0035' 1308               	bcf	8,6	;volatile
 10162  0036'                    l146:
 10163                           
 10164                           ;LCD.c: 57:     if (x & 128){RD7 = 1;}else{RD7 = 0;}
 10165  0036' 1F83'              	btfss	LCD_datos@x,7
 10166  0037' 2800'              	goto	u6391
 10167  0038' 2800'              	goto	u6390
 10168  0039'                    u6391:
 10169  0039' 2800'              	goto	l147
 10170  003A'                    u6390:
 10171  003A'                    l4023:
 10172  003A' 1788               	bsf	8,7	;volatile
 10173  003B' 2800'              	goto	l149
 10174  003C'                    l147:
 10175  003C' 1388               	bcf	8,7	;volatile
 10176  003D'                    l149:
 10177  003D' 0008               	return
 10178  003E'                    __end_of_LCD_datos:
 10179                           
 10180                           	psect	text36
 10181  0000'                    __ptext36:	
 10182 ;; *************** function _ADCval *****************
 10183 ;; Defined at:
 10184 ;;		line 14 in file "ADC.c"
 10185 ;; Parameters:    Size  Location     Type
 10186 ;;  x               1    wreg     unsigned char 
 10187 ;; Auto vars:     Size  Location     Type
 10188 ;;  x               1    5[COMMON] unsigned char 
 10189 ;; Return value:  Size  Location     Type
 10190 ;;                  1    wreg      unsigned char 
 10191 ;; Registers used:
 10192 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10193 ;; Tracked objects:
 10194 ;;		On entry : 0/0
 10195 ;;		On exit  : 0/0
 10196 ;;		Unchanged: 0/0
 10197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10198 ;;      Params:         0       0       0       0       0
 10199 ;;      Locals:         1       0       0       0       0
 10200 ;;      Temps:          2       0       0       0       0
 10201 ;;      Totals:         3       0       0       0       0
 10202 ;;Total ram usage:        3 bytes
 10203 ;; Hardware stack levels used:    1
 10204 ;; Hardware stack levels required when called:    2
 10205 ;; This function calls:
 10206 ;;		Nothing
 10207 ;; This function is called by:
 10208 ;;		_main
 10209 ;; This function uses a non-reentrant model
 10210 ;;
 10211                           
 10212                           
 10213                           ;psect for function _ADCval
 10214  0000'                    _ADCval:
 10215                           
 10216                           ;incstack = 0
 10217                           ; Regs used in _ADCval: [wreg-fsr0h+status,2+status,0]
 10218                           ;ADCval@x stored from wreg
 10219  0000' 0085'              	movwf	ADCval@x
 10220  0001'                    l3493:
 10221                           
 10222                           ;ADC.c: 15:     switch (x){
 10223  0001' 2800'              	goto	l3529
 10224  0002'                    l195:	
 10225                           ;ADC.c: 16:         case 0: TRISAbits.TRISA0 = 1; ANSELbits.ANS0 = 1; ADCON0bits.CHS = 0
      +                          ; break;
 10226                           
 10227  0002' 1683               	bsf	3,5	;RP0=1, select bank1
 10228  0003' 1303               	bcf	3,6	;RP1=0, select bank1
 10229  0004' 1405               	bsf	5,0	;volatile
 10230  0005' 1683               	bsf	3,5	;RP0=1, select bank3
 10231  0006' 1703               	bsf	3,6	;RP1=1, select bank3
 10232  0007' 1408               	bsf	8,0	;volatile
 10233  0008'                    l3495:
 10234  0008' 30C3               	movlw	-61
 10235  0009' 1283               	bcf	3,5	;RP0=0, select bank0
 10236  000A' 1303               	bcf	3,6	;RP1=0, select bank0
 10237  000B' 059F               	andwf	31,f	;volatile
 10238  000C' 2800'              	goto	l196
 10239  000D'                    l197:	
 10240                           ;ADC.c: 17:         case 1: TRISAbits.TRISA1 = 1; ANSELbits.ANS1 = 1; ADCON0bits.CHS = 1
      +                          ; break;
 10241                           
 10242  000D' 1683               	bsf	3,5	;RP0=1, select bank1
 10243  000E' 1303               	bcf	3,6	;RP1=0, select bank1
 10244  000F' 1485               	bsf	5,1	;volatile
 10245  0010' 1683               	bsf	3,5	;RP0=1, select bank3
 10246  0011' 1703               	bsf	3,6	;RP1=1, select bank3
 10247  0012' 1488               	bsf	8,1	;volatile
 10248  0013'                    l3497:
 10249  0013' 1283               	bcf	3,5	;RP0=0, select bank0
 10250  0014' 1303               	bcf	3,6	;RP1=0, select bank0
 10251  0015' 081F               	movf	31,w	;volatile
 10252  0016' 39C3               	andlw	-61
 10253  0017' 3804               	iorlw	4
 10254  0018' 009F               	movwf	31	;volatile
 10255  0019' 2800'              	goto	l196
 10256  001A'                    l198:	
 10257                           ;ADC.c: 18:         case 2: TRISAbits.TRISA2 = 1; ANSELbits.ANS2 = 1; ADCON0bits.CHS = 2
      +                          ; break;
 10258                           
 10259  001A' 1683               	bsf	3,5	;RP0=1, select bank1
 10260  001B' 1303               	bcf	3,6	;RP1=0, select bank1
 10261  001C' 1505               	bsf	5,2	;volatile
 10262  001D' 1683               	bsf	3,5	;RP0=1, select bank3
 10263  001E' 1703               	bsf	3,6	;RP1=1, select bank3
 10264  001F' 1508               	bsf	8,2	;volatile
 10265  0020'                    l3499:
 10266  0020' 1283               	bcf	3,5	;RP0=0, select bank0
 10267  0021' 1303               	bcf	3,6	;RP1=0, select bank0
 10268  0022' 081F               	movf	31,w	;volatile
 10269  0023' 39C3               	andlw	-61
 10270  0024' 3808               	iorlw	8
 10271  0025' 009F               	movwf	31	;volatile
 10272  0026' 2800'              	goto	l196
 10273  0027'                    l199:	
 10274                           ;ADC.c: 19:         case 3: TRISAbits.TRISA3 = 1; ANSELbits.ANS3 = 1; ADCON0bits.CHS = 3
      +                          ; break;
 10275                           
 10276  0027' 1683               	bsf	3,5	;RP0=1, select bank1
 10277  0028' 1303               	bcf	3,6	;RP1=0, select bank1
 10278  0029' 1585               	bsf	5,3	;volatile
 10279  002A' 1683               	bsf	3,5	;RP0=1, select bank3
 10280  002B' 1703               	bsf	3,6	;RP1=1, select bank3
 10281  002C' 1588               	bsf	8,3	;volatile
 10282  002D'                    l3501:
 10283  002D' 1283               	bcf	3,5	;RP0=0, select bank0
 10284  002E' 1303               	bcf	3,6	;RP1=0, select bank0
 10285  002F' 081F               	movf	31,w	;volatile
 10286  0030' 39C3               	andlw	-61
 10287  0031' 380C               	iorlw	12
 10288  0032' 009F               	movwf	31	;volatile
 10289  0033' 2800'              	goto	l196
 10290  0034'                    l200:	
 10291                           ;ADC.c: 20:         case 4: TRISAbits.TRISA5 = 1; ANSELbits.ANS4 = 1; ADCON0bits.CHS = 4
      +                          ; break;
 10292                           
 10293  0034' 1683               	bsf	3,5	;RP0=1, select bank1
 10294  0035' 1303               	bcf	3,6	;RP1=0, select bank1
 10295  0036' 1685               	bsf	5,5	;volatile
 10296  0037' 1683               	bsf	3,5	;RP0=1, select bank3
 10297  0038' 1703               	bsf	3,6	;RP1=1, select bank3
 10298  0039' 1608               	bsf	8,4	;volatile
 10299  003A'                    l3503:
 10300  003A' 1283               	bcf	3,5	;RP0=0, select bank0
 10301  003B' 1303               	bcf	3,6	;RP1=0, select bank0
 10302  003C' 081F               	movf	31,w	;volatile
 10303  003D' 39C3               	andlw	-61
 10304  003E' 3810               	iorlw	16
 10305  003F' 009F               	movwf	31	;volatile
 10306  0040' 2800'              	goto	l196
 10307  0041'                    l201:	
 10308                           ;ADC.c: 21:         case 5: TRISEbits.TRISE0 = 1; ANSELbits.ANS5 = 1; ADCON0bits.CHS = 5
      +                          ; break;
 10309                           
 10310  0041' 1683               	bsf	3,5	;RP0=1, select bank1
 10311  0042' 1303               	bcf	3,6	;RP1=0, select bank1
 10312  0043' 1409               	bsf	9,0	;volatile
 10313  0044' 1683               	bsf	3,5	;RP0=1, select bank3
 10314  0045' 1703               	bsf	3,6	;RP1=1, select bank3
 10315  0046' 1688               	bsf	8,5	;volatile
 10316  0047'                    l3505:
 10317  0047' 1283               	bcf	3,5	;RP0=0, select bank0
 10318  0048' 1303               	bcf	3,6	;RP1=0, select bank0
 10319  0049' 081F               	movf	31,w	;volatile
 10320  004A' 39C3               	andlw	-61
 10321  004B' 3814               	iorlw	20
 10322  004C' 009F               	movwf	31	;volatile
 10323  004D' 2800'              	goto	l196
 10324  004E'                    l202:	
 10325                           ;ADC.c: 22:         case 6: TRISEbits.TRISE1 = 1; ANSELbits.ANS6 = 1; ADCON0bits.CHS = 6
      +                          ; break;
 10326                           
 10327  004E' 1683               	bsf	3,5	;RP0=1, select bank1
 10328  004F' 1303               	bcf	3,6	;RP1=0, select bank1
 10329  0050' 1489               	bsf	9,1	;volatile
 10330  0051' 1683               	bsf	3,5	;RP0=1, select bank3
 10331  0052' 1703               	bsf	3,6	;RP1=1, select bank3
 10332  0053' 1708               	bsf	8,6	;volatile
 10333  0054'                    l3507:
 10334  0054' 1283               	bcf	3,5	;RP0=0, select bank0
 10335  0055' 1303               	bcf	3,6	;RP1=0, select bank0
 10336  0056' 081F               	movf	31,w	;volatile
 10337  0057' 39C3               	andlw	-61
 10338  0058' 3818               	iorlw	24
 10339  0059' 009F               	movwf	31	;volatile
 10340  005A' 2800'              	goto	l196
 10341  005B'                    l203:	
 10342                           ;ADC.c: 23:         case 7: TRISEbits.TRISE3 = 1; ANSELbits.ANS7 = 1; ADCON0bits.CHS = 7
      +                          ; break;
 10343                           
 10344  005B' 1683               	bsf	3,5	;RP0=1, select bank1
 10345  005C' 1303               	bcf	3,6	;RP1=0, select bank1
 10346  005D' 1589               	bsf	9,3	;volatile
 10347  005E' 1683               	bsf	3,5	;RP0=1, select bank3
 10348  005F' 1703               	bsf	3,6	;RP1=1, select bank3
 10349  0060' 1788               	bsf	8,7	;volatile
 10350  0061'                    l3509:
 10351  0061' 1283               	bcf	3,5	;RP0=0, select bank0
 10352  0062' 1303               	bcf	3,6	;RP1=0, select bank0
 10353  0063' 081F               	movf	31,w	;volatile
 10354  0064' 39C3               	andlw	-61
 10355  0065' 381C               	iorlw	28
 10356  0066' 009F               	movwf	31	;volatile
 10357  0067' 2800'              	goto	l196
 10358  0068'                    l204:	
 10359                           ;ADC.c: 24:         case 8: TRISDbits.TRISD2 = 1; ANSELHbits.ANS8 = 1; ADCON0bits.CHS = 
      +                          8; break;
 10360                           
 10361  0068' 1683               	bsf	3,5	;RP0=1, select bank1
 10362  0069' 1303               	bcf	3,6	;RP1=0, select bank1
 10363  006A' 1508               	bsf	8,2	;volatile
 10364  006B' 1683               	bsf	3,5	;RP0=1, select bank3
 10365  006C' 1703               	bsf	3,6	;RP1=1, select bank3
 10366  006D' 1409               	bsf	9,0	;volatile
 10367  006E'                    l3511:
 10368  006E' 1283               	bcf	3,5	;RP0=0, select bank0
 10369  006F' 1303               	bcf	3,6	;RP1=0, select bank0
 10370  0070' 081F               	movf	31,w	;volatile
 10371  0071' 39C3               	andlw	-61
 10372  0072' 3820               	iorlw	32
 10373  0073' 009F               	movwf	31	;volatile
 10374  0074' 2800'              	goto	l196
 10375  0075'                    l205:	
 10376                           ;ADC.c: 25:         case 9: TRISDbits.TRISD3 = 1; ANSELHbits.ANS9 = 1; ADCON0bits.CHS = 
      +                          9; break;
 10377                           
 10378  0075' 1683               	bsf	3,5	;RP0=1, select bank1
 10379  0076' 1303               	bcf	3,6	;RP1=0, select bank1
 10380  0077' 1588               	bsf	8,3	;volatile
 10381  0078' 1683               	bsf	3,5	;RP0=1, select bank3
 10382  0079' 1703               	bsf	3,6	;RP1=1, select bank3
 10383  007A' 1489               	bsf	9,1	;volatile
 10384  007B'                    l3513:
 10385  007B' 1283               	bcf	3,5	;RP0=0, select bank0
 10386  007C' 1303               	bcf	3,6	;RP1=0, select bank0
 10387  007D' 081F               	movf	31,w	;volatile
 10388  007E' 39C3               	andlw	-61
 10389  007F' 3824               	iorlw	36
 10390  0080' 009F               	movwf	31	;volatile
 10391  0081' 2800'              	goto	l196
 10392  0082'                    l206:	
 10393                           ;ADC.c: 26:         case 10: TRISDbits.TRISD1 = 1; ANSELHbits.ANS10 = 1; ADCON0bits.CHS 
      +                          = 10; break;
 10394                           
 10395  0082' 1683               	bsf	3,5	;RP0=1, select bank1
 10396  0083' 1303               	bcf	3,6	;RP1=0, select bank1
 10397  0084' 1488               	bsf	8,1	;volatile
 10398  0085' 1683               	bsf	3,5	;RP0=1, select bank3
 10399  0086' 1703               	bsf	3,6	;RP1=1, select bank3
 10400  0087' 1509               	bsf	9,2	;volatile
 10401  0088'                    l3515:
 10402  0088' 1283               	bcf	3,5	;RP0=0, select bank0
 10403  0089' 1303               	bcf	3,6	;RP1=0, select bank0
 10404  008A' 081F               	movf	31,w	;volatile
 10405  008B' 39C3               	andlw	-61
 10406  008C' 3828               	iorlw	40
 10407  008D' 009F               	movwf	31	;volatile
 10408  008E' 2800'              	goto	l196
 10409  008F'                    l207:	
 10410                           ;ADC.c: 27:         case 11: TRISDbits.TRISD4 = 1; ANSELHbits.ANS11= 1; ADCON0bits.CHS =
      +                           11; break;
 10411                           
 10412  008F' 1683               	bsf	3,5	;RP0=1, select bank1
 10413  0090' 1303               	bcf	3,6	;RP1=0, select bank1
 10414  0091' 1608               	bsf	8,4	;volatile
 10415  0092' 1683               	bsf	3,5	;RP0=1, select bank3
 10416  0093' 1703               	bsf	3,6	;RP1=1, select bank3
 10417  0094' 1589               	bsf	9,3	;volatile
 10418  0095'                    l3517:
 10419  0095' 1283               	bcf	3,5	;RP0=0, select bank0
 10420  0096' 1303               	bcf	3,6	;RP1=0, select bank0
 10421  0097' 081F               	movf	31,w	;volatile
 10422  0098' 39C3               	andlw	-61
 10423  0099' 382C               	iorlw	44
 10424  009A' 009F               	movwf	31	;volatile
 10425  009B' 2800'              	goto	l196
 10426  009C'                    l208:	
 10427                           ;ADC.c: 28:         case 12: TRISDbits.TRISD0 = 1; ANSELHbits.ANS12 = 1; ADCON0bits.CHS 
      +                          = 12; break;
 10428                           
 10429  009C' 1683               	bsf	3,5	;RP0=1, select bank1
 10430  009D' 1303               	bcf	3,6	;RP1=0, select bank1
 10431  009E' 1408               	bsf	8,0	;volatile
 10432  009F' 1683               	bsf	3,5	;RP0=1, select bank3
 10433  00A0' 1703               	bsf	3,6	;RP1=1, select bank3
 10434  00A1' 1609               	bsf	9,4	;volatile
 10435  00A2'                    l3519:
 10436  00A2' 1283               	bcf	3,5	;RP0=0, select bank0
 10437  00A3' 1303               	bcf	3,6	;RP1=0, select bank0
 10438  00A4' 081F               	movf	31,w	;volatile
 10439  00A5' 39C3               	andlw	-61
 10440  00A6' 3830               	iorlw	48
 10441  00A7' 009F               	movwf	31	;volatile
 10442  00A8' 2800'              	goto	l196
 10443  00A9'                    l209:	
 10444                           ;ADC.c: 29:         case 13: TRISDbits.TRISD5 = 1; ANSELHbits.ANS13 = 1; ADCON0bits.CHS 
      +                          = 13; break;
 10445                           
 10446  00A9' 1683               	bsf	3,5	;RP0=1, select bank1
 10447  00AA' 1303               	bcf	3,6	;RP1=0, select bank1
 10448  00AB' 1688               	bsf	8,5	;volatile
 10449  00AC' 1683               	bsf	3,5	;RP0=1, select bank3
 10450  00AD' 1703               	bsf	3,6	;RP1=1, select bank3
 10451  00AE' 1689               	bsf	9,5	;volatile
 10452  00AF'                    l3521:
 10453  00AF' 1283               	bcf	3,5	;RP0=0, select bank0
 10454  00B0' 1303               	bcf	3,6	;RP1=0, select bank0
 10455  00B1' 081F               	movf	31,w	;volatile
 10456  00B2' 39C3               	andlw	-61
 10457  00B3' 3834               	iorlw	52
 10458  00B4' 009F               	movwf	31	;volatile
 10459  00B5' 2800'              	goto	l196
 10460  00B6'                    l3523:
 10461  00B6' 3000               	movlw	0
 10462  00B7' 2800'              	goto	l211
 10463  00B8'                    l3529:
 10464  00B8' 0805'              	movf	ADCval@x,w
 10465  00B9' 0083'              	movwf	??_ADCval
 10466  00BA' 0184'              	clrf	??_ADCval+1
 10467                           
 10468                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10469                           ; Switch size 1, requested type "simple"
 10470                           ; Number of cases is 1, Range of values is 0 to 0
 10471                           ; switch strategies available:
 10472                           ; Name         Instructions Cycles
 10473                           ; simple_byte            4     3 (average)
 10474                           ; direct_byte           11     8 (fixed)
 10475                           ; jumptable            260     6 (fixed)
 10476                           ;	Chosen strategy is simple_byte
 10477  00BB' 0804'              	movf	??_ADCval+1,w
 10478  00BC' 3A00               	xorlw	0	; case 0
 10479  00BD' 1903               	skipnz
 10480  00BE' 2800'              	goto	l5363
 10481  00BF' 2800'              	goto	l3523
 10482  00C0'                    l5363:
 10483                           
 10484                           ; Switch size 1, requested type "simple"
 10485                           ; Number of cases is 14, Range of values is 0 to 13
 10486                           ; switch strategies available:
 10487                           ; Name         Instructions Cycles
 10488                           ; simple_byte           43    22 (average)
 10489                           ; direct_byte           50     8 (fixed)
 10490                           ; jumptable            260     6 (fixed)
 10491                           ;	Chosen strategy is simple_byte
 10492  00C0' 0803'              	movf	??_ADCval,w
 10493  00C1' 3A00               	xorlw	0	; case 0
 10494  00C2' 1903               	skipnz
 10495  00C3' 2800'              	goto	l195
 10496  00C4' 3A01               	xorlw	1	; case 1
 10497  00C5' 1903               	skipnz
 10498  00C6' 2800'              	goto	l197
 10499  00C7' 3A03               	xorlw	3	; case 2
 10500  00C8' 1903               	skipnz
 10501  00C9' 2800'              	goto	l198
 10502  00CA' 3A01               	xorlw	1	; case 3
 10503  00CB' 1903               	skipnz
 10504  00CC' 2800'              	goto	l199
 10505  00CD' 3A07               	xorlw	7	; case 4
 10506  00CE' 1903               	skipnz
 10507  00CF' 2800'              	goto	l200
 10508  00D0' 3A01               	xorlw	1	; case 5
 10509  00D1' 1903               	skipnz
 10510  00D2' 2800'              	goto	l201
 10511  00D3' 3A03               	xorlw	3	; case 6
 10512  00D4' 1903               	skipnz
 10513  00D5' 2800'              	goto	l202
 10514  00D6' 3A01               	xorlw	1	; case 7
 10515  00D7' 1903               	skipnz
 10516  00D8' 2800'              	goto	l203
 10517  00D9' 3A0F               	xorlw	15	; case 8
 10518  00DA' 1903               	skipnz
 10519  00DB' 2800'              	goto	l204
 10520  00DC' 3A01               	xorlw	1	; case 9
 10521  00DD' 1903               	skipnz
 10522  00DE' 2800'              	goto	l205
 10523  00DF' 3A03               	xorlw	3	; case 10
 10524  00E0' 1903               	skipnz
 10525  00E1' 2800'              	goto	l206
 10526  00E2' 3A01               	xorlw	1	; case 11
 10527  00E3' 1903               	skipnz
 10528  00E4' 2800'              	goto	l207
 10529  00E5' 3A07               	xorlw	7	; case 12
 10530  00E6' 1903               	skipnz
 10531  00E7' 2800'              	goto	l208
 10532  00E8' 3A01               	xorlw	1	; case 13
 10533  00E9' 1903               	skipnz
 10534  00EA' 2800'              	goto	l209
 10535  00EB' 2800'              	goto	l3523
 10536  00EC'                    l196:
 10537                           
 10538                           ;ADC.c: 32:     ADCON0bits.ADON = 1;
 10539  00EC' 141F               	bsf	31,0	;volatile
 10540  00ED'                    l3531:
 10541                           
 10542                           ;ADC.c: 33:     _delay((unsigned long)((20)*(8000000/4000000.0)));
 10543  00ED' 300D               	movlw	13
 10544  00EE' 0083'              	movwf	??_ADCval
 10545  00EF'                    u9427:
 10546  00EF' 0B83'              	decfsz	??_ADCval,f
 10547  00F0' 2800'              	goto	u9427
 10548  00F1'                    l3533:
 10549                           
 10550                           ;ADC.c: 34:     ADCON0bits.GO = 1;
 10551  00F1' 1283               	bcf	3,5	;RP0=0, select bank0
 10552  00F2' 1303               	bcf	3,6	;RP1=0, select bank0
 10553  00F3' 149F               	bsf	31,1	;volatile
 10554  00F4'                    l3535:
 10555                           
 10556                           ;ADC.c: 36:     if (ADCON0bits.GO_DONE ==1){goto res;}
 10557  00F4' 1C9F               	btfss	31,1	;volatile
 10558  00F5' 2800'              	goto	u5651
 10559  00F6' 2800'              	goto	u5650
 10560  00F7'                    u5651:
 10561  00F7' 2800'              	goto	l213
 10562  00F8'                    u5650:
 10563  00F8' 2800'              	goto	l3535
 10564  00F9'                    l213:	
 10565                           ;ADC.c: 37:     else {ADCON0bits.ADON=0; return ADRESH;}
 10566                           
 10567  00F9' 101F               	bcf	31,0	;volatile
 10568  00FA'                    l3541:
 10569  00FA' 081E               	movf	30,w	;volatile
 10570  00FB'                    l211:
 10571  00FB' 0008               	return
 10572  00FC'                    __end_of_ADCval:
 10573                           
 10574                           	psect	text37
 10575  0000'                    __ptext37:	
 10576 ;; *************** function _ADC_Init *****************
 10577 ;; Defined at:
 10578 ;;		line 6 in file "ADC.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;		None
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;		None
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  1    wreg      void 
 10585 ;; Registers used:
 10586 ;;		wreg, status,2, status,0
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10592 ;;      Params:         0       0       0       0       0
 10593 ;;      Locals:         0       0       0       0       0
 10594 ;;      Temps:          0       0       0       0       0
 10595 ;;      Totals:         0       0       0       0       0
 10596 ;;Total ram usage:        0 bytes
 10597 ;; Hardware stack levels used:    1
 10598 ;; Hardware stack levels required when called:    2
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_main
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           
 10607                           ;psect for function _ADC_Init
 10608  0000'                    _ADC_Init:
 10609  0000'                    l3447:	
 10610                           ;incstack = 0
 10611                           ; Regs used in _ADC_Init: [wreg+status,2+status,0]
 10612                           
 10613                           
 10614                           ;ADC.c: 7:    TRISA = 0b00000011;
 10615  0000' 3003               	movlw	3
 10616  0001' 1683               	bsf	3,5	;RP0=1, select bank1
 10617  0002' 1303               	bcf	3,6	;RP1=0, select bank1
 10618  0003' 0085               	movwf	5	;volatile
 10619                           
 10620                           ;ADC.c: 8:    ADCON1 = 0b10000000;
 10621  0004' 3080               	movlw	128
 10622  0005' 009F               	movwf	31	;volatile
 10623                           
 10624                           ;ADC.c: 9:    ANSEL = 0b00000011;
 10625  0006' 3003               	movlw	3
 10626  0007' 1683               	bsf	3,5	;RP0=1, select bank3
 10627  0008' 1703               	bsf	3,6	;RP1=1, select bank3
 10628  0009' 0088               	movwf	8	;volatile
 10629                           
 10630                           ;ADC.c: 10:    ADCON0 = 0b11000001;
 10631  000A' 30C1               	movlw	193
 10632  000B' 1283               	bcf	3,5	;RP0=0, select bank0
 10633  000C' 1303               	bcf	3,6	;RP1=0, select bank0
 10634  000D' 009F               	movwf	31	;volatile
 10635  000E'                    l3449:
 10636                           
 10637                           ;ADC.c: 11:    ADCON0bits.ADCS = 1;
 10638  000E' 081F               	movf	31,w	;volatile
 10639  000F' 393F               	andlw	-193
 10640  0010' 3840               	iorlw	64
 10641  0011' 009F               	movwf	31	;volatile
 10642  0012'                    l191:
 10643  0012' 0008               	return
 10644  0013'                    __end_of_ADC_Init:
 10645                           
 10646                           	psect	text38
 10647  0000'                    __ptext38:	
 10648 ;; *************** function _ISR *****************
 10649 ;; Defined at:
 10650 ;;		line 108 in file "lab_3.c"
 10651 ;; Parameters:    Size  Location     Type
 10652 ;;		None
 10653 ;; Auto vars:     Size  Location     Type
 10654 ;;		None
 10655 ;; Return value:  Size  Location     Type
 10656 ;;                  1    wreg      void 
 10657 ;; Registers used:
 10658 ;;		wreg, status,2, status,0, pclath, cstack
 10659 ;; Tracked objects:
 10660 ;;		On entry : 0/0
 10661 ;;		On exit  : 0/0
 10662 ;;		Unchanged: 0/0
 10663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10664 ;;      Params:         0       0       0       0       0
 10665 ;;      Locals:         0       0       0       0       0
 10666 ;;      Temps:          3       0       0       0       0
 10667 ;;      Totals:         3       0       0       0       0
 10668 ;;Total ram usage:        3 bytes
 10669 ;; Hardware stack levels used:    1
 10670 ;; Hardware stack levels required when called:    1
 10671 ;; This function calls:
 10672 ;;		_Rd_USART
 10673 ;; This function is called by:
 10674 ;;		Interrupt level 1
 10675 ;; This function uses a non-reentrant model
 10676 ;;
 10677                           
 10678                           
 10679                           ;psect for function _ISR
 10680  0000'                    _ISR:
 10681  0000'                    i1l3921:
 10682  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10683  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10684  0002' 1E8C               	btfss	12,5	;volatile
 10685  0003' 2800'              	goto	u626_21
 10686  0004' 2800'              	goto	u626_20
 10687  0005'                    u626_21:
 10688  0005' 2800'              	goto	i1l89
 10689  0006'                    u626_20:
 10690  0006'                    i1l3923:
 10691  0006' 128C               	bcf	12,5	;volatile
 10692  0007'                    i1l3925:
 10693  0007' 120A' 118A' 2000' 120A' 118A' 	fcall	_Rd_USART
 10694  000C' 0080'              	movwf	??_ISR
 10695  000D' 0800'              	movf	??_ISR,w
 10696  000E' 0080'              	movwf	_valUSART
 10697  000F'                    i1l3927:
 10698  000F' 302B               	movlw	43
 10699  0010' 0600'              	xorwf	_valUSART,w
 10700  0011' 1D03               	btfss	3,2
 10701  0012' 2800'              	goto	u627_21
 10702  0013' 2800'              	goto	u627_20
 10703  0014'                    u627_21:
 10704  0014' 2800'              	goto	i1l3931
 10705  0015'                    u627_20:
 10706  0015'                    i1l3929:
 10707  0015' 3001               	movlw	1
 10708  0016' 0080'              	movwf	??_ISR
 10709  0017' 0800'              	movf	??_ISR,w
 10710  0018' 1683               	bsf	3,5	;RP0=1, select bank1
 10711  0019' 1303               	bcf	3,6	;RP1=0, select bank1
 10712  001A' 0780'              	addwf	_contador^(0+128),f
 10713  001B' 2800'              	goto	i1l89
 10714  001C'                    i1l3931:
 10715  001C' 302D               	movlw	45
 10716  001D' 0600'              	xorwf	_valUSART,w
 10717  001E' 1D03               	btfss	3,2
 10718  001F' 2800'              	goto	u628_21
 10719  0020' 2800'              	goto	u628_20
 10720  0021'                    u628_21:
 10721  0021' 2800'              	goto	i1l89
 10722  0022'                    u628_20:
 10723  0022'                    i1l3933:
 10724  0022' 3001               	movlw	1
 10725  0023' 1683               	bsf	3,5	;RP0=1, select bank1
 10726  0024' 1303               	bcf	3,6	;RP1=0, select bank1
 10727  0025' 0280'              	subwf	_contador^(0+128),f
 10728  0026'                    i1l89:
 10729  0026' 0802'              	movf	??_ISR+2,w
 10730  0027' 008A               	movwf	10
 10731  0028' 0E01'              	swapf	??_ISR+1,w
 10732  0029' 0083               	movwf	3
 10733  002A' 0EFE               	swapf	btemp,f
 10734  002B' 0E7E               	swapf	btemp,w
 10735  002C' 0009               	retfie
 10736  002D'                    __end_of_ISR:
 10737                           
 10738                           	psect	intentry
 10739  0000'                    __pintentry:	
 10740                           ;incstack = 0
 10741                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
 10742                           
 10743  0000'                    interrupt_function:
 10744  007E                     saved_w	set	btemp
 10745  0000' 00FE               	movwf	btemp
 10746  0001' 0E03               	swapf	3,w
 10747  0002' 0081'              	movwf	??_ISR+1
 10748  0003' 080A               	movf	10,w
 10749  0004' 0082'              	movwf	??_ISR+2
 10750  0005' 120A' 118A' 2800'  	ljmp	_ISR
 10751                           
 10752                           	psect	text39
 10753  0000'                    __ptext39:	
 10754 ;; *************** function _Rd_USART *****************
 10755 ;; Defined at:
 10756 ;;		line 39 in file "USART.c"
 10757 ;; Parameters:    Size  Location     Type
 10758 ;;		None
 10759 ;; Auto vars:     Size  Location     Type
 10760 ;;		None
 10761 ;; Return value:  Size  Location     Type
 10762 ;;                  1    wreg      unsigned char 
 10763 ;; Registers used:
 10764 ;;		wreg
 10765 ;; Tracked objects:
 10766 ;;		On entry : 0/0
 10767 ;;		On exit  : 0/0
 10768 ;;		Unchanged: 0/0
 10769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10770 ;;      Params:         0       0       0       0       0
 10771 ;;      Locals:         0       0       0       0       0
 10772 ;;      Temps:          0       0       0       0       0
 10773 ;;      Totals:         0       0       0       0       0
 10774 ;;Total ram usage:        0 bytes
 10775 ;; Hardware stack levels used:    1
 10776 ;; This function calls:
 10777 ;;		Nothing
 10778 ;; This function is called by:
 10779 ;;		_ISR
 10780 ;; This function uses a non-reentrant model
 10781 ;;
 10782                           
 10783                           
 10784                           ;psect for function _Rd_USART
 10785  0000'                    _Rd_USART:
 10786  0000'                    i1l3875:	
 10787                           ;incstack = 0
 10788                           ; Regs used in _Rd_USART: [wreg]
 10789                           
 10790  0000'                    i1l256:	
 10791                           ;USART.c: 40:   while(!RCIF);
 10792                           
 10793  0000' 1283               	bcf	3,5	;RP0=0, select bank0
 10794  0001' 1303               	bcf	3,6	;RP1=0, select bank0
 10795  0002' 1E8C               	btfss	12,5	;volatile
 10796  0003' 2800'              	goto	u625_21
 10797  0004' 2800'              	goto	u625_20
 10798  0005'                    u625_21:
 10799  0005' 2800'              	goto	i1l256
 10800  0006'                    u625_20:
 10801  0006'                    i1l3877:
 10802                           
 10803                           ;USART.c: 41:   return RCREG;
 10804  0006' 081A               	movf	26,w	;volatile
 10805  0007'                    i1l259:
 10806  0007' 0008               	return
 10807  0008'                    __end_of_Rd_USART:
 10808  007E                     btemp	set	126	;btemp
 10809  007E                     wtemp0	set	126
 10810                           
 10811                           	psect	config
 10812                           
 10813                           ;Config register CONFIG1 @ 0x2007
 10814                           ;	Oscillator Selection bits
 10815                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
 10816                           ;	Watchdog Timer Enable bit
 10817                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10818                           ;	Power-up Timer Enable bit
 10819                           ;	PWRTE = OFF, PWRT disabled
 10820                           ;	RE3/MCLR pin function select bit
 10821                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10822                           ;	Code Protection bit
 10823                           ;	CP = OFF, Program memory code protection is disabled
 10824                           ;	Data Code Protection bit
 10825                           ;	CPD = OFF, Data memory code protection is disabled
 10826                           ;	Brown Out Reset Selection bits
 10827                           ;	BOREN = OFF, BOR disabled
 10828                           ;	Internal External Switchover bit
 10829                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10830                           ;	Fail-Safe Clock Monitor Enabled bit
 10831                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10832                           ;	Low Voltage Programming Enable bit
 10833                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10834                           ;	In-Circuit Debugger Mode bit
 10835                           ;	DEBUG = 0x1, unprogrammed default
 10836  2007                     	org	8199
 10837  2007  20D1               	dw	8401
 10838                           
 10839                           ;Config register CONFIG2 @ 0x2008
 10840                           ;	Brown-out Reset Selection bit
 10841                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10842                           ;	Flash Program Memory Self Write Enable bits
 10843                           ;	WRT = OFF, Write protection off
 10844  2008                     	org	8200
 10845  2008  3FFF               	dw	16383
 10846                           
 10847                           	psect	text2_split_1
 10848  0000'                    u8910:
 10849  0000'                    l5053:
 10850  0000' 1683               	bsf	3,5	;RP0=1, select bank3
 10851  0001' 1703               	bsf	3,6	;RP1=1, select bank3
 10852  0002' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 10853  0003' 1283               	bcf	3,5	;RP0=0, select bank0
 10854  0004' 1303               	bcf	3,6	;RP1=0, select bank0
 10855  0005' 0083'              	movwf	___fleq@ff1+3
 10856  0006' 1683               	bsf	3,5	;RP0=1, select bank3
 10857  0007' 1703               	bsf	3,6	;RP1=1, select bank3
 10858  0008' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 10859  0009' 1283               	bcf	3,5	;RP0=0, select bank0
 10860  000A' 1303               	bcf	3,6	;RP1=0, select bank0
 10861  000B' 0082'              	movwf	___fleq@ff1+2
 10862  000C' 1683               	bsf	3,5	;RP0=1, select bank3
 10863  000D' 1703               	bsf	3,6	;RP1=1, select bank3
 10864  000E' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 10865  000F' 1283               	bcf	3,5	;RP0=0, select bank0
 10866  0010' 1303               	bcf	3,6	;RP1=0, select bank0
 10867  0011' 0081'              	movwf	___fleq@ff1+1
 10868  0012' 1683               	bsf	3,5	;RP0=1, select bank3
 10869  0013' 1703               	bsf	3,6	;RP1=1, select bank3
 10870  0014' 0800'              	movf	sprintf@fval^(0+384),w
 10871  0015' 1283               	bcf	3,5	;RP0=0, select bank0
 10872  0016' 1303               	bcf	3,6	;RP1=0, select bank0
 10873  0017' 0080'              	movwf	___fleq@ff1
 10874  0018' 3000               	movlw	0
 10875  0019' 0087'              	movwf	___fleq@ff2+3
 10876  001A' 3000               	movlw	0
 10877  001B' 0086'              	movwf	___fleq@ff2+2
 10878  001C' 3000               	movlw	0
 10879  001D' 0085'              	movwf	___fleq@ff2+1
 10880  001E' 3000               	movlw	0
 10881  001F' 0084'              	movwf	___fleq@ff2
 10882  0020' 120A' 118A' 2000' 120A' 118A' 	fcall	___fleq
 10883  0025' 1803               	btfsc	3,0
 10884  0026' 2800'              	goto	u8921
 10885  0027' 2800'              	goto	u8920
 10886  0028'                    u8921:
 10887  0028' 2800'              	goto	l5073
 10888  0029'                    u8920:
 10889  0029'                    l5055:
 10890  0029' 1683               	bsf	3,5	;RP0=1, select bank3
 10891  002A' 1703               	bsf	3,6	;RP1=1, select bank3
 10892  002B' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 10893  002C' 1283               	bcf	3,5	;RP0=0, select bank0
 10894  002D' 1303               	bcf	3,6	;RP1=0, select bank0
 10895  002E' 00BA'              	movwf	___fltol@f1+3
 10896  002F' 1683               	bsf	3,5	;RP0=1, select bank3
 10897  0030' 1703               	bsf	3,6	;RP1=1, select bank3
 10898  0031' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 10899  0032' 1283               	bcf	3,5	;RP0=0, select bank0
 10900  0033' 1303               	bcf	3,6	;RP1=0, select bank0
 10901  0034' 00B9'              	movwf	___fltol@f1+2
 10902  0035' 1683               	bsf	3,5	;RP0=1, select bank3
 10903  0036' 1703               	bsf	3,6	;RP1=1, select bank3
 10904  0037' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 10905  0038' 1283               	bcf	3,5	;RP0=0, select bank0
 10906  0039' 1303               	bcf	3,6	;RP1=0, select bank0
 10907  003A' 00B8'              	movwf	___fltol@f1+1
 10908  003B' 1683               	bsf	3,5	;RP0=1, select bank3
 10909  003C' 1703               	bsf	3,6	;RP1=1, select bank3
 10910  003D' 0800'              	movf	sprintf@fval^(0+384),w
 10911  003E' 1283               	bcf	3,5	;RP0=0, select bank0
 10912  003F' 1303               	bcf	3,6	;RP1=0, select bank0
 10913  0040' 00B7'              	movwf	___fltol@f1
 10914  0041' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 10915  0046' 1283               	bcf	3,5	;RP0=0, select bank0
 10916  0047' 1303               	bcf	3,6	;RP1=0, select bank0
 10917  0048' 083A'              	movf	?___fltol+3,w
 10918  0049' 0439'              	iorwf	?___fltol+2,w
 10919  004A' 0438'              	iorwf	?___fltol+1,w
 10920  004B' 0437'              	iorwf	?___fltol,w
 10921  004C' 1D03               	skipz
 10922  004D' 2800'              	goto	u8931
 10923  004E' 2800'              	goto	u8930
 10924  004F'                    u8931:
 10925  004F' 2800'              	goto	l5073
 10926  0050'                    u8930:
 10927  0050'                    l5057:
 10928  0050' 1683               	bsf	3,5	;RP0=1, select bank3
 10929  0051' 1703               	bsf	3,6	;RP1=1, select bank3
 10930  0052' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
 10931  0053' 3A80               	xorlw	128
 10932  0054' 00FF               	movwf	btemp+1
 10933  0055' 3080               	movlw	128
 10934  0056' 027F               	subwf	btemp+1,w
 10935  0057' 1D03               	skipz
 10936  0058' 2800'              	goto	u8945
 10937  0059' 3002               	movlw	2
 10938  005A' 0200'              	subwf	sprintf@eexp^(0+384),w
 10939  005B'                    u8945:
 10940  005B' 1C03               	skipc
 10941  005C' 2800'              	goto	u8941
 10942  005D' 2800'              	goto	u8940
 10943  005E'                    u8941:
 10944  005E' 2800'              	goto	l5073
 10945  005F'                    u8940:
 10946  005F'                    l5059:
 10947                           
 10948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10949  005F' 1683               	bsf	3,5	;RP0=1, select bank3
 10950  0060' 1703               	bsf	3,6	;RP1=1, select bank3
 10951  0061' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
 10952  0062' 1283               	bcf	3,5	;RP0=0, select bank0
 10953  0063' 1303               	bcf	3,6	;RP1=0, select bank0
 10954  0064' 0083'              	movwf	___flge@ff1+3
 10955  0065' 1683               	bsf	3,5	;RP0=1, select bank3
 10956  0066' 1703               	bsf	3,6	;RP1=1, select bank3
 10957  0067' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
 10958  0068' 1283               	bcf	3,5	;RP0=0, select bank0
 10959  0069' 1303               	bcf	3,6	;RP1=0, select bank0
 10960  006A' 0082'              	movwf	___flge@ff1+2
 10961  006B' 1683               	bsf	3,5	;RP0=1, select bank3
 10962  006C' 1703               	bsf	3,6	;RP1=1, select bank3
 10963  006D' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
 10964  006E' 1283               	bcf	3,5	;RP0=0, select bank0
 10965  006F' 1303               	bcf	3,6	;RP1=0, select bank0
 10966  0070' 0081'              	movwf	___flge@ff1+1
 10967  0071' 1683               	bsf	3,5	;RP0=1, select bank3
 10968  0072' 1703               	bsf	3,6	;RP1=1, select bank3
 10969  0073' 0800'              	movf	sprintf@tmpval^(0+384),w
 10970  0074' 1283               	bcf	3,5	;RP0=0, select bank0
 10971  0075' 1303               	bcf	3,6	;RP1=0, select bank0
 10972  0076' 0080'              	movwf	___flge@ff1
 10973  0077' 3040               	movlw	64
 10974  0078' 0087'              	movwf	___flge@ff2+3
 10975  0079' 3089               	movlw	137
 10976  007A' 0086'              	movwf	___flge@ff2+2
 10977  007B' 3070               	movlw	112
 10978  007C' 0085'              	movwf	___flge@ff2+1
 10979  007D' 305F               	movlw	95
 10980  007E' 0084'              	movwf	___flge@ff2
 10981  007F' 120A' 118A' 2000' 120A' 118A' 	fcall	___flge
 10982  0084' 1803               	btfsc	3,0
 10983  0085' 2800'              	goto	u8951
 10984  0086' 2800'              	goto	u8950
 10985  0087'                    u8951:
 10986  0087' 2800'              	goto	l5063
 10987  0088'                    u8950:
 10988  0088'                    l5061:
 10989                           
 10990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10991  0088' 30F7               	movlw	247
 10992  0089' 1683               	bsf	3,5	;RP0=1, select bank3
 10993  008A' 1703               	bsf	3,6	;RP1=1, select bank3
 10994  008B' 0780'              	addwf	sprintf@eexp^(0+384),f
 10995  008C' 1803               	skipnc
 10996  008D' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
 10997  008E' 30FF               	movlw	255
 10998  008F' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
 10999                           
 11000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 11001  0090' 2800'              	goto	l5065
 11002  0091'                    l5063:
 11003                           
 11004                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 11005  0091' 30F8               	movlw	248
 11006  0092' 1683               	bsf	3,5	;RP0=1, select bank3
 11007  0093' 1703               	bsf	3,6	;RP1=1, select bank3
 11008  0094' 0780'              	addwf	sprintf@eexp^(0+384),f
 11009  0095' 1803               	skipnc
 11010  0096' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
 11011  0097' 30FF               	movlw	255
 11012  0098' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
 11013  0099'                    l5065:
 11014                           
 11015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 11016  0099' 0800'              	movf	sprintf@eexp^(0+384),w
 11017  009A' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
 11018  009F' 1283               	bcf	3,5	;RP0=0, select bank0
 11019  00A0' 1303               	bcf	3,6	;RP1=0, select bank0
 11020  00A1' 0827'              	movf	?_scale+3,w
 11021  00A2' 1683               	bsf	3,5	;RP0=1, select bank3
 11022  00A3' 1703               	bsf	3,6	;RP1=1, select bank3
 11023  00A4' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 11024  00A5' 1283               	bcf	3,5	;RP0=0, select bank0
 11025  00A6' 1303               	bcf	3,6	;RP1=0, select bank0
 11026  00A7' 0826'              	movf	?_scale+2,w
 11027  00A8' 1683               	bsf	3,5	;RP0=1, select bank3
 11028  00A9' 1703               	bsf	3,6	;RP1=1, select bank3
 11029  00AA' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 11030  00AB' 1283               	bcf	3,5	;RP0=0, select bank0
 11031  00AC' 1303               	bcf	3,6	;RP1=0, select bank0
 11032  00AD' 0825'              	movf	?_scale+1,w
 11033  00AE' 1683               	bsf	3,5	;RP0=1, select bank3
 11034  00AF' 1703               	bsf	3,6	;RP1=1, select bank3
 11035  00B0' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 11036  00B1' 1283               	bcf	3,5	;RP0=0, select bank0
 11037  00B2' 1303               	bcf	3,6	;RP1=0, select bank0
 11038  00B3' 0824'              	movf	?_scale,w
 11039  00B4' 1683               	bsf	3,5	;RP0=1, select bank3
 11040  00B5' 1703               	bsf	3,6	;RP1=1, select bank3
 11041  00B6' 0080'              	movwf	sprintf@tmpval^(0+384)
 11042  00B7'                    l5067:
 11043  00B7' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 11044  00B8' 1283               	bcf	3,5	;RP0=0, select bank0
 11045  00B9' 1303               	bcf	3,6	;RP1=0, select bank0
 11046  00BA' 0083'              	movwf	__div_to_l_@f1+3
 11047  00BB' 1683               	bsf	3,5	;RP0=1, select bank3
 11048  00BC' 1703               	bsf	3,6	;RP1=1, select bank3
 11049  00BD' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 11050  00BE' 1283               	bcf	3,5	;RP0=0, select bank0
 11051  00BF' 1303               	bcf	3,6	;RP1=0, select bank0
 11052  00C0' 0082'              	movwf	__div_to_l_@f1+2
 11053  00C1' 1683               	bsf	3,5	;RP0=1, select bank3
 11054  00C2' 1703               	bsf	3,6	;RP1=1, select bank3
 11055  00C3' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 11056  00C4' 1283               	bcf	3,5	;RP0=0, select bank0
 11057  00C5' 1303               	bcf	3,6	;RP1=0, select bank0
 11058  00C6' 0081'              	movwf	__div_to_l_@f1+1
 11059  00C7' 1683               	bsf	3,5	;RP0=1, select bank3
 11060  00C8' 1703               	bsf	3,6	;RP1=1, select bank3
 11061  00C9' 0800'              	movf	sprintf@fval^(0+384),w
 11062  00CA' 1283               	bcf	3,5	;RP0=0, select bank0
 11063  00CB' 1303               	bcf	3,6	;RP1=0, select bank0
 11064  00CC' 0080'              	movwf	__div_to_l_@f1
 11065  00CD' 1683               	bsf	3,5	;RP0=1, select bank3
 11066  00CE' 1703               	bsf	3,6	;RP1=1, select bank3
 11067  00CF' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
 11068  00D0' 1283               	bcf	3,5	;RP0=0, select bank0
 11069  00D1' 1303               	bcf	3,6	;RP1=0, select bank0
 11070  00D2' 0087'              	movwf	__div_to_l_@f2+3
 11071  00D3' 1683               	bsf	3,5	;RP0=1, select bank3
 11072  00D4' 1703               	bsf	3,6	;RP1=1, select bank3
 11073  00D5' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
 11074  00D6' 1283               	bcf	3,5	;RP0=0, select bank0
 11075  00D7' 1303               	bcf	3,6	;RP1=0, select bank0
 11076  00D8' 0086'              	movwf	__div_to_l_@f2+2
 11077  00D9' 1683               	bsf	3,5	;RP0=1, select bank3
 11078  00DA' 1703               	bsf	3,6	;RP1=1, select bank3
 11079  00DB' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
 11080  00DC' 1283               	bcf	3,5	;RP0=0, select bank0
 11081  00DD' 1303               	bcf	3,6	;RP1=0, select bank0
 11082  00DE' 0085'              	movwf	__div_to_l_@f2+1
 11083  00DF' 1683               	bsf	3,5	;RP0=1, select bank3
 11084  00E0' 1703               	bsf	3,6	;RP1=1, select bank3
 11085  00E1' 0800'              	movf	sprintf@tmpval^(0+384),w
 11086  00E2' 1283               	bcf	3,5	;RP0=0, select bank0
 11087  00E3' 1303               	bcf	3,6	;RP1=0, select bank0
 11088  00E4' 0084'              	movwf	__div_to_l_@f2
 11089  00E5' 120A' 118A' 2000' 120A' 118A' 	fcall	__div_to_l_
 11090  00EA' 1283               	bcf	3,5	;RP0=0, select bank0
 11091  00EB' 1303               	bcf	3,6	;RP1=0, select bank0
 11092  00EC' 0803'              	movf	?__div_to_l_+3,w
 11093  00ED' 1683               	bsf	3,5	;RP0=1, select bank3
 11094  00EE' 1703               	bsf	3,6	;RP1=1, select bank3
 11095  00EF' 0080'              	movwf	(sprintf@val+3)^(0+384)
 11096  00F0' 1283               	bcf	3,5	;RP0=0, select bank0
 11097  00F1' 1303               	bcf	3,6	;RP1=0, select bank0
 11098  00F2' 0802'              	movf	?__div_to_l_+2,w
 11099  00F3' 1683               	bsf	3,5	;RP0=1, select bank3
 11100  00F4' 1703               	bsf	3,6	;RP1=1, select bank3
 11101  00F5' 0080'              	movwf	(sprintf@val+2)^(0+384)
 11102  00F6' 1283               	bcf	3,5	;RP0=0, select bank0
 11103  00F7' 1303               	bcf	3,6	;RP1=0, select bank0
 11104  00F8' 0801'              	movf	?__div_to_l_+1,w
 11105  00F9' 1683               	bsf	3,5	;RP0=1, select bank3
 11106  00FA' 1703               	bsf	3,6	;RP1=1, select bank3
 11107  00FB' 0080'              	movwf	(sprintf@val+1)^(0+384)
 11108  00FC' 1283               	bcf	3,5	;RP0=0, select bank0
 11109  00FD' 1303               	bcf	3,6	;RP1=0, select bank0
 11110  00FE' 0800'              	movf	?__div_to_l_,w
 11111  00FF' 1683               	bsf	3,5	;RP0=1, select bank3
 11112  0100' 1703               	bsf	3,6	;RP1=1, select bank3
 11113  0101' 0080'              	movwf	sprintf@val^(0+384)
 11114  0102'                    l5071:
 11115                           
 11116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 11117  0102' 3000               	movlw	0
 11118  0103' 0080'              	movwf	(sprintf@fval+3)^(0+384)
 11119  0104' 3000               	movlw	0
 11120  0105' 0080'              	movwf	(sprintf@fval+2)^(0+384)
 11121  0106' 3000               	movlw	0
 11122  0107' 0080'              	movwf	(sprintf@fval+1)^(0+384)
 11123  0108' 3000               	movlw	0
 11124  0109' 0080'              	movwf	sprintf@fval^(0+384)
 11125                           
 11126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 11127  010A' 2800'              	goto	l5079
 11128  010B'                    l5073:
 11129                           
 11130                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 11131  010B' 1683               	bsf	3,5	;RP0=1, select bank3
 11132  010C' 1703               	bsf	3,6	;RP1=1, select bank3
 11133  010D' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 11134  010E' 1283               	bcf	3,5	;RP0=0, select bank0
 11135  010F' 1303               	bcf	3,6	;RP1=0, select bank0
 11136  0110' 00BA'              	movwf	___fltol@f1+3
 11137  0111' 1683               	bsf	3,5	;RP0=1, select bank3
 11138  0112' 1703               	bsf	3,6	;RP1=1, select bank3
 11139  0113' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 11140  0114' 1283               	bcf	3,5	;RP0=0, select bank0
 11141  0115' 1303               	bcf	3,6	;RP1=0, select bank0
 11142  0116' 00B9'              	movwf	___fltol@f1+2
 11143  0117' 1683               	bsf	3,5	;RP0=1, select bank3
 11144  0118' 1703               	bsf	3,6	;RP1=1, select bank3
 11145  0119' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 11146  011A' 1283               	bcf	3,5	;RP0=0, select bank0
 11147  011B' 1303               	bcf	3,6	;RP1=0, select bank0
 11148  011C' 00B8'              	movwf	___fltol@f1+1
 11149  011D' 1683               	bsf	3,5	;RP0=1, select bank3
 11150  011E' 1703               	bsf	3,6	;RP1=1, select bank3
 11151  011F' 0800'              	movf	sprintf@fval^(0+384),w
 11152  0120' 1283               	bcf	3,5	;RP0=0, select bank0
 11153  0121' 1303               	bcf	3,6	;RP1=0, select bank0
 11154  0122' 00B7'              	movwf	___fltol@f1
 11155  0123' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 11156  0128' 1283               	bcf	3,5	;RP0=0, select bank0
 11157  0129' 1303               	bcf	3,6	;RP1=0, select bank0
 11158  012A' 083A'              	movf	?___fltol+3,w
 11159  012B' 1683               	bsf	3,5	;RP0=1, select bank3
 11160  012C' 1703               	bsf	3,6	;RP1=1, select bank3
 11161  012D' 0080'              	movwf	(sprintf@val+3)^(0+384)
 11162  012E' 1283               	bcf	3,5	;RP0=0, select bank0
 11163  012F' 1303               	bcf	3,6	;RP1=0, select bank0
 11164  0130' 0839'              	movf	?___fltol+2,w
 11165  0131' 1683               	bsf	3,5	;RP0=1, select bank3
 11166  0132' 1703               	bsf	3,6	;RP1=1, select bank3
 11167  0133' 0080'              	movwf	(sprintf@val+2)^(0+384)
 11168  0134' 1283               	bcf	3,5	;RP0=0, select bank0
 11169  0135' 1303               	bcf	3,6	;RP1=0, select bank0
 11170  0136' 0838'              	movf	?___fltol+1,w
 11171  0137' 1683               	bsf	3,5	;RP0=1, select bank3
 11172  0138' 1703               	bsf	3,6	;RP1=1, select bank3
 11173  0139' 0080'              	movwf	(sprintf@val+1)^(0+384)
 11174  013A' 1283               	bcf	3,5	;RP0=0, select bank0
 11175  013B' 1303               	bcf	3,6	;RP1=0, select bank0
 11176  013C' 0837'              	movf	?___fltol,w
 11177  013D' 1683               	bsf	3,5	;RP0=1, select bank3
 11178  013E' 1703               	bsf	3,6	;RP1=1, select bank3
 11179  013F' 0080'              	movwf	sprintf@val^(0+384)
 11180  0140'                    l5075:
 11181                           
 11182                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 11183  0140' 0800'              	movf	(sprintf@val+3)^(0+384),w
 11184  0141' 0086'              	movwf	___xxtofl@val+3
 11185  0142' 0800'              	movf	(sprintf@val+2)^(0+384),w
 11186  0143' 0085'              	movwf	___xxtofl@val+2
 11187  0144' 0800'              	movf	(sprintf@val+1)^(0+384),w
 11188  0145' 0084'              	movwf	___xxtofl@val+1
 11189  0146' 0800'              	movf	sprintf@val^(0+384),w
 11190  0147' 0083'              	movwf	___xxtofl@val
 11191  0148' 3000               	movlw	0
 11192  0149' 120A' 118A' 2000' 120A' 118A' 	fcall	___xxtofl
 11193  014E' 0806'              	movf	?___xxtofl+3,w
 11194  014F' 1683               	bsf	3,5	;RP0=1, select bank1
 11195  0150' 1303               	bcf	3,6	;RP1=0, select bank1
 11196  0151' 0080'              	movwf	(___flsub@a+3)^(0+128)
 11197  0152' 0805'              	movf	?___xxtofl+2,w
 11198  0153' 0080'              	movwf	(___flsub@a+2)^(0+128)
 11199  0154' 0804'              	movf	?___xxtofl+1,w
 11200  0155' 0080'              	movwf	(___flsub@a+1)^(0+128)
 11201  0156' 0803'              	movf	?___xxtofl,w
 11202  0157' 0080'              	movwf	___flsub@a^(0+128)
 11203  0158' 1683               	bsf	3,5	;RP0=1, select bank3
 11204  0159' 1703               	bsf	3,6	;RP1=1, select bank3
 11205  015A' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 11206  015B' 1683               	bsf	3,5	;RP0=1, select bank1
 11207  015C' 1303               	bcf	3,6	;RP1=0, select bank1
 11208  015D' 0080'              	movwf	(___flsub@b+3)^(0+128)
 11209  015E' 1683               	bsf	3,5	;RP0=1, select bank3
 11210  015F' 1703               	bsf	3,6	;RP1=1, select bank3
 11211  0160' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 11212  0161' 1683               	bsf	3,5	;RP0=1, select bank1
 11213  0162' 1303               	bcf	3,6	;RP1=0, select bank1
 11214  0163' 0080'              	movwf	(___flsub@b+2)^(0+128)
 11215  0164' 1683               	bsf	3,5	;RP0=1, select bank3
 11216  0165' 1703               	bsf	3,6	;RP1=1, select bank3
 11217  0166' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 11218  0167' 1683               	bsf	3,5	;RP0=1, select bank1
 11219  0168' 1303               	bcf	3,6	;RP1=0, select bank1
 11220  0169' 0080'              	movwf	(___flsub@b+1)^(0+128)
 11221  016A' 1683               	bsf	3,5	;RP0=1, select bank3
 11222  016B' 1703               	bsf	3,6	;RP1=1, select bank3
 11223  016C' 0800'              	movf	sprintf@fval^(0+384),w
 11224  016D' 1683               	bsf	3,5	;RP0=1, select bank1
 11225  016E' 1303               	bcf	3,6	;RP1=0, select bank1
 11226  016F' 0080'              	movwf	___flsub@b^(0+128)
 11227  0170' 120A' 118A' 2000' 120A' 118A' 	fcall	___flsub
 11228  0175' 1683               	bsf	3,5	;RP0=1, select bank1
 11229  0176' 1303               	bcf	3,6	;RP1=0, select bank1
 11230  0177' 0800'              	movf	(?___flsub+3)^(0+128),w
 11231  0178' 1683               	bsf	3,5	;RP0=1, select bank3
 11232  0179' 1703               	bsf	3,6	;RP1=1, select bank3
 11233  017A' 0080'              	movwf	(sprintf@fval+3)^(0+384)
 11234  017B' 1683               	bsf	3,5	;RP0=1, select bank1
 11235  017C' 1303               	bcf	3,6	;RP1=0, select bank1
 11236  017D' 0800'              	movf	(?___flsub+2)^(0+128),w
 11237  017E' 1683               	bsf	3,5	;RP0=1, select bank3
 11238  017F' 1703               	bsf	3,6	;RP1=1, select bank3
 11239  0180' 0080'              	movwf	(sprintf@fval+2)^(0+384)
 11240  0181' 1683               	bsf	3,5	;RP0=1, select bank1
 11241  0182' 1303               	bcf	3,6	;RP1=0, select bank1
 11242  0183' 0800'              	movf	(?___flsub+1)^(0+128),w
 11243  0184' 1683               	bsf	3,5	;RP0=1, select bank3
 11244  0185' 1703               	bsf	3,6	;RP1=1, select bank3
 11245  0186' 0080'              	movwf	(sprintf@fval+1)^(0+384)
 11246  0187' 1683               	bsf	3,5	;RP0=1, select bank1
 11247  0188' 1303               	bcf	3,6	;RP1=0, select bank1
 11248  0189' 0800'              	movf	?___flsub^(0+128),w
 11249  018A' 1683               	bsf	3,5	;RP0=1, select bank3
 11250  018B' 1703               	bsf	3,6	;RP1=1, select bank3
 11251  018C' 0080'              	movwf	sprintf@fval^(0+384)
 11252  018D'                    l5077:
 11253                           
 11254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 11255  018D' 0180'              	clrf	sprintf@eexp^(0+384)
 11256  018E' 0180'              	clrf	(sprintf@eexp+1)^(0+384)
 11257  018F'                    l5079:
 11258                           
 11259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 11260  018F' 0180'              	clrf	sprintf@c^(0+384)
 11261  0190' 0A80'              	incf	sprintf@c^(0+384),f
 11262  0191'                    l5085:
 11263                           
 11264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 11265  0191' 0800'              	movf	sprintf@c^(0+384),w
 11266  0192' 1683               	bsf	3,5	;RP0=1, select bank1
 11267  0193' 1303               	bcf	3,6	;RP1=0, select bank1
 11268  0194' 0080'              	movwf	??_sprintf^(0+128)
 11269  0195' 3001               	movlw	1
 11270  0196'                    u8965:
 11271  0196' 1003               	clrc
 11272  0197' 0D80'              	rlf	??_sprintf^(0+128),f
 11273  0198' 3EFF               	addlw	-1
 11274  0199' 1D03               	skipz
 11275  019A' 2800'              	goto	u8965
 11276  019B' 1003               	clrc
 11277  019C' 0D00'              	rlf	??_sprintf^(0+128),w
 11278  019D' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11279  019E' 0084               	movwf	4
 11280  019F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11281  01A4' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11282  01A5' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11283  01AA' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
 11284  01AB' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11285  01B0' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
 11286  01B1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11287  01B6' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
 11288  01B7' 0800'              	movf	(??_sprintf+4)^(0+128),w
 11289  01B8' 1683               	bsf	3,5	;RP0=1, select bank3
 11290  01B9' 1703               	bsf	3,6	;RP1=1, select bank3
 11291  01BA' 0200'              	subwf	(sprintf@val+3)^(0+384),w
 11292  01BB' 1D03               	skipz
 11293  01BC' 2800'              	goto	u8975
 11294  01BD' 1683               	bsf	3,5	;RP0=1, select bank1
 11295  01BE' 1303               	bcf	3,6	;RP1=0, select bank1
 11296  01BF' 0800'              	movf	(??_sprintf+3)^(0+128),w
 11297  01C0' 1683               	bsf	3,5	;RP0=1, select bank3
 11298  01C1' 1703               	bsf	3,6	;RP1=1, select bank3
 11299  01C2' 0200'              	subwf	(sprintf@val+2)^(0+384),w
 11300  01C3' 1D03               	skipz
 11301  01C4' 2800'              	goto	u8975
 11302  01C5' 1683               	bsf	3,5	;RP0=1, select bank1
 11303  01C6' 1303               	bcf	3,6	;RP1=0, select bank1
 11304  01C7' 0800'              	movf	(??_sprintf+2)^(0+128),w
 11305  01C8' 1683               	bsf	3,5	;RP0=1, select bank3
 11306  01C9' 1703               	bsf	3,6	;RP1=1, select bank3
 11307  01CA' 0200'              	subwf	(sprintf@val+1)^(0+384),w
 11308  01CB' 1D03               	skipz
 11309  01CC' 2800'              	goto	u8975
 11310  01CD' 1683               	bsf	3,5	;RP0=1, select bank1
 11311  01CE' 1303               	bcf	3,6	;RP1=0, select bank1
 11312  01CF' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11313  01D0' 1683               	bsf	3,5	;RP0=1, select bank3
 11314  01D1' 1703               	bsf	3,6	;RP1=1, select bank3
 11315  01D2' 0200'              	subwf	sprintf@val^(0+384),w
 11316  01D3'                    u8975:
 11317  01D3' 1803               	skipnc
 11318  01D4' 2800'              	goto	u8971
 11319  01D5' 2800'              	goto	u8970
 11320  01D6'                    u8971:
 11321  01D6' 2800'              	goto	l5089
 11322  01D7'                    u8970:
 11323  01D7' 2800'              	goto	l5091
 11324  01D8'                    l5089:
 11325  01D8' 3001               	movlw	1
 11326  01D9' 1683               	bsf	3,5	;RP0=1, select bank1
 11327  01DA' 1303               	bcf	3,6	;RP1=0, select bank1
 11328  01DB' 0080'              	movwf	??_sprintf^(0+128)
 11329  01DC' 0800'              	movf	??_sprintf^(0+128),w
 11330  01DD' 1683               	bsf	3,5	;RP0=1, select bank3
 11331  01DE' 1703               	bsf	3,6	;RP1=1, select bank3
 11332  01DF' 0780'              	addwf	sprintf@c^(0+384),f
 11333  01E0' 300A               	movlw	10
 11334  01E1' 0600'              	xorwf	sprintf@c^(0+384),w
 11335  01E2' 1D03               	btfss	3,2
 11336  01E3' 2800'              	goto	u8981
 11337  01E4' 2800'              	goto	u8980
 11338  01E5'                    u8981:
 11339  01E5' 2800'              	goto	l5085
 11340  01E6'                    u8980:
 11341  01E6'                    l5091:
 11342                           
 11343                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 11344  01E6' 0800'              	movf	sprintf@c^(0+384),w
 11345  01E7' 0700'              	addwf	sprintf@prec^(0+384),w
 11346  01E8' 1683               	bsf	3,5	;RP0=1, select bank1
 11347  01E9' 1303               	bcf	3,6	;RP1=0, select bank1
 11348  01EA' 0080'              	movwf	??_sprintf^(0+128)
 11349  01EB' 1683               	bsf	3,5	;RP0=1, select bank3
 11350  01EC' 1703               	bsf	3,6	;RP1=1, select bank3
 11351  01ED' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 11352  01EE' 1803               	skipnc
 11353  01EF' 0A00'              	incf	(sprintf@prec+1)^(0+384),w
 11354  01F0' 1683               	bsf	3,5	;RP0=1, select bank1
 11355  01F1' 1303               	bcf	3,6	;RP1=0, select bank1
 11356  01F2' 0081'              	movwf	(??_sprintf^(0+128)+1)
 11357  01F3' 1683               	bsf	3,5	;RP0=1, select bank3
 11358  01F4' 1703               	bsf	3,6	;RP1=1, select bank3
 11359  01F5' 0800'              	movf	sprintf@eexp^(0+384),w
 11360  01F6' 1683               	bsf	3,5	;RP0=1, select bank1
 11361  01F7' 1303               	bcf	3,6	;RP1=0, select bank1
 11362  01F8' 0700'              	addwf	??_sprintf^(0+128),w
 11363  01F9' 0080'              	movwf	(??_sprintf+2)^(0+128)
 11364  01FA' 1683               	bsf	3,5	;RP0=1, select bank3
 11365  01FB' 1703               	bsf	3,6	;RP1=1, select bank3
 11366  01FC' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
 11367  01FD' 1803               	skipnc
 11368  01FE' 0A00'              	incf	(sprintf@eexp+1)^(0+384),w
 11369  01FF' 1683               	bsf	3,5	;RP0=1, select bank1
 11370  0200' 1303               	bcf	3,6	;RP1=0, select bank1
 11371  0201' 0700'              	addwf	(??_sprintf+1)^(0+128),w
 11372  0202' 0080'              	movwf	(??_sprintf+3)^(0+128)
 11373  0203' 0800'              	movf	(??_sprintf+2)^(0+128),w
 11374  0204' 1683               	bsf	3,5	;RP0=1, select bank3
 11375  0205' 1703               	bsf	3,6	;RP1=1, select bank3
 11376  0206' 0280'              	subwf	sprintf@width^(0+384),f
 11377  0207' 1683               	bsf	3,5	;RP0=1, select bank1
 11378  0208' 1303               	bcf	3,6	;RP1=0, select bank1
 11379  0209' 0800'              	movf	(??_sprintf+3)^(0+128),w
 11380  020A' 1683               	bsf	3,5	;RP0=1, select bank3
 11381  020B' 1703               	bsf	3,6	;RP1=1, select bank3
 11382  020C' 1C03               	skipc
 11383  020D' 0380'              	decf	(sprintf@width+1)^(0+384),f
 11384  020E' 0280'              	subwf	(sprintf@width+1)^(0+384),f
 11385                           
 11386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 11387  020F' 0800'              	movf	sprintf@prec^(0+384),w
 11388  0210' 0400'              	iorwf	(sprintf@prec+1)^(0+384),w
 11389  0211' 1903               	btfsc	3,2
 11390  0212' 2800'              	goto	u8991
 11391  0213' 2800'              	goto	u8990
 11392  0214'                    u8991:
 11393  0214' 2800'              	goto	l5095
 11394  0215'                    u8990:
 11395  0215'                    l5093:
 11396                           
 11397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 11398  0215' 30FF               	movlw	255
 11399  0216' 0780'              	addwf	sprintf@width^(0+384),f
 11400  0217' 1803               	skipnc
 11401  0218' 0A80'              	incf	(sprintf@width+1)^(0+384),f
 11402  0219' 30FF               	movlw	255
 11403  021A' 0780'              	addwf	(sprintf@width+1)^(0+384),f
 11404  021B'                    l5095:
 11405                           
 11406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 11407  021B' 3003               	movlw	3
 11408  021C' 0500'              	andwf	sprintf@flag^(0+384),w
 11409  021D' 1683               	bsf	3,5	;RP0=1, select bank1
 11410  021E' 1303               	bcf	3,6	;RP1=0, select bank1
 11411  021F' 0080'              	movwf	??_sprintf^(0+128)
 11412  0220' 3000               	movlw	0
 11413  0221' 1683               	bsf	3,5	;RP0=1, select bank3
 11414  0222' 1703               	bsf	3,6	;RP1=1, select bank3
 11415  0223' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 11416  0224' 1683               	bsf	3,5	;RP0=1, select bank1
 11417  0225' 1303               	bcf	3,6	;RP1=0, select bank1
 11418  0226' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11419  0227' 0800'              	movf	??_sprintf^(0+128),w
 11420  0228' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 11421  0229' 1903               	btfsc	3,2
 11422  022A' 2800'              	goto	u9001
 11423  022B' 2800'              	goto	u9000
 11424  022C'                    u9001:
 11425  022C' 2800'              	goto	l5105
 11426  022D'                    u9000:
 11427  022D'                    l5097:
 11428                           
 11429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 11430  022D' 30FF               	movlw	255
 11431  022E' 1683               	bsf	3,5	;RP0=1, select bank3
 11432  022F' 1703               	bsf	3,6	;RP1=1, select bank3
 11433  0230' 0780'              	addwf	sprintf@width^(0+384),f
 11434  0231' 1803               	skipnc
 11435  0232' 0A80'              	incf	(sprintf@width+1)^(0+384),f
 11436  0233' 30FF               	movlw	255
 11437  0234' 0780'              	addwf	(sprintf@width+1)^(0+384),f
 11438  0235' 2800'              	goto	l5105
 11439  0236'                    l5099:
 11440                           
 11441                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 11442  0236' 3020               	movlw	32
 11443  0237' 1683               	bsf	3,5	;RP0=1, select bank1
 11444  0238' 1303               	bcf	3,6	;RP1=0, select bank1
 11445  0239' 0080'              	movwf	??_sprintf^(0+128)
 11446  023A' 1683               	bsf	3,5	;RP0=1, select bank3
 11447  023B' 1703               	bsf	3,6	;RP1=1, select bank3
 11448  023C' 0800'              	movf	sprintf@sp^(0+384),w
 11449  023D' 0084               	movwf	4
 11450  023E' 1683               	bsf	3,5	;RP0=1, select bank1
 11451  023F' 1303               	bcf	3,6	;RP1=0, select bank1
 11452  0240' 0800'              	movf	??_sprintf^(0+128),w
 11453  0241' 1383               	bcf	3,7	;select IRP bank0
 11454  0242' 0080               	movwf	0
 11455  0243'                    l5101:
 11456  0243' 3001               	movlw	1
 11457  0244' 0080'              	movwf	??_sprintf^(0+128)
 11458  0245' 0800'              	movf	??_sprintf^(0+128),w
 11459  0246' 1683               	bsf	3,5	;RP0=1, select bank3
 11460  0247' 1703               	bsf	3,6	;RP1=1, select bank3
 11461  0248' 0780'              	addwf	sprintf@sp^(0+384),f
 11462  0249' 2800'              	goto	l5097
 11463  024A'                    l5105:
 11464                           
 11465                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 11466  024A' 1683               	bsf	3,5	;RP0=1, select bank3
 11467  024B' 1703               	bsf	3,6	;RP1=1, select bank3
 11468  024C' 0800'              	movf	(sprintf@width+1)^(0+384),w
 11469  024D' 3A80               	xorlw	128
 11470  024E' 00FF               	movwf	btemp+1
 11471  024F' 3080               	movlw	128
 11472  0250' 027F               	subwf	btemp+1,w
 11473  0251' 1D03               	skipz
 11474  0252' 2800'              	goto	u9015
 11475  0253' 3001               	movlw	1
 11476  0254' 0200'              	subwf	sprintf@width^(0+384),w
 11477  0255'                    u9015:
 11478  0255' 1803               	skipnc
 11479  0256' 2800'              	goto	u9011
 11480  0257' 2800'              	goto	u9010
 11481  0258'                    u9011:
 11482  0258' 2800'              	goto	l5099
 11483  0259'                    u9010:
 11484  0259'                    l5107:
 11485                           
 11486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 11487  0259' 3003               	movlw	3
 11488  025A' 1683               	bsf	3,5	;RP0=1, select bank3
 11489  025B' 1703               	bsf	3,6	;RP1=1, select bank3
 11490  025C' 0500'              	andwf	sprintf@flag^(0+384),w
 11491  025D' 1683               	bsf	3,5	;RP0=1, select bank1
 11492  025E' 1303               	bcf	3,6	;RP1=0, select bank1
 11493  025F' 0080'              	movwf	??_sprintf^(0+128)
 11494  0260' 3000               	movlw	0
 11495  0261' 1683               	bsf	3,5	;RP0=1, select bank3
 11496  0262' 1703               	bsf	3,6	;RP1=1, select bank3
 11497  0263' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 11498  0264' 1683               	bsf	3,5	;RP0=1, select bank1
 11499  0265' 1303               	bcf	3,6	;RP1=0, select bank1
 11500  0266' 0080'              	movwf	(??_sprintf+1)^(0+128)
 11501  0267' 0800'              	movf	??_sprintf^(0+128),w
 11502  0268' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 11503  0269' 1903               	btfsc	3,2
 11504  026A' 2800'              	goto	u9021
 11505  026B' 2800'              	goto	u9020
 11506  026C'                    u9021:
 11507  026C' 2800'              	goto	l423
 11508  026D'                    u9020:
 11509  026D'                    l5109:
 11510                           
 11511                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 11512  026D' 302D               	movlw	45
 11513  026E' 0080'              	movwf	??_sprintf^(0+128)
 11514  026F' 1683               	bsf	3,5	;RP0=1, select bank3
 11515  0270' 1703               	bsf	3,6	;RP1=1, select bank3
 11516  0271' 0800'              	movf	sprintf@sp^(0+384),w
 11517  0272' 0084               	movwf	4
 11518  0273' 1683               	bsf	3,5	;RP0=1, select bank1
 11519  0274' 1303               	bcf	3,6	;RP1=0, select bank1
 11520  0275' 0800'              	movf	??_sprintf^(0+128),w
 11521  0276' 1383               	bcf	3,7	;select IRP bank0
 11522  0277' 0080               	movwf	0
 11523  0278'                    l5111:
 11524  0278' 3001               	movlw	1
 11525  0279' 0080'              	movwf	??_sprintf^(0+128)
 11526  027A' 0800'              	movf	??_sprintf^(0+128),w
 11527  027B' 1683               	bsf	3,5	;RP0=1, select bank3
 11528  027C' 1703               	bsf	3,6	;RP1=1, select bank3
 11529  027D' 0780'              	addwf	sprintf@sp^(0+384),f
 11530  027E' 2800'              	goto	l423
 11531  027F'                    l5113:
 11532                           
 11533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 11534  027F' 0800'              	movf	sprintf@c^(0+384),w
 11535  0280' 1683               	bsf	3,5	;RP0=1, select bank1
 11536  0281' 1303               	bcf	3,6	;RP1=0, select bank1
 11537  0282' 0080'              	movwf	??_sprintf^(0+128)
 11538  0283' 3001               	movlw	1
 11539  0284'                    u9035:
 11540  0284' 1003               	clrc
 11541  0285' 0D80'              	rlf	??_sprintf^(0+128),f
 11542  0286' 3EFF               	addlw	-1
 11543  0287' 1D03               	skipz
 11544  0288' 2800'              	goto	u9035
 11545  0289' 1003               	clrc
 11546  028A' 0D00'              	rlf	??_sprintf^(0+128),w
 11547  028B' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11548  028C' 0084               	movwf	4
 11549  028D' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11550  0292' 1283               	bcf	3,5	;RP0=0, select bank0
 11551  0293' 1303               	bcf	3,6	;RP1=0, select bank0
 11552  0294' 0080'              	movwf	___lldiv@divisor
 11553  0295' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11554  029A' 0081'              	movwf	___lldiv@divisor+1
 11555  029B' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11556  02A0' 0082'              	movwf	___lldiv@divisor+2
 11557  02A1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11558  02A6' 0083'              	movwf	___lldiv@divisor+3
 11559  02A7' 1683               	bsf	3,5	;RP0=1, select bank3
 11560  02A8' 1703               	bsf	3,6	;RP1=1, select bank3
 11561  02A9' 0800'              	movf	(sprintf@val+3)^(0+384),w
 11562  02AA' 1283               	bcf	3,5	;RP0=0, select bank0
 11563  02AB' 1303               	bcf	3,6	;RP1=0, select bank0
 11564  02AC' 0087'              	movwf	___lldiv@dividend+3
 11565  02AD' 1683               	bsf	3,5	;RP0=1, select bank3
 11566  02AE' 1703               	bsf	3,6	;RP1=1, select bank3
 11567  02AF' 0800'              	movf	(sprintf@val+2)^(0+384),w
 11568  02B0' 1283               	bcf	3,5	;RP0=0, select bank0
 11569  02B1' 1303               	bcf	3,6	;RP1=0, select bank0
 11570  02B2' 0086'              	movwf	___lldiv@dividend+2
 11571  02B3' 1683               	bsf	3,5	;RP0=1, select bank3
 11572  02B4' 1703               	bsf	3,6	;RP1=1, select bank3
 11573  02B5' 0800'              	movf	(sprintf@val+1)^(0+384),w
 11574  02B6' 1283               	bcf	3,5	;RP0=0, select bank0
 11575  02B7' 1303               	bcf	3,6	;RP1=0, select bank0
 11576  02B8' 0085'              	movwf	___lldiv@dividend+1
 11577  02B9' 1683               	bsf	3,5	;RP0=1, select bank3
 11578  02BA' 1703               	bsf	3,6	;RP1=1, select bank3
 11579  02BB' 0800'              	movf	sprintf@val^(0+384),w
 11580  02BC' 1283               	bcf	3,5	;RP0=0, select bank0
 11581  02BD' 1303               	bcf	3,6	;RP1=0, select bank0
 11582  02BE' 0084'              	movwf	___lldiv@dividend
 11583  02BF' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 11584  02C4' 1283               	bcf	3,5	;RP0=0, select bank0
 11585  02C5' 1303               	bcf	3,6	;RP1=0, select bank0
 11586  02C6' 0803'              	movf	?___lldiv+3,w
 11587  02C7' 1683               	bsf	3,5	;RP0=1, select bank3
 11588  02C8' 1703               	bsf	3,6	;RP1=1, select bank3
 11589  02C9' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 11590  02CA' 1283               	bcf	3,5	;RP0=0, select bank0
 11591  02CB' 1303               	bcf	3,6	;RP1=0, select bank0
 11592  02CC' 0802'              	movf	?___lldiv+2,w
 11593  02CD' 1683               	bsf	3,5	;RP0=1, select bank3
 11594  02CE' 1703               	bsf	3,6	;RP1=1, select bank3
 11595  02CF' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 11596  02D0' 1283               	bcf	3,5	;RP0=0, select bank0
 11597  02D1' 1303               	bcf	3,6	;RP1=0, select bank0
 11598  02D2' 0801'              	movf	?___lldiv+1,w
 11599  02D3' 1683               	bsf	3,5	;RP0=1, select bank3
 11600  02D4' 1703               	bsf	3,6	;RP1=1, select bank3
 11601  02D5' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 11602  02D6' 1283               	bcf	3,5	;RP0=0, select bank0
 11603  02D7' 1303               	bcf	3,6	;RP1=0, select bank0
 11604  02D8' 0800'              	movf	?___lldiv,w
 11605  02D9' 1683               	bsf	3,5	;RP0=1, select bank3
 11606  02DA' 1703               	bsf	3,6	;RP1=1, select bank3
 11607  02DB' 0080'              	movwf	sprintf@tmpval^(0+384)
 11608  02DC'                    l5115:
 11609                           
 11610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 11611  02DC' 3000               	movlw	0
 11612  02DD' 1283               	bcf	3,5	;RP0=0, select bank0
 11613  02DE' 1303               	bcf	3,6	;RP1=0, select bank0
 11614  02DF' 008B'              	movwf	___llmod@divisor+3
 11615  02E0' 3000               	movlw	0
 11616  02E1' 008A'              	movwf	___llmod@divisor+2
 11617  02E2' 3000               	movlw	0
 11618  02E3' 0089'              	movwf	___llmod@divisor+1
 11619  02E4' 300A               	movlw	10
 11620  02E5' 0088'              	movwf	___llmod@divisor
 11621  02E6' 1683               	bsf	3,5	;RP0=1, select bank3
 11622  02E7' 1703               	bsf	3,6	;RP1=1, select bank3
 11623  02E8' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
 11624  02E9' 1283               	bcf	3,5	;RP0=0, select bank0
 11625  02EA' 1303               	bcf	3,6	;RP1=0, select bank0
 11626  02EB' 008F'              	movwf	___llmod@dividend+3
 11627  02EC' 1683               	bsf	3,5	;RP0=1, select bank3
 11628  02ED' 1703               	bsf	3,6	;RP1=1, select bank3
 11629  02EE' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
 11630  02EF' 1283               	bcf	3,5	;RP0=0, select bank0
 11631  02F0' 1303               	bcf	3,6	;RP1=0, select bank0
 11632  02F1' 008E'              	movwf	___llmod@dividend+2
 11633  02F2' 1683               	bsf	3,5	;RP0=1, select bank3
 11634  02F3' 1703               	bsf	3,6	;RP1=1, select bank3
 11635  02F4' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
 11636  02F5' 1283               	bcf	3,5	;RP0=0, select bank0
 11637  02F6' 1303               	bcf	3,6	;RP1=0, select bank0
 11638  02F7' 008D'              	movwf	___llmod@dividend+1
 11639  02F8' 1683               	bsf	3,5	;RP0=1, select bank3
 11640  02F9' 1703               	bsf	3,6	;RP1=1, select bank3
 11641  02FA' 0800'              	movf	sprintf@tmpval^(0+384),w
 11642  02FB' 1283               	bcf	3,5	;RP0=0, select bank0
 11643  02FC' 1303               	bcf	3,6	;RP1=0, select bank0
 11644  02FD' 008C'              	movwf	___llmod@dividend
 11645  02FE' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 11646  0303' 1283               	bcf	3,5	;RP0=0, select bank0
 11647  0304' 1303               	bcf	3,6	;RP1=0, select bank0
 11648  0305' 080B'              	movf	?___llmod+3,w
 11649  0306' 1683               	bsf	3,5	;RP0=1, select bank3
 11650  0307' 1703               	bsf	3,6	;RP1=1, select bank3
 11651  0308' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 11652  0309' 1283               	bcf	3,5	;RP0=0, select bank0
 11653  030A' 1303               	bcf	3,6	;RP1=0, select bank0
 11654  030B' 080A'              	movf	?___llmod+2,w
 11655  030C' 1683               	bsf	3,5	;RP0=1, select bank3
 11656  030D' 1703               	bsf	3,6	;RP1=1, select bank3
 11657  030E' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 11658  030F' 1283               	bcf	3,5	;RP0=0, select bank0
 11659  0310' 1303               	bcf	3,6	;RP1=0, select bank0
 11660  0311' 0809'              	movf	?___llmod+1,w
 11661  0312' 1683               	bsf	3,5	;RP0=1, select bank3
 11662  0313' 1703               	bsf	3,6	;RP1=1, select bank3
 11663  0314' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 11664  0315' 1283               	bcf	3,5	;RP0=0, select bank0
 11665  0316' 1303               	bcf	3,6	;RP1=0, select bank0
 11666  0317' 0808'              	movf	?___llmod,w
 11667  0318' 1683               	bsf	3,5	;RP0=1, select bank3
 11668  0319' 1703               	bsf	3,6	;RP1=1, select bank3
 11669  031A' 0080'              	movwf	sprintf@tmpval^(0+384)
 11670  031B'                    l5117:
 11671                           
 11672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 11673  031B' 0800'              	movf	sprintf@tmpval^(0+384),w
 11674  031C' 3E30               	addlw	48
 11675  031D' 1683               	bsf	3,5	;RP0=1, select bank1
 11676  031E' 1303               	bcf	3,6	;RP1=0, select bank1
 11677  031F' 0080'              	movwf	??_sprintf^(0+128)
 11678  0320' 1683               	bsf	3,5	;RP0=1, select bank3
 11679  0321' 1703               	bsf	3,6	;RP1=1, select bank3
 11680  0322' 0800'              	movf	sprintf@sp^(0+384),w
 11681  0323' 0084               	movwf	4
 11682  0324' 1683               	bsf	3,5	;RP0=1, select bank1
 11683  0325' 1303               	bcf	3,6	;RP1=0, select bank1
 11684  0326' 0800'              	movf	??_sprintf^(0+128),w
 11685  0327' 1383               	bcf	3,7	;select IRP bank0
 11686  0328' 0080               	movwf	0
 11687  0329' 3001               	movlw	1
 11688  032A' 0080'              	movwf	??_sprintf^(0+128)
 11689  032B' 0800'              	movf	??_sprintf^(0+128),w
 11690  032C' 1683               	bsf	3,5	;RP0=1, select bank3
 11691  032D' 1703               	bsf	3,6	;RP1=1, select bank3
 11692  032E' 0780'              	addwf	sprintf@sp^(0+384),f
 11693  032F'                    l423:	
 11694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 11695                           
 11696                           
 11697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 11698  032F' 3001               	movlw	1
 11699  0330' 1683               	bsf	3,5	;RP0=1, select bank3
 11700  0331' 1703               	bsf	3,6	;RP1=1, select bank3
 11701  0332' 0280'              	subwf	sprintf@c^(0+384),f
 11702  0333' 0A00'              	incf	sprintf@c^(0+384),w
 11703  0334' 1D03               	btfss	3,2
 11704  0335' 2800'              	goto	u9041
 11705  0336' 2800'              	goto	u9040
 11706  0337'                    u9041:
 11707  0337' 2800'              	goto	l5113
 11708  0338'                    u9040:
 11709  0338' 2800'              	goto	l5125
 11710  0339'                    l5119:
 11711                           
 11712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 11713  0339' 3030               	movlw	48
 11714  033A' 1683               	bsf	3,5	;RP0=1, select bank1
 11715  033B' 1303               	bcf	3,6	;RP1=0, select bank1
 11716  033C' 0080'              	movwf	??_sprintf^(0+128)
 11717  033D' 1683               	bsf	3,5	;RP0=1, select bank3
 11718  033E' 1703               	bsf	3,6	;RP1=1, select bank3
 11719  033F' 0800'              	movf	sprintf@sp^(0+384),w
 11720  0340' 0084               	movwf	4
 11721  0341' 1683               	bsf	3,5	;RP0=1, select bank1
 11722  0342' 1303               	bcf	3,6	;RP1=0, select bank1
 11723  0343' 0800'              	movf	??_sprintf^(0+128),w
 11724  0344' 1383               	bcf	3,7	;select IRP bank0
 11725  0345' 0080               	movwf	0
 11726  0346'                    l5121:
 11727  0346' 3001               	movlw	1
 11728  0347' 0080'              	movwf	??_sprintf^(0+128)
 11729  0348' 0800'              	movf	??_sprintf^(0+128),w
 11730  0349' 1683               	bsf	3,5	;RP0=1, select bank3
 11731  034A' 1703               	bsf	3,6	;RP1=1, select bank3
 11732  034B' 0780'              	addwf	sprintf@sp^(0+384),f
 11733  034C'                    l5123:
 11734                           
 11735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 11736  034C' 30FF               	movlw	255
 11737  034D' 0780'              	addwf	sprintf@eexp^(0+384),f
 11738  034E' 1803               	skipnc
 11739  034F' 0A80'              	incf	(sprintf@eexp+1)^(0+384),f
 11740  0350' 30FF               	movlw	255
 11741  0351' 0780'              	addwf	(sprintf@eexp+1)^(0+384),f
 11742  0352'                    l5125:
 11743                           
 11744                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 11745  0352' 0800'              	movf	(sprintf@eexp+1)^(0+384),w
 11746  0353' 3A80               	xorlw	128
 11747  0354' 00FF               	movwf	btemp+1
 11748  0355' 3080               	movlw	128
 11749  0356' 027F               	subwf	btemp+1,w
 11750  0357' 1D03               	skipz
 11751  0358' 2800'              	goto	u9055
 11752  0359' 3001               	movlw	1
 11753  035A' 0200'              	subwf	sprintf@eexp^(0+384),w
 11754  035B'                    u9055:
 11755  035B' 1803               	skipnc
 11756  035C' 2800'              	goto	u9051
 11757  035D' 2800'              	goto	u9050
 11758  035E'                    u9051:
 11759  035E' 2800'              	goto	l5119
 11760  035F'                    u9050:
 11761  035F'                    l5127:
 11762                           
 11763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 11764  035F' 1683               	bsf	3,5	;RP0=1, select bank3
 11765  0360' 1703               	bsf	3,6	;RP1=1, select bank3
 11766  0361' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 11767  0362' 3A80               	xorlw	128
 11768  0363' 00FF               	movwf	btemp+1
 11769  0364' 3080               	movlw	128
 11770  0365' 027F               	subwf	btemp+1,w
 11771  0366' 1D03               	skipz
 11772  0367' 2800'              	goto	u9065
 11773  0368' 3009               	movlw	9
 11774  0369' 0200'              	subwf	sprintf@prec^(0+384),w
 11775  036A'                    u9065:
 11776  036A' 1C03               	skipc
 11777  036B' 2800'              	goto	u9061
 11778  036C' 2800'              	goto	u9060
 11779  036D'                    u9061:
 11780  036D' 2800'              	goto	l5131
 11781  036E'                    u9060:
 11782  036E'                    l5129:
 11783                           
 11784                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 11785  036E' 3008               	movlw	8
 11786  036F' 1683               	bsf	3,5	;RP0=1, select bank1
 11787  0370' 1303               	bcf	3,6	;RP1=0, select bank1
 11788  0371' 0080'              	movwf	??_sprintf^(0+128)
 11789  0372' 0800'              	movf	??_sprintf^(0+128),w
 11790  0373' 1683               	bsf	3,5	;RP0=1, select bank3
 11791  0374' 1703               	bsf	3,6	;RP1=1, select bank3
 11792  0375' 0080'              	movwf	sprintf@c^(0+384)
 11793  0376' 2800'              	goto	l430
 11794  0377'                    l5131:
 11795                           
 11796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 11797  0377' 1683               	bsf	3,5	;RP0=1, select bank3
 11798  0378' 1703               	bsf	3,6	;RP1=1, select bank3
 11799  0379' 0800'              	movf	sprintf@prec^(0+384),w
 11800  037A' 1683               	bsf	3,5	;RP0=1, select bank1
 11801  037B' 1303               	bcf	3,6	;RP1=0, select bank1
 11802  037C' 0080'              	movwf	??_sprintf^(0+128)
 11803  037D' 0800'              	movf	??_sprintf^(0+128),w
 11804  037E' 1683               	bsf	3,5	;RP0=1, select bank3
 11805  037F' 1703               	bsf	3,6	;RP1=1, select bank3
 11806  0380' 0080'              	movwf	sprintf@c^(0+384)
 11807  0381'                    l430:
 11808                           
 11809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 11810  0381' 0800'              	movf	sprintf@c^(0+384),w
 11811  0382' 1683               	bsf	3,5	;RP0=1, select bank1
 11812  0383' 1303               	bcf	3,6	;RP1=0, select bank1
 11813  0384' 0080'              	movwf	??_sprintf^(0+128)
 11814  0385' 0181'              	clrf	(??_sprintf^(0+128)+1)
 11815  0386' 0800'              	movf	??_sprintf^(0+128),w
 11816  0387' 1683               	bsf	3,5	;RP0=1, select bank3
 11817  0388' 1703               	bsf	3,6	;RP1=1, select bank3
 11818  0389' 0280'              	subwf	sprintf@prec^(0+384),f
 11819  038A' 1683               	bsf	3,5	;RP0=1, select bank1
 11820  038B' 1303               	bcf	3,6	;RP1=0, select bank1
 11821  038C' 0800'              	movf	(??_sprintf+1)^(0+128),w
 11822  038D' 1683               	bsf	3,5	;RP0=1, select bank3
 11823  038E' 1703               	bsf	3,6	;RP1=1, select bank3
 11824  038F' 1C03               	skipc
 11825  0390' 0380'              	decf	(sprintf@prec+1)^(0+384),f
 11826  0391' 0280'              	subwf	(sprintf@prec+1)^(0+384),f
 11827  0392'                    l5133:
 11828                           
 11829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 11830  0392' 0800'              	movf	sprintf@c^(0+384),w
 11831  0393' 1903               	btfsc	3,2
 11832  0394' 2800'              	goto	u9071
 11833  0395' 2800'              	goto	u9070
 11834  0396'                    u9071:
 11835  0396' 2800'              	goto	l5139
 11836  0397'                    u9070:
 11837  0397'                    l5135:
 11838                           
 11839                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 11840  0397' 302E               	movlw	46
 11841  0398' 1683               	bsf	3,5	;RP0=1, select bank1
 11842  0399' 1303               	bcf	3,6	;RP1=0, select bank1
 11843  039A' 0080'              	movwf	??_sprintf^(0+128)
 11844  039B' 1683               	bsf	3,5	;RP0=1, select bank3
 11845  039C' 1703               	bsf	3,6	;RP1=1, select bank3
 11846  039D' 0800'              	movf	sprintf@sp^(0+384),w
 11847  039E' 0084               	movwf	4
 11848  039F' 1683               	bsf	3,5	;RP0=1, select bank1
 11849  03A0' 1303               	bcf	3,6	;RP1=0, select bank1
 11850  03A1' 0800'              	movf	??_sprintf^(0+128),w
 11851  03A2' 1383               	bcf	3,7	;select IRP bank0
 11852  03A3' 0080               	movwf	0
 11853  03A4'                    l5137:
 11854  03A4' 3001               	movlw	1
 11855  03A5' 0080'              	movwf	??_sprintf^(0+128)
 11856  03A6' 0800'              	movf	??_sprintf^(0+128),w
 11857  03A7' 1683               	bsf	3,5	;RP0=1, select bank3
 11858  03A8' 1703               	bsf	3,6	;RP1=1, select bank3
 11859  03A9' 0780'              	addwf	sprintf@sp^(0+384),f
 11860  03AA'                    l5139:
 11861                           
 11862                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11863  03AA' 0800'              	movf	sprintf@c^(0+384),w
 11864  03AB' 120A' 118A' 2000' 120A' 118A' 	fcall	_scale
 11865  03B0' 1283               	bcf	3,5	;RP0=0, select bank0
 11866  03B1' 1303               	bcf	3,6	;RP1=0, select bank0
 11867  03B2' 0827'              	movf	?_scale+3,w
 11868  03B3' 1683               	bsf	3,5	;RP0=1, select bank3
 11869  03B4' 1703               	bsf	3,6	;RP1=1, select bank3
 11870  03B5' 0080'              	movwf	(_sprintf$1162+3)^(0+384)
 11871  03B6' 1283               	bcf	3,5	;RP0=0, select bank0
 11872  03B7' 1303               	bcf	3,6	;RP1=0, select bank0
 11873  03B8' 0826'              	movf	?_scale+2,w
 11874  03B9' 1683               	bsf	3,5	;RP0=1, select bank3
 11875  03BA' 1703               	bsf	3,6	;RP1=1, select bank3
 11876  03BB' 0080'              	movwf	(_sprintf$1162+2)^(0+384)
 11877  03BC' 1283               	bcf	3,5	;RP0=0, select bank0
 11878  03BD' 1303               	bcf	3,6	;RP1=0, select bank0
 11879  03BE' 0825'              	movf	?_scale+1,w
 11880  03BF' 1683               	bsf	3,5	;RP0=1, select bank3
 11881  03C0' 1703               	bsf	3,6	;RP1=1, select bank3
 11882  03C1' 0080'              	movwf	(_sprintf$1162+1)^(0+384)
 11883  03C2' 1283               	bcf	3,5	;RP0=0, select bank0
 11884  03C3' 1303               	bcf	3,6	;RP1=0, select bank0
 11885  03C4' 0824'              	movf	?_scale,w
 11886  03C5' 1683               	bsf	3,5	;RP0=1, select bank3
 11887  03C6' 1703               	bsf	3,6	;RP1=1, select bank3
 11888  03C7' 0080'              	movwf	_sprintf$1162^(0+384)
 11889  03C8'                    l5141:
 11890                           
 11891                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 11892  03C8' 0800'              	movf	(_sprintf$1162+3)^(0+384),w
 11893  03C9' 1283               	bcf	3,5	;RP0=0, select bank0
 11894  03CA' 1303               	bcf	3,6	;RP1=0, select bank0
 11895  03CB' 0091'              	movwf	___flmul@a+3
 11896  03CC' 1683               	bsf	3,5	;RP0=1, select bank3
 11897  03CD' 1703               	bsf	3,6	;RP1=1, select bank3
 11898  03CE' 0800'              	movf	(_sprintf$1162+2)^(0+384),w
 11899  03CF' 1283               	bcf	3,5	;RP0=0, select bank0
 11900  03D0' 1303               	bcf	3,6	;RP1=0, select bank0
 11901  03D1' 0090'              	movwf	___flmul@a+2
 11902  03D2' 1683               	bsf	3,5	;RP0=1, select bank3
 11903  03D3' 1703               	bsf	3,6	;RP1=1, select bank3
 11904  03D4' 0800'              	movf	(_sprintf$1162+1)^(0+384),w
 11905  03D5' 1283               	bcf	3,5	;RP0=0, select bank0
 11906  03D6' 1303               	bcf	3,6	;RP1=0, select bank0
 11907  03D7' 008F'              	movwf	___flmul@a+1
 11908  03D8' 1683               	bsf	3,5	;RP0=1, select bank3
 11909  03D9' 1703               	bsf	3,6	;RP1=1, select bank3
 11910  03DA' 0800'              	movf	_sprintf$1162^(0+384),w
 11911  03DB' 1283               	bcf	3,5	;RP0=0, select bank0
 11912  03DC' 1303               	bcf	3,6	;RP1=0, select bank0
 11913  03DD' 008E'              	movwf	___flmul@a
 11914  03DE' 1683               	bsf	3,5	;RP0=1, select bank3
 11915  03DF' 1703               	bsf	3,6	;RP1=1, select bank3
 11916  03E0' 0800'              	movf	(sprintf@fval+3)^(0+384),w
 11917  03E1' 1283               	bcf	3,5	;RP0=0, select bank0
 11918  03E2' 1303               	bcf	3,6	;RP1=0, select bank0
 11919  03E3' 008D'              	movwf	___flmul@b+3
 11920  03E4' 1683               	bsf	3,5	;RP0=1, select bank3
 11921  03E5' 1703               	bsf	3,6	;RP1=1, select bank3
 11922  03E6' 0800'              	movf	(sprintf@fval+2)^(0+384),w
 11923  03E7' 1283               	bcf	3,5	;RP0=0, select bank0
 11924  03E8' 1303               	bcf	3,6	;RP1=0, select bank0
 11925  03E9' 008C'              	movwf	___flmul@b+2
 11926  03EA' 1683               	bsf	3,5	;RP0=1, select bank3
 11927  03EB' 1703               	bsf	3,6	;RP1=1, select bank3
 11928  03EC' 0800'              	movf	(sprintf@fval+1)^(0+384),w
 11929  03ED' 1283               	bcf	3,5	;RP0=0, select bank0
 11930  03EE' 1303               	bcf	3,6	;RP1=0, select bank0
 11931  03EF' 008B'              	movwf	___flmul@b+1
 11932  03F0' 1683               	bsf	3,5	;RP0=1, select bank3
 11933  03F1' 1703               	bsf	3,6	;RP1=1, select bank3
 11934  03F2' 0800'              	movf	sprintf@fval^(0+384),w
 11935  03F3' 1283               	bcf	3,5	;RP0=0, select bank0
 11936  03F4' 1303               	bcf	3,6	;RP1=0, select bank0
 11937  03F5' 008A'              	movwf	___flmul@b
 11938  03F6' 120A' 118A' 2000' 120A' 118A' 	fcall	___flmul
 11939  03FB' 1283               	bcf	3,5	;RP0=0, select bank0
 11940  03FC' 1303               	bcf	3,6	;RP1=0, select bank0
 11941  03FD' 080D'              	movf	?___flmul+3,w
 11942  03FE' 00BA'              	movwf	___fltol@f1+3
 11943  03FF' 080C'              	movf	?___flmul+2,w
 11944  0400' 00B9'              	movwf	___fltol@f1+2
 11945  0401' 080B'              	movf	?___flmul+1,w
 11946  0402' 00B8'              	movwf	___fltol@f1+1
 11947  0403' 080A'              	movf	?___flmul,w
 11948  0404' 00B7'              	movwf	___fltol@f1
 11949  0405' 120A' 118A' 2000' 120A' 118A' 	fcall	___fltol
 11950  040A' 1283               	bcf	3,5	;RP0=0, select bank0
 11951  040B' 1303               	bcf	3,6	;RP1=0, select bank0
 11952  040C' 083A'              	movf	?___fltol+3,w
 11953  040D' 1683               	bsf	3,5	;RP0=1, select bank3
 11954  040E' 1703               	bsf	3,6	;RP1=1, select bank3
 11955  040F' 0080'              	movwf	(sprintf@val+3)^(0+384)
 11956  0410' 1283               	bcf	3,5	;RP0=0, select bank0
 11957  0411' 1303               	bcf	3,6	;RP1=0, select bank0
 11958  0412' 0839'              	movf	?___fltol+2,w
 11959  0413' 1683               	bsf	3,5	;RP0=1, select bank3
 11960  0414' 1703               	bsf	3,6	;RP1=1, select bank3
 11961  0415' 0080'              	movwf	(sprintf@val+2)^(0+384)
 11962  0416' 1283               	bcf	3,5	;RP0=0, select bank0
 11963  0417' 1303               	bcf	3,6	;RP1=0, select bank0
 11964  0418' 0838'              	movf	?___fltol+1,w
 11965  0419' 1683               	bsf	3,5	;RP0=1, select bank3
 11966  041A' 1703               	bsf	3,6	;RP1=1, select bank3
 11967  041B' 0080'              	movwf	(sprintf@val+1)^(0+384)
 11968  041C' 1283               	bcf	3,5	;RP0=0, select bank0
 11969  041D' 1303               	bcf	3,6	;RP1=0, select bank0
 11970  041E' 0837'              	movf	?___fltol,w
 11971  041F' 1683               	bsf	3,5	;RP0=1, select bank3
 11972  0420' 1703               	bsf	3,6	;RP1=1, select bank3
 11973  0421' 0080'              	movwf	sprintf@val^(0+384)
 11974                           
 11975                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11976  0422' 2800'              	goto	l5151
 11977  0423'                    l5143:
 11978                           
 11979                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 11980  0423' 0800'              	movf	sprintf@c^(0+384),w
 11981  0424' 1683               	bsf	3,5	;RP0=1, select bank1
 11982  0425' 1303               	bcf	3,6	;RP1=0, select bank1
 11983  0426' 0080'              	movwf	??_sprintf^(0+128)
 11984  0427' 3001               	movlw	1
 11985  0428'                    u9085:
 11986  0428' 1003               	clrc
 11987  0429' 0D80'              	rlf	??_sprintf^(0+128),f
 11988  042A' 3EFF               	addlw	-1
 11989  042B' 1D03               	skipz
 11990  042C' 2800'              	goto	u9085
 11991  042D' 1003               	clrc
 11992  042E' 0D00'              	rlf	??_sprintf^(0+128),w
 11993  042F' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11994  0430' 0084               	movwf	4
 11995  0431' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 11996  0436' 1283               	bcf	3,5	;RP0=0, select bank0
 11997  0437' 1303               	bcf	3,6	;RP1=0, select bank0
 11998  0438' 0080'              	movwf	___lldiv@divisor
 11999  0439' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12000  043E' 0081'              	movwf	___lldiv@divisor+1
 12001  043F' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12002  0444' 0082'              	movwf	___lldiv@divisor+2
 12003  0445' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12004  044A' 0083'              	movwf	___lldiv@divisor+3
 12005  044B' 1683               	bsf	3,5	;RP0=1, select bank3
 12006  044C' 1703               	bsf	3,6	;RP1=1, select bank3
 12007  044D' 0800'              	movf	(sprintf@val+3)^(0+384),w
 12008  044E' 1283               	bcf	3,5	;RP0=0, select bank0
 12009  044F' 1303               	bcf	3,6	;RP1=0, select bank0
 12010  0450' 0087'              	movwf	___lldiv@dividend+3
 12011  0451' 1683               	bsf	3,5	;RP0=1, select bank3
 12012  0452' 1703               	bsf	3,6	;RP1=1, select bank3
 12013  0453' 0800'              	movf	(sprintf@val+2)^(0+384),w
 12014  0454' 1283               	bcf	3,5	;RP0=0, select bank0
 12015  0455' 1303               	bcf	3,6	;RP1=0, select bank0
 12016  0456' 0086'              	movwf	___lldiv@dividend+2
 12017  0457' 1683               	bsf	3,5	;RP0=1, select bank3
 12018  0458' 1703               	bsf	3,6	;RP1=1, select bank3
 12019  0459' 0800'              	movf	(sprintf@val+1)^(0+384),w
 12020  045A' 1283               	bcf	3,5	;RP0=0, select bank0
 12021  045B' 1303               	bcf	3,6	;RP1=0, select bank0
 12022  045C' 0085'              	movwf	___lldiv@dividend+1
 12023  045D' 1683               	bsf	3,5	;RP0=1, select bank3
 12024  045E' 1703               	bsf	3,6	;RP1=1, select bank3
 12025  045F' 0800'              	movf	sprintf@val^(0+384),w
 12026  0460' 1283               	bcf	3,5	;RP0=0, select bank0
 12027  0461' 1303               	bcf	3,6	;RP1=0, select bank0
 12028  0462' 0084'              	movwf	___lldiv@dividend
 12029  0463' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 12030  0468' 1283               	bcf	3,5	;RP0=0, select bank0
 12031  0469' 1303               	bcf	3,6	;RP1=0, select bank0
 12032  046A' 0803'              	movf	?___lldiv+3,w
 12033  046B' 1683               	bsf	3,5	;RP0=1, select bank3
 12034  046C' 1703               	bsf	3,6	;RP1=1, select bank3
 12035  046D' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 12036  046E' 1283               	bcf	3,5	;RP0=0, select bank0
 12037  046F' 1303               	bcf	3,6	;RP1=0, select bank0
 12038  0470' 0802'              	movf	?___lldiv+2,w
 12039  0471' 1683               	bsf	3,5	;RP0=1, select bank3
 12040  0472' 1703               	bsf	3,6	;RP1=1, select bank3
 12041  0473' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 12042  0474' 1283               	bcf	3,5	;RP0=0, select bank0
 12043  0475' 1303               	bcf	3,6	;RP1=0, select bank0
 12044  0476' 0801'              	movf	?___lldiv+1,w
 12045  0477' 1683               	bsf	3,5	;RP0=1, select bank3
 12046  0478' 1703               	bsf	3,6	;RP1=1, select bank3
 12047  0479' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 12048  047A' 1283               	bcf	3,5	;RP0=0, select bank0
 12049  047B' 1303               	bcf	3,6	;RP1=0, select bank0
 12050  047C' 0800'              	movf	?___lldiv,w
 12051  047D' 1683               	bsf	3,5	;RP0=1, select bank3
 12052  047E' 1703               	bsf	3,6	;RP1=1, select bank3
 12053  047F' 0080'              	movwf	sprintf@tmpval^(0+384)
 12054  0480'                    l5145:
 12055                           
 12056                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 12057  0480' 3000               	movlw	0
 12058  0481' 1283               	bcf	3,5	;RP0=0, select bank0
 12059  0482' 1303               	bcf	3,6	;RP1=0, select bank0
 12060  0483' 008B'              	movwf	___llmod@divisor+3
 12061  0484' 3000               	movlw	0
 12062  0485' 008A'              	movwf	___llmod@divisor+2
 12063  0486' 3000               	movlw	0
 12064  0487' 0089'              	movwf	___llmod@divisor+1
 12065  0488' 300A               	movlw	10
 12066  0489' 0088'              	movwf	___llmod@divisor
 12067  048A' 1683               	bsf	3,5	;RP0=1, select bank3
 12068  048B' 1703               	bsf	3,6	;RP1=1, select bank3
 12069  048C' 0800'              	movf	(sprintf@tmpval+3)^(0+384),w
 12070  048D' 1283               	bcf	3,5	;RP0=0, select bank0
 12071  048E' 1303               	bcf	3,6	;RP1=0, select bank0
 12072  048F' 008F'              	movwf	___llmod@dividend+3
 12073  0490' 1683               	bsf	3,5	;RP0=1, select bank3
 12074  0491' 1703               	bsf	3,6	;RP1=1, select bank3
 12075  0492' 0800'              	movf	(sprintf@tmpval+2)^(0+384),w
 12076  0493' 1283               	bcf	3,5	;RP0=0, select bank0
 12077  0494' 1303               	bcf	3,6	;RP1=0, select bank0
 12078  0495' 008E'              	movwf	___llmod@dividend+2
 12079  0496' 1683               	bsf	3,5	;RP0=1, select bank3
 12080  0497' 1703               	bsf	3,6	;RP1=1, select bank3
 12081  0498' 0800'              	movf	(sprintf@tmpval+1)^(0+384),w
 12082  0499' 1283               	bcf	3,5	;RP0=0, select bank0
 12083  049A' 1303               	bcf	3,6	;RP1=0, select bank0
 12084  049B' 008D'              	movwf	___llmod@dividend+1
 12085  049C' 1683               	bsf	3,5	;RP0=1, select bank3
 12086  049D' 1703               	bsf	3,6	;RP1=1, select bank3
 12087  049E' 0800'              	movf	sprintf@tmpval^(0+384),w
 12088  049F' 1283               	bcf	3,5	;RP0=0, select bank0
 12089  04A0' 1303               	bcf	3,6	;RP1=0, select bank0
 12090  04A1' 008C'              	movwf	___llmod@dividend
 12091  04A2' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 12092  04A7' 1283               	bcf	3,5	;RP0=0, select bank0
 12093  04A8' 1303               	bcf	3,6	;RP1=0, select bank0
 12094  04A9' 080B'              	movf	?___llmod+3,w
 12095  04AA' 1683               	bsf	3,5	;RP0=1, select bank3
 12096  04AB' 1703               	bsf	3,6	;RP1=1, select bank3
 12097  04AC' 0080'              	movwf	(sprintf@tmpval+3)^(0+384)
 12098  04AD' 1283               	bcf	3,5	;RP0=0, select bank0
 12099  04AE' 1303               	bcf	3,6	;RP1=0, select bank0
 12100  04AF' 080A'              	movf	?___llmod+2,w
 12101  04B0' 1683               	bsf	3,5	;RP0=1, select bank3
 12102  04B1' 1703               	bsf	3,6	;RP1=1, select bank3
 12103  04B2' 0080'              	movwf	(sprintf@tmpval+2)^(0+384)
 12104  04B3' 1283               	bcf	3,5	;RP0=0, select bank0
 12105  04B4' 1303               	bcf	3,6	;RP1=0, select bank0
 12106  04B5' 0809'              	movf	?___llmod+1,w
 12107  04B6' 1683               	bsf	3,5	;RP0=1, select bank3
 12108  04B7' 1703               	bsf	3,6	;RP1=1, select bank3
 12109  04B8' 0080'              	movwf	(sprintf@tmpval+1)^(0+384)
 12110  04B9' 1283               	bcf	3,5	;RP0=0, select bank0
 12111  04BA' 1303               	bcf	3,6	;RP1=0, select bank0
 12112  04BB' 0808'              	movf	?___llmod,w
 12113  04BC' 1683               	bsf	3,5	;RP0=1, select bank3
 12114  04BD' 1703               	bsf	3,6	;RP1=1, select bank3
 12115  04BE' 0080'              	movwf	sprintf@tmpval^(0+384)
 12116  04BF'                    l5147:
 12117                           
 12118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 12119  04BF' 0800'              	movf	sprintf@tmpval^(0+384),w
 12120  04C0' 3E30               	addlw	48
 12121  04C1' 1683               	bsf	3,5	;RP0=1, select bank1
 12122  04C2' 1303               	bcf	3,6	;RP1=0, select bank1
 12123  04C3' 0080'              	movwf	??_sprintf^(0+128)
 12124  04C4' 1683               	bsf	3,5	;RP0=1, select bank3
 12125  04C5' 1703               	bsf	3,6	;RP1=1, select bank3
 12126  04C6' 0800'              	movf	sprintf@sp^(0+384),w
 12127  04C7' 0084               	movwf	4
 12128  04C8' 1683               	bsf	3,5	;RP0=1, select bank1
 12129  04C9' 1303               	bcf	3,6	;RP1=0, select bank1
 12130  04CA' 0800'              	movf	??_sprintf^(0+128),w
 12131  04CB' 1383               	bcf	3,7	;select IRP bank0
 12132  04CC' 0080               	movwf	0
 12133  04CD' 3001               	movlw	1
 12134  04CE' 0080'              	movwf	??_sprintf^(0+128)
 12135  04CF' 0800'              	movf	??_sprintf^(0+128),w
 12136  04D0' 1683               	bsf	3,5	;RP0=1, select bank3
 12137  04D1' 1703               	bsf	3,6	;RP1=1, select bank3
 12138  04D2' 0780'              	addwf	sprintf@sp^(0+384),f
 12139  04D3'                    l5149:
 12140                           
 12141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 12142  04D3' 0800'              	movf	sprintf@c^(0+384),w
 12143  04D4' 1683               	bsf	3,5	;RP0=1, select bank1
 12144  04D5' 1303               	bcf	3,6	;RP1=0, select bank1
 12145  04D6' 0080'              	movwf	??_sprintf^(0+128)
 12146  04D7' 3001               	movlw	1
 12147  04D8'                    u9095:
 12148  04D8' 1003               	clrc
 12149  04D9' 0D80'              	rlf	??_sprintf^(0+128),f
 12150  04DA' 3EFF               	addlw	-1
 12151  04DB' 1D03               	skipz
 12152  04DC' 2800'              	goto	u9095
 12153  04DD' 1003               	clrc
 12154  04DE' 0D00'              	rlf	??_sprintf^(0+128),w
 12155  04DF' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 12156  04E0' 0084               	movwf	4
 12157  04E1' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12158  04E6' 1283               	bcf	3,5	;RP0=0, select bank0
 12159  04E7' 1303               	bcf	3,6	;RP1=0, select bank0
 12160  04E8' 0088'              	movwf	___llmod@divisor
 12161  04E9' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12162  04EE' 0089'              	movwf	___llmod@divisor+1
 12163  04EF' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12164  04F4' 008A'              	movwf	___llmod@divisor+2
 12165  04F5' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12166  04FA' 008B'              	movwf	___llmod@divisor+3
 12167  04FB' 1683               	bsf	3,5	;RP0=1, select bank3
 12168  04FC' 1703               	bsf	3,6	;RP1=1, select bank3
 12169  04FD' 0800'              	movf	(sprintf@val+3)^(0+384),w
 12170  04FE' 1283               	bcf	3,5	;RP0=0, select bank0
 12171  04FF' 1303               	bcf	3,6	;RP1=0, select bank0
 12172  0500' 008F'              	movwf	___llmod@dividend+3
 12173  0501' 1683               	bsf	3,5	;RP0=1, select bank3
 12174  0502' 1703               	bsf	3,6	;RP1=1, select bank3
 12175  0503' 0800'              	movf	(sprintf@val+2)^(0+384),w
 12176  0504' 1283               	bcf	3,5	;RP0=0, select bank0
 12177  0505' 1303               	bcf	3,6	;RP1=0, select bank0
 12178  0506' 008E'              	movwf	___llmod@dividend+2
 12179  0507' 1683               	bsf	3,5	;RP0=1, select bank3
 12180  0508' 1703               	bsf	3,6	;RP1=1, select bank3
 12181  0509' 0800'              	movf	(sprintf@val+1)^(0+384),w
 12182  050A' 1283               	bcf	3,5	;RP0=0, select bank0
 12183  050B' 1303               	bcf	3,6	;RP1=0, select bank0
 12184  050C' 008D'              	movwf	___llmod@dividend+1
 12185  050D' 1683               	bsf	3,5	;RP0=1, select bank3
 12186  050E' 1703               	bsf	3,6	;RP1=1, select bank3
 12187  050F' 0800'              	movf	sprintf@val^(0+384),w
 12188  0510' 1283               	bcf	3,5	;RP0=0, select bank0
 12189  0511' 1303               	bcf	3,6	;RP1=0, select bank0
 12190  0512' 008C'              	movwf	___llmod@dividend
 12191  0513' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 12192  0518' 1283               	bcf	3,5	;RP0=0, select bank0
 12193  0519' 1303               	bcf	3,6	;RP1=0, select bank0
 12194  051A' 080B'              	movf	?___llmod+3,w
 12195  051B' 1683               	bsf	3,5	;RP0=1, select bank3
 12196  051C' 1703               	bsf	3,6	;RP1=1, select bank3
 12197  051D' 0080'              	movwf	(sprintf@val+3)^(0+384)
 12198  051E' 1283               	bcf	3,5	;RP0=0, select bank0
 12199  051F' 1303               	bcf	3,6	;RP1=0, select bank0
 12200  0520' 080A'              	movf	?___llmod+2,w
 12201  0521' 1683               	bsf	3,5	;RP0=1, select bank3
 12202  0522' 1703               	bsf	3,6	;RP1=1, select bank3
 12203  0523' 0080'              	movwf	(sprintf@val+2)^(0+384)
 12204  0524' 1283               	bcf	3,5	;RP0=0, select bank0
 12205  0525' 1303               	bcf	3,6	;RP1=0, select bank0
 12206  0526' 0809'              	movf	?___llmod+1,w
 12207  0527' 1683               	bsf	3,5	;RP0=1, select bank3
 12208  0528' 1703               	bsf	3,6	;RP1=1, select bank3
 12209  0529' 0080'              	movwf	(sprintf@val+1)^(0+384)
 12210  052A' 1283               	bcf	3,5	;RP0=0, select bank0
 12211  052B' 1303               	bcf	3,6	;RP1=0, select bank0
 12212  052C' 0808'              	movf	?___llmod,w
 12213  052D' 1683               	bsf	3,5	;RP0=1, select bank3
 12214  052E' 1703               	bsf	3,6	;RP1=1, select bank3
 12215  052F' 0080'              	movwf	sprintf@val^(0+384)
 12216  0530'                    l5151:
 12217                           
 12218                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 12219  0530' 3001               	movlw	1
 12220  0531' 0280'              	subwf	sprintf@c^(0+384),f
 12221  0532' 0A00'              	incf	sprintf@c^(0+384),w
 12222  0533' 1D03               	btfss	3,2
 12223  0534' 2800'              	goto	u9101
 12224  0535' 2800'              	goto	u9100
 12225  0536'                    u9101:
 12226  0536' 2800'              	goto	l5143
 12227  0537'                    u9100:
 12228  0537' 2800'              	goto	l5159
 12229  0538'                    l5153:
 12230                           
 12231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 12232  0538' 3030               	movlw	48
 12233  0539' 1683               	bsf	3,5	;RP0=1, select bank1
 12234  053A' 1303               	bcf	3,6	;RP1=0, select bank1
 12235  053B' 0080'              	movwf	??_sprintf^(0+128)
 12236  053C' 1683               	bsf	3,5	;RP0=1, select bank3
 12237  053D' 1703               	bsf	3,6	;RP1=1, select bank3
 12238  053E' 0800'              	movf	sprintf@sp^(0+384),w
 12239  053F' 0084               	movwf	4
 12240  0540' 1683               	bsf	3,5	;RP0=1, select bank1
 12241  0541' 1303               	bcf	3,6	;RP1=0, select bank1
 12242  0542' 0800'              	movf	??_sprintf^(0+128),w
 12243  0543' 1383               	bcf	3,7	;select IRP bank0
 12244  0544' 0080               	movwf	0
 12245  0545'                    l5155:
 12246  0545' 3001               	movlw	1
 12247  0546' 0080'              	movwf	??_sprintf^(0+128)
 12248  0547' 0800'              	movf	??_sprintf^(0+128),w
 12249  0548' 1683               	bsf	3,5	;RP0=1, select bank3
 12250  0549' 1703               	bsf	3,6	;RP1=1, select bank3
 12251  054A' 0780'              	addwf	sprintf@sp^(0+384),f
 12252  054B'                    l5157:
 12253                           
 12254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 12255  054B' 30FF               	movlw	255
 12256  054C' 0780'              	addwf	sprintf@prec^(0+384),f
 12257  054D' 1803               	skipnc
 12258  054E' 0A80'              	incf	(sprintf@prec+1)^(0+384),f
 12259  054F' 30FF               	movlw	255
 12260  0550' 0780'              	addwf	(sprintf@prec+1)^(0+384),f
 12261  0551'                    l5159:
 12262                           
 12263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 12264  0551' 0800'              	movf	sprintf@prec^(0+384),w
 12265  0552' 0400'              	iorwf	(sprintf@prec+1)^(0+384),w
 12266  0553' 1D03               	btfss	3,2
 12267  0554' 2800'              	goto	u9111
 12268  0555' 2800'              	goto	u9110
 12269  0556'                    u9111:
 12270  0556' 2800'              	goto	l5153
 12271  0557'                    u9110:
 12272  0557' 2800'              	goto	l5239
 12273  0558'                    l5161:
 12274                           
 12275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 12276  0558' 1683               	bsf	3,5	;RP0=1, select bank3
 12277  0559' 1703               	bsf	3,6	;RP1=1, select bank3
 12278  055A' 0800'              	movf	sprintf@ap^(0+384),w
 12279  055B' 0084               	movwf	4
 12280  055C' 1383               	bcf	3,7	;select IRP bank0
 12281  055D' 0800               	movf	0,w
 12282  055E' 1683               	bsf	3,5	;RP0=1, select bank1
 12283  055F' 1303               	bcf	3,6	;RP1=0, select bank1
 12284  0560' 0080'              	movwf	??_sprintf^(0+128)
 12285  0561' 0A84               	incf	4,f
 12286  0562' 0800               	movf	0,w
 12287  0563' 0081'              	movwf	(??_sprintf^(0+128)+1)
 12288  0564' 0800'              	movf	??_sprintf^(0+128),w
 12289  0565' 1683               	bsf	3,5	;RP0=1, select bank3
 12290  0566' 1703               	bsf	3,6	;RP1=1, select bank3
 12291  0567' 0080'              	movwf	sprintf@val^(0+384)
 12292  0568' 1683               	bsf	3,5	;RP0=1, select bank1
 12293  0569' 1303               	bcf	3,6	;RP1=0, select bank1
 12294  056A' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12295  056B' 1683               	bsf	3,5	;RP0=1, select bank3
 12296  056C' 1703               	bsf	3,6	;RP1=1, select bank3
 12297  056D' 0080'              	movwf	(sprintf@val+1)^(0+384)
 12298  056E' 3000               	movlw	0
 12299  056F' 1B80'              	btfsc	(sprintf@val+1)^(0+384),7
 12300  0570' 30FF               	movlw	255
 12301  0571' 0080'              	movwf	(sprintf@val+2)^(0+384)
 12302  0572' 0080'              	movwf	(sprintf@val+3)^(0+384)
 12303  0573'                    l5163:
 12304  0573' 3002               	movlw	2
 12305  0574' 1683               	bsf	3,5	;RP0=1, select bank1
 12306  0575' 1303               	bcf	3,6	;RP1=0, select bank1
 12307  0576' 0080'              	movwf	??_sprintf^(0+128)
 12308  0577' 0800'              	movf	??_sprintf^(0+128),w
 12309  0578' 1683               	bsf	3,5	;RP0=1, select bank3
 12310  0579' 1703               	bsf	3,6	;RP1=1, select bank3
 12311  057A' 0780'              	addwf	sprintf@ap^(0+384),f
 12312  057B'                    l5165:
 12313                           
 12314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 12315  057B' 1F80'              	btfss	(sprintf@val+3)^(0+384),7
 12316  057C' 2800'              	goto	u9121
 12317  057D' 2800'              	goto	u9120
 12318  057E'                    u9121:
 12319  057E' 2800'              	goto	l5171
 12320  057F'                    u9120:
 12321  057F'                    l5167:
 12322                           
 12323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 12324  057F' 3003               	movlw	3
 12325  0580' 0480'              	iorwf	sprintf@flag^(0+384),f
 12326  0581' 3000               	movlw	0
 12327  0582' 0480'              	iorwf	(sprintf@flag+1)^(0+384),f
 12328  0583'                    l5169:
 12329                           
 12330                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 12331  0583' 0980'              	comf	sprintf@val^(0+384),f
 12332  0584' 0980'              	comf	(sprintf@val+1)^(0+384),f
 12333  0585' 0980'              	comf	(sprintf@val+2)^(0+384),f
 12334  0586' 0980'              	comf	(sprintf@val+3)^(0+384),f
 12335  0587' 0A80'              	incf	sprintf@val^(0+384),f
 12336  0588' 1903               	skipnz
 12337  0589' 0A80'              	incf	(sprintf@val+1)^(0+384),f
 12338  058A' 1903               	skipnz
 12339  058B' 0A80'              	incf	(sprintf@val+2)^(0+384),f
 12340  058C' 1903               	skipnz
 12341  058D' 0A80'              	incf	(sprintf@val+3)^(0+384),f
 12342  058E'                    l5171:
 12343                           
 12344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 12345  058E' 0800'              	movf	sprintf@prec^(0+384),w
 12346  058F' 0400'              	iorwf	(sprintf@prec+1)^(0+384),w
 12347  0590' 1D03               	btfss	3,2
 12348  0591' 2800'              	goto	u9131
 12349  0592' 2800'              	goto	u9130
 12350  0593'                    u9131:
 12351  0593' 2800'              	goto	l5177
 12352  0594'                    u9130:
 12353  0594'                    l5173:
 12354  0594' 0800'              	movf	(sprintf@val+3)^(0+384),w
 12355  0595' 0400'              	iorwf	(sprintf@val+2)^(0+384),w
 12356  0596' 0400'              	iorwf	(sprintf@val+1)^(0+384),w
 12357  0597' 0400'              	iorwf	sprintf@val^(0+384),w
 12358  0598' 1D03               	skipz
 12359  0599' 2800'              	goto	u9141
 12360  059A' 2800'              	goto	u9140
 12361  059B'                    u9141:
 12362  059B' 2800'              	goto	l5177
 12363  059C'                    u9140:
 12364  059C'                    l5175:
 12365                           
 12366                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 12367  059C' 3001               	movlw	1
 12368  059D' 0780'              	addwf	sprintf@prec^(0+384),f
 12369  059E' 1803               	skipnc
 12370  059F' 0A80'              	incf	(sprintf@prec+1)^(0+384),f
 12371  05A0' 3000               	movlw	0
 12372  05A1' 0780'              	addwf	(sprintf@prec+1)^(0+384),f
 12373  05A2'                    l5177:
 12374                           
 12375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 12376  05A2' 0180'              	clrf	sprintf@c^(0+384)
 12377  05A3' 0A80'              	incf	sprintf@c^(0+384),f
 12378  05A4'                    l5183:
 12379                           
 12380                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 12381  05A4' 0800'              	movf	sprintf@c^(0+384),w
 12382  05A5' 1683               	bsf	3,5	;RP0=1, select bank1
 12383  05A6' 1303               	bcf	3,6	;RP1=0, select bank1
 12384  05A7' 0080'              	movwf	??_sprintf^(0+128)
 12385  05A8' 3001               	movlw	1
 12386  05A9'                    u9155:
 12387  05A9' 1003               	clrc
 12388  05AA' 0D80'              	rlf	??_sprintf^(0+128),f
 12389  05AB' 3EFF               	addlw	-1
 12390  05AC' 1D03               	skipz
 12391  05AD' 2800'              	goto	u9155
 12392  05AE' 1003               	clrc
 12393  05AF' 0D00'              	rlf	??_sprintf^(0+128),w
 12394  05B0' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 12395  05B1' 0084               	movwf	4
 12396  05B2' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12397  05B7' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12398  05B8' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12399  05BD' 0081'              	movwf	((??_sprintf+1)^(0+128)+1)
 12400  05BE' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12401  05C3' 0082'              	movwf	((??_sprintf+1)^(0+128)+2)
 12402  05C4' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12403  05C9' 0083'              	movwf	((??_sprintf+1)^(0+128)+3)
 12404  05CA' 0800'              	movf	(??_sprintf+4)^(0+128),w
 12405  05CB' 1683               	bsf	3,5	;RP0=1, select bank3
 12406  05CC' 1703               	bsf	3,6	;RP1=1, select bank3
 12407  05CD' 0200'              	subwf	(sprintf@val+3)^(0+384),w
 12408  05CE' 1D03               	skipz
 12409  05CF' 2800'              	goto	u9165
 12410  05D0' 1683               	bsf	3,5	;RP0=1, select bank1
 12411  05D1' 1303               	bcf	3,6	;RP1=0, select bank1
 12412  05D2' 0800'              	movf	(??_sprintf+3)^(0+128),w
 12413  05D3' 1683               	bsf	3,5	;RP0=1, select bank3
 12414  05D4' 1703               	bsf	3,6	;RP1=1, select bank3
 12415  05D5' 0200'              	subwf	(sprintf@val+2)^(0+384),w
 12416  05D6' 1D03               	skipz
 12417  05D7' 2800'              	goto	u9165
 12418  05D8' 1683               	bsf	3,5	;RP0=1, select bank1
 12419  05D9' 1303               	bcf	3,6	;RP1=0, select bank1
 12420  05DA' 0800'              	movf	(??_sprintf+2)^(0+128),w
 12421  05DB' 1683               	bsf	3,5	;RP0=1, select bank3
 12422  05DC' 1703               	bsf	3,6	;RP1=1, select bank3
 12423  05DD' 0200'              	subwf	(sprintf@val+1)^(0+384),w
 12424  05DE' 1D03               	skipz
 12425  05DF' 2800'              	goto	u9165
 12426  05E0' 1683               	bsf	3,5	;RP0=1, select bank1
 12427  05E1' 1303               	bcf	3,6	;RP1=0, select bank1
 12428  05E2' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12429  05E3' 1683               	bsf	3,5	;RP0=1, select bank3
 12430  05E4' 1703               	bsf	3,6	;RP1=1, select bank3
 12431  05E5' 0200'              	subwf	sprintf@val^(0+384),w
 12432  05E6'                    u9165:
 12433  05E6' 1803               	skipnc
 12434  05E7' 2800'              	goto	u9161
 12435  05E8' 2800'              	goto	u9160
 12436  05E9'                    u9161:
 12437  05E9' 2800'              	goto	l5187
 12438  05EA'                    u9160:
 12439  05EA' 2800'              	goto	l5189
 12440  05EB'                    l5187:
 12441  05EB' 3001               	movlw	1
 12442  05EC' 1683               	bsf	3,5	;RP0=1, select bank1
 12443  05ED' 1303               	bcf	3,6	;RP1=0, select bank1
 12444  05EE' 0080'              	movwf	??_sprintf^(0+128)
 12445  05EF' 0800'              	movf	??_sprintf^(0+128),w
 12446  05F0' 1683               	bsf	3,5	;RP0=1, select bank3
 12447  05F1' 1703               	bsf	3,6	;RP1=1, select bank3
 12448  05F2' 0780'              	addwf	sprintf@c^(0+384),f
 12449  05F3' 300A               	movlw	10
 12450  05F4' 0600'              	xorwf	sprintf@c^(0+384),w
 12451  05F5' 1D03               	btfss	3,2
 12452  05F6' 2800'              	goto	u9171
 12453  05F7' 2800'              	goto	u9170
 12454  05F8'                    u9171:
 12455  05F8' 2800'              	goto	l5183
 12456  05F9'                    u9170:
 12457  05F9'                    l5189:
 12458                           
 12459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 12460  05F9' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 12461  05FA' 3A80               	xorlw	128
 12462  05FB' 3C80               	sublw	128
 12463  05FC' 1D03               	skipz
 12464  05FD' 2800'              	goto	u9185
 12465  05FE' 0800'              	movf	sprintf@prec^(0+384),w
 12466  05FF' 0200'              	subwf	sprintf@c^(0+384),w
 12467  0600'                    u9185:
 12468  0600' 1803               	skipnc
 12469  0601' 2800'              	goto	u9181
 12470  0602' 2800'              	goto	u9180
 12471  0603'                    u9181:
 12472  0603' 2800'              	goto	l5193
 12473  0604'                    u9180:
 12474  0604'                    l5191:
 12475                           
 12476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 12477  0604' 1683               	bsf	3,5	;RP0=1, select bank3
 12478  0605' 1703               	bsf	3,6	;RP1=1, select bank3
 12479  0606' 0800'              	movf	sprintf@prec^(0+384),w
 12480  0607' 1683               	bsf	3,5	;RP0=1, select bank1
 12481  0608' 1303               	bcf	3,6	;RP1=0, select bank1
 12482  0609' 0080'              	movwf	??_sprintf^(0+128)
 12483  060A' 0800'              	movf	??_sprintf^(0+128),w
 12484  060B' 1683               	bsf	3,5	;RP0=1, select bank3
 12485  060C' 1703               	bsf	3,6	;RP1=1, select bank3
 12486  060D' 0080'              	movwf	sprintf@c^(0+384)
 12487  060E' 2800'              	goto	l5197
 12488  060F'                    l5193:
 12489  060F' 1683               	bsf	3,5	;RP0=1, select bank3
 12490  0610' 1703               	bsf	3,6	;RP1=1, select bank3
 12491  0611' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 12492  0612' 3A80               	xorlw	128
 12493  0613' 1683               	bsf	3,5	;RP0=1, select bank1
 12494  0614' 1303               	bcf	3,6	;RP1=0, select bank1
 12495  0615' 0080'              	movwf	??_sprintf^(0+128)
 12496  0616' 3080               	movlw	128
 12497  0617' 0200'              	subwf	??_sprintf^(0+128),w
 12498  0618' 1D03               	skipz
 12499  0619' 2800'              	goto	u9195
 12500  061A' 1683               	bsf	3,5	;RP0=1, select bank3
 12501  061B' 1703               	bsf	3,6	;RP1=1, select bank3
 12502  061C' 0800'              	movf	sprintf@c^(0+384),w
 12503  061D' 0200'              	subwf	sprintf@prec^(0+384),w
 12504  061E'                    u9195:
 12505  061E' 1803               	skipnc
 12506  061F' 2800'              	goto	u9191
 12507  0620' 2800'              	goto	u9190
 12508  0621'                    u9191:
 12509  0621' 2800'              	goto	l5197
 12510  0622'                    u9190:
 12511  0622'                    l5195:
 12512                           
 12513                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 12514  0622' 1683               	bsf	3,5	;RP0=1, select bank3
 12515  0623' 1703               	bsf	3,6	;RP1=1, select bank3
 12516  0624' 0800'              	movf	sprintf@c^(0+384),w
 12517  0625' 1683               	bsf	3,5	;RP0=1, select bank1
 12518  0626' 1303               	bcf	3,6	;RP1=0, select bank1
 12519  0627' 0080'              	movwf	??_sprintf^(0+128)
 12520  0628' 0181'              	clrf	(??_sprintf^(0+128)+1)
 12521  0629' 0800'              	movf	??_sprintf^(0+128),w
 12522  062A' 1683               	bsf	3,5	;RP0=1, select bank3
 12523  062B' 1703               	bsf	3,6	;RP1=1, select bank3
 12524  062C' 0080'              	movwf	sprintf@prec^(0+384)
 12525  062D' 1683               	bsf	3,5	;RP0=1, select bank1
 12526  062E' 1303               	bcf	3,6	;RP1=0, select bank1
 12527  062F' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12528  0630' 1683               	bsf	3,5	;RP0=1, select bank3
 12529  0631' 1703               	bsf	3,6	;RP1=1, select bank3
 12530  0632' 0080'              	movwf	(sprintf@prec+1)^(0+384)
 12531  0633'                    l5197:
 12532                           
 12533                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 12534  0633' 1683               	bsf	3,5	;RP0=1, select bank3
 12535  0634' 1703               	bsf	3,6	;RP1=1, select bank3
 12536  0635' 0800'              	movf	sprintf@width^(0+384),w
 12537  0636' 0400'              	iorwf	(sprintf@width+1)^(0+384),w
 12538  0637' 1903               	btfsc	3,2
 12539  0638' 2800'              	goto	u9201
 12540  0639' 2800'              	goto	u9200
 12541  063A'                    u9201:
 12542  063A' 2800'              	goto	l5203
 12543  063B'                    u9200:
 12544  063B'                    l5199:
 12545  063B' 3003               	movlw	3
 12546  063C' 0500'              	andwf	sprintf@flag^(0+384),w
 12547  063D' 1683               	bsf	3,5	;RP0=1, select bank1
 12548  063E' 1303               	bcf	3,6	;RP1=0, select bank1
 12549  063F' 0080'              	movwf	??_sprintf^(0+128)
 12550  0640' 3000               	movlw	0
 12551  0641' 1683               	bsf	3,5	;RP0=1, select bank3
 12552  0642' 1703               	bsf	3,6	;RP1=1, select bank3
 12553  0643' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 12554  0644' 1683               	bsf	3,5	;RP0=1, select bank1
 12555  0645' 1303               	bcf	3,6	;RP1=0, select bank1
 12556  0646' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12557  0647' 0800'              	movf	??_sprintf^(0+128),w
 12558  0648' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 12559  0649' 1903               	btfsc	3,2
 12560  064A' 2800'              	goto	u9211
 12561  064B' 2800'              	goto	u9210
 12562  064C'                    u9211:
 12563  064C' 2800'              	goto	l5203
 12564  064D'                    u9210:
 12565  064D'                    l5201:
 12566                           
 12567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 12568  064D' 30FF               	movlw	255
 12569  064E' 1683               	bsf	3,5	;RP0=1, select bank3
 12570  064F' 1703               	bsf	3,6	;RP1=1, select bank3
 12571  0650' 0780'              	addwf	sprintf@width^(0+384),f
 12572  0651' 1803               	skipnc
 12573  0652' 0A80'              	incf	(sprintf@width+1)^(0+384),f
 12574  0653' 30FF               	movlw	255
 12575  0654' 0780'              	addwf	(sprintf@width+1)^(0+384),f
 12576  0655'                    l5203:
 12577                           
 12578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 12579  0655' 1683               	bsf	3,5	;RP0=1, select bank3
 12580  0656' 1703               	bsf	3,6	;RP1=1, select bank3
 12581  0657' 1F00'              	btfss	(sprintf@flag+1)^(0+384),6
 12582  0658' 2800'              	goto	u9221
 12583  0659' 2800'              	goto	u9220
 12584  065A'                    u9221:
 12585  065A' 2800'              	goto	l5211
 12586  065B'                    u9220:
 12587  065B'                    l5205:
 12588                           
 12589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 12590  065B' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 12591  065C' 3A80               	xorlw	128
 12592  065D' 1683               	bsf	3,5	;RP0=1, select bank1
 12593  065E' 1303               	bcf	3,6	;RP1=0, select bank1
 12594  065F' 0080'              	movwf	??_sprintf^(0+128)
 12595  0660' 1683               	bsf	3,5	;RP0=1, select bank3
 12596  0661' 1703               	bsf	3,6	;RP1=1, select bank3
 12597  0662' 0800'              	movf	(sprintf@width+1)^(0+384),w
 12598  0663' 3A80               	xorlw	128
 12599  0664' 1683               	bsf	3,5	;RP0=1, select bank1
 12600  0665' 1303               	bcf	3,6	;RP1=0, select bank1
 12601  0666' 0200'              	subwf	??_sprintf^(0+128),w
 12602  0667' 1D03               	skipz
 12603  0668' 2800'              	goto	u9235
 12604  0669' 1683               	bsf	3,5	;RP0=1, select bank3
 12605  066A' 1703               	bsf	3,6	;RP1=1, select bank3
 12606  066B' 0800'              	movf	sprintf@width^(0+384),w
 12607  066C' 0200'              	subwf	sprintf@prec^(0+384),w
 12608  066D'                    u9235:
 12609  066D' 1803               	skipnc
 12610  066E' 2800'              	goto	u9231
 12611  066F' 2800'              	goto	u9230
 12612  0670'                    u9231:
 12613  0670' 2800'              	goto	l5209
 12614  0671'                    u9230:
 12615  0671'                    l5207:
 12616                           
 12617                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 12618  0671' 1683               	bsf	3,5	;RP0=1, select bank3
 12619  0672' 1703               	bsf	3,6	;RP1=1, select bank3
 12620  0673' 0800'              	movf	sprintf@prec^(0+384),w
 12621  0674' 0280'              	subwf	sprintf@width^(0+384),f
 12622  0675' 0800'              	movf	(sprintf@prec+1)^(0+384),w
 12623  0676' 1C03               	skipc
 12624  0677' 0380'              	decf	(sprintf@width+1)^(0+384),f
 12625  0678' 0280'              	subwf	(sprintf@width+1)^(0+384),f
 12626  0679' 2800'              	goto	l5211
 12627  067A'                    l5209:
 12628                           
 12629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 12630  067A' 1683               	bsf	3,5	;RP0=1, select bank3
 12631  067B' 1703               	bsf	3,6	;RP1=1, select bank3
 12632  067C' 0180'              	clrf	sprintf@width^(0+384)
 12633  067D' 0180'              	clrf	(sprintf@width+1)^(0+384)
 12634  067E'                    l5211:
 12635                           
 12636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 12637  067E' 0800'              	movf	(sprintf@width+1)^(0+384),w
 12638  067F' 3A80               	xorlw	128
 12639  0680' 3C80               	sublw	128
 12640  0681' 1D03               	skipz
 12641  0682' 2800'              	goto	u9245
 12642  0683' 0800'              	movf	sprintf@width^(0+384),w
 12643  0684' 0200'              	subwf	sprintf@c^(0+384),w
 12644  0685'                    u9245:
 12645  0685' 1803               	skipnc
 12646  0686' 2800'              	goto	u9241
 12647  0687' 2800'              	goto	u9240
 12648  0688'                    u9241:
 12649  0688' 2800'              	goto	l5215
 12650  0689'                    u9240:
 12651  0689'                    l5213:
 12652                           
 12653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 12654  0689' 1683               	bsf	3,5	;RP0=1, select bank3
 12655  068A' 1703               	bsf	3,6	;RP1=1, select bank3
 12656  068B' 0800'              	movf	sprintf@c^(0+384),w
 12657  068C' 1683               	bsf	3,5	;RP0=1, select bank1
 12658  068D' 1303               	bcf	3,6	;RP1=0, select bank1
 12659  068E' 0080'              	movwf	??_sprintf^(0+128)
 12660  068F' 0181'              	clrf	(??_sprintf^(0+128)+1)
 12661  0690' 0800'              	movf	??_sprintf^(0+128),w
 12662  0691' 1683               	bsf	3,5	;RP0=1, select bank3
 12663  0692' 1703               	bsf	3,6	;RP1=1, select bank3
 12664  0693' 0280'              	subwf	sprintf@width^(0+384),f
 12665  0694' 1683               	bsf	3,5	;RP0=1, select bank1
 12666  0695' 1303               	bcf	3,6	;RP1=0, select bank1
 12667  0696' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12668  0697' 1683               	bsf	3,5	;RP0=1, select bank3
 12669  0698' 1703               	bsf	3,6	;RP1=1, select bank3
 12670  0699' 1C03               	skipc
 12671  069A' 0380'              	decf	(sprintf@width+1)^(0+384),f
 12672  069B' 0280'              	subwf	(sprintf@width+1)^(0+384),f
 12673  069C' 2800'              	goto	l5217
 12674  069D'                    l5215:
 12675                           
 12676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 12677  069D' 1683               	bsf	3,5	;RP0=1, select bank3
 12678  069E' 1703               	bsf	3,6	;RP1=1, select bank3
 12679  069F' 0180'              	clrf	sprintf@width^(0+384)
 12680  06A0' 0180'              	clrf	(sprintf@width+1)^(0+384)
 12681  06A1'                    l5217:
 12682                           
 12683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 12684  06A1' 0800'              	movf	sprintf@width^(0+384),w
 12685  06A2' 0400'              	iorwf	(sprintf@width+1)^(0+384),w
 12686  06A3' 1903               	btfsc	3,2
 12687  06A4' 2800'              	goto	u9251
 12688  06A5' 2800'              	goto	u9250
 12689  06A6'                    u9251:
 12690  06A6' 2800'              	goto	l5225
 12691  06A7'                    u9250:
 12692  06A7'                    l5219:
 12693                           
 12694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 12695  06A7' 3020               	movlw	32
 12696  06A8' 1683               	bsf	3,5	;RP0=1, select bank1
 12697  06A9' 1303               	bcf	3,6	;RP1=0, select bank1
 12698  06AA' 0080'              	movwf	??_sprintf^(0+128)
 12699  06AB' 1683               	bsf	3,5	;RP0=1, select bank3
 12700  06AC' 1703               	bsf	3,6	;RP1=1, select bank3
 12701  06AD' 0800'              	movf	sprintf@sp^(0+384),w
 12702  06AE' 0084               	movwf	4
 12703  06AF' 1683               	bsf	3,5	;RP0=1, select bank1
 12704  06B0' 1303               	bcf	3,6	;RP1=0, select bank1
 12705  06B1' 0800'              	movf	??_sprintf^(0+128),w
 12706  06B2' 1383               	bcf	3,7	;select IRP bank0
 12707  06B3' 0080               	movwf	0
 12708  06B4'                    l5221:
 12709  06B4' 3001               	movlw	1
 12710  06B5' 0080'              	movwf	??_sprintf^(0+128)
 12711  06B6' 0800'              	movf	??_sprintf^(0+128),w
 12712  06B7' 1683               	bsf	3,5	;RP0=1, select bank3
 12713  06B8' 1703               	bsf	3,6	;RP1=1, select bank3
 12714  06B9' 0780'              	addwf	sprintf@sp^(0+384),f
 12715  06BA'                    l5223:
 12716  06BA' 30FF               	movlw	255
 12717  06BB' 0780'              	addwf	sprintf@width^(0+384),f
 12718  06BC' 1803               	skipnc
 12719  06BD' 0A80'              	incf	(sprintf@width+1)^(0+384),f
 12720  06BE' 30FF               	movlw	255
 12721  06BF' 0780'              	addwf	(sprintf@width+1)^(0+384),f
 12722  06C0' 0800'              	movf	sprintf@width^(0+384),w
 12723  06C1' 0400'              	iorwf	(sprintf@width+1)^(0+384),w
 12724  06C2' 1D03               	btfss	3,2
 12725  06C3' 2800'              	goto	u9261
 12726  06C4' 2800'              	goto	u9260
 12727  06C5'                    u9261:
 12728  06C5' 2800'              	goto	l5219
 12729  06C6'                    u9260:
 12730  06C6'                    l5225:
 12731                           
 12732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 12733  06C6' 3003               	movlw	3
 12734  06C7' 0500'              	andwf	sprintf@flag^(0+384),w
 12735  06C8' 1683               	bsf	3,5	;RP0=1, select bank1
 12736  06C9' 1303               	bcf	3,6	;RP1=0, select bank1
 12737  06CA' 0080'              	movwf	??_sprintf^(0+128)
 12738  06CB' 3000               	movlw	0
 12739  06CC' 1683               	bsf	3,5	;RP0=1, select bank3
 12740  06CD' 1703               	bsf	3,6	;RP1=1, select bank3
 12741  06CE' 0500'              	andwf	(sprintf@flag+1)^(0+384),w
 12742  06CF' 1683               	bsf	3,5	;RP0=1, select bank1
 12743  06D0' 1303               	bcf	3,6	;RP1=0, select bank1
 12744  06D1' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12745  06D2' 0800'              	movf	??_sprintf^(0+128),w
 12746  06D3' 0401'              	iorwf	(??_sprintf^(0+128)+1),w
 12747  06D4' 1903               	btfsc	3,2
 12748  06D5' 2800'              	goto	u9271
 12749  06D6' 2800'              	goto	u9270
 12750  06D7'                    u9271:
 12751  06D7' 2800'              	goto	l5237
 12752  06D8'                    u9270:
 12753  06D8'                    l5227:
 12754                           
 12755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 12756  06D8' 302D               	movlw	45
 12757  06D9' 0080'              	movwf	??_sprintf^(0+128)
 12758  06DA' 1683               	bsf	3,5	;RP0=1, select bank3
 12759  06DB' 1703               	bsf	3,6	;RP1=1, select bank3
 12760  06DC' 0800'              	movf	sprintf@sp^(0+384),w
 12761  06DD' 0084               	movwf	4
 12762  06DE' 1683               	bsf	3,5	;RP0=1, select bank1
 12763  06DF' 1303               	bcf	3,6	;RP1=0, select bank1
 12764  06E0' 0800'              	movf	??_sprintf^(0+128),w
 12765  06E1' 1383               	bcf	3,7	;select IRP bank0
 12766  06E2' 0080               	movwf	0
 12767  06E3'                    l5229:
 12768  06E3' 3001               	movlw	1
 12769  06E4' 0080'              	movwf	??_sprintf^(0+128)
 12770  06E5' 0800'              	movf	??_sprintf^(0+128),w
 12771  06E6' 1683               	bsf	3,5	;RP0=1, select bank3
 12772  06E7' 1703               	bsf	3,6	;RP1=1, select bank3
 12773  06E8' 0780'              	addwf	sprintf@sp^(0+384),f
 12774  06E9' 2800'              	goto	l5237
 12775  06EA'                    l5231:
 12776                           
 12777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 12778  06EA' 3000               	movlw	0
 12779  06EB' 1283               	bcf	3,5	;RP0=0, select bank0
 12780  06EC' 1303               	bcf	3,6	;RP1=0, select bank0
 12781  06ED' 008B'              	movwf	___llmod@divisor+3
 12782  06EE' 3000               	movlw	0
 12783  06EF' 008A'              	movwf	___llmod@divisor+2
 12784  06F0' 3000               	movlw	0
 12785  06F1' 0089'              	movwf	___llmod@divisor+1
 12786  06F2' 300A               	movlw	10
 12787  06F3' 0088'              	movwf	___llmod@divisor
 12788  06F4' 1683               	bsf	3,5	;RP0=1, select bank3
 12789  06F5' 1703               	bsf	3,6	;RP1=1, select bank3
 12790  06F6' 0800'              	movf	sprintf@prec^(0+384),w
 12791  06F7' 1683               	bsf	3,5	;RP0=1, select bank1
 12792  06F8' 1303               	bcf	3,6	;RP1=0, select bank1
 12793  06F9' 0080'              	movwf	??_sprintf^(0+128)
 12794  06FA' 3001               	movlw	1
 12795  06FB'                    u9285:
 12796  06FB' 1003               	clrc
 12797  06FC' 0D80'              	rlf	??_sprintf^(0+128),f
 12798  06FD' 3EFF               	addlw	-1
 12799  06FE' 1D03               	skipz
 12800  06FF' 2800'              	goto	u9285
 12801  0700' 1003               	clrc
 12802  0701' 0D00'              	rlf	??_sprintf^(0+128),w
 12803  0702' 3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 12804  0703' 0084               	movwf	4
 12805  0704' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12806  0709' 1283               	bcf	3,5	;RP0=0, select bank0
 12807  070A' 1303               	bcf	3,6	;RP1=0, select bank0
 12808  070B' 0080'              	movwf	___lldiv@divisor
 12809  070C' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12810  0711' 0081'              	movwf	___lldiv@divisor+1
 12811  0712' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12812  0717' 0082'              	movwf	___lldiv@divisor+2
 12813  0718' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12814  071D' 0083'              	movwf	___lldiv@divisor+3
 12815  071E' 1683               	bsf	3,5	;RP0=1, select bank3
 12816  071F' 1703               	bsf	3,6	;RP1=1, select bank3
 12817  0720' 0800'              	movf	(sprintf@val+3)^(0+384),w
 12818  0721' 1283               	bcf	3,5	;RP0=0, select bank0
 12819  0722' 1303               	bcf	3,6	;RP1=0, select bank0
 12820  0723' 0087'              	movwf	___lldiv@dividend+3
 12821  0724' 1683               	bsf	3,5	;RP0=1, select bank3
 12822  0725' 1703               	bsf	3,6	;RP1=1, select bank3
 12823  0726' 0800'              	movf	(sprintf@val+2)^(0+384),w
 12824  0727' 1283               	bcf	3,5	;RP0=0, select bank0
 12825  0728' 1303               	bcf	3,6	;RP1=0, select bank0
 12826  0729' 0086'              	movwf	___lldiv@dividend+2
 12827  072A' 1683               	bsf	3,5	;RP0=1, select bank3
 12828  072B' 1703               	bsf	3,6	;RP1=1, select bank3
 12829  072C' 0800'              	movf	(sprintf@val+1)^(0+384),w
 12830  072D' 1283               	bcf	3,5	;RP0=0, select bank0
 12831  072E' 1303               	bcf	3,6	;RP1=0, select bank0
 12832  072F' 0085'              	movwf	___lldiv@dividend+1
 12833  0730' 1683               	bsf	3,5	;RP0=1, select bank3
 12834  0731' 1703               	bsf	3,6	;RP1=1, select bank3
 12835  0732' 0800'              	movf	sprintf@val^(0+384),w
 12836  0733' 1283               	bcf	3,5	;RP0=0, select bank0
 12837  0734' 1303               	bcf	3,6	;RP1=0, select bank0
 12838  0735' 0084'              	movwf	___lldiv@dividend
 12839  0736' 120A' 118A' 2000' 120A' 118A' 	fcall	___lldiv
 12840  073B' 1283               	bcf	3,5	;RP0=0, select bank0
 12841  073C' 1303               	bcf	3,6	;RP1=0, select bank0
 12842  073D' 0803'              	movf	?___lldiv+3,w
 12843  073E' 008F'              	movwf	___llmod@dividend+3
 12844  073F' 0802'              	movf	?___lldiv+2,w
 12845  0740' 008E'              	movwf	___llmod@dividend+2
 12846  0741' 0801'              	movf	?___lldiv+1,w
 12847  0742' 008D'              	movwf	___llmod@dividend+1
 12848  0743' 0800'              	movf	?___lldiv,w
 12849  0744' 008C'              	movwf	___llmod@dividend
 12850  0745' 120A' 118A' 2000' 120A' 118A' 	fcall	___llmod
 12851  074A' 1283               	bcf	3,5	;RP0=0, select bank0
 12852  074B' 1303               	bcf	3,6	;RP1=0, select bank0
 12853  074C' 0808'              	movf	?___llmod,w
 12854  074D' 3E30               	addlw	48
 12855  074E' 1683               	bsf	3,5	;RP0=1, select bank1
 12856  074F' 1303               	bcf	3,6	;RP1=0, select bank1
 12857  0750' 0080'              	movwf	(??_sprintf+1)^(0+128)
 12858  0751' 0800'              	movf	(??_sprintf+1)^(0+128),w
 12859  0752' 1683               	bsf	3,5	;RP0=1, select bank3
 12860  0753' 1703               	bsf	3,6	;RP1=1, select bank3
 12861  0754' 0080'              	movwf	sprintf@c^(0+384)
 12862  0755'                    l5233:
 12863                           
 12864                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 12865  0755' 0800'              	movf	sprintf@c^(0+384),w
 12866  0756' 1683               	bsf	3,5	;RP0=1, select bank1
 12867  0757' 1303               	bcf	3,6	;RP1=0, select bank1
 12868  0758' 0080'              	movwf	??_sprintf^(0+128)
 12869  0759' 1683               	bsf	3,5	;RP0=1, select bank3
 12870  075A' 1703               	bsf	3,6	;RP1=1, select bank3
 12871  075B' 0800'              	movf	sprintf@sp^(0+384),w
 12872  075C' 0084               	movwf	4
 12873  075D' 1683               	bsf	3,5	;RP0=1, select bank1
 12874  075E' 1303               	bcf	3,6	;RP1=0, select bank1
 12875  075F' 0800'              	movf	??_sprintf^(0+128),w
 12876  0760' 1383               	bcf	3,7	;select IRP bank0
 12877  0761' 0080               	movwf	0
 12878  0762' 2800'              	goto	l5229
 12879  0763'                    l5237:
 12880                           
 12881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 12882  0763' 30FF               	movlw	255
 12883  0764' 1683               	bsf	3,5	;RP0=1, select bank3
 12884  0765' 1703               	bsf	3,6	;RP1=1, select bank3
 12885  0766' 0780'              	addwf	sprintf@prec^(0+384),f
 12886  0767' 1803               	skipnc
 12887  0768' 0A80'              	incf	(sprintf@prec+1)^(0+384),f
 12888  0769' 30FF               	movlw	255
 12889  076A' 0780'              	addwf	(sprintf@prec+1)^(0+384),f
 12890  076B' 0A00'              	incf	sprintf@prec^(0+384),w
 12891  076C' 1D03               	skipz
 12892  076D' 2800'              	goto	u9291
 12893  076E' 0A00'              	incf	(sprintf@prec+1)^(0+384),w
 12894  076F' 1D03               	btfss	3,2
 12895  0770' 2800'              	goto	u9291
 12896  0771' 2800'              	goto	u9290
 12897  0772'                    u9291:
 12898  0772' 2800'              	goto	l5231
 12899  0773'                    u9290:
 12900  0773'                    l5239:
 12901                           
 12902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 12903  0773' 3001               	movlw	1
 12904  0774' 1303               	bcf	3,6	;RP1=0, select bank1
 12905  0775' 0780'              	addwf	sprintf@f^(0+128),f
 12906  0776' 30FF               	movlw	-1
 12907  0777' 0700'              	addwf	sprintf@f^(0+128),w
 12908  0778' 0084               	movwf	4
 12909  0779' 120A' 118A' 2000' 120A' 118A' 	fcall	stringdir
 12910  077E' 0080'              	movwf	??_sprintf^(0+128)
 12911  077F' 0800'              	movf	??_sprintf^(0+128),w
 12912  0780' 1683               	bsf	3,5	;RP0=1, select bank3
 12913  0781' 1703               	bsf	3,6	;RP1=1, select bank3
 12914  0782' 0080'              	movwf	sprintf@c^(0+384)
 12915  0783' 0800'              	movf	sprintf@c^(0+384),w
 12916  0784' 1D03               	btfss	3,2
 12917  0785' 2800'              	goto	u9301
 12918  0786' 2800'              	goto	u9300
 12919  0787'                    u9301:
 12920  0787' 120A' 118A' 2800'  	goto	l4959
 12921  078A'                    u9300:
 12922  078A'                    l5241:
 12923                           
 12924                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 12925  078A' 1683               	bsf	3,5	;RP0=1, select bank3
 12926  078B' 1703               	bsf	3,6	;RP1=1, select bank3
 12927  078C' 0800'              	movf	sprintf@sp^(0+384),w
 12928  078D' 0084               	movwf	4
 12929  078E' 1383               	bcf	3,7	;select IRP bank0
 12930  078F' 0180               	clrf	0
 12931  0790'                    l460:
 12932  0790' 0008               	return
 12933  0791'                    __end_of_sprintf:

Data Sizes:
    Strings     56
    Constant    144
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     79      80
    BANK1            80     24      54
    BANK3            96     27      27
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_2(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> d(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Wr_USART_String@a	PTR unsigned char  size(2) Largest target is 21
		 -> d(BANK1[20]), STR_1(CODE[21]), 

    LCD_data_string@a	PTR unsigned char  size(2) Largest target is 20
		 -> STR_3(CODE[16]), d(BANK1[20]), 


Critical Paths under _main in COMMON

    _main->_LCD_move_cursor
    _sprintf->___llmod
    _sprintf->__div_to_l_
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___awmod
    ___flmul->___lwdiv
    ___llmod->___lldiv
    _Wr_USART_String->_Wr_USART
    _USART_In->___aldiv
    _LCD_move_cursor->_LCD_cmd
    _LCD_data_string->_LCD_data
    _LCD_data->_LCD_datos
    _LCD_Init->_LCD_cmd
    _Clear->_LCD_cmd
    _LCD_cmd->_LCD_datos

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _val->___flmul
    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _USART_In->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_sprintf

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   52360
                                             76 BANK0      3     3      0
                           _ADC_Init
                             _ADCval
                              _Clear
                           _LCD_Init
                    _LCD_data_string
                    _LCD_move_cursor
                           _USART_In
                           _Wr_USART
                    _Wr_USART_String
                              _setup
                            _sprintf
                                _val
 ---------------------------------------------------------------------------------
 (1) _val                                                  9     5      4    6560
                                             36 BANK0      9     5      4
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             48    37     11   42638
                                              8 BANK1     16     5     11
                                              0 BANK3     27    27      0
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    9720
                                             36 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1513
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              0 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      99
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    7776
                                             36 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     772
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     781
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             26    18      8    5873
                                             10 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __Umul8_16                                            9     7      2     980
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     676
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              9 COMMON     1     1      0
                                              8 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     607
                                             55 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    3547
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    3302
                                             56 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     155
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Wr_USART_String                                      4     2      2     264
                                              4 COMMON     4     2      2
                           _Wr_USART
 ---------------------------------------------------------------------------------
 (2) _Wr_USART                                             1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_In                                            18    14      4    1118
                                              8 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     805
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _LCD_move_cursor                                      3     2      1     589
                                              7 COMMON     3     2      1
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _LCD_data_string                                      7     5      2     589
                                              7 COMMON     2     0      2
                                              0 BANK0      5     5      0
                           _LCD_data
 ---------------------------------------------------------------------------------
 (2) _LCD_data                                             3     3      0     279
                                              4 COMMON     3     3      0
                          _LCD_datos
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     279
                                              7 COMMON     2     2      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _Clear                                                0     0      0     279
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              3     3      0     279
                                              4 COMMON     3     3      0
                          _LCD_datos
 ---------------------------------------------------------------------------------
 (3) _LCD_datos                                            1     1      0     248
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADCval                                               3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
                           _Rd_USART
 ---------------------------------------------------------------------------------
 (6) _Rd_USART                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADCval
   _Clear
     _LCD_cmd
       _LCD_datos
   _LCD_Init
     _LCD_cmd
       _LCD_datos
   _LCD_data_string
     _LCD_data
       _LCD_datos
   _LCD_move_cursor
     _LCD_cmd
       _LCD_datos
   _USART_In
     ___aldiv
   _Wr_USART
   _Wr_USART_String
     _Wr_USART
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _val
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl

 _ISR (ROOT)
   _Rd_USART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AC       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     18      36       7       67.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60     1B      1B       9       28.1%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AC      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 09 21:46:55 2021

                       _d 000A                         pc 0002                        l80 0037  
                      l77 001E              ___awdiv@sign 0006                        _v1 0004  
                      _v2 0000                        fsr 0004       ___wmul@multiplicand 0005  
     __Umul8_16@word_mpld 0002                       l200 0034                       l201 0041  
                     l202 004E                       l130 0023                       l211 00FB  
                     l203 005B                       l204 0068                       l140 0021  
                     l124 002B                       l213 00F9                       l205 0075  
                     l141 0027                       l133 0009                       l206 0082  
                     l142 0028                       l134 000C                       l207 008F  
                     l143 002E                       l135 0012                       l127 0023  
                     l208 009C                       l144 002F                       l136 0013  
                     l209 00A9                       l145 0035                       l137 0019  
                     l161 0019                       l241 00DC                       l146 0036  
                     l138 001A                       l147 003C                       l139 0020  
                     l155 0045                       l164 000C                       l244 0001  
                     l500 0067                       l149 003D                       l253 002A  
                     l430 0381                       l191 0012                       l247 000B  
                     l423 032F                       l361 020C                       l195 0002  
                     l196 00EC                       l460 0790                       l197 000D  
                     l198 001A                       l630 0058                       l390 00F2  
                     l199 0027                       l720 0055                       l464 000C  
                     l368 0362                       l529 0014                       l617 0068  
                     l650 001E                       l466 0024                       l634 00BF  
                     l539 009C                       l651 003A                       l635 0022  
                     l652 004F                       l812 01D5                       l804 0287  
                     l645 00B0                       l822 021B                       l638 0080  
                     l655 001E                       l663 000A                       l816 01F9  
                     l833 027B                       l825 0259                       l681 00BC  
                     l658 008A                       l834 0287                       l674 0066  
                     l682 002E                       l906 0016                       l770 0045  
                     l659 00A3                       l667 007B                       l931 0024  
                     l692 00AF                       l908 0028                       l780 0039  
                     l837 004F                       l677 007B                       l933 00BB  
                     l685 007F                       l791 0063                       l951 0011  
                     l944 0085                       l945 0091                       l937 0069  
                     l795 010A                       l797 00E1                       l893 02CC  
                     l887 0360                       l899 0354                       _RD0 0040  
                     _RD1 0041                       _RE0 0048                       _RD2 0042  
                     _RE1 0049                       _RD3 0043                       _RE2 004A  
                     _RD4 0044                       _RD5 0045                       _RD6 0046  
                     _RD7 0047                       _ISR 0000                       _val 0000  
                     fsr0 0004                       indf 0000              ___awmod@sign 0009  
            ___flmul@aexp 0018              ___flmul@bexp 001D              ___flmul@sign 0017  
            ___flmul@temp 0022              ___flmul@prod 001E                      ?_ISR 0000  
         __end_of_LCD_cmd 0024              ___fltol@exp1 0041                      l3011 0001  
                    l3013 0007                      l4001 001F                      l4011 0010  
                    l4003 0024                      l4021 0033                      l4013 0017  
                    l4101 004F                      l4023 003A                      l4015 001E  
                    l4007 0001                      l4111 000A                      l4031 000C  
                    l4103 0054                      l4017 0025                      l4009 0005  
                    l4201 006D                      l4121 002D                      l4113 000D  
                    l4041 001D                      l4033 000E                      l4025 0000  
                    l5001 00F6                      l4019 002C                      l4211 0081  
                    l4203 0071                      l4123 0033                      l4115 0014  
                    l4107 0000                      l4051 0035                      l4043 0023  
                    l4035 0012                      l4027 0003                      l5011 014A  
                    l5003 011C                      l3501 002D                      l4301 01FD  
                    l4221 0095                      l4213 0085                      l4205 0075  
                    l4125 0034                      l4117 0018                      l4109 0004  
                    l4141 0014                      l4133 0000                      l4053 0046  
                    l4045 0026                      l4061 005A                      l4037 0017  
                    l4029 0007                      l5101 0243                      l5021 019A  
                    l5013 0152                      l5005 0132                      l3511 006E  
                    l3503 003A                      l4303 0200                      l4311 020D  
                    l4231 00A9                      l4223 0099                      l4215 0089  
                    l4207 0079                      l4127 003B                      l4119 001C  
                    l4143 0018                      l4135 0006                      l4151 0035  
                    l4063 005F                      l4055 004C                      l4047 002D  
                    l4039 001B                      l4071 0001                      l5111 0278  
                    l5031 0208                      l5023 01C1                      l5015 0179  
                    l5007 0138                      _ADC1 0000                      _ADC2 0009  
                    l3521 00AF                      l3513 007B                      l3505 0047  
                    l3441 0017                      l4321 0220                      l4313 020E  
                    l4305 0202                      l4241 00EE                      l4225 009D  
                    l4217 008D                      l4209 007D                      l4233 00AD  
                    l4161 0011                      l4401 00C3                      l4129 0041  
                    l4145 0022                      l4137 0009                      l4065 0064  
                    l4057 004D                      l4049 0031                      l4081 0015  
                    l4073 0005                      l5201 064D                      l5121 0346  
                    l5113 027F                      l5105 024A                      l5041 02A3  
                    l5033 020C                      l5025 01CC                      l5017 0192  
                    l5009 013C                      l3531 00ED                      l3523 00B6  
                    l3515 0088                      l3507 0054                      l3443 001A  
                    l4331 025E                      l4323 0225                      l4315 0212  
                    l4307 0207                      l4243 00F0                      l4251 0102  
                    l4235 00AE                      l4227 00A1                      l4219 0091  
                    l4171 0025                      l4163 0012                      l4155 0000  
                    l4411 0140                      l4403 00EF                      l4147 0028  
                    l4139 0010                      l4059 0054                      l4091 002D  
                    l4083 001B                      l4075 000A                      l5211 067E  
                    l5203 0655                      l5131 0377                      l5123 034C  
                    l5115 02DC                      l5107 0259                      l5051 0333  
                    l5043 02AC                      l5035 0212                      l5027 01D2  
                    l5019 0196                      l3541 00FA                      l3533 00F1  
                    l3517 0095                      l3509 0061                      l4501 0001  
                    l3445 001D                      l3437 0000                      l4341 0275  
                    l4333 0263                      l4325 0233                      l4317 0218  
                    l4309 0209                      l4261 0133                      l4253 010E  
                    l4245 00F4                      l4237 00C5                      l4229 00A5  
                    l4181 003B                      l4165 0017                      l4173 0027  
                    l4157 0007                      l4421 01C0                      l4413 015D  
                    l4405 010B                      l4149 002F                      l4093 0037  
                    l4085 001E                      l4077 000C                      l4069 0000  
                    l5221 06B4                      l5213 0689                      l5205 065B  
                    l5141 03C8                      l5133 0392                      l5125 0352  
                    l5117 031B                      l5109 026D                      l5061 0088  
                    l5053 0000                      l5045 02D5                      l5037 0231  
                    l5029 01E5                      l5301 00C9                      l3447 0000  
                    l3535 00F4                      l3519 00A2                      l4511 001A  
                    l4503 0005                      l3439 0016                      l4343 0277  
                    l4335 026B                      l4327 0237                      l4271 014A  
                    l4263 0137                      l4255 0113                      l4247 00F5  
                    l4239 00E5                      l4191 0050                      l4183 0041  
                    l4175 002F                      l4167 001C                      l4159 000D  
                    l4431 0278                      l4423 01ED                      l4415 016D  
                    l4407 0127                      l4351 0007                      l4095 003D  
                    l4087 0025                      l4079 0010                      l5231 06EA  
                    l5223 06BA                      l5215 069D                      l5207 0671  
                    l5143 0423                      l5151 0530                      l5135 0397  
                    l5127 035F                      l5119 0339                      l5071 0102  
                    l5063 0091                      l5055 0029                      l5039 027C  
                    l5047 02DD                      l5303 00D1                      l3449 000E  
                    l3529 00B8                      l4505 000B                      l3553 0000  
                    l4345 0282                      l4337 0270                      l4329 0255  
                    l4281 01AD                      l4273 014B                      l4265 013B  
                    l4249 00FE                      l4193 0058                      l4185 0045  
                    l4177 0034                      l4169 0024                      l4601 0046  
                    l4441 029D                      l4433 0281                      l4425 01FD  
                    l4417 018A                      l4409 0130                      l4361 001C  
                    l4353 000D                      l4521 0118                      l4513 0003  
                    l4097 0044                      l4089 0029                      l5233 0755  
                    l5225 06C6                      l5217 06A1                      l5209 067A  
                    l5153 0538                      l5145 0480                      l5137 03A4  
                    l5129 036E                      l5065 0099                      l5057 0050  
                    l5073 010B                      l5049 02EC                      l5161 0558  
                    l5241 078A                      l5305 00DA                      l4507 000E  
                    l5251 0001                      l3555 0002                      l4347 0286  
                    l4339 0271                      l4291 01E2                      l4283 01B3  
                    l4275 0154                      l4267 0144                      l4259 011C  
                    l4195 0059                      l4187 0046                      l4179 003A  
                    l4611 0071                      l4603 004F                      l4451 02B5  
                    l4443 02A6                      l4435 028F                      l4427 022A  
                    l4419 01A3                      l4371 0039                      l4363 0024  
                    l4355 0011                      l4523 011E                      l4515 0009  
                    l4099 004A                      l4531 0003                      l5227 06D8  
                    l5219 06A7                      l5171 058E                      l5163 0573  
                    l5155 0545                      l5147 04BF                      l5139 03AA  
                    l5091 01E6                      l5075 0140                      l5067 00B7  
                    l5059 005F                      l5307 00E1                      l3493 0001  
                    l4509 0017                      l5261 0013                      l5253 0006  
                    l3557 0013                      l4285 01B8                      l4269 0146  
                    l4277 0159                      l4189 004B                      l4197 005B  
                    l4701 0000                      l4621 008B                      l4613 0079  
                    l4605 0058                      l4461 02E4                      l4453 02C9  
                    l4437 0298                      l4445 02AC                      l4429 0250  
                    l4381 0050                      l4373 003D                      l4365 0026  
                    l4357 0012                      l4349 0000                      l4533 0007  
                    l5229 06E3                      l5237 0763                      l5173 0594  
                    l5165 057B                      l5157 054B                      l5149 04D3  
                    l5093 0215                      l5085 0191                      l5077 018D  
                    l5309 00EA                      l3495 0008                      l5263 0000  
                    l5255 0006                      l3559 0017                      l4295 01EB  
                    l4279 016F                      l4287 01C7                      l4199 0069  
                    l4711 002F                      l4703 0012                      l4631 00B4  
                    l4615 0083                      l4623 009D                      l4607 0066  
                    l4471 031F                      l4463 02E8                      l4447 02B0  
                    l4439 029C                      l4383 0052                      l4375 003E  
                    l4367 002E                      l4359 0017                      l4527 01C9  
                    l4543 00FA                      l4535 0009                      l5191 0604  
                    l5183 05A4                      l5175 059C                      l5167 057F  
                    l5159 0551                      l5095 021B                      l5079 018F  
                    l5239 0773                      l5271 0000                      l3497 0013  
                    l5265 0005                      l5257 000D                      l4801 000A  
                    l4297 01F4                      l4289 01DD                      l4713 0041  
                    l4705 0015                      l4721 005F                      l4641 0016  
                    l4609 0070                      l4481 034C                      l4473 032E  
                    l4465 0301                      l4457 02D1                      l4449 02B1  
                    l4393 006D                      l4385 005A                      l4377 0043  
                    l4369 0033                      l4561 02A7                      l4545 0101  
                    l4537 0010                      l4553 01B6                      l5193 060F  
                    l5177 05A2                      l5169 0583                      l5097 022D  
                    l5089 01D8                      l5361 010E                      l5281 0023  
                    l5273 0005                      l5363 00C0                      l3499 0020  
                    l4491 0005                      l5267 0021                      l5259 0013  
                    l4731 0018                      l4299 01F8                      l4811 0016  
                    l4715 004F                      l4707 0022                      l4651 003C  
                    l4635 0000                      l4483 034D                      l4475 0338  
                    l4459 02D6                      l4467 0307                      l4395 007D  
                    l4387 005F                      l4379 0048                      l4571 0001  
                    l4563 02AE                      l4555 01BD                      l5195 0622  
                    l5187 05EB                      l5099 0236                      l5291 0082  
                    l5283 002E                      l5275 000A                      l4493 000B  
                    l5269 0029                      l4741 003A                      l4733 0023  
                    l4725 0000                      l4821 003A                      l4813 002B  
                    l4805 0000                      l4717 0050                      l4709 0026  
                    l4901 00A9                      l4661 0070                      l4653 003E  
                    l4637 000D                      l4629 00A4                      l4485 0358  
                    l4477 033A                      l4469 0314                      l4397 008A  
                    l4389 0064                      l4573 0002                      l4549 0189  
                    l5197 0633                      l5189 05F9                      l5293 00AF  
                    l5285 003B                      l5277 0019                      l4495 000E  
                    l4751 0074                      l4743 0047                      l4735 0027  
                    l4727 0001                      l4911 0000                      l4815 002C  
                    l4807 000D                      l4719 0059                      l4903 00AE  
                    l4663 0071                      l4655 0047                      l4647 0023  
                    l4583 0000                      l4479 0348                      l4399 00A7  
                    l4575 0008                      l4567 0336                      l5199 063B  
                    l5295 00B8                      l5287 005B                      l5279 001E  
                    l4497 0017                      l4489 0001                      l4761 0094  
                    l4753 0075                      l4745 004B                      l4737 002F  
                    l4729 0007                      l4921 00CA                      l4913 005B  
                    l4817 0034                      l4841 0000                      l4905 00B2  
                    l4681 00A5                      l4673 008C                      l4665 007A  
                    l4657 0050                      l4649 002B                      l4585 0013  
                    l4577 000E                      l5297 00BE                      l5289 0079  
                    l4499 001A                      l4755 007E                      l4747 0054  
                    l4739 0037                      l4931 00D6                      l4923 00CE  
                    l4915 0064                      l4771 004C                      l4835 005B  
                    l4827 0042                      l4819 0036                      l4851 0030  
                    l4843 000A                      l4691 0006                      l4907 00B3  
                    l4683 00B5                      l4667 0084                      l4675 009E  
                    l4659 0062                      l4595 002F                      l4579 0010  
                    l5299 00C4                      l4941 000D                      l4749 0066  
                    l4757 0084                      l4933 00D9                      l4925 00CF  
                    l4917 00BD                      l4773 004E                      l4765 0000  
                    l4781 0032                      l4861 0000                      l4837 006B  
                    l4829 0054                      l4853 003E                      l4845 000D  
                    l4693 0013                      l4597 0035                      l4589 001C  
                    l4951 0000                      l4943 0013                      l4759 0089  
                    l4927 00D2                      l4919 00C0                      l4767 0016  
                    l4791 00A0                      l4783 003A                      l4863 0004  
                    l4839 0070                      l4855 0047                      l4847 001A  
                    l4695 001A                      l4687 0000                      l4871 000C  
                    l4599 0044                      l4945 0019                      l4937 0000  
                    l4929 00D5                      l4769 0032                      l4793 00A2  
                    l4785 003E                      l4777 0000                      l4849 001E  
                    l4857 004D                      l4697 0020                      l4689 0002  
                    l4881 003A                      l4873 001C                      l3993 0003  
                    l4961 0014                      l4953 0003                      l4947 001F  
                    l4939 0004                      l4787 0062                      l4779 0016  
                    l4891 0070                      l4883 0047                      l4875 002C  
                    l4867 0003                      l3995 0005                      l4971 0042  
                    l4963 0021                      l4949 0025                      l4789 0066  
                    l4797 0000                      l4893 007B                      l4885 004E  
                    l4869 0008                      l3997 000C                      l4981 0096  
                    l4973 0057                      l4965 0028                      l4957 0003  
                    l4799 0008                      l4895 007F                      l4887 0052  
                    l4879 0035                      l3999 0010                      l4991 00D4  
                    l4983 0099                      l4975 0072                      l4967 002C  
                    l4959 000E                      l4897 0089                      l4889 0060  
                    l4993 00DA                      l4985 009F                      l4977 0078  
                    l4969 003E                      l4899 0093                      l4987 00A4  
                    l4995 00EC                      l4979 0088                      l4997 00F0  
                    l4989 00B9                      ?_val 0024                      STR_1 00A0  
                    STR_2 00B5                      STR_3 00C8                      _BRGH 04C2  
                    _CREN 00C4                      u4410 0007                      u4411 0006  
                    u7000 01E2                      u7001 01E1                      u7100 0237  
                    u7020 01F8                      u7101 0236                      u7021 01F7  
                    u7110 0246                      u7030 01FD                      u6310 0024  
                    u7031 01FC                      u7015 01ED                      u6311 0023  
                    u6320 0005                      u7120 0255                      u7040 0207  
                    u8000 0080                      u7200 001C                      u6400 0007  
                    u6321 0004                      u7121 0254                      u7041 0206  
                    u8001 007F                      u6305 0017                      u7201 001B  
                    u6401 0006                      u6330 0010                      u7130 025E  
                    u7050 020D                      u8010 0084                      u7210 003D  
                    u6410 0012                      u6331 000F                      u7131 025D  
                    u7115 0241                      u7051 020C                      u8011 0083  
                    u7211 003C                      u6411 0011                      u6340 0017  
                    u7140 0263                      u7060 0212                      u8020 008B  
                    u7220 0043                      u6420 0023                      u6500 0005  
                    _RCIF 0065                      u6341 0016                      u7141 0262  
                    u7061 0211                      u8021 008A                      u7221 0042  
                    u6421 0022                      u6501 0004                      u6350 001E  
                    u7150 0270                      u7070 0218                      u8110 0020  
                    u7230 0048                      u6510 0010                      u6351 001D  
                    u7151 026F                      u7071 0217                      u8111 001F  
                    u7311 014F                      u7231 0047                      u6511 000F  
                    u6360 0025                      u8200 0018                      u7160 0275  
                    u7080 021F                      u8120 0012                      u8040 009D  
                    u7312 0156                      u7240 005F                      u6440 0035  
                    u6520 001B                      u9000 022D                      u6361 0024  
                    u8201 0017                      u7161 0274                      u7081 021E  
                    u8121 0011                      u8105 0014                      u8041 009C  
                    u7401 026A                      u7321 017C                      u7313 015D  
                    u7305 0129                      u7241 005E                      u6441 0034  
                    u6521 001A                      u9001 022C                      u5650 00F8  
                    u6370 002C                      u8210 0037                      u7170 0286  
                    u7090 0225                      u8050 00A4                      u6290 0010  
                    u7402 0271                      u7322 0183                      u7250 0064  
                    u6610 001C                      u9010 0259                      u5651 00F7  
                    u6371 002B                      u8211 0036                      u7171 0285  
                    u7091 0224                      u8051 00A3                      u8035 008D  
                    u6291 000F                      u7403 0278                      u7323 018A  
                    u7251 0063                      u6611 001B                      u6435 0027  
                    u9011 0258                      u6380 0033                      u5660 002A  
                    u8300 0032                      u8140 0026                      u7500 02E8  
                    u7180 0011                      u6460 0046                      u6540 002D  
                    u9100 0537                      u9020 026D                      u6381 0032  
                    u5661 0029                      u8301 0031                      u8141 0025  
                    u7501 02E7                      u7341 01B2                      u7261 00B5  
                    u7181 0010                      u6605 000E                      u6461 0045  
                    u6541 002C                      u9101 0536                      u9021 026C  
                    u6390 003A                      u8230 004B                      u8310 004C  
                    u8070 00B5                      u7510 02F7                      u7430 029C  
                    u7342 01B9                      u7262 00BC                      u7190 0017  
                    u6630 002D                      u6710 0035                      u6550 0037  
                    u9110 0557                      u6391 0039                      u8231 004A  
                    u8311 004B                      u8135 0017                      u8071 00B4  
                    u7431 029B                      u7415 027A                      u7351 01DF  
                    u7343 01C0                      u7335 018C                      u7271 00D1  
                    u7263 00C3                      u7191 0016                      u6631 002C  
                    u6711 0034                      u6455 0036                      u6551 0036  
                    u6535 001F                      u9111 0556                      u9015 0255  
                    u8320 0016                      u6800 006D                      u6720 0011  
                    u8400 000D                      u8160 0041                      u8080 0006  
                    u7520 0314                      u7352 01E6                      u7272 00D8  
                    u6480 005A                      u9200 063B                      u9120 057F  
                    u9040 0338                      i1l89 0026                      u8225 003C  
                    u8321 0015                      u6801 006C                      u6721 0010  
                    u8401 000C                      u8161 0040                      u8081 0005  
                    u8065 00A7                      u7521 0313                      u7425 0291  
                    u7361 020C                      u7353 01ED                      u7281 00FD  
                    u7273 00DF                      u6625 001D                      u6705 0029  
                    u6481 0059                      u6465 0042                      u9201 063A  
                    u9121 057E                      u9041 0337                      u8250 0066  
                    u8330 0032                      u6810 00C5                      u6730 0017  
                    u8410 0024                      u7530 032E                      u7450 02B0  
                    u7370 0236                      u7362 0213                      u7282 0104  
                    u6650 0041                      u6490 005F                      u6570 004A  
                    u9210 064D                      u9130 0594                      u9050 035F  
                    u8251 0065                      u8315 0048                      u8331 0031  
                    u6811 00C4                      u6731 0016                      u8155 0028  
                    u7531 032D                      u7515 02F2                      u7451 02AF  
                    u7363 021A                      u7291 0119                      u7283 010B  
                    u6651 0040                      u6635 0029                      u6491 005E  
                    u6475 004E                      u6571 0049                      u6555 0033  
                    u9211 064C                      u9131 0593                      u9051 035E  
                    u9035 0284                      u8340 003E                      u6820 00D0  
                    u6740 001C                      u8420 003A                      u8180 005F  
                    u8500 000A                      u7540 034C                      u7460 02B5  
                    u7292 0120                      u6660 0006                      u6580 004F  
                    u9300 078A                      u9220 065B                      u9140 059C  
                    u9060 036E                      u8245 004D                      u8341 003D  
                    u6901 0125                      u6821 00CE                      u6741 001B  
                    u8421 0039                      u8181 005E                      u8165 003D  
                    u8501 0009                      u7541 034B                      u7525 0310  
                    u7461 02B4                      u7445 029F                      u7381 0242  
                    u7293 0127                      u6645 0035                      u6661 0005  
                    u7605 013B                      u6581 004E                      u6565 003E  
                    u9301 0787                      u9221 065A                      u9141 059B  
                    u9061 036D                      u9310 0006                      u8270 0084  
                    u8190 0007                      u6910 0137                      u6902 012C  
                    u6830 00D1                      u6750 003A                      u8430 0041  
                    u7470 02C9                      u7390 025E                      u7382 0249  
                    u6590 000A                      u7550 0009                      u7630 0007  
                    u9230 0671                      u9070 0397                      u9311 0005  
                    u8271 0083                      u8255 0062                      u8191 0006  
                    u8351 004D                      u6911 0136                      u6903 0133  
                    u6815 00C1                      u6751 0039                      u8431 0040  
                    u8415 001F                      u8175 0051                      u8095 000D  
                    u7535 032A                      u7471 02C8                      u7383 0250  
                    u7375 0231                      u6591 0009                      u7615 0188  
                    u7551 0008                      u7631 0006                      u9231 0670  
                    u9071 0396                      u9055 035B                      u9320 0013  
                    u8280 0089                      u8360 0066                      u8352 004E  
                    u6920 013B                      u6840 00E5                      u6760 0045  
                    u8520 001E                      u8600 004D                      u7480 02D0  
                    u6680 0018                      u7800 0008                      u7720 01BD  
                    u7640 0010                      u9240 0689                      u9160 05EA  
                    u9321 0012                      u8281 0088                      u8265 0076  
                    u8361 0065                      u8353 0053                      u6921 013A  
                    u6841 00E4                      u6761 0044                      u8521 001D  
                    u8601 004C                      u7481 02CF                      u6681 0017  
                    u7625 01D4                      u7801 0007                      u7721 01BC  
                    u7705 0150                      u7641 000F                      u9241 0688  
                    u9161 05E9                      u9065 036A                      u9330 000F  
                    u8290 0016                      u8354 0054                      u6930 014A  
                    u6850 00F4                      u6770 004B                      u8450 0053  
                    u8530 0030                      u7490 02D6                      u6690 0022  
                    u7810 000E                      u9250 06A7                      u9170 05F9  
                    u8291 0015                      u8371 0075                      u8355 0059  
                    u6931 0149                      u6851 00F3                      u6771 004A  
                    u8451 0052                      u8531 002F                      u8515 000F  
                    u7491 02D5                      u7395 0259                      u6691 0021  
                    u6675 000A                      u7811 000D                      u7715 018C  
                    u9251 06A6                      u9235 066D                      u9171 05F8  
                    u9155 05A9                      u9340 0033                      u8700 0010  
                    u8380 00A0                      u8372 0076                      u8356 005A  
                    u6780 0050                      u8460 005A                      u8620 006F  
                    u7820 0013                      u9260 06C6                      u9180 0604  
                    u8381 009F                      u8373 007B                      u6781 004F  
                    u8461 0059                      u8445 0043                      u8621 006E  
                    u7821 0012                      u7565 0026                      u9261 06C5  
                    u9245 0685                      u9181 0603                      u9165 05E6  
                    u9085 0428                      u9350 0045                      u8710 0029  
                    u8374 007C                      u8390 0008                      u6950 016F  
                    u6870 010A                      u6790 0069                      u8550 004D  
                    u7910 009C                      u7830 002D                      u7590 011E  
                    u9270 06D8                      u9190 0622                      u9407 0012  
                    u9351 0044                      u8375 0081                      u8391 0007  
                    u6951 016E                      u6871 0109                      u6791 0068  
                    u8551 004C                      u8535 002C                      u8615 0061  
                    u7911 009B                      u7831 002C                      u6695 001E  
                    u7591 011D                      u7575 0082                      u7735 01DF  
                    u7655 0032                      u9271 06D7                      u9191 0621  
                    u9095 04D8                      u8376 0082                      u6880 010E  
                    u8480 006B                      u8640 007F                      u8560 0008  
                    u7920 00A3                      u7760 02AE                      u7680 0101  
                    u8800 0088                      u9417 001E                      u8721 003B  
                    u8705 000B                      u8385 009C                      u6961 0186  
                    u6953 016B                      u6945 014D                      u6881 010D  
                    u6865 00F7                      u8481 006A                      u8545 003F  
                    u8641 007E                      u8561 0007                      u7921 00A2  
                    u7905 008C                      u7585 00D7                      u7761 02AD  
                    u7745 021B                      u7681 0100                      u7665 006E  
                    u9185 0600                      u8801 0087                      u8730 0064  
                    u8722 003C                      u6970 019A                      u6962 0187  
                    u6890 0113                      u8490 0070                      u8650 0085  
                    u8570 000C                      u7850 0066                      u9290 0773  
                    u8810 0096                      u9427 00EF                      u8731 0063  
                    u8723 0041                      u8715 0024                      u6971 019B  
                    u6963 018C                      u6891 0112                      u8491 006F  
                    u8475 005D                      u8651 0084                      u8635 0074  
                    u8571 000B                      u7851 0065                      u7755 0266  
                    u7675 00B9                      u9291 0772                      u9195 061E  
                    u8811 0095                      u8740 0072                      u8724 0042  
                    u6980 01B8                      u6972 01A0                      u6964 018D  
                    u8660 0089                      u8580 002C                      u7940 00B4  
                    u8900 02EC                      u8820 00EB                      u8725 0047  
                    u6981 01B7                      u6973 01A1                      u6965 0192  
                    u8661 0088                      u8581 002B                      u7941 00B3  
                    u7845 0051                      u9285 06FB                      u8901 02EB  
                    u8821 00EA                      u8750 008B                      u8726 0048  
                    u6990 01DD                      u6966 0193                      u8670 009E  
                    u7950 000D                      u7870 007F                      u8910 0000  
                    u8830 0132                      u6991 01DC                      u7951 000C  
                    u7935 00A6                      u7871 007E                      u7855 0062  
                    u7775 02C1                      u7695 0114                      u8911 0343  
                    u8831 012F                      u9367 00F2                      u8680 00AE  
                    u7960 0021                      u7880 0083                      u8920 0029  
                    u8840 0138                      u9377 0012                      u8761 009D  
                    u8745 006D                      u8681 00AD                      u7961 0020  
                    u7881 0082                      u7865 0072                      u7785 02FD  
                    u8921 0028                      u8905 02E8                      u8841 0137  
                    u8770 00CA                      u8762 009E                      u8690 00B2  
                    u7890 008A                      u8930 0050                      u8850 0179  
                    u9387 001E                      u8771 00C9                      u8763 00A3  
                    u8755 0086                      u8691 00B1                      u8675 0099  
                    u8595 003F                      u7891 0089                      u7795 0339  
                    u8931 004F                      u8915 033E                      u8851 0178  
                    u8764 00A4                      u7980 0062                      u8940 005F  
                    u8860 01C1                      u8780 0014                      u9397 0008  
                    u8765 00A9                      u7981 0061                      u8941 005E  
                    u8861 01C0                      u8781 0013                      u8766 00AA  
                    u8950 0088                      u8870 020C                      u8790 003E  
                    u7975 0049                      u8951 0087                      u8871 020B  
                    u8791 003D                      u8880 02A3                      u7985 005E  
                    u8945 005B                      u8881 02A2                      u8970 01D7  
                    u8890 02D5                      u7995 0073                      u8971 01D6  
                    u8891 02D4                      u8980 01E6                      u8981 01E5  
                    u8965 0196                      u8990 0215                      u8991 0214  
                    u8975 01D3                      _SPEN 00C7                      _TRMT 04C1  
                    _TXEN 04C5                      _SYNC 04C4                      _main 0000  
                    btemp 007E          __end_of_ADC_Init 0013                      val@b 002C  
                    start 0000* __size_of_Wr_USART_String 002B        __size_of_LCD_datos 003E  
            _sprintf$1162 0000                     ??_ISR 0000                     ??_val 0028  
        __end_of_LCD_Init 002C          __end_of_LCD_data 0024             ___fltol@sign1 0040  
         __end_of___aldiv 009D           __end_of___fladd 0288                     ?_main 0000  
         __end_of___awdiv 0069           __end_of___flneg 000B           __end_of___awmod 0059  
         __end_of___flmul 0361           __end_of___flsub 0050           __end_of___fltol 007C  
                   _ANSEL 0188           __end_of___lldiv 0068           ___awdiv@divisor 0000  
         __end_of___llmod 0056           __end_of___lwdiv 0046                     i1l256 0000  
         __end_of___lwmod 003A                     i1l259 0007           ___awdiv@counter 0005  
                   _RCREG 001A                     _SPBRG 0099                     _PORTA 0005  
                   _PORTD 0008                     _PORTE 0009                     _TRISA 0085  
                   _TRISD 0088                     _TRISE 0089                     _TXREG 0019  
                   _Clear 0000           __end_of_dpowers 00A0                     _scale 0000  
         __end_of_isdigit 0012                     _setup 0000          __end_of_USART_In 00DD  
                   pclath 000A                     status 0003                     wtemp0 007E  
         __end_of_sprintf 0791         ??_LCD_data_string 0000           __initialization 0000  
        __end_of_Rd_USART 0008              __end_of_main 00FC                    ??_main 004C  
    __size_of__tdiv_to_l_ 00BD                 ??_LCD_cmd 0004          __end_of_Wr_USART 000C  
                  ?_Clear 0000         __end_of_LCD_datos 003E                    _ADCON0 001F  
                  _ADCON1 009F          ___llmod@dividend 000C                    ?_scale 0024  
                  _ADRESH 001E          ___awdiv@dividend 0002                    ?_setup 0000  
                  _ADCval 0000                    _ANSELH 0189                    i1l3921 0000  
                  i1l3931 001C                    i1l3923 0006                    i1l3933 0022  
                  i1l3925 0007                    i1l3927 000F                    i1l3929 0015  
                  i1l3875 0000                    i1l3877 0006                    u625_20 0006  
                  u625_21 0005                    u626_20 0006                    u626_21 0005  
                  u627_20 0015                    u627_21 0014                    u628_20 0022  
                  u628_21 0021          __end_of___xxtofl 00BC          __end_of__powers_ 0044  
                  ___flge 0000                    ___fleq 0000                 ??___aldiv 0003  
               ??___fladd 0040                    ___wmul 0000                 ??___awdiv 0004  
               ??___flneg 0007                 ??___awmod 0007                 ??___flmul 0012  
               ??___flsub 000A                 ??___fltol 003B                 ??___lldiv 0003  
               ??___llmod 0009                 ??___lwdiv 0009                 ??___lwmod 0007  
       ??_Wr_USART_String 0006                    _fround 0000          ___awdiv@quotient 0007  
            LCD_data@data 0006           ___awmod@divisor 0003           ___awmod@counter 0008  
               ??_isdigit 0003        __size_of__Umul8_16 0029                 ?_ADC_Init 0000  
                  saved_w 007E                 ??_sprintf 0013                ___flge@ff1 0000  
              ___flge@ff2 0004              ___xxtofl@arg 0006              ___xxtofl@exp 0005  
            ___xxtofl@val 0003                ___fleq@ff1 0000                ___fleq@ff2 0004  
 __end_of__initialization 000D                 ?_LCD_Init 0000                ___flneg@f1 0003  
__size_of_LCD_move_cursor 001A                 ?_LCD_data 0000                ___fltol@f1 0037  
           __end_of_Clear 000D            __pcstackCOMMON 0000             __end_of_scale 0363  
           __end_of_setup 001F                 ?_USART_In 0008                __div_to_l_ 0000  
                 ??_Clear 0007                ??_ADC_Init 0003                   ADCval@x 0005  
         __div_to_l_@exp1 0009           __div_to_l_@cntr 0008                   ??_scale 0028  
               ?_Rd_USART 0000           __div_to_l_@quot 0004              sprintf@width 0007  
                 ??_setup 0003                   ?_ADCval 0000                __pbssBANK0 0000  
              __pbssBANK1 0000                ??_LCD_Init 0007                ??_LCD_data 0004  
           __div_to_l_@f1 0000             __div_to_l_@f2 0004         __end_of__Umul8_16 0029  
              __pmaintext 0000                 ?_Wr_USART 0000                   ?___flge 0000  
                 ?___fleq 0000                   ?___wmul 0003                __pintentry 0000  
                 ?_fround 0024                ??_USART_In 000C                   _LCD_cmd 0000  
               ?___xxtofl 0003           _LCD_data_string 0000                ??_Rd_USART 0000  
              __stringtab 0000           __size_of_ADCval 00FC                 USART_In@x 0018  
       __end_of__npowers_ 0078                _scale$1161 0032                ??_Wr_USART 0003  
       ??_LCD_move_cursor 0008                   ___aldiv 0000           __size_of___flge 00A4  
         __size_of___fleq 0050                   ___fladd 0000                   ___awdiv 0000  
                 ___flneg 0000                   ___awmod 0000                   ___flmul 0000  
                 ___flsub 0000                   ___fltol 0000                   ___lldiv 0000  
         __size_of___wmul 0025                   ___llmod 0000                   ___lwdiv 0000  
                 ___lwmod 0000                 _ANSELbits 0188           __size_of_fround 020D  
                 __ptext1 0000                   __ptext2 0000                   __ptext3 0000  
                 __ptext4 0000                   __ptext5 0000                   __ptext6 0000  
                 __ptext7 0000                   __ptext8 0000                   __ptext9 0000  
            __size_of_ISR 002D               ?__div_to_l_ 0000                   _dpowers 0078  
                 _isdigit 0000              __size_of_val 0038                ??___xxtofl 0000  
        ___awmod@dividend 0005          ___aldiv@dividend 0004                   _sprintf 0000  
                 clrloop0 0001      end_of_initialization 000D                 _LCD_datos 0000  
         _Wr_USART_String 0000           ___lldiv@divisor 0000           ___lldiv@counter 0008  
        ___aldiv@quotient 0006                   psplit$0 E0036            __tdiv_to_l_@f1 0000  
          __tdiv_to_l_@f2 0004             ??__tdiv_to_l_ 0003   __end_of_LCD_data_string 0046  
             ___fladd@grs 004B             ___xxtofl@sign 0004                 _TRISAbits 0085  
               _TRISCbits 0087                 _TRISDbits 0088                 _TRISEbits 0089  
       __size_of_ADC_Init 0013                ?_LCD_datos 0000            __end_of_ADCval 00FC  
             ___flmul@grs 0019          USART_In@baudrate 0008         __size_of_LCD_Init 002C  
     __size_of__div_to_l_ 00C0         __size_of_LCD_data 0024            __end_of___flge 00A4  
          __end_of___fleq 0050            __end_of___wmul 0025                LCD_cmd@cmd 0006  
       pnum$text2_split_1 0036            __end_of_fround 020D                LCD_datos@x 0003  
       __size_of_USART_In 00DD       start_initialization 0000               __end_of_ISR 002D  
     __end_of__tdiv_to_l_ 00BD               __end_of_val 0038   __end_of_Wr_USART_String 002B  
                ??_ADCval 0003         __size_of_Rd_USART 0008           ___llmod@divisor 0008  
         ___llmod@counter 0010                 Wr_USART@a 0003                  ??___flge 0003  
                ??___fleq 0003                  ??___wmul 0007                 __Umul8_16 0000  
       __size_of_Wr_USART 000C                  ??_fround 0028             sprintf@tmpval 0009  
        ?_LCD_data_string 0007                 ___fladd@a 003C                 ___fladd@b 0038  
              fround@prec 0037                  ?_LCD_cmd 0000                 ___flmul@a 000E  
               ___flmul@b 000A               __pbssCOMMON 0000                 ___flsub@a 0000  
               ___flsub@b 0004                 ___latbits 0002             __pcstackBANK0 0000  
           __pcstackBANK1 0000             __pcstackBANK3 0000          LCD_data_string@a 0007  
        LCD_data_string@i 0003         __size_of___xxtofl 00BC               ??_LCD_datos 0003  
         _LCD_move_cursor 0000               sprintf@flag 0005               sprintf@eexp 0011  
             sprintf@fval 0013               sprintf@prec 0018          ___lwdiv@dividend 0002  
                ?___aldiv 0000                  ?___fladd 0038                  ?___awdiv 0000  
                ?___flneg 0003                  ?___awmod 0003                  ?___flmul 000A  
                ?___flsub 0000                  ?___fltol 0037                  ?___lldiv 0000  
                ?___llmod 0008                 __npowers_ 0044                ?__Umul8_16 0003  
                ?___lwdiv 0000                  ?___lwmod 0003                 __pstrings 0000  
             __tdiv_to_l_ 0000              ??__div_to_l_ 0003                  ?_isdigit 0000  
                _ADC_Init 0000            __size_of_Clear 000D          ___lwdiv@quotient 0005  
                ?_sprintf 0008          ?_Wr_USART_String 0004            __size_of_scale 0363  
          __size_of_setup 001F           ___aldiv@divisor 0000         interrupt_function 0000  
         ___aldiv@counter 0004                  _LCD_Init 0000            ___wmul@product 0007  
                _LCD_data 0000                 clear_ram0 0000                  _PIE1bits 008C  
                _PIR1bits 000C        __end_of__div_to_l_ 00C0                  _USART_In 0000  
              _ADCON0bits 001F               __stringbase 000F         ___wmul@multiplier 0003  
        LCD_move_cursor@a 0008          LCD_move_cursor@b 0007          LCD_move_cursor@c 0009  
        __size_of_LCD_cmd 0024   __end_of_LCD_move_cursor 001A                  _Rd_USART 0000  
                _Wr_USART 0000               ??__Umul8_16 0005          __size_of___aldiv 009D  
        __size_of___fladd 0288          __size_of___awdiv 0069          __size_of___flneg 000B  
        __size_of___awmod 0059          __size_of___flmul 0361          __size_of___flsub 0050  
        __size_of___fltol 007C          __size_of___lldiv 0068          __size_of___llmod 0056  
        __size_of___lwdiv 0046          __size_of___lwmod 003A               _fround$1160 002F  
             _fround$1159 0033        __end_of__stringtab 0010               _isdigit$988 0003  
              _ANSELHbits 0189                sprintf@val 000D                  ___xxtofl 0000  
        __size_of_isdigit 0012           ___lwdiv@divisor 0000           ___lwdiv@counter 0004  
                __ptext10 0000                  __ptext11 0000                  __ptext20 0000  
                __ptext12 0000                  __ptext21 0000                  __ptext13 0000  
                __ptext30 0000                  __ptext22 0000                  __ptext14 0000  
                __ptext31 0000                  __ptext23 0000                  __ptext15 0000  
                __ptext32 0000                  __ptext24 0000                  __ptext16 0000  
                __ptext33 0000                  __ptext25 0000                  __ptext17 0000  
                __ptext34 0000                  __ptext26 0000                  __ptext18 0000  
                __ptext35 0000                  __ptext27 0000                  __ptext19 0000  
                __ptext36 0000                  __ptext28 0000                  __ptext37 0000  
                __ptext29 0000                  __ptext38 0000                  __ptext39 0000  
                __powers_ 0010                  _contador 0008          __size_of_sprintf 0000  
           __size_of_main 00FC                 pnum$text2 000E                  _valUSART 0000  
              _INTCONbits 000B          ?_LCD_move_cursor 0007                  isdigit@c 0004  
                scale@scl 0036                  intlevel1 0000*                sprintf@ap 0004  
        __tdiv_to_l_@exp1 000D          __tdiv_to_l_@cntr 000C                 sprintf@sp 0017  
        __tdiv_to_l_@quot 0008          ___lwmod@dividend 0005          ___lldiv@dividend 0004  
               stringcode 000A              ?__tdiv_to_l_ 0000    __Umul8_16@multiplicand 0003  
                sprintf@c 001A                  sprintf@f 0008          ___lldiv@quotient 0004  
         ___lwmod@divisor 0003           ___lwmod@counter 0008                  stringdir 000A  
                stringtab 0000              ___aldiv@sign 0005  __size_of_LCD_data_string 0046  
           ___fladd@signs 0048          Wr_USART_String@a 0004          Wr_USART_String@i 0007  
            ___fladd@aexp 0049              ___fladd@bexp 004A      __Umul8_16@multiplier 0004  
       __Umul8_16@product 0000  
