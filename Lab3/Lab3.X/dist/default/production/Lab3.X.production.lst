

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Feb 08 12:00:06 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000D                     	;# 
   219  000E                     	;# 
   220  000E                     	;# 
   221  000F                     	;# 
   222  0010                     	;# 
   223  0011                     	;# 
   224  0012                     	;# 
   225  0013                     	;# 
   226  0014                     	;# 
   227  0015                     	;# 
   228  0015                     	;# 
   229  0016                     	;# 
   230  0017                     	;# 
   231  0018                     	;# 
   232  0019                     	;# 
   233  001A                     	;# 
   234  001B                     	;# 
   235  001B                     	;# 
   236  001C                     	;# 
   237  001D                     	;# 
   238  001E                     	;# 
   239  001F                     	;# 
   240  0081                     	;# 
   241  0085                     	;# 
   242  0086                     	;# 
   243  0087                     	;# 
   244  0088                     	;# 
   245  0089                     	;# 
   246  008C                     	;# 
   247  008D                     	;# 
   248  008E                     	;# 
   249  008F                     	;# 
   250  0090                     	;# 
   251  0091                     	;# 
   252  0092                     	;# 
   253  0093                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0094                     	;# 
   257  0095                     	;# 
   258  0096                     	;# 
   259  0097                     	;# 
   260  0098                     	;# 
   261  0099                     	;# 
   262  009A                     	;# 
   263  009B                     	;# 
   264  009C                     	;# 
   265  009D                     	;# 
   266  009E                     	;# 
   267  009F                     	;# 
   268  0105                     	;# 
   269  0107                     	;# 
   270  0108                     	;# 
   271  0109                     	;# 
   272  010C                     	;# 
   273  010C                     	;# 
   274  010D                     	;# 
   275  010E                     	;# 
   276  010F                     	;# 
   277  0185                     	;# 
   278  0187                     	;# 
   279  0188                     	;# 
   280  0189                     	;# 
   281  018C                     	;# 
   282  018D                     	;# 
   283  0009                     _PORTEbits	set	9
   284  0008                     _PORTD	set	8
   285  0088                     _TRISD	set	136
   286  0089                     _TRISE	set	137
   287                           
   288                           	psect	strings
   289  0003                     __pstrings:
   290  0003                     stringtab:
   291  0003                     __stringtab:
   292  0003                     stringcode:	
   293                           ;	String table - string pointers are 1 byte each
   294                           
   295  0003                     stringdir:
   296  0003  3000               	movlw	high stringdir
   297  0004  008A               	movwf	10
   298  0005  0804               	movf	4,w
   299  0006  0A84               	incf	4,f
   300  0007  0782               	addwf	2,f
   301  0008                     __stringbase:
   302  0008  3400               	retlw	0
   303  0009                     __end_of__stringtab:
   304  0009                     STR_1:
   305  0009  3448               	retlw	72	;'H'
   306  000A  3465               	retlw	101	;'e'
   307  000B  346C               	retlw	108	;'l'
   308  000C  346C               	retlw	108	;'l'
   309  000D  346F               	retlw	111	;'o'
   310  000E  3420               	retlw	32	;' '
   311  000F  3457               	retlw	87	;'W'
   312  0010  346F               	retlw	111	;'o'
   313  0011  3472               	retlw	114	;'r'
   314  0012  346C               	retlw	108	;'l'
   315  0013  3464               	retlw	100	;'d'
   316  0014  3420               	retlw	32	;' '
   317  0015  3421               	retlw	33	;'!'
   318  0016  3421               	retlw	33	;'!'
   319  0017  3400               	retlw	0
   320  0018                     STR_2:
   321  0018  342A               	retlw	42	;'*'
   322  0019  342A               	retlw	42	;'*'
   323  001A  3420               	retlw	32	;' '
   324  001B  346D               	retlw	109	;'m'
   325  001C  3463               	retlw	99	;'c'
   326  001D  3475               	retlw	117	;'u'
   327  001E  3468               	retlw	104	;'h'
   328  001F  3471               	retlw	113	;'q'
   329  0020  3420               	retlw	32	;' '
   330  0021  342A               	retlw	42	;'*'
   331  0022  342A               	retlw	42	;'*'
   332  0023  3400               	retlw	0
   333                           
   334                           	psect	cinit
   335  07FC                     start_initialization:	
   336                           ; #config settings
   337                           
   338  07FC                     __initialization:
   339  07FC                     end_of_initialization:	
   340                           ;End of C runtime variable initialization code
   341                           
   342  07FC                     __end_of__initialization:
   343  07FC  0183               	clrf	3
   344  07FD  120A  118A  2F6D   	ljmp	_main	;jump to C main() function
   345                           
   346                           	psect	cstackCOMMON
   347  0070                     __pcstackCOMMON:
   348  0070                     ?_LCD_Init:
   349  0070                     ?_LCD_data_string:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ??_LCD_data_string:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_LCD_move_cursor:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ?_main:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_LCD_cmd:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ??_LCD_cmd:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     LCD_data_string@string:	
   368                           ; 1 bytes @ 0x0
   369                           
   370                           
   371                           ; 1 bytes @ 0x0
   372  0070                     	ds	1
   373  0071                     LCD_data_string@index:
   374                           
   375                           ; 2 bytes @ 0x1
   376  0071                     	ds	1
   377  0072                     LCD_cmd@cmd:
   378                           
   379                           ; 1 bytes @ 0x2
   380  0072                     	ds	1
   381  0073                     ??_LCD_Init:
   382  0073                     ??_LCD_move_cursor:	
   383                           ; 1 bytes @ 0x3
   384                           
   385                           
   386                           ; 1 bytes @ 0x3
   387  0073                     	ds	1
   388  0074                     LCD_move_cursor@line:
   389                           
   390                           ; 1 bytes @ 0x4
   391  0074                     	ds	1
   392  0075                     LCD_move_cursor@addr:
   393                           
   394                           ; 1 bytes @ 0x5
   395  0075                     	ds	1
   396  0076                     ??_main:
   397                           
   398                           	psect	maintext
   399  076D                     __pmaintext:	
   400                           ; 1 bytes @ 0x6
   401 ;;
   402 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   403 ;;
   404 ;; *************** function _main *****************
   405 ;; Defined at:
   406 ;;		line 43 in file "lab_3.c"
   407 ;; Parameters:    Size  Location     Type
   408 ;;		None
   409 ;; Auto vars:     Size  Location     Type
   410 ;;		None
   411 ;; Return value:  Size  Location     Type
   412 ;;                  1    wreg      void 
   413 ;; Registers used:
   414 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   415 ;; Tracked objects:
   416 ;;		On entry : B00/0
   417 ;;		On exit  : 0/0
   418 ;;		Unchanged: 0/0
   419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   420 ;;      Params:         0       0       0       0       0
   421 ;;      Locals:         0       0       0       0       0
   422 ;;      Temps:          0       0       0       0       0
   423 ;;      Totals:         0       0       0       0       0
   424 ;;Total ram usage:        0 bytes
   425 ;; Hardware stack levels required when called:    2
   426 ;; This function calls:
   427 ;;		_LCD_Init
   428 ;;		_LCD_data_string
   429 ;;		_LCD_move_cursor
   430 ;; This function is called by:
   431 ;;		Startup code after reset
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           
   436                           ;psect for function _main
   437  076D                     _main:
   438  076D                     l714:	
   439                           ;incstack = 0
   440                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   441                           
   442                           
   443                           ;lab_3.c: 45:     LCD_Init();
   444  076D  120A  118A  27A6  120A  118A  	fcall	_LCD_Init
   445  0772                     l716:
   446                           
   447                           ;lab_3.c: 46:     LCD_data_string("Hello World !!");
   448  0772  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   449  0773  120A  118A  27CC  120A  118A  	fcall	_LCD_data_string
   450  0778                     l718:
   451                           
   452                           ;lab_3.c: 47:     LCD_move_cursor(2);
   453  0778  3002               	movlw	2
   454  0779  120A  118A  2757  120A  118A  	fcall	_LCD_move_cursor
   455                           
   456                           ;lab_3.c: 48:     LCD_data_string ("** mcuhq **");
   457  077E  3010               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   458  077F  120A  118A  27CC  120A  118A  	fcall	_LCD_data_string
   459  0784                     l11:	
   460                           ;lab_3.c: 49:     while(1);
   461                           
   462  0784                     l12:
   463  0784  2F84               	goto	l11
   464  0785  120A  118A  2800   	ljmp	start
   465  0788                     __end_of_main:
   466                           
   467                           	psect	text1
   468  0757                     __ptext1:	
   469 ;; *************** function _LCD_move_cursor *****************
   470 ;; Defined at:
   471 ;;		line 50 in file "LCD.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;  line            1    wreg     unsigned char 
   474 ;; Auto vars:     Size  Location     Type
   475 ;;  line            1    4[COMMON] unsigned char 
   476 ;;  addr            1    5[COMMON] unsigned char 
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, status,2, status,0, pclath, cstack
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   486 ;;      Params:         0       0       0       0       0
   487 ;;      Locals:         2       0       0       0       0
   488 ;;      Temps:          1       0       0       0       0
   489 ;;      Totals:         3       0       0       0       0
   490 ;;Total ram usage:        3 bytes
   491 ;; Hardware stack levels used:    1
   492 ;; Hardware stack levels required when called:    1
   493 ;; This function calls:
   494 ;;		_LCD_cmd
   495 ;; This function is called by:
   496 ;;		_main
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           
   501                           ;psect for function _LCD_move_cursor
   502  0757                     _LCD_move_cursor:
   503                           
   504                           ;incstack = 0
   505                           ; Regs used in _LCD_move_cursor: [wreg+status,2+status,0+pclath+cstack]
   506                           ;LCD_move_cursor@line stored from wreg
   507  0757  00F4               	movwf	LCD_move_cursor@line
   508  0758                     l674:
   509                           
   510                           ;LCD.c: 51:     char addr;;LCD.c: 52:     if(line == 1)
   511  0758  0374               	decf	LCD_move_cursor@line,w
   512  0759  1D03               	btfss	3,2
   513  075A  2F5C               	goto	u31
   514  075B  2F5D               	goto	u30
   515  075C                     u31:
   516  075C  2F62               	goto	l678
   517  075D                     u30:
   518  075D                     l676:
   519                           
   520                           ;LCD.c: 53:         addr = 0x80;
   521  075D  3080               	movlw	128
   522  075E  00F3               	movwf	??_LCD_move_cursor
   523  075F  0873               	movf	??_LCD_move_cursor,w
   524  0760  00F5               	movwf	LCD_move_cursor@addr
   525  0761  2F66               	goto	l680
   526  0762                     l678:
   527                           
   528                           ;LCD.c: 55:         addr = 0xc0;
   529  0762  30C0               	movlw	192
   530  0763  00F3               	movwf	??_LCD_move_cursor
   531  0764  0873               	movf	??_LCD_move_cursor,w
   532  0765  00F5               	movwf	LCD_move_cursor@addr
   533  0766                     l680:
   534                           
   535                           ;LCD.c: 56:     LCD_cmd (addr);
   536  0766  0875               	movf	LCD_move_cursor@addr,w
   537  0767  120A  118A  2788  120A  118A  	fcall	_LCD_cmd
   538  076C                     l41:
   539  076C  0008               	return
   540  076D                     __end_of_LCD_move_cursor:
   541                           
   542                           	psect	text2
   543  07CC                     __ptext2:	
   544 ;; *************** function _LCD_data_string *****************
   545 ;; Defined at:
   546 ;;		line 41 in file "LCD.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;  string          1    wreg     PTR unsigned char 
   549 ;;		 -> STR_2(12), STR_1(15), 
   550 ;; Auto vars:     Size  Location     Type
   551 ;;  string          1    0[COMMON] PTR unsigned char 
   552 ;;		 -> STR_2(12), STR_1(15), 
   553 ;;  index           2    1[COMMON] int 
   554 ;; Return value:  Size  Location     Type
   555 ;;                  1    wreg      void 
   556 ;; Registers used:
   557 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   558 ;; Tracked objects:
   559 ;;		On entry : 0/0
   560 ;;		On exit  : 0/0
   561 ;;		Unchanged: 0/0
   562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   563 ;;      Params:         0       0       0       0       0
   564 ;;      Locals:         3       0       0       0       0
   565 ;;      Temps:          0       0       0       0       0
   566 ;;      Totals:         3       0       0       0       0
   567 ;;Total ram usage:        3 bytes
   568 ;; Hardware stack levels used:    2
   569 ;; This function calls:
   570 ;;		Nothing
   571 ;; This function is called by:
   572 ;;		_main
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           
   577                           ;psect for function _LCD_data_string
   578  07CC                     _LCD_data_string:
   579                           
   580                           ;incstack = 0
   581                           ; Regs used in _LCD_data_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
   582                           ;LCD_data_string@string stored from wreg
   583  07CC  00F0               	movwf	LCD_data_string@string
   584  07CD                     l698:
   585                           
   586                           ;LCD.c: 42:     int index;;LCD.c: 43:     for(index =0;index<16;index++) {
   587  07CD  01F1               	clrf	LCD_data_string@index
   588  07CE  01F2               	clrf	LCD_data_string@index+1
   589  07CF                     l704:
   590                           
   591                           ;LCD.c: 44:         if(string[index] == '\0')
   592  07CF  0871               	movf	LCD_data_string@index,w
   593  07D0  0770               	addwf	LCD_data_string@string,w
   594  07D1  0084               	movwf	4
   595  07D2  120A  118A  2003  120A  118A  	fcall	stringdir
   596  07D7  3A00               	xorlw	0
   597  07D8  1D03               	skipz
   598  07D9  2FDB               	goto	u41
   599  07DA  2FDC               	goto	u40
   600  07DB                     u41:
   601  07DB  2FDD               	goto	l708
   602  07DC                     u40:
   603  07DC  2FFB               	goto	l36
   604  07DD                     l708:
   605                           
   606                           ;LCD.c: 46:         PORTD=(string[index]);
   607  07DD  0871               	movf	LCD_data_string@index,w
   608  07DE  0770               	addwf	LCD_data_string@string,w
   609  07DF  0084               	movwf	4
   610  07E0  120A  118A  2003  120A  118A  	fcall	stringdir
   611  07E5  1283               	bcf	3,5	;RP0=0, select bank0
   612  07E6  1303               	bcf	3,6	;RP1=0, select bank0
   613  07E7  0088               	movwf	8	;volatile
   614  07E8                     l710:
   615                           
   616                           ;LCD.c: 47:     }
   617  07E8  3001               	movlw	1
   618  07E9  07F1               	addwf	LCD_data_string@index,f
   619  07EA  1803               	skipnc
   620  07EB  0AF2               	incf	LCD_data_string@index+1,f
   621  07EC  3000               	movlw	0
   622  07ED  07F2               	addwf	LCD_data_string@index+1,f
   623  07EE                     l712:
   624  07EE  0872               	movf	LCD_data_string@index+1,w
   625  07EF  3A80               	xorlw	128
   626  07F0  00FF               	movwf	btemp+1
   627  07F1  3080               	movlw	128
   628  07F2  027F               	subwf	btemp+1,w
   629  07F3  1D03               	skipz
   630  07F4  2FF7               	goto	u55
   631  07F5  3010               	movlw	16
   632  07F6  0271               	subwf	LCD_data_string@index,w
   633  07F7                     u55:
   634  07F7  1C03               	skipc
   635  07F8  2FFA               	goto	u51
   636  07F9  2FFB               	goto	u50
   637  07FA                     u51:
   638  07FA  2FCF               	goto	l704
   639  07FB                     u50:
   640  07FB                     l36:
   641  07FB  0008               	return
   642  07FC                     __end_of_LCD_data_string:
   643                           
   644                           	psect	text3
   645  07A6                     __ptext3:	
   646 ;; *************** function _LCD_Init *****************
   647 ;; Defined at:
   648 ;;		line 60 in file "LCD.c"
   649 ;; Parameters:    Size  Location     Type
   650 ;;		None
   651 ;; Auto vars:     Size  Location     Type
   652 ;;		None
   653 ;; Return value:  Size  Location     Type
   654 ;;                  1    wreg      void 
   655 ;; Registers used:
   656 ;;		wreg, status,2, status,0, pclath, cstack
   657 ;; Tracked objects:
   658 ;;		On entry : 0/0
   659 ;;		On exit  : 0/0
   660 ;;		Unchanged: 0/0
   661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   662 ;;      Params:         0       0       0       0       0
   663 ;;      Locals:         0       0       0       0       0
   664 ;;      Temps:          2       0       0       0       0
   665 ;;      Totals:         2       0       0       0       0
   666 ;;Total ram usage:        2 bytes
   667 ;; Hardware stack levels used:    1
   668 ;; Hardware stack levels required when called:    1
   669 ;; This function calls:
   670 ;;		_LCD_cmd
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           
   677                           ;psect for function _LCD_Init
   678  07A6                     _LCD_Init:
   679  07A6                     l646:	
   680                           ;incstack = 0
   681                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   682                           
   683                           
   684                           ;LCD.c: 62:     TRISE = 0;
   685  07A6  1683               	bsf	3,5	;RP0=1, select bank1
   686  07A7  1303               	bcf	3,6	;RP1=0, select bank1
   687  07A8  0189               	clrf	9	;volatile
   688                           
   689                           ;LCD.c: 63:     TRISD = 0;
   690  07A9  0188               	clrf	8	;volatile
   691  07AA                     l648:
   692                           
   693                           ;LCD.c: 64:     _delay((unsigned long)((5)*(8000000/4000.0)));
   694  07AA  300D               	movlw	13
   695  07AB  00F4               	movwf	??_LCD_Init+1
   696  07AC  30FB               	movlw	251
   697  07AD  00F3               	movwf	??_LCD_Init
   698  07AE                     u67:
   699  07AE  0BF3               	decfsz	??_LCD_Init,f
   700  07AF  2FAE               	goto	u67
   701  07B0  0BF4               	decfsz	??_LCD_Init+1,f
   702  07B1  2FAE               	goto	u67
   703  07B2  2FB3               	nop2
   704  07B3                     l650:
   705                           
   706                           ;LCD.c: 65:     LCD_cmd (0x38);
   707  07B3  3038               	movlw	56
   708  07B4  120A  118A  2788  120A  118A  	fcall	_LCD_cmd
   709  07B9                     l652:
   710                           
   711                           ;LCD.c: 66:     LCD_cmd (0x0E);
   712  07B9  300E               	movlw	14
   713  07BA  120A  118A  2788  120A  118A  	fcall	_LCD_cmd
   714  07BF                     l654:
   715                           
   716                           ;LCD.c: 67:     LCD_cmd (0x01);
   717  07BF  3001               	movlw	1
   718  07C0  120A  118A  2788  120A  118A  	fcall	_LCD_cmd
   719  07C5                     l656:
   720                           
   721                           ;LCD.c: 68:     LCD_cmd (0x80);
   722  07C5  3080               	movlw	128
   723  07C6  120A  118A  2788  120A  118A  	fcall	_LCD_cmd
   724  07CB                     l44:
   725  07CB  0008               	return
   726  07CC                     __end_of_LCD_Init:
   727                           
   728                           	psect	text4
   729  0788                     __ptext4:	
   730 ;; *************** function _LCD_cmd *****************
   731 ;; Defined at:
   732 ;;		line 19 in file "LCD.c"
   733 ;; Parameters:    Size  Location     Type
   734 ;;  cmd             1    wreg     unsigned char 
   735 ;; Auto vars:     Size  Location     Type
   736 ;;  cmd             1    2[COMMON] unsigned char 
   737 ;; Return value:  Size  Location     Type
   738 ;;                  1    wreg      void 
   739 ;; Registers used:
   740 ;;		wreg
   741 ;; Tracked objects:
   742 ;;		On entry : 0/0
   743 ;;		On exit  : 0/0
   744 ;;		Unchanged: 0/0
   745 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   746 ;;      Params:         0       0       0       0       0
   747 ;;      Locals:         1       0       0       0       0
   748 ;;      Temps:          2       0       0       0       0
   749 ;;      Totals:         3       0       0       0       0
   750 ;;Total ram usage:        3 bytes
   751 ;; Hardware stack levels used:    1
   752 ;; This function calls:
   753 ;;		Nothing
   754 ;; This function is called by:
   755 ;;		_LCD_move_cursor
   756 ;;		_LCD_Init
   757 ;; This function uses a non-reentrant model
   758 ;;
   759                           
   760                           
   761                           ;psect for function _LCD_cmd
   762  0788                     _LCD_cmd:
   763                           
   764                           ;incstack = 0
   765                           ; Regs used in _LCD_cmd: [wreg]
   766                           ;LCD_cmd@cmd stored from wreg
   767  0788  00F2               	movwf	LCD_cmd@cmd
   768  0789                     l636:
   769                           
   770                           ;LCD.c: 20:     PORTD = cmd;
   771  0789  0872               	movf	LCD_cmd@cmd,w
   772  078A  1283               	bcf	3,5	;RP0=0, select bank0
   773  078B  1303               	bcf	3,6	;RP1=0, select bank0
   774  078C  0088               	movwf	8	;volatile
   775  078D                     l638:
   776                           
   777                           ;LCD.c: 21:     PORTEbits.RE0 = 0;
   778  078D  1009               	bcf	9,0	;volatile
   779  078E                     l640:
   780                           
   781                           ;LCD.c: 22:     PORTEbits.RE1 = 0;
   782  078E  1089               	bcf	9,1	;volatile
   783  078F                     l642:
   784                           
   785                           ;LCD.c: 23:     PORTEbits.RE2 = 1;
   786  078F  1509               	bsf	9,2	;volatile
   787                           
   788                           ;LCD.c: 24:     _delay((unsigned long)((10)*(8000000/4000.0)));
   789  0790  301A               	movlw	26
   790  0791  00F1               	movwf	??_LCD_cmd+1
   791  0792  30F8               	movlw	248
   792  0793  00F0               	movwf	??_LCD_cmd
   793  0794                     u77:
   794  0794  0BF0               	decfsz	??_LCD_cmd,f
   795  0795  2F94               	goto	u77
   796  0796  0BF1               	decfsz	??_LCD_cmd+1,f
   797  0797  2F94               	goto	u77
   798  0798  0000               	nop
   799  0799                     l644:
   800                           
   801                           ;LCD.c: 25:     PORTEbits.RE2 = 0;
   802  0799  1283               	bcf	3,5	;RP0=0, select bank0
   803  079A  1303               	bcf	3,6	;RP1=0, select bank0
   804  079B  1109               	bcf	9,2	;volatile
   805                           
   806                           ;LCD.c: 26:     _delay((unsigned long)((1)*(8000000/4000.0)));
   807  079C  3003               	movlw	3
   808  079D  00F1               	movwf	??_LCD_cmd+1
   809  079E  3097               	movlw	151
   810  079F  00F0               	movwf	??_LCD_cmd
   811  07A0                     u87:
   812  07A0  0BF0               	decfsz	??_LCD_cmd,f
   813  07A1  2FA0               	goto	u87
   814  07A2  0BF1               	decfsz	??_LCD_cmd+1,f
   815  07A3  2FA0               	goto	u87
   816  07A4  2FA5               	nop2
   817  07A5                     l27:
   818  07A5  0008               	return
   819  07A6                     __end_of_LCD_cmd:
   820  007E                     btemp	set	126	;btemp
   821  007E                     wtemp0	set	126
   822                           
   823                           	psect	config
   824                           
   825                           ;Config register CONFIG1 @ 0x2007
   826                           ;	Oscillator Selection bits
   827                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   828                           ;	Watchdog Timer Enable bit
   829                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   830                           ;	Power-up Timer Enable bit
   831                           ;	PWRTE = OFF, PWRT disabled
   832                           ;	RE3/MCLR pin function select bit
   833                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   834                           ;	Code Protection bit
   835                           ;	CP = OFF, Program memory code protection is disabled
   836                           ;	Data Code Protection bit
   837                           ;	CPD = OFF, Data memory code protection is disabled
   838                           ;	Brown Out Reset Selection bits
   839                           ;	BOREN = OFF, BOR disabled
   840                           ;	Internal External Switchover bit
   841                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   842                           ;	Fail-Safe Clock Monitor Enabled bit
   843                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   844                           ;	Low Voltage Programming Enable bit
   845                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   846                           ;	In-Circuit Debugger Mode bit
   847                           ;	DEBUG = 0x1, unprogrammed default
   848  2007                     	org	8199
   849  2007  20D1               	dw	8401
   850                           
   851                           ;Config register CONFIG2 @ 0x2008
   852                           ;	Brown-out Reset Selection bit
   853                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   854                           ;	Flash Program Memory Self Write Enable bits
   855                           ;	WRT = OFF, Write protection off
   856  2008                     	org	8200
   857  2008  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_data_string@string	PTR unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[12]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_LCD_move_cursor
    _LCD_move_cursor->_LCD_cmd
    _LCD_Init->_LCD_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     260
                           _LCD_Init
                    _LCD_data_string
                    _LCD_move_cursor
 ---------------------------------------------------------------------------------
 (1) _LCD_move_cursor                                      3     3      0      45
                                              3 COMMON     3     3      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_data_string                                      3     3      0     200
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      15
                                              3 COMMON     2     2      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_cmd
   _LCD_data_string
   _LCD_move_cursor
     _LCD_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Feb 08 12:00:06 2021

                       pc 0002                        l11 0784                        l12 0784  
                      l41 076C                        l27 07A5                        l44 07CB  
                      l36 07FB                        u30 075D                        u31 075C  
                      u40 07DC                        u41 07DB                        u50 07FB  
                      u51 07FA                        u55 07F7                        u67 07AE  
                      u77 0794                        u87 07A0                        fsr 0004  
                     l710 07E8                       l640 078E                       l712 07EE  
                     l704 07CF                       l642 078F                       l650 07B3  
                     l714 076D                       l644 0799                       l636 0789  
                     l652 07B9                       l708 07DD                       l716 0772  
                     l638 078D                       l654 07BF                       l646 07A6  
                     l718 0778                       l656 07C5                       l648 07AA  
                     l680 0766                       l674 0758                       l676 075D  
                     l678 0762                       l698 07CD                       fsr0 0004  
     LCD_move_cursor@addr 0075           __end_of_LCD_cmd 07A6       LCD_move_cursor@line 0074  
                    STR_1 0009                      STR_2 0018                      _main 076D  
                    btemp 007E                      start 0000          __end_of_LCD_Init 07CC  
                   ?_main 0070                     _PORTD 0008                     _TRISD 0088  
                   _TRISE 0089                     pclath 000A                     status 0003  
                   wtemp0 007E         ??_LCD_data_string 0070      LCD_data_string@index 0071  
         __initialization 07FC              __end_of_main 0788                    ??_main 0076  
               ??_LCD_cmd 0070   __end_of__initialization 07FC                 ?_LCD_Init 0070  
__size_of_LCD_move_cursor 0016            __pcstackCOMMON 0070     LCD_data_string@string 0070  
              ??_LCD_Init 0073                __pmaintext 076D                   _LCD_cmd 0788  
         _LCD_data_string 07CC                __stringtab 0003         ??_LCD_move_cursor 0073  
                 __ptext1 0757                   __ptext2 07CC                   __ptext3 07A6  
                 __ptext4 0788      end_of_initialization 07FC   __end_of_LCD_data_string 07FC  
               _PORTEbits 0009         __size_of_LCD_Init 0026                LCD_cmd@cmd 0072  
     start_initialization 07FC          ?_LCD_data_string 0070                  ?_LCD_cmd 0070  
               ___latbits 0002           _LCD_move_cursor 0757                 __pstrings 0003  
                _LCD_Init 07A6               __stringbase 0008          __size_of_LCD_cmd 001E  
 __end_of_LCD_move_cursor 076D        __end_of__stringtab 0009             __size_of_main 001B  
        ?_LCD_move_cursor 0070                 stringcode 0003                  stringdir 0003  
                stringtab 0003  __size_of_LCD_data_string 0030  
