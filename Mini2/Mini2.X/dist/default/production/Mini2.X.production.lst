

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Mar 07 13:31:03 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2,group=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	intentry,global,class=CODE,delta=2
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    47                           	dabs	1,0x7E,2
    48  0000                     
    49                           ; Version 2.20
    50                           ; Generated 12/02/2020 GMT
    51                           ; 
    52                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution.
    66                           ; 
    67                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    68                           ;        software without specific prior written permission.
    69                           ; 
    70                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    71                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    72                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    73                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    74                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    75                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    76                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    77                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    78                           ; 
    79                           ; 
    80                           ; Code-generator required, PIC16F887 Definitions
    81                           ; 
    82                           ; SFR Addresses
    83  0000                     	;# 
    84  0001                     	;# 
    85  0002                     	;# 
    86  0003                     	;# 
    87  0004                     	;# 
    88  0005                     	;# 
    89  0006                     	;# 
    90  0007                     	;# 
    91  0008                     	;# 
    92  0009                     	;# 
    93  000A                     	;# 
    94  000B                     	;# 
    95  000C                     	;# 
    96  000D                     	;# 
    97  000E                     	;# 
    98  000E                     	;# 
    99  000F                     	;# 
   100  0010                     	;# 
   101  0011                     	;# 
   102  0012                     	;# 
   103  0013                     	;# 
   104  0014                     	;# 
   105  0015                     	;# 
   106  0015                     	;# 
   107  0016                     	;# 
   108  0017                     	;# 
   109  0018                     	;# 
   110  0019                     	;# 
   111  001A                     	;# 
   112  001B                     	;# 
   113  001B                     	;# 
   114  001C                     	;# 
   115  001D                     	;# 
   116  001E                     	;# 
   117  001F                     	;# 
   118  0081                     	;# 
   119  0085                     	;# 
   120  0086                     	;# 
   121  0087                     	;# 
   122  0088                     	;# 
   123  0089                     	;# 
   124  008C                     	;# 
   125  008D                     	;# 
   126  008E                     	;# 
   127  008F                     	;# 
   128  0090                     	;# 
   129  0091                     	;# 
   130  0092                     	;# 
   131  0093                     	;# 
   132  0093                     	;# 
   133  0093                     	;# 
   134  0094                     	;# 
   135  0095                     	;# 
   136  0096                     	;# 
   137  0097                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009A                     	;# 
   141  009B                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  009F                     	;# 
   146  0105                     	;# 
   147  0107                     	;# 
   148  0108                     	;# 
   149  0109                     	;# 
   150  010C                     	;# 
   151  010C                     	;# 
   152  010D                     	;# 
   153  010E                     	;# 
   154  010F                     	;# 
   155  0185                     	;# 
   156  0187                     	;# 
   157  0188                     	;# 
   158  0189                     	;# 
   159  018C                     	;# 
   160  018D                     	;# 
   161  0000                     	;# 
   162  0001                     	;# 
   163  0002                     	;# 
   164  0003                     	;# 
   165  0004                     	;# 
   166  0005                     	;# 
   167  0006                     	;# 
   168  0007                     	;# 
   169  0008                     	;# 
   170  0009                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000D                     	;# 
   175  000E                     	;# 
   176  000E                     	;# 
   177  000F                     	;# 
   178  0010                     	;# 
   179  0011                     	;# 
   180  0012                     	;# 
   181  0013                     	;# 
   182  0014                     	;# 
   183  0015                     	;# 
   184  0015                     	;# 
   185  0016                     	;# 
   186  0017                     	;# 
   187  0018                     	;# 
   188  0019                     	;# 
   189  001A                     	;# 
   190  001B                     	;# 
   191  001B                     	;# 
   192  001C                     	;# 
   193  001D                     	;# 
   194  001E                     	;# 
   195  001F                     	;# 
   196  0081                     	;# 
   197  0085                     	;# 
   198  0086                     	;# 
   199  0087                     	;# 
   200  0088                     	;# 
   201  0089                     	;# 
   202  008C                     	;# 
   203  008D                     	;# 
   204  008E                     	;# 
   205  008F                     	;# 
   206  0090                     	;# 
   207  0091                     	;# 
   208  0092                     	;# 
   209  0093                     	;# 
   210  0093                     	;# 
   211  0093                     	;# 
   212  0094                     	;# 
   213  0095                     	;# 
   214  0096                     	;# 
   215  0097                     	;# 
   216  0098                     	;# 
   217  0099                     	;# 
   218  009A                     	;# 
   219  009B                     	;# 
   220  009C                     	;# 
   221  009D                     	;# 
   222  009E                     	;# 
   223  009F                     	;# 
   224  0105                     	;# 
   225  0107                     	;# 
   226  0108                     	;# 
   227  0109                     	;# 
   228  010C                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  0185                     	;# 
   234  0187                     	;# 
   235  0188                     	;# 
   236  0189                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  008F                     	;# 
   284  0090                     	;# 
   285  0091                     	;# 
   286  0092                     	;# 
   287  0093                     	;# 
   288  0093                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0095                     	;# 
   292  0096                     	;# 
   293  0097                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009A                     	;# 
   297  009B                     	;# 
   298  009C                     	;# 
   299  009D                     	;# 
   300  009E                     	;# 
   301  009F                     	;# 
   302  0105                     	;# 
   303  0107                     	;# 
   304  0108                     	;# 
   305  0109                     	;# 
   306  010C                     	;# 
   307  010C                     	;# 
   308  010D                     	;# 
   309  010E                     	;# 
   310  010F                     	;# 
   311  0185                     	;# 
   312  0187                     	;# 
   313  0188                     	;# 
   314  0189                     	;# 
   315  018C                     	;# 
   316  018D                     	;# 
   317  0000                     	;# 
   318  0001                     	;# 
   319  0002                     	;# 
   320  0003                     	;# 
   321  0004                     	;# 
   322  0005                     	;# 
   323  0006                     	;# 
   324  0007                     	;# 
   325  0008                     	;# 
   326  0009                     	;# 
   327  000A                     	;# 
   328  000B                     	;# 
   329  000C                     	;# 
   330  000D                     	;# 
   331  000E                     	;# 
   332  000E                     	;# 
   333  000F                     	;# 
   334  0010                     	;# 
   335  0011                     	;# 
   336  0012                     	;# 
   337  0013                     	;# 
   338  0014                     	;# 
   339  0015                     	;# 
   340  0015                     	;# 
   341  0016                     	;# 
   342  0017                     	;# 
   343  0018                     	;# 
   344  0019                     	;# 
   345  001A                     	;# 
   346  001B                     	;# 
   347  001B                     	;# 
   348  001C                     	;# 
   349  001D                     	;# 
   350  001E                     	;# 
   351  001F                     	;# 
   352  0081                     	;# 
   353  0085                     	;# 
   354  0086                     	;# 
   355  0087                     	;# 
   356  0088                     	;# 
   357  0089                     	;# 
   358  008C                     	;# 
   359  008D                     	;# 
   360  008E                     	;# 
   361  008F                     	;# 
   362  0090                     	;# 
   363  0091                     	;# 
   364  0092                     	;# 
   365  0093                     	;# 
   366  0093                     	;# 
   367  0093                     	;# 
   368  0094                     	;# 
   369  0095                     	;# 
   370  0096                     	;# 
   371  0097                     	;# 
   372  0098                     	;# 
   373  0099                     	;# 
   374  009A                     	;# 
   375  009B                     	;# 
   376  009C                     	;# 
   377  009D                     	;# 
   378  009E                     	;# 
   379  009F                     	;# 
   380  0105                     	;# 
   381  0107                     	;# 
   382  0108                     	;# 
   383  0109                     	;# 
   384  010C                     	;# 
   385  010C                     	;# 
   386  010D                     	;# 
   387  010E                     	;# 
   388  010F                     	;# 
   389  0185                     	;# 
   390  0187                     	;# 
   391  0188                     	;# 
   392  0189                     	;# 
   393  018C                     	;# 
   394  018D                     	;# 
   395  0000                     	;# 
   396  0001                     	;# 
   397  0002                     	;# 
   398  0003                     	;# 
   399  0004                     	;# 
   400  0005                     	;# 
   401  0006                     	;# 
   402  0007                     	;# 
   403  0008                     	;# 
   404  0009                     	;# 
   405  000A                     	;# 
   406  000B                     	;# 
   407  000C                     	;# 
   408  000D                     	;# 
   409  000E                     	;# 
   410  000E                     	;# 
   411  000F                     	;# 
   412  0010                     	;# 
   413  0011                     	;# 
   414  0012                     	;# 
   415  0013                     	;# 
   416  0014                     	;# 
   417  0015                     	;# 
   418  0015                     	;# 
   419  0016                     	;# 
   420  0017                     	;# 
   421  0018                     	;# 
   422  0019                     	;# 
   423  001A                     	;# 
   424  001B                     	;# 
   425  001B                     	;# 
   426  001C                     	;# 
   427  001D                     	;# 
   428  001E                     	;# 
   429  001F                     	;# 
   430  0081                     	;# 
   431  0085                     	;# 
   432  0086                     	;# 
   433  0087                     	;# 
   434  0088                     	;# 
   435  0089                     	;# 
   436  008C                     	;# 
   437  008D                     	;# 
   438  008E                     	;# 
   439  008F                     	;# 
   440  0090                     	;# 
   441  0091                     	;# 
   442  0092                     	;# 
   443  0093                     	;# 
   444  0093                     	;# 
   445  0093                     	;# 
   446  0094                     	;# 
   447  0095                     	;# 
   448  0096                     	;# 
   449  0097                     	;# 
   450  0098                     	;# 
   451  0099                     	;# 
   452  009A                     	;# 
   453  009B                     	;# 
   454  009C                     	;# 
   455  009D                     	;# 
   456  009E                     	;# 
   457  009F                     	;# 
   458  0105                     	;# 
   459  0107                     	;# 
   460  0108                     	;# 
   461  0109                     	;# 
   462  010C                     	;# 
   463  010C                     	;# 
   464  010D                     	;# 
   465  010E                     	;# 
   466  010F                     	;# 
   467  0185                     	;# 
   468  0187                     	;# 
   469  0188                     	;# 
   470  0189                     	;# 
   471  018C                     	;# 
   472  018D                     	;# 
   473                           
   474                           	psect	strings
   475  1000                     __pstrings:
   476  1000                     stringtab:
   477  1000                     __stringtab:
   478                           
   479                           ;	String table - string pointers are 1 byte each
   480  1000  1BFF               	btfsc	btemp+1,7
   481  1001  280A               	ljmp	stringcode
   482  1002  1383               	bcf	3,7
   483  1003  187F               	btfsc	btemp+1,0
   484  1004  1783               	bsf	3,7
   485  1005  0800               	movf	0,w
   486  1006  0A84               	incf	4,f
   487  1007  1903               	skipnz
   488  1008  0AFF               	incf	btemp+1,f
   489  1009  0008               	return
   490  100A                     stringcode:
   491  100A                     stringdir:
   492  100A  3010               	movlw	high stringdir
   493  100B  008A               	movwf	10
   494  100C  0804               	movf	4,w
   495  100D  0A84               	incf	4,f
   496  100E  0782               	addwf	2,f
   497  100F                     __stringbase:
   498  100F  3400               	retlw	0
   499  1010                     __end_of__stringtab:
   500  1010                     _dpowers:
   501  1010  3401               	retlw	1
   502  1011  3400               	retlw	0
   503  1012  3400               	retlw	0
   504  1013  3400               	retlw	0
   505  1014  340A               	retlw	10
   506  1015  3400               	retlw	0
   507  1016  3400               	retlw	0
   508  1017  3400               	retlw	0
   509  1018  3464               	retlw	100
   510  1019  3400               	retlw	0
   511  101A  3400               	retlw	0
   512  101B  3400               	retlw	0
   513  101C  34E8               	retlw	232
   514  101D  3403               	retlw	3
   515  101E  3400               	retlw	0
   516  101F  3400               	retlw	0
   517  1020  3410               	retlw	16
   518  1021  3427               	retlw	39
   519  1022  3400               	retlw	0
   520  1023  3400               	retlw	0
   521  1024  34A0               	retlw	160
   522  1025  3486               	retlw	134
   523  1026  3401               	retlw	1
   524  1027  3400               	retlw	0
   525  1028  3440               	retlw	64
   526  1029  3442               	retlw	66
   527  102A  340F               	retlw	15
   528  102B  3400               	retlw	0
   529  102C  3480               	retlw	128
   530  102D  3496               	retlw	150
   531  102E  3498               	retlw	152
   532  102F  3400               	retlw	0
   533  1030  3400               	retlw	0
   534  1031  34E1               	retlw	225
   535  1032  34F5               	retlw	245
   536  1033  3405               	retlw	5
   537  1034  3400               	retlw	0
   538  1035  34CA               	retlw	202
   539  1036  349A               	retlw	154
   540  1037  343B               	retlw	59
   541  1038                     __end_of_dpowers:
   542  000B                     _INTCONbits	set	11
   543  0005                     _PORTA	set	5
   544  0005                     _PORTAbits	set	5
   545  0013                     _SSPBUF	set	19
   546  0014                     _SSPCON	set	20
   547  001A                     _RCREG	set	26
   548  000C                     _PIR1bits	set	12
   549  0019                     _TXREG	set	25
   550  0018                     _RCSTA	set	24
   551  0063                     _SSPIF	set	99
   552  008C                     _PIE1bits	set	140
   553  0085                     _TRISA	set	133
   554  0091                     _SSPCON2bits	set	145
   555  0093                     _SSPADD	set	147
   556  0094                     _SSPSTAT	set	148
   557  0091                     _SSPCON2	set	145
   558  0087                     _TRISCbits	set	135
   559  0098                     _TXSTA	set	152
   560  0098                     _TXSTAbits	set	152
   561  0099                     _SPBRG	set	153
   562  04A0                     _BF	set	1184
   563  048B                     _RCEN	set	1163
   564  048E                     _ACKSTAT	set	1166
   565  048C                     _ACKEN	set	1164
   566  048D                     _ACKDT	set	1165
   567  048A                     _PEN	set	1162
   568  0489                     _RSEN	set	1161
   569  0488                     _SEN	set	1160
   570  043C                     _TRISC4	set	1084
   571  043B                     _TRISC3	set	1083
   572  0188                     _ANSEL	set	392
   573  0187                     _BAUDCTL	set	391
   574  1038                     STR_7:
   575  1038  3425               	retlw	37	;'%'
   576  1039  346C               	retlw	108	;'l'
   577  103A  3475               	retlw	117	;'u'
   578  103B  342E               	retlw	46	;'.'
   579  103C  3425               	retlw	37	;'%'
   580  103D  3436               	retlw	54	;'6'
   581  103E  342E               	retlw	46	;'.'
   582  103F  3436               	retlw	54	;'6'
   583  1040  346C               	retlw	108	;'l'
   584  1041  3475               	retlw	117	;'u'
   585  1042  3400               	retlw	0
   586  1043                     STR_1:
   587  1043  3420               	retlw	32	;' '
   588  1044  3400               	retlw	0
   589  1043                     
   590                           	psect	cinit
   591  000F                     start_initialization:	
   592                           ; #config settings
   593                           
   594  000F                     __initialization:
   595                           
   596                           ; Clear objects allocated to COMMON
   597  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   598                           
   599                           ; Clear objects allocated to BANK1
   600  0010  1383               	bcf	3,7	;select IRP bank0
   601  0011  30DF               	movlw	low __pbssBANK1
   602  0012  0084               	movwf	4
   603  0013  30F0               	movlw	low (__pbssBANK1+17)
   604  0014  160A  118A  2325  120A  118A  	fcall	clear_ram0
   605  0019                     end_of_initialization:	
   606                           ;End of C runtime variable initialization code
   607                           
   608  0019                     __end_of__initialization:
   609  0019  0183               	clrf	3
   610  001A  160A  118A  2BC2   	ljmp	_main	;jump to C main() function
   611                           
   612                           	psect	bssCOMMON
   613  007A                     __pbssCOMMON:
   614  007A                     _input:
   615  007A                     	ds	1
   616                           
   617                           	psect	bssBANK1
   618  00DF                     __pbssBANK1:
   619  00DF                     ftoa@buf:
   620  00DF                     	ds	17
   621                           
   622                           	psect	clrtext
   623  1325                     clear_ram0:	
   624                           ;	Called with FSR containing the base address, and
   625                           ;	W with the last address+1
   626                           
   627  1325  0064               	clrwdt	;clear the watchdog before getting into this loop
   628  1326                     clrloop0:
   629  1326  0180               	clrf	0	;clear RAM location pointed to by FSR
   630  1327  0A84               	incf	4,f	;increment pointer
   631  1328  0604               	xorwf	4,w	;XOR with final address
   632  1329  1903               	btfsc	3,2	;have we reached the end yet?
   633  132A  3400               	retlw	0	;all done for this memory range, return
   634  132B  0604               	xorwf	4,w	;XOR again to restore value
   635  132C  2B26               	goto	clrloop0	;do the next byte
   636                           
   637                           	psect	cstackBANK3
   638  0190                     __pcstackBANK3:
   639  0190                     ??_main:
   640                           
   641                           ; 1 bytes @ 0x0
   642  0190                     	ds	3
   643                           
   644                           	psect	cstackBANK1
   645  00A0                     __pcstackBANK1:
   646  00A0                     ??_giro_read:
   647                           
   648                           ; 1 bytes @ 0x0
   649  00A0                     	ds	4
   650  00A4                     giro_read@val:
   651                           
   652                           ; 14 bytes @ 0x4
   653  00A4                     	ds	14
   654  00B2                     giro_read@final:
   655                           
   656                           ; 28 bytes @ 0x12
   657  00B2                     	ds	28
   658  00CE                     giro_read@almacenar1:
   659                           
   660                           ; 14 bytes @ 0x2E
   661  00CE                     	ds	14
   662  00DC                     giro_read@i:
   663                           
   664                           ; 2 bytes @ 0x3C
   665  00DC                     	ds	2
   666  00DE                     giro_read@impresion:
   667                           
   668                           ; 1 bytes @ 0x3E
   669  00DE                     	ds	1
   670                           
   671                           	psect	cstackCOMMON
   672  0070                     __pcstackCOMMON:
   673  0070                     ?_isdigit:
   674  0070                     ?_mas_write:	
   675                           ; 1 bit 
   676                           
   677  0070                     ?_Setup:	
   678                           ; 1 bytes @ 0x0
   679                           
   680  0070                     ?_usart_char:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0070                     ?_config_i2cmas:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0070                     ?_wait:	
   687                           ; 1 bytes @ 0x0
   688                           
   689  0070                     ?_i2c_init:	
   690                           ; 1 bytes @ 0x0
   691                           
   692  0070                     ?_Rinit:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0070                     ?_stop:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0070                     ?_ack_i2c:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0070                     ?_nack_i2c:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0070                     ?_mas_read:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0070                     ?_giro_init:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0070                     ?_giro_read:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0070                     ?_ISR:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0070                     ??_ISR:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0070                     ?_main:	
   720                           ; 1 bytes @ 0x0
   721                           
   722                           
   723                           ; 1 bytes @ 0x0
   724  0070                     	ds	3
   725  0073                     ??_mas_write:
   726  0073                     ??_Setup:	
   727                           ; 1 bytes @ 0x3
   728                           
   729  0073                     ??_isdigit:	
   730                           ; 1 bytes @ 0x3
   731                           
   732  0073                     ??_usart_char:	
   733                           ; 1 bytes @ 0x3
   734                           
   735  0073                     ??_config_i2cmas:	
   736                           ; 1 bytes @ 0x3
   737                           
   738  0073                     ??_wait:	
   739                           ; 1 bytes @ 0x3
   740                           
   741  0073                     ??_Rinit:	
   742                           ; 1 bytes @ 0x3
   743                           
   744  0073                     ??_stop:	
   745                           ; 1 bytes @ 0x3
   746                           
   747  0073                     ??_ack_i2c:	
   748                           ; 1 bytes @ 0x3
   749                           
   750  0073                     ??_nack_i2c:	
   751                           ; 1 bytes @ 0x3
   752                           
   753  0073                     ??_mas_read:	
   754                           ; 1 bytes @ 0x3
   755                           
   756  0073                     ??___lldiv:	
   757                           ; 1 bytes @ 0x3
   758                           
   759  0073                     ??___flge:	
   760                           ; 1 bytes @ 0x3
   761                           
   762  0073                     ?__Umul8_16:	
   763                           ; 1 bytes @ 0x3
   764                           
   765  0073                     ?___wmul:	
   766                           ; 2 bytes @ 0x3
   767                           
   768  0073                     ?___flneg:	
   769                           ; 2 bytes @ 0x3
   770                           
   771  0073                     ?___xxtofl:	
   772                           ; 4 bytes @ 0x3
   773                           
   774  0073                     usart_char@t:	
   775                           ; 4 bytes @ 0x3
   776                           
   777  0073                     mas_write@data:	
   778                           ; 1 bytes @ 0x3
   779                           
   780  0073                     __Umul8_16@multiplicand:	
   781                           ; 1 bytes @ 0x3
   782                           
   783  0073                     _isdigit$856:	
   784                           ; 1 bytes @ 0x3
   785                           
   786  0073                     ___wmul@multiplier:	
   787                           ; 1 bytes @ 0x3
   788                           
   789  0073                     ___flneg@f1:	
   790                           ; 2 bytes @ 0x3
   791                           
   792  0073                     ___xxtofl@val:	
   793                           ; 4 bytes @ 0x3
   794                           
   795                           
   796                           ; 4 bytes @ 0x3
   797  0073                     	ds	1
   798  0074                     ?_usart_string:
   799  0074                     ??_i2c_init:	
   800                           ; 1 bytes @ 0x4
   801                           
   802  0074                     i2c_init@d:	
   803                           ; 1 bytes @ 0x4
   804                           
   805  0074                     mas_read@an:	
   806                           ; 1 bytes @ 0x4
   807                           
   808  0074                     isdigit@c:	
   809                           ; 1 bytes @ 0x4
   810                           
   811  0074                     usart_string@data:	
   812                           ; 1 bytes @ 0x4
   813                           
   814  0074                     ___lldiv@quotient:	
   815                           ; 2 bytes @ 0x4
   816                           
   817                           
   818                           ; 4 bytes @ 0x4
   819  0074                     	ds	1
   820  0075                     ??__Umul8_16:
   821  0075                     mas_read@data:	
   822                           ; 1 bytes @ 0x5
   823                           
   824  0075                     ___wmul@multiplicand:	
   825                           ; 1 bytes @ 0x5
   826                           
   827                           
   828                           ; 2 bytes @ 0x5
   829  0075                     	ds	1
   830  0076                     usart_string@max:
   831                           
   832                           ; 1 bytes @ 0x6
   833  0076                     	ds	1
   834  0077                     ??_usart_string:
   835  0077                     ??___wmul:	
   836                           ; 1 bytes @ 0x7
   837                           
   838  0077                     ??___flneg:	
   839                           ; 1 bytes @ 0x7
   840                           
   841  0077                     ??___flsub:	
   842                           ; 1 bytes @ 0x7
   843                           
   844  0077                     ___fltol@sign1:	
   845                           ; 1 bytes @ 0x7
   846                           
   847  0077                     ___wmul@product:	
   848                           ; 1 bytes @ 0x7
   849                           
   850                           
   851                           ; 2 bytes @ 0x7
   852  0077                     	ds	1
   853  0078                     ___lldiv@counter:
   854  0078                     ___fltol@exp1:	
   855                           ; 1 bytes @ 0x8
   856                           
   857                           
   858                           ; 1 bytes @ 0x8
   859  0078                     	ds	1
   860  0079                     ??_giro_init:
   861  0079                     ??___llmod:	
   862                           ; 1 bytes @ 0x9
   863                           
   864                           
   865                           ; 1 bytes @ 0x9
   866  0079                     	ds	1
   867                           
   868                           	psect	cstackBANK0
   869  0020                     __pcstackBANK0:
   870  0020                     ?___flge:
   871  0020                     ??___xxtofl:	
   872                           ; 1 bit 
   873                           
   874  0020                     ?___lldiv:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0020                     usart_string@i:	
   878                           ; 4 bytes @ 0x0
   879                           
   880  0020                     __Umul8_16@product:	
   881                           ; 2 bytes @ 0x0
   882                           
   883  0020                     ___lldiv@divisor:	
   884                           ; 2 bytes @ 0x0
   885                           
   886  0020                     ___flge@ff1:	
   887                           ; 4 bytes @ 0x0
   888                           
   889                           
   890                           ; 4 bytes @ 0x0
   891  0020                     	ds	2
   892  0022                     __Umul8_16@word_mpld:
   893                           
   894                           ; 2 bytes @ 0x2
   895  0022                     	ds	2
   896  0024                     __Umul8_16@multiplier:
   897  0024                     ___xxtofl@sign:	
   898                           ; 1 bytes @ 0x4
   899                           
   900  0024                     ___lldiv@dividend:	
   901                           ; 1 bytes @ 0x4
   902                           
   903  0024                     ___flge@ff2:	
   904                           ; 4 bytes @ 0x4
   905                           
   906                           
   907                           ; 4 bytes @ 0x4
   908  0024                     	ds	1
   909  0025                     ___xxtofl@exp:
   910                           
   911                           ; 1 bytes @ 0x5
   912  0025                     	ds	1
   913  0026                     ___xxtofl@arg:
   914                           
   915                           ; 4 bytes @ 0x6
   916  0026                     	ds	2
   917  0028                     ?_config_us:
   918  0028                     ?___llmod:	
   919                           ; 1 bytes @ 0x8
   920                           
   921  0028                     config_us@baud_rate:	
   922                           ; 4 bytes @ 0x8
   923                           
   924  0028                     ___llmod@divisor:	
   925                           ; 4 bytes @ 0x8
   926                           
   927                           
   928                           ; 4 bytes @ 0x8
   929  0028                     	ds	2
   930  002A                     ?___fldiv:
   931  002A                     ?___flmul:	
   932                           ; 4 bytes @ 0xA
   933                           
   934  002A                     ___fldiv@a:	
   935                           ; 4 bytes @ 0xA
   936                           
   937  002A                     ___flmul@b:	
   938                           ; 4 bytes @ 0xA
   939                           
   940                           
   941                           ; 4 bytes @ 0xA
   942  002A                     	ds	2
   943  002C                     config_us@BRGH:
   944  002C                     ___llmod@dividend:	
   945                           ; 1 bytes @ 0xC
   946                           
   947                           
   948                           ; 4 bytes @ 0xC
   949  002C                     	ds	1
   950  002D                     ??_config_us:
   951                           
   952                           ; 1 bytes @ 0xD
   953  002D                     	ds	1
   954  002E                     ___fldiv@b:
   955  002E                     ___flmul@a:	
   956                           ; 4 bytes @ 0xE
   957                           
   958                           
   959                           ; 4 bytes @ 0xE
   960  002E                     	ds	2
   961  0030                     ___llmod@counter:
   962                           
   963                           ; 1 bytes @ 0x10
   964  0030                     	ds	1
   965  0031                     ?_sprintf:
   966  0031                     sprintf@f:	
   967                           ; 2 bytes @ 0x11
   968                           
   969                           
   970                           ; 1 bytes @ 0x11
   971  0031                     	ds	1
   972  0032                     ??___fldiv:
   973  0032                     ??___flmul:	
   974                           ; 1 bytes @ 0x12
   975                           
   976                           
   977                           ; 1 bytes @ 0x12
   978  0032                     	ds	5
   979  0037                     ___flmul@sign:
   980  0037                     ___fldiv@rem:	
   981                           ; 1 bytes @ 0x17
   982                           
   983                           
   984                           ; 4 bytes @ 0x17
   985  0037                     	ds	1
   986  0038                     ___flmul@grs:
   987                           
   988                           ; 4 bytes @ 0x18
   989  0038                     	ds	2
   990  003A                     ??_sprintf:
   991                           
   992                           ; 1 bytes @ 0x1A
   993  003A                     	ds	1
   994  003B                     ___fldiv@sign:
   995                           
   996                           ; 1 bytes @ 0x1B
   997  003B                     	ds	1
   998  003C                     ___flmul@aexp:
   999  003C                     ___fldiv@new_exp:	
  1000                           ; 1 bytes @ 0x1C
  1001                           
  1002                           
  1003                           ; 2 bytes @ 0x1C
  1004  003C                     	ds	1
  1005  003D                     ___flmul@bexp:
  1006                           
  1007                           ; 1 bytes @ 0x1D
  1008  003D                     	ds	1
  1009  003E                     ___fldiv@grs:
  1010  003E                     ___flmul@prod:	
  1011                           ; 4 bytes @ 0x1E
  1012                           
  1013                           
  1014                           ; 4 bytes @ 0x1E
  1015  003E                     	ds	1
  1016  003F                     sprintf@flag:
  1017                           
  1018                           ; 1 bytes @ 0x1F
  1019  003F                     	ds	1
  1020  0040                     sprintf@ap:
  1021                           
  1022                           ; 1 bytes @ 0x20
  1023  0040                     	ds	1
  1024  0041                     sprintf@val:
  1025                           
  1026                           ; 4 bytes @ 0x21
  1027  0041                     	ds	1
  1028  0042                     ___fldiv@bexp:
  1029  0042                     ___flmul@temp:	
  1030                           ; 1 bytes @ 0x22
  1031                           
  1032                           
  1033                           ; 2 bytes @ 0x22
  1034  0042                     	ds	1
  1035  0043                     ___fldiv@aexp:
  1036                           
  1037                           ; 1 bytes @ 0x23
  1038  0043                     	ds	1
  1039  0044                     ?___fltol:
  1040  0044                     ?___fladd:	
  1041                           ; 4 bytes @ 0x24
  1042                           
  1043  0044                     ___fltol@f1:	
  1044                           ; 4 bytes @ 0x24
  1045                           
  1046  0044                     ___fladd@b:	
  1047                           ; 4 bytes @ 0x24
  1048                           
  1049                           
  1050                           ; 4 bytes @ 0x24
  1051  0044                     	ds	1
  1052  0045                     sprintf@sp:
  1053                           
  1054                           ; 1 bytes @ 0x25
  1055  0045                     	ds	1
  1056  0046                     sprintf@width:
  1057                           
  1058                           ; 2 bytes @ 0x26
  1059  0046                     	ds	2
  1060  0048                     ??___fltol:
  1061  0048                     sprintf@prec:	
  1062                           ; 1 bytes @ 0x28
  1063                           
  1064  0048                     ___fladd@a:	
  1065                           ; 2 bytes @ 0x28
  1066                           
  1067                           
  1068                           ; 4 bytes @ 0x28
  1069  0048                     	ds	2
  1070  004A                     sprintf@c:
  1071                           
  1072                           ; 1 bytes @ 0x2A
  1073  004A                     	ds	2
  1074  004C                     ??___fladd:
  1075                           
  1076                           ; 1 bytes @ 0x2C
  1077  004C                     	ds	8
  1078  0054                     ___fladd@signs:
  1079                           
  1080                           ; 1 bytes @ 0x34
  1081  0054                     	ds	1
  1082  0055                     ___fladd@aexp:
  1083                           
  1084                           ; 1 bytes @ 0x35
  1085  0055                     	ds	1
  1086  0056                     ___fladd@bexp:
  1087                           
  1088                           ; 1 bytes @ 0x36
  1089  0056                     	ds	1
  1090  0057                     ___fladd@grs:
  1091                           
  1092                           ; 1 bytes @ 0x37
  1093  0057                     	ds	1
  1094  0058                     ?___flsub:
  1095  0058                     ___flsub@a:	
  1096                           ; 4 bytes @ 0x38
  1097                           
  1098                           
  1099                           ; 4 bytes @ 0x38
  1100  0058                     	ds	4
  1101  005C                     ___flsub@b:
  1102                           
  1103                           ; 4 bytes @ 0x3C
  1104  005C                     	ds	4
  1105  0060                     ?_ftoa:
  1106  0060                     ftoa@f:	
  1107                           ; 1 bytes @ 0x40
  1108                           
  1109                           
  1110                           ; 4 bytes @ 0x40
  1111  0060                     	ds	4
  1112  0064                     ftoa@status:
  1113                           
  1114                           ; 2 bytes @ 0x44
  1115  0064                     	ds	2
  1116  0066                     ??_ftoa:
  1117                           
  1118                           ; 1 bytes @ 0x46
  1119  0066                     	ds	1
  1120  0067                     ftoa@rem:
  1121                           
  1122                           ; 4 bytes @ 0x47
  1123  0067                     	ds	4
  1124  006B                     ftoa@l:
  1125                           
  1126                           ; 4 bytes @ 0x4B
  1127  006B                     	ds	4
  1128  006F                     ftoa@cp:
  1129                           
  1130                           ; 1 bytes @ 0x4F
  1131  006F                     	ds	1
  1132                           
  1133                           	psect	maintext
  1134  13C2                     __pmaintext:	
  1135 ;;
  1136 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1137 ;;
  1138 ;; *************** function _main *****************
  1139 ;; Defined at:
  1140 ;;		line 66 in file "PIC.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : B00/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1154 ;;      Params:         0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0
  1156 ;;      Temps:          0       0       0       3       0
  1157 ;;      Totals:         0       0       0       3       0
  1158 ;;Total ram usage:        3 bytes
  1159 ;; Hardware stack levels required when called:    5
  1160 ;; This function calls:
  1161 ;;		_Setup
  1162 ;;		_giro_init
  1163 ;;		_giro_read
  1164 ;; This function is called by:
  1165 ;;		Startup code after reset
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           
  1169                           
  1170                           ;psect for function _main
  1171  13C2                     _main:
  1172  13C2                     l3385:	
  1173                           ;incstack = 0
  1174                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1175                           
  1176  13C2  3006               	movlw	6
  1177  13C3  1683               	bsf	3,5	;RP0=1, select bank3
  1178  13C4  1703               	bsf	3,6	;RP1=1, select bank3
  1179  13C5  0092               	movwf	(??_main^(0+384)+2)
  1180  13C6  3013               	movlw	19
  1181  13C7  0091               	movwf	(??_main^(0+384)+1)
  1182  13C8  30AD               	movlw	173
  1183  13C9  0090               	movwf	??_main^(0+384)
  1184  13CA                     u4897:
  1185  13CA  0B90               	decfsz	??_main^(0+384),f
  1186  13CB  2BCA               	goto	u4897
  1187  13CC  0B91               	decfsz	(??_main^(0+384)+1),f
  1188  13CD  2BCA               	goto	u4897
  1189  13CE  0B92               	decfsz	(??_main^(0+384)+2),f
  1190  13CF  2BCA               	goto	u4897
  1191  13D0                     l3387:
  1192  13D0  160A  118A  2382  160A  118A  	fcall	_Setup
  1193  13D5  160A  118A  2692  160A  118A  	fcall	_giro_init
  1194  13DA                     l3389:
  1195  13DA  120A  118A  201D  160A  118A  	fcall	_giro_read
  1196  13DF  2BDA               	goto	l3389
  1197  13E0  120A  118A  280C   	ljmp	start
  1198  13E3                     __end_of_main:
  1199                           
  1200                           	psect	text1
  1201  001D                     __ptext1:	
  1202 ;; *************** function _giro_read *****************
  1203 ;; Defined at:
  1204 ;;		line 70 in file "GIRO.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  i               2   60[BANK1 ] int 
  1209 ;;  final          28   18[BANK1 ] float [7]
  1210 ;;  val            14    4[BANK1 ] unsigned char [14]
  1211 ;;  almacenar1     14   46[BANK1 ] int [7]
  1212 ;;  impresion       1   62[BANK1 ] PTR unsigned char 
  1213 ;;		 -> ftoa@buf(17), 
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         0       0       0       0       0
  1224 ;;      Locals:         0       0      59       0       0
  1225 ;;      Temps:          0       0       4       0       0
  1226 ;;      Totals:         0       0      63       0       0
  1227 ;;Total ram usage:       63 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    4
  1230 ;; This function calls:
  1231 ;;		_Rinit
  1232 ;;		___fladd
  1233 ;;		___fldiv
  1234 ;;		___flmul
  1235 ;;		___xxtofl
  1236 ;;		_ftoa
  1237 ;;		_i2c_init
  1238 ;;		_mas_read
  1239 ;;		_mas_write
  1240 ;;		_stop
  1241 ;;		_usart_char
  1242 ;;		_usart_string
  1243 ;; This function is called by:
  1244 ;;		_main
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           
  1248                           
  1249                           ;psect for function _giro_read
  1250  001D                     _giro_read:
  1251  001D                     l3293:	
  1252                           ;incstack = 0
  1253                           ; Regs used in _giro_read: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1254                           
  1255                           
  1256                           ;GIRO.c: 71:     float final[7];;GIRO.c: 72:     char* impresion;;GIRO.c: 73:     char v
      +                          al[14];;GIRO.c: 74:     int almacenar1[7];;GIRO.c: 75:     i2c_init(0xD0);
  1257  001D  30D0               	movlw	208
  1258  001E  160A  118A  23A1  120A  118A  	fcall	_i2c_init
  1259  0023                     l175:	
  1260                           ;GIRO.c: 76:     while (SSPCON2bits.ACKSTAT);
  1261                           
  1262  0023  1683               	bsf	3,5	;RP0=1, select bank1
  1263  0024  1303               	bcf	3,6	;RP1=0, select bank1
  1264  0025  1B11               	btfsc	17,6	;volatile
  1265  0026  2828               	goto	u4861
  1266  0027  2829               	goto	u4860
  1267  0028                     u4861:
  1268  0028  2823               	goto	l175
  1269  0029                     u4860:
  1270  0029                     l3295:
  1271                           
  1272                           ;GIRO.c: 77:     mas_write(0x3B);
  1273  0029  303B               	movlw	59
  1274  002A  160A  118A  2391  120A  118A  	fcall	_mas_write
  1275  002F                     l178:	
  1276                           ;GIRO.c: 78:     while (SSPCON2bits.ACKSTAT);
  1277                           
  1278  002F  1683               	bsf	3,5	;RP0=1, select bank1
  1279  0030  1303               	bcf	3,6	;RP1=0, select bank1
  1280  0031  1B11               	btfsc	17,6	;volatile
  1281  0032  2834               	goto	u4871
  1282  0033  2835               	goto	u4870
  1283  0034                     u4871:
  1284  0034  282F               	goto	l178
  1285  0035                     u4870:
  1286  0035                     l3297:
  1287                           
  1288                           ;GIRO.c: 79:     Rinit();
  1289  0035  160A  118A  2336  120A  118A  	fcall	_Rinit
  1290                           
  1291                           ;GIRO.c: 80:     mas_write(0xD1);
  1292  003A  30D1               	movlw	209
  1293  003B  160A  118A  2391  120A  118A  	fcall	_mas_write
  1294  0040                     l3299:
  1295                           
  1296                           ;GIRO.c: 82:     for (int i = 0; i < 13; i++) val[i] = mas_read(0);
  1297  0040  1683               	bsf	3,5	;RP0=1, select bank1
  1298  0041  1303               	bcf	3,6	;RP1=0, select bank1
  1299  0042  01DC               	clrf	giro_read@i^(0+128)
  1300  0043  01DD               	clrf	(giro_read@i+1)^(0+128)
  1301  0044                     l3305:
  1302  0044  3000               	movlw	0
  1303  0045  120A  118A  27C1  120A  118A  	fcall	_mas_read
  1304  004A  1683               	bsf	3,5	;RP0=1, select bank1
  1305  004B  1303               	bcf	3,6	;RP1=0, select bank1
  1306  004C  00A0               	movwf	??_giro_read^(0+128)
  1307  004D  085C               	movf	giro_read@i^(0+128),w
  1308  004E  3EA4               	addlw	(low (giro_read@val| 0))& (0+255)
  1309  004F  0084               	movwf	4
  1310  0050  0820               	movf	??_giro_read^(0+128),w
  1311  0051  1383               	bcf	3,7	;select IRP bank1
  1312  0052  0080               	movwf	0
  1313  0053                     l3307:
  1314  0053  3001               	movlw	1
  1315  0054  07DC               	addwf	giro_read@i^(0+128),f
  1316  0055  1803               	skipnc
  1317  0056  0ADD               	incf	(giro_read@i+1)^(0+128),f
  1318  0057  3000               	movlw	0
  1319  0058  07DD               	addwf	(giro_read@i+1)^(0+128),f
  1320  0059                     l3309:
  1321  0059  085D               	movf	(giro_read@i+1)^(0+128),w
  1322  005A  3A80               	xorlw	128
  1323  005B  00FF               	movwf	btemp+1
  1324  005C  3080               	movlw	128
  1325  005D  027F               	subwf	btemp+1,w
  1326  005E  1D03               	skipz
  1327  005F  2862               	goto	u4885
  1328  0060  300D               	movlw	13
  1329  0061  025C               	subwf	giro_read@i^(0+128),w
  1330  0062                     u4885:
  1331  0062  1C03               	skipc
  1332  0063  2865               	goto	u4881
  1333  0064  2866               	goto	u4880
  1334  0065                     u4881:
  1335  0065  2844               	goto	l3305
  1336  0066                     u4880:
  1337  0066                     l3311:
  1338                           
  1339                           ;GIRO.c: 83:     val[13] = mas_read(1);
  1340  0066  3001               	movlw	1
  1341  0067  120A  118A  27C1  120A  118A  	fcall	_mas_read
  1342  006C  1683               	bsf	3,5	;RP0=1, select bank1
  1343  006D  1303               	bcf	3,6	;RP1=0, select bank1
  1344  006E  00A0               	movwf	??_giro_read^(0+128)
  1345  006F  0820               	movf	??_giro_read^(0+128),w
  1346  0070  00B1               	movwf	(giro_read@val^(0+128)+13)
  1347                           
  1348                           ;GIRO.c: 84:     stop();
  1349  0071  160A  118A  232D  120A  118A  	fcall	_stop
  1350  0076                     l3313:
  1351                           
  1352                           ;GIRO.c: 86:     almacenar1[0] = ((int) val[0] << 8) | ((int) val[1]);
  1353  0076  1683               	bsf	3,5	;RP0=1, select bank1
  1354  0077  1303               	bcf	3,6	;RP1=0, select bank1
  1355  0078  0825               	movf	(giro_read@val^(0+128)+1),w
  1356  0079  00A0               	movwf	??_giro_read^(0+128)
  1357  007A  01A1               	clrf	(??_giro_read^(0+128)+1)
  1358  007B  0824               	movf	giro_read@val^(0+128),w
  1359  007C  00A2               	movwf	(??_giro_read+2)^(0+128)
  1360  007D  01A3               	clrf	((??_giro_read+2)^(0+128)+1)
  1361  007E  0822               	movf	(??_giro_read+2)^(0+128),w
  1362  007F  00A3               	movwf	((??_giro_read+2)^(0+128)+1)
  1363  0080  01A2               	clrf	(??_giro_read+2)^(0+128)
  1364  0081  0820               	movf	??_giro_read^(0+128),w
  1365  0082  0422               	iorwf	(??_giro_read+2)^(0+128),w
  1366  0083  00CE               	movwf	giro_read@almacenar1^(0+128)
  1367  0084  0821               	movf	(??_giro_read+1)^(0+128),w
  1368  0085  0423               	iorwf	(??_giro_read+3)^(0+128),w
  1369  0086  00CF               	movwf	(giro_read@almacenar1+1)^(0+128)
  1370  0087                     l3315:
  1371                           
  1372                           ;GIRO.c: 87:     almacenar1[1] = ((int) val[2] << 8) | ((int) val[3]);
  1373  0087  0827               	movf	(giro_read@val^(0+128)+3),w
  1374  0088  00A0               	movwf	??_giro_read^(0+128)
  1375  0089  01A1               	clrf	(??_giro_read^(0+128)+1)
  1376  008A  0826               	movf	(giro_read@val^(0+128)+2),w
  1377  008B  00A2               	movwf	(??_giro_read+2)^(0+128)
  1378  008C  01A3               	clrf	((??_giro_read+2)^(0+128)+1)
  1379  008D  0822               	movf	(??_giro_read+2)^(0+128),w
  1380  008E  00A3               	movwf	((??_giro_read+2)^(0+128)+1)
  1381  008F  01A2               	clrf	(??_giro_read+2)^(0+128)
  1382  0090  0820               	movf	??_giro_read^(0+128),w
  1383  0091  0422               	iorwf	(??_giro_read+2)^(0+128),w
  1384  0092  00D0               	movwf	(giro_read@almacenar1^(0+128)+2)
  1385  0093  0821               	movf	(??_giro_read+1)^(0+128),w
  1386  0094  0423               	iorwf	(??_giro_read+3)^(0+128),w
  1387  0095  00D1               	movwf	((giro_read@almacenar1+1)^(0+128)+2)
  1388  0096                     l3317:
  1389                           
  1390                           ;GIRO.c: 88:     almacenar1[2] = ((int) val[4] << 8) | ((int) val[5]);
  1391  0096  0829               	movf	(giro_read@val^(0+128)+5),w
  1392  0097  00A0               	movwf	??_giro_read^(0+128)
  1393  0098  01A1               	clrf	(??_giro_read^(0+128)+1)
  1394  0099  0828               	movf	(giro_read@val^(0+128)+4),w
  1395  009A  00A2               	movwf	(??_giro_read+2)^(0+128)
  1396  009B  01A3               	clrf	((??_giro_read+2)^(0+128)+1)
  1397  009C  0822               	movf	(??_giro_read+2)^(0+128),w
  1398  009D  00A3               	movwf	((??_giro_read+2)^(0+128)+1)
  1399  009E  01A2               	clrf	(??_giro_read+2)^(0+128)
  1400  009F  0820               	movf	??_giro_read^(0+128),w
  1401  00A0  0422               	iorwf	(??_giro_read+2)^(0+128),w
  1402  00A1  00D2               	movwf	(giro_read@almacenar1^(0+128)+4)
  1403  00A2  0821               	movf	(??_giro_read+1)^(0+128),w
  1404  00A3  0423               	iorwf	(??_giro_read+3)^(0+128),w
  1405  00A4  00D3               	movwf	((giro_read@almacenar1+1)^(0+128)+4)
  1406  00A5                     l3319:
  1407                           
  1408                           ;GIRO.c: 89:     almacenar1[3] = ((int) val[6] << 8) | ((int) val[7]);
  1409  00A5  082B               	movf	(giro_read@val^(0+128)+7),w
  1410  00A6  00A0               	movwf	??_giro_read^(0+128)
  1411  00A7  01A1               	clrf	(??_giro_read^(0+128)+1)
  1412  00A8  082A               	movf	(giro_read@val^(0+128)+6),w
  1413  00A9  00A2               	movwf	(??_giro_read+2)^(0+128)
  1414  00AA  01A3               	clrf	((??_giro_read+2)^(0+128)+1)
  1415  00AB  0822               	movf	(??_giro_read+2)^(0+128),w
  1416  00AC  00A3               	movwf	((??_giro_read+2)^(0+128)+1)
  1417  00AD  01A2               	clrf	(??_giro_read+2)^(0+128)
  1418  00AE  0820               	movf	??_giro_read^(0+128),w
  1419  00AF  0422               	iorwf	(??_giro_read+2)^(0+128),w
  1420  00B0  00D4               	movwf	(giro_read@almacenar1^(0+128)+6)
  1421  00B1  0821               	movf	(??_giro_read+1)^(0+128),w
  1422  00B2  0423               	iorwf	(??_giro_read+3)^(0+128),w
  1423  00B3  00D5               	movwf	((giro_read@almacenar1+1)^(0+128)+6)
  1424  00B4                     l3321:
  1425                           
  1426                           ;GIRO.c: 90:     almacenar1[4] = ((int) val[8] << 8) | ((int) val[9]);
  1427  00B4  082D               	movf	(giro_read@val^(0+128)+9),w
  1428  00B5  00A0               	movwf	??_giro_read^(0+128)
  1429  00B6  01A1               	clrf	(??_giro_read^(0+128)+1)
  1430  00B7  082C               	movf	(giro_read@val^(0+128)+8),w
  1431  00B8  00A2               	movwf	(??_giro_read+2)^(0+128)
  1432  00B9  01A3               	clrf	((??_giro_read+2)^(0+128)+1)
  1433  00BA  0822               	movf	(??_giro_read+2)^(0+128),w
  1434  00BB  00A3               	movwf	((??_giro_read+2)^(0+128)+1)
  1435  00BC  01A2               	clrf	(??_giro_read+2)^(0+128)
  1436  00BD  0820               	movf	??_giro_read^(0+128),w
  1437  00BE  0422               	iorwf	(??_giro_read+2)^(0+128),w
  1438  00BF  00D6               	movwf	(giro_read@almacenar1^(0+128)+8)
  1439  00C0  0821               	movf	(??_giro_read+1)^(0+128),w
  1440  00C1  0423               	iorwf	(??_giro_read+3)^(0+128),w
  1441  00C2  00D7               	movwf	((giro_read@almacenar1+1)^(0+128)+8)
  1442  00C3                     l3323:
  1443                           
  1444                           ;GIRO.c: 91:     almacenar1[5] = ((int) val[10] << 8) | ((int) val[11]);
  1445  00C3  082F               	movf	(giro_read@val^(0+128)+11),w
  1446  00C4  00A0               	movwf	??_giro_read^(0+128)
  1447  00C5  01A1               	clrf	(??_giro_read^(0+128)+1)
  1448  00C6  082E               	movf	(giro_read@val^(0+128)+10),w
  1449  00C7  00A2               	movwf	(??_giro_read+2)^(0+128)
  1450  00C8  01A3               	clrf	((??_giro_read+2)^(0+128)+1)
  1451  00C9  0822               	movf	(??_giro_read+2)^(0+128),w
  1452  00CA  00A3               	movwf	((??_giro_read+2)^(0+128)+1)
  1453  00CB  01A2               	clrf	(??_giro_read+2)^(0+128)
  1454  00CC  0820               	movf	??_giro_read^(0+128),w
  1455  00CD  0422               	iorwf	(??_giro_read+2)^(0+128),w
  1456  00CE  00D8               	movwf	(giro_read@almacenar1^(0+128)+10)
  1457  00CF  0821               	movf	(??_giro_read+1)^(0+128),w
  1458  00D0  0423               	iorwf	(??_giro_read+3)^(0+128),w
  1459  00D1  00D9               	movwf	((giro_read@almacenar1+1)^(0+128)+10)
  1460  00D2                     l3325:
  1461                           
  1462                           ;GIRO.c: 92:     almacenar1[6] = ((int) val[12] << 8) | ((int) val[13]);
  1463  00D2  0831               	movf	(giro_read@val^(0+128)+13),w
  1464  00D3  00A0               	movwf	??_giro_read^(0+128)
  1465  00D4  01A1               	clrf	(??_giro_read^(0+128)+1)
  1466  00D5  0830               	movf	(giro_read@val^(0+128)+12),w
  1467  00D6  00A2               	movwf	(??_giro_read+2)^(0+128)
  1468  00D7  01A3               	clrf	((??_giro_read+2)^(0+128)+1)
  1469  00D8  0822               	movf	(??_giro_read+2)^(0+128),w
  1470  00D9  00A3               	movwf	((??_giro_read+2)^(0+128)+1)
  1471  00DA  01A2               	clrf	(??_giro_read+2)^(0+128)
  1472  00DB  0820               	movf	??_giro_read^(0+128),w
  1473  00DC  0422               	iorwf	(??_giro_read+2)^(0+128),w
  1474  00DD  00DA               	movwf	(giro_read@almacenar1^(0+128)+12)
  1475  00DE  0821               	movf	(??_giro_read+1)^(0+128),w
  1476  00DF  0423               	iorwf	(??_giro_read+3)^(0+128),w
  1477  00E0  00DB               	movwf	((giro_read@almacenar1+1)^(0+128)+12)
  1478  00E1                     l3327:
  1479                           
  1480                           ;GIRO.c: 97:     final[0] = ((float) almacenar1[0]) * 0.0005982;
  1481  00E1  303A               	movlw	58
  1482  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  1483  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  1484  00E4  00AD               	movwf	___flmul@b+3
  1485  00E5  301C               	movlw	28
  1486  00E6  00AC               	movwf	___flmul@b+2
  1487  00E7  30D0               	movlw	208
  1488  00E8  00AB               	movwf	___flmul@b+1
  1489  00E9  3086               	movlw	134
  1490  00EA  00AA               	movwf	___flmul@b
  1491  00EB  1683               	bsf	3,5	;RP0=1, select bank1
  1492  00EC  1303               	bcf	3,6	;RP1=0, select bank1
  1493  00ED  084E               	movf	giro_read@almacenar1^(0+128),w
  1494  00EE  00F3               	movwf	___xxtofl@val
  1495  00EF  084F               	movf	(giro_read@almacenar1+1)^(0+128),w
  1496  00F0  00F4               	movwf	___xxtofl@val+1
  1497  00F1  3000               	movlw	0
  1498  00F2  1BF4               	btfsc	___xxtofl@val+1,7
  1499  00F3  30FF               	movlw	255
  1500  00F4  00F5               	movwf	___xxtofl@val+2
  1501  00F5  00F6               	movwf	___xxtofl@val+3
  1502  00F6  3001               	movlw	1
  1503  00F7  160A  118A  2744  120A  118A  	fcall	___xxtofl
  1504  00FC  0876               	movf	?___xxtofl+3,w
  1505  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1506  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1507  00FF  00B1               	movwf	___flmul@a+3
  1508  0100  0875               	movf	?___xxtofl+2,w
  1509  0101  00B0               	movwf	___flmul@a+2
  1510  0102  0874               	movf	?___xxtofl+1,w
  1511  0103  00AF               	movwf	___flmul@a+1
  1512  0104  0873               	movf	?___xxtofl,w
  1513  0105  00AE               	movwf	___flmul@a
  1514  0106  120A  118A  2460  120A  118A  	fcall	___flmul
  1515  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1516  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1517  010D  082D               	movf	?___flmul+3,w
  1518  010E  1683               	bsf	3,5	;RP0=1, select bank1
  1519  010F  1303               	bcf	3,6	;RP1=0, select bank1
  1520  0110  00B5               	movwf	(giro_read@final+3)^(0+128)
  1521  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1522  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1523  0113  082C               	movf	?___flmul+2,w
  1524  0114  1683               	bsf	3,5	;RP0=1, select bank1
  1525  0115  1303               	bcf	3,6	;RP1=0, select bank1
  1526  0116  00B4               	movwf	(giro_read@final+2)^(0+128)
  1527  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1528  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1529  0119  082B               	movf	?___flmul+1,w
  1530  011A  1683               	bsf	3,5	;RP0=1, select bank1
  1531  011B  1303               	bcf	3,6	;RP1=0, select bank1
  1532  011C  00B3               	movwf	(giro_read@final+1)^(0+128)
  1533  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1534  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1535  011F  082A               	movf	?___flmul,w
  1536  0120  1683               	bsf	3,5	;RP0=1, select bank1
  1537  0121  1303               	bcf	3,6	;RP1=0, select bank1
  1538  0122  00B2               	movwf	giro_read@final^(0+128)
  1539  0123                     l3329:
  1540                           
  1541                           ;GIRO.c: 98:     final[1] = ((float) almacenar1[1]) * 0.0005982;
  1542  0123  303A               	movlw	58
  1543  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0126  00AD               	movwf	___flmul@b+3
  1546  0127  301C               	movlw	28
  1547  0128  00AC               	movwf	___flmul@b+2
  1548  0129  30D0               	movlw	208
  1549  012A  00AB               	movwf	___flmul@b+1
  1550  012B  3086               	movlw	134
  1551  012C  00AA               	movwf	___flmul@b
  1552  012D  1683               	bsf	3,5	;RP0=1, select bank1
  1553  012E  1303               	bcf	3,6	;RP1=0, select bank1
  1554  012F  0850               	movf	(giro_read@almacenar1^(0+128)+2),w
  1555  0130  00F3               	movwf	___xxtofl@val
  1556  0131  0851               	movf	((giro_read@almacenar1+1)^(0+128)+2),w
  1557  0132  00F4               	movwf	___xxtofl@val+1
  1558  0133  3000               	movlw	0
  1559  0134  1BF4               	btfsc	___xxtofl@val+1,7
  1560  0135  30FF               	movlw	255
  1561  0136  00F5               	movwf	___xxtofl@val+2
  1562  0137  00F6               	movwf	___xxtofl@val+3
  1563  0138  3001               	movlw	1
  1564  0139  160A  118A  2744  120A  118A  	fcall	___xxtofl
  1565  013E  0876               	movf	?___xxtofl+3,w
  1566  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1567  0140  1303               	bcf	3,6	;RP1=0, select bank0
  1568  0141  00B1               	movwf	___flmul@a+3
  1569  0142  0875               	movf	?___xxtofl+2,w
  1570  0143  00B0               	movwf	___flmul@a+2
  1571  0144  0874               	movf	?___xxtofl+1,w
  1572  0145  00AF               	movwf	___flmul@a+1
  1573  0146  0873               	movf	?___xxtofl,w
  1574  0147  00AE               	movwf	___flmul@a
  1575  0148  120A  118A  2460  120A  118A  	fcall	___flmul
  1576  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1577  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1578  014F  082D               	movf	?___flmul+3,w
  1579  0150  1683               	bsf	3,5	;RP0=1, select bank1
  1580  0151  1303               	bcf	3,6	;RP1=0, select bank1
  1581  0152  00B9               	movwf	((giro_read@final+3)^(0+128)+4)
  1582  0153  1283               	bcf	3,5	;RP0=0, select bank0
  1583  0154  1303               	bcf	3,6	;RP1=0, select bank0
  1584  0155  082C               	movf	?___flmul+2,w
  1585  0156  1683               	bsf	3,5	;RP0=1, select bank1
  1586  0157  1303               	bcf	3,6	;RP1=0, select bank1
  1587  0158  00B8               	movwf	((giro_read@final+2)^(0+128)+4)
  1588  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1589  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1590  015B  082B               	movf	?___flmul+1,w
  1591  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1592  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1593  015E  00B7               	movwf	((giro_read@final+1)^(0+128)+4)
  1594  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0161  082A               	movf	?___flmul,w
  1597  0162  1683               	bsf	3,5	;RP0=1, select bank1
  1598  0163  1303               	bcf	3,6	;RP1=0, select bank1
  1599  0164  00B6               	movwf	(giro_read@final^(0+128)+4)
  1600  0165                     l3331:
  1601                           
  1602                           ;GIRO.c: 99:     final[2] = ((float) almacenar1[2]) * 0.0005982;
  1603  0165  303A               	movlw	58
  1604  0166  1283               	bcf	3,5	;RP0=0, select bank0
  1605  0167  1303               	bcf	3,6	;RP1=0, select bank0
  1606  0168  00AD               	movwf	___flmul@b+3
  1607  0169  301C               	movlw	28
  1608  016A  00AC               	movwf	___flmul@b+2
  1609  016B  30D0               	movlw	208
  1610  016C  00AB               	movwf	___flmul@b+1
  1611  016D  3086               	movlw	134
  1612  016E  00AA               	movwf	___flmul@b
  1613  016F  1683               	bsf	3,5	;RP0=1, select bank1
  1614  0170  1303               	bcf	3,6	;RP1=0, select bank1
  1615  0171  0852               	movf	(giro_read@almacenar1^(0+128)+4),w
  1616  0172  00F3               	movwf	___xxtofl@val
  1617  0173  0853               	movf	((giro_read@almacenar1+1)^(0+128)+4),w
  1618  0174  00F4               	movwf	___xxtofl@val+1
  1619  0175  3000               	movlw	0
  1620  0176  1BF4               	btfsc	___xxtofl@val+1,7
  1621  0177  30FF               	movlw	255
  1622  0178  00F5               	movwf	___xxtofl@val+2
  1623  0179  00F6               	movwf	___xxtofl@val+3
  1624  017A  3001               	movlw	1
  1625  017B  160A  118A  2744  120A  118A  	fcall	___xxtofl
  1626  0180  0876               	movf	?___xxtofl+3,w
  1627  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1628  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1629  0183  00B1               	movwf	___flmul@a+3
  1630  0184  0875               	movf	?___xxtofl+2,w
  1631  0185  00B0               	movwf	___flmul@a+2
  1632  0186  0874               	movf	?___xxtofl+1,w
  1633  0187  00AF               	movwf	___flmul@a+1
  1634  0188  0873               	movf	?___xxtofl,w
  1635  0189  00AE               	movwf	___flmul@a
  1636  018A  120A  118A  2460  120A  118A  	fcall	___flmul
  1637  018F  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0190  1303               	bcf	3,6	;RP1=0, select bank0
  1639  0191  082D               	movf	?___flmul+3,w
  1640  0192  1683               	bsf	3,5	;RP0=1, select bank1
  1641  0193  1303               	bcf	3,6	;RP1=0, select bank1
  1642  0194  00BD               	movwf	((giro_read@final+3)^(0+128)+8)
  1643  0195  1283               	bcf	3,5	;RP0=0, select bank0
  1644  0196  1303               	bcf	3,6	;RP1=0, select bank0
  1645  0197  082C               	movf	?___flmul+2,w
  1646  0198  1683               	bsf	3,5	;RP0=1, select bank1
  1647  0199  1303               	bcf	3,6	;RP1=0, select bank1
  1648  019A  00BC               	movwf	((giro_read@final+2)^(0+128)+8)
  1649  019B  1283               	bcf	3,5	;RP0=0, select bank0
  1650  019C  1303               	bcf	3,6	;RP1=0, select bank0
  1651  019D  082B               	movf	?___flmul+1,w
  1652  019E  1683               	bsf	3,5	;RP0=1, select bank1
  1653  019F  1303               	bcf	3,6	;RP1=0, select bank1
  1654  01A0  00BB               	movwf	((giro_read@final+1)^(0+128)+8)
  1655  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1656  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  1657  01A3  082A               	movf	?___flmul,w
  1658  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  1659  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  1660  01A6  00BA               	movwf	(giro_read@final^(0+128)+8)
  1661  01A7                     l3333:
  1662                           
  1663                           ;GIRO.c: 100:     final[3] = ((float) almacenar1[3]) / 340 + 36.53;
  1664  01A7  3042               	movlw	66
  1665  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1666  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1667  01AA  00C7               	movwf	___fladd@b+3
  1668  01AB  3012               	movlw	18
  1669  01AC  00C6               	movwf	___fladd@b+2
  1670  01AD  301E               	movlw	30
  1671  01AE  00C5               	movwf	___fladd@b+1
  1672  01AF  30B8               	movlw	184
  1673  01B0  00C4               	movwf	___fladd@b
  1674  01B1  3043               	movlw	67
  1675  01B2  00AD               	movwf	___fldiv@a+3
  1676  01B3  30AA               	movlw	170
  1677  01B4  00AC               	movwf	___fldiv@a+2
  1678  01B5  3000               	movlw	0
  1679  01B6  00AB               	movwf	___fldiv@a+1
  1680  01B7  3000               	movlw	0
  1681  01B8  00AA               	movwf	___fldiv@a
  1682  01B9  1683               	bsf	3,5	;RP0=1, select bank1
  1683  01BA  1303               	bcf	3,6	;RP1=0, select bank1
  1684  01BB  0854               	movf	(giro_read@almacenar1^(0+128)+6),w
  1685  01BC  00F3               	movwf	___xxtofl@val
  1686  01BD  0855               	movf	((giro_read@almacenar1+1)^(0+128)+6),w
  1687  01BE  00F4               	movwf	___xxtofl@val+1
  1688  01BF  3000               	movlw	0
  1689  01C0  1BF4               	btfsc	___xxtofl@val+1,7
  1690  01C1  30FF               	movlw	255
  1691  01C2  00F5               	movwf	___xxtofl@val+2
  1692  01C3  00F6               	movwf	___xxtofl@val+3
  1693  01C4  3001               	movlw	1
  1694  01C5  160A  118A  2744  120A  118A  	fcall	___xxtofl
  1695  01CA  0876               	movf	?___xxtofl+3,w
  1696  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1697  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1698  01CD  00B1               	movwf	___fldiv@b+3
  1699  01CE  0875               	movf	?___xxtofl+2,w
  1700  01CF  00B0               	movwf	___fldiv@b+2
  1701  01D0  0874               	movf	?___xxtofl+1,w
  1702  01D1  00AF               	movwf	___fldiv@b+1
  1703  01D2  0873               	movf	?___xxtofl,w
  1704  01D3  00AE               	movwf	___fldiv@b
  1705  01D4  120A  158A  214F  120A  118A  	fcall	___fldiv
  1706  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1707  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1708  01DB  082D               	movf	?___fldiv+3,w
  1709  01DC  00CB               	movwf	___fladd@a+3
  1710  01DD  082C               	movf	?___fldiv+2,w
  1711  01DE  00CA               	movwf	___fladd@a+2
  1712  01DF  082B               	movf	?___fldiv+1,w
  1713  01E0  00C9               	movwf	___fladd@a+1
  1714  01E1  082A               	movf	?___fldiv,w
  1715  01E2  00C8               	movwf	___fladd@a
  1716  01E3  120A  158A  2578  120A  118A  	fcall	___fladd
  1717  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  1718  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  1719  01EA  0847               	movf	?___fladd+3,w
  1720  01EB  1683               	bsf	3,5	;RP0=1, select bank1
  1721  01EC  1303               	bcf	3,6	;RP1=0, select bank1
  1722  01ED  00C1               	movwf	((giro_read@final+3)^(0+128)+12)
  1723  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1724  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1725  01F0  0846               	movf	?___fladd+2,w
  1726  01F1  1683               	bsf	3,5	;RP0=1, select bank1
  1727  01F2  1303               	bcf	3,6	;RP1=0, select bank1
  1728  01F3  00C0               	movwf	((giro_read@final+2)^(0+128)+12)
  1729  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  1730  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  1731  01F6  0845               	movf	?___fladd+1,w
  1732  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  1733  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  1734  01F9  00BF               	movwf	((giro_read@final+1)^(0+128)+12)
  1735  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1736  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1737  01FC  0844               	movf	?___fladd,w
  1738  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  1739  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  1740  01FF  00BE               	movwf	(giro_read@final^(0+128)+12)
  1741  0200                     l3335:
  1742                           
  1743                           ;GIRO.c: 101:     final[4] = ((float) almacenar1[4]) * 0.00763;
  1744  0200  303B               	movlw	59
  1745  0201  1283               	bcf	3,5	;RP0=0, select bank0
  1746  0202  1303               	bcf	3,6	;RP1=0, select bank0
  1747  0203  00AD               	movwf	___flmul@b+3
  1748  0204  30FA               	movlw	250
  1749  0205  00AC               	movwf	___flmul@b+2
  1750  0206  3005               	movlw	5
  1751  0207  00AB               	movwf	___flmul@b+1
  1752  0208  3014               	movlw	20
  1753  0209  00AA               	movwf	___flmul@b
  1754  020A  1683               	bsf	3,5	;RP0=1, select bank1
  1755  020B  1303               	bcf	3,6	;RP1=0, select bank1
  1756  020C  0856               	movf	(giro_read@almacenar1^(0+128)+8),w
  1757  020D  00F3               	movwf	___xxtofl@val
  1758  020E  0857               	movf	((giro_read@almacenar1+1)^(0+128)+8),w
  1759  020F  00F4               	movwf	___xxtofl@val+1
  1760  0210  3000               	movlw	0
  1761  0211  1BF4               	btfsc	___xxtofl@val+1,7
  1762  0212  30FF               	movlw	255
  1763  0213  00F5               	movwf	___xxtofl@val+2
  1764  0214  00F6               	movwf	___xxtofl@val+3
  1765  0215  3001               	movlw	1
  1766  0216  160A  118A  2744  120A  118A  	fcall	___xxtofl
  1767  021B  0876               	movf	?___xxtofl+3,w
  1768  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1769  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1770  021E  00B1               	movwf	___flmul@a+3
  1771  021F  0875               	movf	?___xxtofl+2,w
  1772  0220  00B0               	movwf	___flmul@a+2
  1773  0221  0874               	movf	?___xxtofl+1,w
  1774  0222  00AF               	movwf	___flmul@a+1
  1775  0223  0873               	movf	?___xxtofl,w
  1776  0224  00AE               	movwf	___flmul@a
  1777  0225  120A  118A  2460  120A  118A  	fcall	___flmul
  1778  022A  1283               	bcf	3,5	;RP0=0, select bank0
  1779  022B  1303               	bcf	3,6	;RP1=0, select bank0
  1780  022C  082D               	movf	?___flmul+3,w
  1781  022D  1683               	bsf	3,5	;RP0=1, select bank1
  1782  022E  1303               	bcf	3,6	;RP1=0, select bank1
  1783  022F  00C5               	movwf	((giro_read@final+3)^(0+128)+16)
  1784  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1785  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1786  0232  082C               	movf	?___flmul+2,w
  1787  0233  1683               	bsf	3,5	;RP0=1, select bank1
  1788  0234  1303               	bcf	3,6	;RP1=0, select bank1
  1789  0235  00C4               	movwf	((giro_read@final+2)^(0+128)+16)
  1790  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1792  0238  082B               	movf	?___flmul+1,w
  1793  0239  1683               	bsf	3,5	;RP0=1, select bank1
  1794  023A  1303               	bcf	3,6	;RP1=0, select bank1
  1795  023B  00C3               	movwf	((giro_read@final+1)^(0+128)+16)
  1796  023C  1283               	bcf	3,5	;RP0=0, select bank0
  1797  023D  1303               	bcf	3,6	;RP1=0, select bank0
  1798  023E  082A               	movf	?___flmul,w
  1799  023F  1683               	bsf	3,5	;RP0=1, select bank1
  1800  0240  1303               	bcf	3,6	;RP1=0, select bank1
  1801  0241  00C2               	movwf	(giro_read@final^(0+128)+16)
  1802  0242                     l3337:
  1803                           
  1804                           ;GIRO.c: 102:     final[5] = ((float) almacenar1[5]) * 0.00763;
  1805  0242  303B               	movlw	59
  1806  0243  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0244  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0245  00AD               	movwf	___flmul@b+3
  1809  0246  30FA               	movlw	250
  1810  0247  00AC               	movwf	___flmul@b+2
  1811  0248  3005               	movlw	5
  1812  0249  00AB               	movwf	___flmul@b+1
  1813  024A  3014               	movlw	20
  1814  024B  00AA               	movwf	___flmul@b
  1815  024C  1683               	bsf	3,5	;RP0=1, select bank1
  1816  024D  1303               	bcf	3,6	;RP1=0, select bank1
  1817  024E  0858               	movf	(giro_read@almacenar1^(0+128)+10),w
  1818  024F  00F3               	movwf	___xxtofl@val
  1819  0250  0859               	movf	((giro_read@almacenar1+1)^(0+128)+10),w
  1820  0251  00F4               	movwf	___xxtofl@val+1
  1821  0252  3000               	movlw	0
  1822  0253  1BF4               	btfsc	___xxtofl@val+1,7
  1823  0254  30FF               	movlw	255
  1824  0255  00F5               	movwf	___xxtofl@val+2
  1825  0256  00F6               	movwf	___xxtofl@val+3
  1826  0257  3001               	movlw	1
  1827  0258  160A  118A  2744  120A  118A  	fcall	___xxtofl
  1828  025D  0876               	movf	?___xxtofl+3,w
  1829  025E  1283               	bcf	3,5	;RP0=0, select bank0
  1830  025F  1303               	bcf	3,6	;RP1=0, select bank0
  1831  0260  00B1               	movwf	___flmul@a+3
  1832  0261  0875               	movf	?___xxtofl+2,w
  1833  0262  00B0               	movwf	___flmul@a+2
  1834  0263  0874               	movf	?___xxtofl+1,w
  1835  0264  00AF               	movwf	___flmul@a+1
  1836  0265  0873               	movf	?___xxtofl,w
  1837  0266  00AE               	movwf	___flmul@a
  1838  0267  120A  118A  2460  120A  118A  	fcall	___flmul
  1839  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1840  026D  1303               	bcf	3,6	;RP1=0, select bank0
  1841  026E  082D               	movf	?___flmul+3,w
  1842  026F  1683               	bsf	3,5	;RP0=1, select bank1
  1843  0270  1303               	bcf	3,6	;RP1=0, select bank1
  1844  0271  00C9               	movwf	((giro_read@final+3)^(0+128)+20)
  1845  0272  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0273  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0274  082C               	movf	?___flmul+2,w
  1848  0275  1683               	bsf	3,5	;RP0=1, select bank1
  1849  0276  1303               	bcf	3,6	;RP1=0, select bank1
  1850  0277  00C8               	movwf	((giro_read@final+2)^(0+128)+20)
  1851  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1853  027A  082B               	movf	?___flmul+1,w
  1854  027B  1683               	bsf	3,5	;RP0=1, select bank1
  1855  027C  1303               	bcf	3,6	;RP1=0, select bank1
  1856  027D  00C7               	movwf	((giro_read@final+1)^(0+128)+20)
  1857  027E  1283               	bcf	3,5	;RP0=0, select bank0
  1858  027F  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0280  082A               	movf	?___flmul,w
  1860  0281  1683               	bsf	3,5	;RP0=1, select bank1
  1861  0282  1303               	bcf	3,6	;RP1=0, select bank1
  1862  0283  00C6               	movwf	(giro_read@final^(0+128)+20)
  1863  0284                     l3339:
  1864                           
  1865                           ;GIRO.c: 103:     final[6] = ((float) almacenar1[6]) * 0.00763;
  1866  0284  303B               	movlw	59
  1867  0285  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0286  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0287  00AD               	movwf	___flmul@b+3
  1870  0288  30FA               	movlw	250
  1871  0289  00AC               	movwf	___flmul@b+2
  1872  028A  3005               	movlw	5
  1873  028B  00AB               	movwf	___flmul@b+1
  1874  028C  3014               	movlw	20
  1875  028D  00AA               	movwf	___flmul@b
  1876  028E  1683               	bsf	3,5	;RP0=1, select bank1
  1877  028F  1303               	bcf	3,6	;RP1=0, select bank1
  1878  0290  085A               	movf	(giro_read@almacenar1^(0+128)+12),w
  1879  0291  00F3               	movwf	___xxtofl@val
  1880  0292  085B               	movf	((giro_read@almacenar1+1)^(0+128)+12),w
  1881  0293  00F4               	movwf	___xxtofl@val+1
  1882  0294  3000               	movlw	0
  1883  0295  1BF4               	btfsc	___xxtofl@val+1,7
  1884  0296  30FF               	movlw	255
  1885  0297  00F5               	movwf	___xxtofl@val+2
  1886  0298  00F6               	movwf	___xxtofl@val+3
  1887  0299  3001               	movlw	1
  1888  029A  160A  118A  2744  120A  118A  	fcall	___xxtofl
  1889  029F  0876               	movf	?___xxtofl+3,w
  1890  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1891  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1892  02A2  00B1               	movwf	___flmul@a+3
  1893  02A3  0875               	movf	?___xxtofl+2,w
  1894  02A4  00B0               	movwf	___flmul@a+2
  1895  02A5  0874               	movf	?___xxtofl+1,w
  1896  02A6  00AF               	movwf	___flmul@a+1
  1897  02A7  0873               	movf	?___xxtofl,w
  1898  02A8  00AE               	movwf	___flmul@a
  1899  02A9  120A  118A  2460  120A  118A  	fcall	___flmul
  1900  02AE  1283               	bcf	3,5	;RP0=0, select bank0
  1901  02AF  1303               	bcf	3,6	;RP1=0, select bank0
  1902  02B0  082D               	movf	?___flmul+3,w
  1903  02B1  1683               	bsf	3,5	;RP0=1, select bank1
  1904  02B2  1303               	bcf	3,6	;RP1=0, select bank1
  1905  02B3  00CD               	movwf	((giro_read@final+3)^(0+128)+24)
  1906  02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1907  02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1908  02B6  082C               	movf	?___flmul+2,w
  1909  02B7  1683               	bsf	3,5	;RP0=1, select bank1
  1910  02B8  1303               	bcf	3,6	;RP1=0, select bank1
  1911  02B9  00CC               	movwf	((giro_read@final+2)^(0+128)+24)
  1912  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1913  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1914  02BC  082B               	movf	?___flmul+1,w
  1915  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  1916  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  1917  02BF  00CB               	movwf	((giro_read@final+1)^(0+128)+24)
  1918  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1919  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1920  02C2  082A               	movf	?___flmul,w
  1921  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  1922  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  1923  02C5  00CA               	movwf	(giro_read@final^(0+128)+24)
  1924  02C6                     l3341:
  1925                           
  1926                           ;GIRO.c: 106:     impresion = ftoa(final[0], 2);
  1927  02C6  0835               	movf	(giro_read@final+3)^(0+128),w
  1928  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1929  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1930  02C9  00E3               	movwf	ftoa@f+3
  1931  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1932  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1933  02CC  0834               	movf	(giro_read@final+2)^(0+128),w
  1934  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  1935  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  1936  02CF  00E2               	movwf	ftoa@f+2
  1937  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  1938  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  1939  02D2  0833               	movf	(giro_read@final+1)^(0+128),w
  1940  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  1941  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  1942  02D5  00E1               	movwf	ftoa@f+1
  1943  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  1944  02D7  1303               	bcf	3,6	;RP1=0, select bank1
  1945  02D8  0832               	movf	giro_read@final^(0+128),w
  1946  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  1947  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  1948  02DB  00E0               	movwf	ftoa@f
  1949  02DC  3002               	movlw	2
  1950  02DD  00E4               	movwf	ftoa@status
  1951  02DE  3000               	movlw	0
  1952  02DF  00E5               	movwf	ftoa@status+1
  1953  02E0  120A  158A  207A  120A  118A  	fcall	_ftoa
  1954  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  1955  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  1956  02E7  00A0               	movwf	??_giro_read^(0+128)
  1957  02E8  0820               	movf	??_giro_read^(0+128),w
  1958  02E9  00DE               	movwf	giro_read@impresion^(0+128)
  1959  02EA                     l3343:
  1960                           
  1961                           ;GIRO.c: 107:     usart_string(impresion, 6);
  1962  02EA  085E               	movf	giro_read@impresion^(0+128),w
  1963  02EB  00F4               	movwf	usart_string@data
  1964  02EC  3000               	movlw	0
  1965  02ED  00F5               	movwf	usart_string@data+1
  1966  02EE  3006               	movlw	6
  1967  02EF  00A0               	movwf	??_giro_read^(0+128)
  1968  02F0  0820               	movf	??_giro_read^(0+128),w
  1969  02F1  00F6               	movwf	usart_string@max
  1970  02F2  160A  118A  24AB  120A  118A  	fcall	_usart_string
  1971  02F7                     l3345:
  1972                           
  1973                           ;GIRO.c: 109:     impresion = ftoa(final[1], 2);
  1974  02F7  3004               	movlw	4
  1975  02F8  3EB2               	addlw	(low (giro_read@final| 0))& (0+255)
  1976  02F9  0084               	movwf	4
  1977  02FA  1383               	bcf	3,7	;select IRP bank1
  1978  02FB  0800               	movf	0,w
  1979  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1980  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1981  02FE  00E0               	movwf	ftoa@f
  1982  02FF  0A84               	incf	4,f
  1983  0300  0800               	movf	0,w
  1984  0301  00E1               	movwf	ftoa@f+1
  1985  0302  0A84               	incf	4,f
  1986  0303  0800               	movf	0,w
  1987  0304  00E2               	movwf	ftoa@f+2
  1988  0305  0A84               	incf	4,f
  1989  0306  0800               	movf	0,w
  1990  0307  00E3               	movwf	ftoa@f+3
  1991  0308  3002               	movlw	2
  1992  0309  00E4               	movwf	ftoa@status
  1993  030A  3000               	movlw	0
  1994  030B  00E5               	movwf	ftoa@status+1
  1995  030C  120A  158A  207A  120A  118A  	fcall	_ftoa
  1996  0311  1683               	bsf	3,5	;RP0=1, select bank1
  1997  0312  1303               	bcf	3,6	;RP1=0, select bank1
  1998  0313  00A0               	movwf	??_giro_read^(0+128)
  1999  0314  0820               	movf	??_giro_read^(0+128),w
  2000  0315  00DE               	movwf	giro_read@impresion^(0+128)
  2001  0316                     l3347:
  2002                           
  2003                           ;GIRO.c: 110:     usart_string(" ", 10);
  2004  0316  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2005  0317  00F4               	movwf	usart_string@data
  2006  0318  3080               	movlw	128
  2007  0319  00F5               	movwf	usart_string@data+1
  2008  031A  300A               	movlw	10
  2009  031B  00A0               	movwf	??_giro_read^(0+128)
  2010  031C  0820               	movf	??_giro_read^(0+128),w
  2011  031D  00F6               	movwf	usart_string@max
  2012  031E  160A  118A  24AB  120A  118A  	fcall	_usart_string
  2013  0323                     l3349:
  2014                           
  2015                           ;GIRO.c: 111:     usart_string(impresion, 6);
  2016  0323  1683               	bsf	3,5	;RP0=1, select bank1
  2017  0324  1303               	bcf	3,6	;RP1=0, select bank1
  2018  0325  085E               	movf	giro_read@impresion^(0+128),w
  2019  0326  00F4               	movwf	usart_string@data
  2020  0327  3000               	movlw	0
  2021  0328  00F5               	movwf	usart_string@data+1
  2022  0329  3006               	movlw	6
  2023  032A  00A0               	movwf	??_giro_read^(0+128)
  2024  032B  0820               	movf	??_giro_read^(0+128),w
  2025  032C  00F6               	movwf	usart_string@max
  2026  032D  160A  118A  24AB  120A  118A  	fcall	_usart_string
  2027  0332                     l3351:
  2028                           
  2029                           ;GIRO.c: 113:     impresion = ftoa(final[2], 2);
  2030  0332  3008               	movlw	8
  2031  0333  3EB2               	addlw	(low (giro_read@final| 0))& (0+255)
  2032  0334  0084               	movwf	4
  2033  0335  1383               	bcf	3,7	;select IRP bank1
  2034  0336  0800               	movf	0,w
  2035  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2036  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2037  0339  00E0               	movwf	ftoa@f
  2038  033A  0A84               	incf	4,f
  2039  033B  0800               	movf	0,w
  2040  033C  00E1               	movwf	ftoa@f+1
  2041  033D  0A84               	incf	4,f
  2042  033E  0800               	movf	0,w
  2043  033F  00E2               	movwf	ftoa@f+2
  2044  0340  0A84               	incf	4,f
  2045  0341  0800               	movf	0,w
  2046  0342  00E3               	movwf	ftoa@f+3
  2047  0343  3002               	movlw	2
  2048  0344  00E4               	movwf	ftoa@status
  2049  0345  3000               	movlw	0
  2050  0346  00E5               	movwf	ftoa@status+1
  2051  0347  120A  158A  207A  120A  118A  	fcall	_ftoa
  2052  034C  1683               	bsf	3,5	;RP0=1, select bank1
  2053  034D  1303               	bcf	3,6	;RP1=0, select bank1
  2054  034E  00A0               	movwf	??_giro_read^(0+128)
  2055  034F  0820               	movf	??_giro_read^(0+128),w
  2056  0350  00DE               	movwf	giro_read@impresion^(0+128)
  2057  0351                     l3353:
  2058                           
  2059                           ;GIRO.c: 114:     usart_string(" ", 10);
  2060  0351  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2061  0352  00F4               	movwf	usart_string@data
  2062  0353  3080               	movlw	128
  2063  0354  00F5               	movwf	usart_string@data+1
  2064  0355  300A               	movlw	10
  2065  0356  00A0               	movwf	??_giro_read^(0+128)
  2066  0357  0820               	movf	??_giro_read^(0+128),w
  2067  0358  00F6               	movwf	usart_string@max
  2068  0359  160A  118A  24AB  120A  118A  	fcall	_usart_string
  2069  035E                     l3355:
  2070                           
  2071                           ;GIRO.c: 115:     usart_string(impresion, 6);
  2072  035E  1683               	bsf	3,5	;RP0=1, select bank1
  2073  035F  1303               	bcf	3,6	;RP1=0, select bank1
  2074  0360  085E               	movf	giro_read@impresion^(0+128),w
  2075  0361  00F4               	movwf	usart_string@data
  2076  0362  3000               	movlw	0
  2077  0363  00F5               	movwf	usart_string@data+1
  2078  0364  3006               	movlw	6
  2079  0365  00A0               	movwf	??_giro_read^(0+128)
  2080  0366  0820               	movf	??_giro_read^(0+128),w
  2081  0367  00F6               	movwf	usart_string@max
  2082  0368  160A  118A  24AB  120A  118A  	fcall	_usart_string
  2083  036D                     l3357:
  2084                           
  2085                           ;GIRO.c: 117:     impresion = ftoa(final[3], 2);
  2086  036D  300C               	movlw	12
  2087  036E  3EB2               	addlw	(low (giro_read@final| 0))& (0+255)
  2088  036F  0084               	movwf	4
  2089  0370  1383               	bcf	3,7	;select IRP bank1
  2090  0371  0800               	movf	0,w
  2091  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2092  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2093  0374  00E0               	movwf	ftoa@f
  2094  0375  0A84               	incf	4,f
  2095  0376  0800               	movf	0,w
  2096  0377  00E1               	movwf	ftoa@f+1
  2097  0378  0A84               	incf	4,f
  2098  0379  0800               	movf	0,w
  2099  037A  00E2               	movwf	ftoa@f+2
  2100  037B  0A84               	incf	4,f
  2101  037C  0800               	movf	0,w
  2102  037D  00E3               	movwf	ftoa@f+3
  2103  037E  3002               	movlw	2
  2104  037F  00E4               	movwf	ftoa@status
  2105  0380  3000               	movlw	0
  2106  0381  00E5               	movwf	ftoa@status+1
  2107  0382  120A  158A  207A  120A  118A  	fcall	_ftoa
  2108  0387  1683               	bsf	3,5	;RP0=1, select bank1
  2109  0388  1303               	bcf	3,6	;RP1=0, select bank1
  2110  0389  00A0               	movwf	??_giro_read^(0+128)
  2111  038A  0820               	movf	??_giro_read^(0+128),w
  2112  038B  00DE               	movwf	giro_read@impresion^(0+128)
  2113  038C                     l3359:
  2114                           
  2115                           ;GIRO.c: 118:     usart_string(" ", 10);
  2116  038C  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2117  038D  00F4               	movwf	usart_string@data
  2118  038E  3080               	movlw	128
  2119  038F  00F5               	movwf	usart_string@data+1
  2120  0390  300A               	movlw	10
  2121  0391  00A0               	movwf	??_giro_read^(0+128)
  2122  0392  0820               	movf	??_giro_read^(0+128),w
  2123  0393  00F6               	movwf	usart_string@max
  2124  0394  160A  118A  24AB  120A  118A  	fcall	_usart_string
  2125  0399                     l3361:
  2126                           
  2127                           ;GIRO.c: 119:     usart_string(impresion, 6);
  2128  0399  1683               	bsf	3,5	;RP0=1, select bank1
  2129  039A  1303               	bcf	3,6	;RP1=0, select bank1
  2130  039B  085E               	movf	giro_read@impresion^(0+128),w
  2131  039C  00F4               	movwf	usart_string@data
  2132  039D  3000               	movlw	0
  2133  039E  00F5               	movwf	usart_string@data+1
  2134  039F  3006               	movlw	6
  2135  03A0  00A0               	movwf	??_giro_read^(0+128)
  2136  03A1  0820               	movf	??_giro_read^(0+128),w
  2137  03A2  00F6               	movwf	usart_string@max
  2138  03A3  160A  118A  24AB  120A  118A  	fcall	_usart_string
  2139  03A8                     l3363:
  2140                           
  2141                           ;GIRO.c: 121:     impresion = ftoa(final[4], 2);
  2142  03A8  3010               	movlw	16
  2143  03A9  3EB2               	addlw	(low (giro_read@final| 0))& (0+255)
  2144  03AA  0084               	movwf	4
  2145  03AB  1383               	bcf	3,7	;select IRP bank1
  2146  03AC  0800               	movf	0,w
  2147  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2148  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2149  03AF  00E0               	movwf	ftoa@f
  2150  03B0  0A84               	incf	4,f
  2151  03B1  0800               	movf	0,w
  2152  03B2  00E1               	movwf	ftoa@f+1
  2153  03B3  0A84               	incf	4,f
  2154  03B4  0800               	movf	0,w
  2155  03B5  00E2               	movwf	ftoa@f+2
  2156  03B6  0A84               	incf	4,f
  2157  03B7  0800               	movf	0,w
  2158  03B8  00E3               	movwf	ftoa@f+3
  2159  03B9  3002               	movlw	2
  2160  03BA  00E4               	movwf	ftoa@status
  2161  03BB  3000               	movlw	0
  2162  03BC  00E5               	movwf	ftoa@status+1
  2163  03BD  120A  158A  207A  120A  118A  	fcall	_ftoa
  2164  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  2165  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  2166  03C4  00A0               	movwf	??_giro_read^(0+128)
  2167  03C5  0820               	movf	??_giro_read^(0+128),w
  2168  03C6  00DE               	movwf	giro_read@impresion^(0+128)
  2169  03C7                     l3365:
  2170                           
  2171                           ;GIRO.c: 122:     usart_string(" ", 10);
  2172  03C7  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2173  03C8  00F4               	movwf	usart_string@data
  2174  03C9  3080               	movlw	128
  2175  03CA  00F5               	movwf	usart_string@data+1
  2176  03CB  300A               	movlw	10
  2177  03CC  00A0               	movwf	??_giro_read^(0+128)
  2178  03CD  0820               	movf	??_giro_read^(0+128),w
  2179  03CE  00F6               	movwf	usart_string@max
  2180  03CF  160A  118A  24AB  120A  118A  	fcall	_usart_string
  2181  03D4                     l3367:
  2182                           
  2183                           ;GIRO.c: 123:     usart_string(impresion, 6);
  2184  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  2185  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  2186  03D6  085E               	movf	giro_read@impresion^(0+128),w
  2187  03D7  00F4               	movwf	usart_string@data
  2188  03D8  3000               	movlw	0
  2189  03D9  00F5               	movwf	usart_string@data+1
  2190  03DA  3006               	movlw	6
  2191  03DB  00A0               	movwf	??_giro_read^(0+128)
  2192  03DC  0820               	movf	??_giro_read^(0+128),w
  2193  03DD  00F6               	movwf	usart_string@max
  2194  03DE  160A  118A  24AB  120A  118A  	fcall	_usart_string
  2195  03E3                     l3369:
  2196                           
  2197                           ;GIRO.c: 124:     impresion = ftoa(final[5], 2);
  2198  03E3  3014               	movlw	20
  2199  03E4  3EB2               	addlw	(low (giro_read@final| 0))& (0+255)
  2200  03E5  0084               	movwf	4
  2201  03E6  1383               	bcf	3,7	;select IRP bank1
  2202  03E7  0800               	movf	0,w
  2203  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2204  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2205  03EA  00E0               	movwf	ftoa@f
  2206  03EB  0A84               	incf	4,f
  2207  03EC  0800               	movf	0,w
  2208  03ED  00E1               	movwf	ftoa@f+1
  2209  03EE  0A84               	incf	4,f
  2210  03EF  0800               	movf	0,w
  2211  03F0  00E2               	movwf	ftoa@f+2
  2212  03F1  0A84               	incf	4,f
  2213  03F2  0800               	movf	0,w
  2214  03F3  00E3               	movwf	ftoa@f+3
  2215  03F4  3002               	movlw	2
  2216  03F5  00E4               	movwf	ftoa@status
  2217  03F6  3000               	movlw	0
  2218  03F7  00E5               	movwf	ftoa@status+1
  2219  03F8  120A  158A  207A  120A  118A  	fcall	_ftoa
  2220  03FD  1683               	bsf	3,5	;RP0=1, select bank1
  2221  03FE  1303               	bcf	3,6	;RP1=0, select bank1
  2222  03FF  00A0               	movwf	??_giro_read^(0+128)
  2223  0400  0820               	movf	??_giro_read^(0+128),w
  2224  0401  00DE               	movwf	giro_read@impresion^(0+128)
  2225  0402                     l3371:
  2226                           
  2227                           ;GIRO.c: 125:     usart_string(" ", 10);
  2228  0402  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2229  0403  00F4               	movwf	usart_string@data
  2230  0404  3080               	movlw	128
  2231  0405  00F5               	movwf	usart_string@data+1
  2232  0406  300A               	movlw	10
  2233  0407  00A0               	movwf	??_giro_read^(0+128)
  2234  0408  0820               	movf	??_giro_read^(0+128),w
  2235  0409  00F6               	movwf	usart_string@max
  2236  040A  160A  118A  24AB  120A  118A  	fcall	_usart_string
  2237  040F                     l3373:
  2238                           
  2239                           ;GIRO.c: 126:     usart_string(impresion, 6);
  2240  040F  1683               	bsf	3,5	;RP0=1, select bank1
  2241  0410  1303               	bcf	3,6	;RP1=0, select bank1
  2242  0411  085E               	movf	giro_read@impresion^(0+128),w
  2243  0412  00F4               	movwf	usart_string@data
  2244  0413  3000               	movlw	0
  2245  0414  00F5               	movwf	usart_string@data+1
  2246  0415  3006               	movlw	6
  2247  0416  00A0               	movwf	??_giro_read^(0+128)
  2248  0417  0820               	movf	??_giro_read^(0+128),w
  2249  0418  00F6               	movwf	usart_string@max
  2250  0419  160A  118A  24AB  120A  118A  	fcall	_usart_string
  2251  041E                     l3375:
  2252                           
  2253                           ;GIRO.c: 128:     impresion = ftoa(final[6], 2);
  2254  041E  3018               	movlw	24
  2255  041F  3EB2               	addlw	(low (giro_read@final| 0))& (0+255)
  2256  0420  0084               	movwf	4
  2257  0421  1383               	bcf	3,7	;select IRP bank1
  2258  0422  0800               	movf	0,w
  2259  0423  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0424  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0425  00E0               	movwf	ftoa@f
  2262  0426  0A84               	incf	4,f
  2263  0427  0800               	movf	0,w
  2264  0428  00E1               	movwf	ftoa@f+1
  2265  0429  0A84               	incf	4,f
  2266  042A  0800               	movf	0,w
  2267  042B  00E2               	movwf	ftoa@f+2
  2268  042C  0A84               	incf	4,f
  2269  042D  0800               	movf	0,w
  2270  042E  00E3               	movwf	ftoa@f+3
  2271  042F  3002               	movlw	2
  2272  0430  00E4               	movwf	ftoa@status
  2273  0431  3000               	movlw	0
  2274  0432  00E5               	movwf	ftoa@status+1
  2275  0433  120A  158A  207A  120A  118A  	fcall	_ftoa
  2276  0438  1683               	bsf	3,5	;RP0=1, select bank1
  2277  0439  1303               	bcf	3,6	;RP1=0, select bank1
  2278  043A  00A0               	movwf	??_giro_read^(0+128)
  2279  043B  0820               	movf	??_giro_read^(0+128),w
  2280  043C  00DE               	movwf	giro_read@impresion^(0+128)
  2281  043D                     l3377:
  2282                           
  2283                           ;GIRO.c: 129:     usart_string(" ", 10);
  2284  043D  3034               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2285  043E  00F4               	movwf	usart_string@data
  2286  043F  3080               	movlw	128
  2287  0440  00F5               	movwf	usart_string@data+1
  2288  0441  300A               	movlw	10
  2289  0442  00A0               	movwf	??_giro_read^(0+128)
  2290  0443  0820               	movf	??_giro_read^(0+128),w
  2291  0444  00F6               	movwf	usart_string@max
  2292  0445  160A  118A  24AB  120A  118A  	fcall	_usart_string
  2293  044A                     l3379:
  2294                           
  2295                           ;GIRO.c: 130:     usart_string(impresion, 6);
  2296  044A  1683               	bsf	3,5	;RP0=1, select bank1
  2297  044B  1303               	bcf	3,6	;RP1=0, select bank1
  2298  044C  085E               	movf	giro_read@impresion^(0+128),w
  2299  044D  00F4               	movwf	usart_string@data
  2300  044E  3000               	movlw	0
  2301  044F  00F5               	movwf	usart_string@data+1
  2302  0450  3006               	movlw	6
  2303  0451  00A0               	movwf	??_giro_read^(0+128)
  2304  0452  0820               	movf	??_giro_read^(0+128),w
  2305  0453  00F6               	movwf	usart_string@max
  2306  0454  160A  118A  24AB  120A  118A  	fcall	_usart_string
  2307  0459                     l3381:
  2308                           
  2309                           ;GIRO.c: 132:     usart_char('\n');
  2310  0459  300A               	movlw	10
  2311  045A  160A  118A  235C  120A  118A  	fcall	_usart_char
  2312  045F                     l183:
  2313  045F  0008               	return
  2314  0460                     __end_of_giro_read:
  2315                           
  2316                           	psect	text2
  2317  14AB                     __ptext2:	
  2318 ;; *************** function _usart_string *****************
  2319 ;; Defined at:
  2320 ;;		line 31 in file "USART.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  data            2    4[COMMON] PTR const unsigned char 
  2323 ;;		 -> ftoa@buf(17), STR_6(2), STR_5(2), STR_4(2), 
  2324 ;;		 -> STR_3(2), STR_2(2), STR_1(2), 
  2325 ;;  max             1    6[COMMON] const unsigned char 
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;  i               2    0[BANK0 ] int 
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         3       0       0       0       0
  2338 ;;      Locals:         0       2       0       0       0
  2339 ;;      Temps:          3       0       0       0       0
  2340 ;;      Totals:         6       2       0       0       0
  2341 ;;Total ram usage:        8 bytes
  2342 ;; Hardware stack levels used:    1
  2343 ;; Hardware stack levels required when called:    2
  2344 ;; This function calls:
  2345 ;;		_usart_char
  2346 ;; This function is called by:
  2347 ;;		_giro_read
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           
  2352                           ;psect for function _usart_string
  2353  14AB                     _usart_string:
  2354  14AB                     l2651:	
  2355                           ;incstack = 0
  2356                           ; Regs used in _usart_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2357                           
  2358                           
  2359                           ;USART.c: 32:     int i=0;
  2360  14AB  1283               	bcf	3,5	;RP0=0, select bank0
  2361  14AC  1303               	bcf	3,6	;RP1=0, select bank0
  2362  14AD  01A0               	clrf	usart_string@i
  2363  14AE  01A1               	clrf	usart_string@i+1
  2364                           
  2365                           ;USART.c: 33:     for (i=0 ; i<max && data[i]!='\0' ; i++) {
  2366  14AF  01A0               	clrf	usart_string@i
  2367  14B0  01A1               	clrf	usart_string@i+1
  2368  14B1  2CD6               	goto	l2657
  2369  14B2                     l2653:
  2370                           
  2371                           ;USART.c: 34:         usart_char(data[i]);
  2372  14B2  0820               	movf	usart_string@i,w
  2373  14B3  0774               	addwf	usart_string@data,w
  2374  14B4  00F8               	movwf	??_usart_string+1
  2375  14B5  0875               	movf	usart_string@data+1,w
  2376  14B6  00F7               	movwf	??_usart_string
  2377  14B7  1803               	skipnc
  2378  14B8  0AF7               	incf	??_usart_string,f
  2379  14B9  1FA0               	btfss	usart_string@i,7
  2380  14BA  2CBC               	goto	u3780
  2381  14BB  03F7               	decf	??_usart_string,f
  2382  14BC                     u3780:
  2383  14BC  0877               	movf	??_usart_string,w
  2384  14BD  00F9               	movwf	??_usart_string+2
  2385  14BE  0879               	movf	??_usart_string+2,w
  2386  14BF  1283               	bcf	3,5	;RP0=0, select bank0
  2387  14C0  1303               	bcf	3,6	;RP1=0, select bank0
  2388  14C1  00FF               	movwf	btemp+1
  2389  14C2  0878               	movf	??_usart_string+1,w
  2390  14C3  0084               	movwf	4
  2391  14C4  160A  118A  2000  160A  118A  	fcall	stringtab
  2392  14C9  160A  118A  235C  160A  118A  	fcall	_usart_char
  2393  14CE                     l2655:
  2394                           
  2395                           ;USART.c: 35:     }
  2396  14CE  3001               	movlw	1
  2397  14CF  1283               	bcf	3,5	;RP0=0, select bank0
  2398  14D0  1303               	bcf	3,6	;RP1=0, select bank0
  2399  14D1  07A0               	addwf	usart_string@i,f
  2400  14D2  1803               	skipnc
  2401  14D3  0AA1               	incf	usart_string@i+1,f
  2402  14D4  3000               	movlw	0
  2403  14D5  07A1               	addwf	usart_string@i+1,f
  2404  14D6                     l2657:
  2405  14D6  0821               	movf	usart_string@i+1,w
  2406  14D7  3A80               	xorlw	128
  2407  14D8  00F7               	movwf	??_usart_string
  2408  14D9  3080               	movlw	128
  2409  14DA  0277               	subwf	??_usart_string,w
  2410  14DB  1D03               	skipz
  2411  14DC  2CDF               	goto	u3795
  2412  14DD  0876               	movf	usart_string@max,w
  2413  14DE  0220               	subwf	usart_string@i,w
  2414  14DF                     u3795:
  2415  14DF  1803               	skipnc
  2416  14E0  2CE2               	goto	u3791
  2417  14E1  2CE3               	goto	u3790
  2418  14E2                     u3791:
  2419  14E2  2D01               	goto	l2661
  2420  14E3                     u3790:
  2421  14E3                     l2659:
  2422  14E3  1283               	bcf	3,5	;RP0=0, select bank0
  2423  14E4  1303               	bcf	3,6	;RP1=0, select bank0
  2424  14E5  0820               	movf	usart_string@i,w
  2425  14E6  0774               	addwf	usart_string@data,w
  2426  14E7  00F8               	movwf	??_usart_string+1
  2427  14E8  0875               	movf	usart_string@data+1,w
  2428  14E9  00F7               	movwf	??_usart_string
  2429  14EA  1803               	skipnc
  2430  14EB  0AF7               	incf	??_usart_string,f
  2431  14EC  1FA0               	btfss	usart_string@i,7
  2432  14ED  2CEF               	goto	u3800
  2433  14EE  03F7               	decf	??_usart_string,f
  2434  14EF                     u3800:
  2435  14EF  0877               	movf	??_usart_string,w
  2436  14F0  00F9               	movwf	??_usart_string+2
  2437  14F1  0879               	movf	??_usart_string+2,w
  2438  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  2439  14F3  1303               	bcf	3,6	;RP1=0, select bank0
  2440  14F4  00FF               	movwf	btemp+1
  2441  14F5  0878               	movf	??_usart_string+1,w
  2442  14F6  0084               	movwf	4
  2443  14F7  160A  118A  2000  160A  118A  	fcall	stringtab
  2444  14FC  3A00               	xorlw	0
  2445  14FD  1D03               	skipz
  2446  14FE  2D00               	goto	u3811
  2447  14FF  2D01               	goto	u3810
  2448  1500                     u3811:
  2449  1500  2CB2               	goto	l2653
  2450  1501                     u3810:
  2451  1501                     l2661:
  2452                           
  2453                           ;USART.c: 36:     _delay((unsigned long)((30)*(4000000/4000.0)));
  2454  1501  3027               	movlw	39
  2455  1502  00F8               	movwf	??_usart_string+1
  2456  1503  30F5               	movlw	245
  2457  1504  00F7               	movwf	??_usart_string
  2458  1505                     u4907:
  2459  1505  0BF7               	decfsz	??_usart_string,f
  2460  1506  2D05               	goto	u4907
  2461  1507  0BF8               	decfsz	??_usart_string+1,f
  2462  1508  2D05               	goto	u4907
  2463  1509                     l39:
  2464  1509  0008               	return
  2465  150A                     __end_of_usart_string:
  2466                           
  2467                           	psect	text3
  2468  135C                     __ptext3:	
  2469 ;; *************** function _usart_char *****************
  2470 ;; Defined at:
  2471 ;;		line 26 in file "USART.c"
  2472 ;; Parameters:    Size  Location     Type
  2473 ;;  t               1    wreg     const unsigned char 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  t               1    3[COMMON] const unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      void 
  2478 ;; Registers used:
  2479 ;;		wreg
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2485 ;;      Params:         0       0       0       0       0
  2486 ;;      Locals:         1       0       0       0       0
  2487 ;;      Temps:          0       0       0       0       0
  2488 ;;      Totals:         1       0       0       0       0
  2489 ;;Total ram usage:        1 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:    1
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_usart_string
  2496 ;;		_giro_read
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           
  2501                           ;psect for function _usart_char
  2502  135C                     _usart_char:
  2503                           
  2504                           ;incstack = 0
  2505                           ; Regs used in _usart_char: [wreg]
  2506                           ;usart_char@t stored from wreg
  2507  135C  00F3               	movwf	usart_char@t
  2508  135D                     l2257:
  2509  135D                     l28:	
  2510                           ;USART.c: 27:     while (TXSTAbits.TRMT == 0);
  2511                           
  2512  135D  1683               	bsf	3,5	;RP0=1, select bank1
  2513  135E  1303               	bcf	3,6	;RP1=0, select bank1
  2514  135F  1C98               	btfss	24,1	;volatile
  2515  1360  2B62               	goto	u2831
  2516  1361  2B63               	goto	u2830
  2517  1362                     u2831:
  2518  1362  2B5D               	goto	l28
  2519  1363                     u2830:
  2520  1363                     l2259:
  2521                           
  2522                           ;USART.c: 28:     TXREG = t;
  2523  1363  0873               	movf	usart_char@t,w
  2524  1364  1283               	bcf	3,5	;RP0=0, select bank0
  2525  1365  1303               	bcf	3,6	;RP1=0, select bank0
  2526  1366  0099               	movwf	25	;volatile
  2527  1367                     l31:
  2528  1367  0008               	return
  2529  1368                     __end_of_usart_char:
  2530                           
  2531                           	psect	text4
  2532  07C1                     __ptext4:	
  2533 ;; *************** function _mas_read *****************
  2534 ;; Defined at:
  2535 ;;		line 89 in file "I2C.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  an              1    wreg     unsigned char 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  an              1    4[COMMON] unsigned char 
  2540 ;;  data            1    5[COMMON] unsigned char 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      unsigned char 
  2543 ;; Registers used:
  2544 ;;		wreg, status,2, status,0, pclath, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2550 ;;      Params:         0       0       0       0       0
  2551 ;;      Locals:         2       0       0       0       0
  2552 ;;      Temps:          1       0       0       0       0
  2553 ;;      Totals:         3       0       0       0       0
  2554 ;;Total ram usage:        3 bytes
  2555 ;; Hardware stack levels used:    1
  2556 ;; Hardware stack levels required when called:    2
  2557 ;; This function calls:
  2558 ;;		_ack_i2c
  2559 ;;		_nack_i2c
  2560 ;;		_wait
  2561 ;; This function is called by:
  2562 ;;		_giro_read
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           
  2567                           ;psect for function _mas_read
  2568  07C1                     _mas_read:
  2569                           
  2570                           ;incstack = 0
  2571                           ; Regs used in _mas_read: [wreg+status,2+status,0+pclath+cstack]
  2572                           ;mas_read@an stored from wreg
  2573  07C1  00F4               	movwf	mas_read@an
  2574  07C2                     l2675:
  2575                           
  2576                           ;I2C.c: 89: unsigned char mas_read(unsigned char an);I2C.c: 90: { wait();
  2577  07C2  160A  118A  2375  120A  118A  	fcall	_wait
  2578  07C7                     l2677:
  2579                           
  2580                           ;I2C.c: 92:     unsigned char data;;I2C.c: 93:     RCEN = 1;
  2581  07C7  1683               	bsf	3,5	;RP0=1, select bank1
  2582  07C8  1303               	bcf	3,6	;RP1=0, select bank1
  2583  07C9  1591               	bsf	17,3	;volatile
  2584  07CA                     l139:	
  2585                           ;I2C.c: 94:     while(!BF);
  2586                           
  2587  07CA  1C14               	btfss	20,0	;volatile
  2588  07CB  2FCD               	goto	u3821
  2589  07CC  2FCE               	goto	u3820
  2590  07CD                     u3821:
  2591  07CD  2FCA               	goto	l139
  2592  07CE                     u3820:
  2593  07CE                     l2679:
  2594                           
  2595                           ;I2C.c: 95:     data = SSPBUF;
  2596  07CE  1283               	bcf	3,5	;RP0=0, select bank0
  2597  07CF  1303               	bcf	3,6	;RP1=0, select bank0
  2598  07D0  0813               	movf	19,w	;volatile
  2599  07D1  00F3               	movwf	??_mas_read
  2600  07D2  0873               	movf	??_mas_read,w
  2601  07D3  00F5               	movwf	mas_read@data
  2602  07D4                     l2681:
  2603                           
  2604                           ;I2C.c: 96:     if(an==0)
  2605  07D4  0874               	movf	mas_read@an,w
  2606  07D5  1D03               	btfss	3,2
  2607  07D6  2FD8               	goto	u3831
  2608  07D7  2FD9               	goto	u3830
  2609  07D8                     u3831:
  2610  07D8  2FDF               	goto	l2685
  2611  07D9                     u3830:
  2612  07D9                     l2683:
  2613                           
  2614                           ;I2C.c: 97:         ack_i2c();
  2615  07D9  160A  118A  233F  120A  118A  	fcall	_ack_i2c
  2616  07DE  2FE4               	goto	l144
  2617  07DF                     l2685:
  2618                           
  2619                           ;I2C.c: 99:         nack_i2c();
  2620  07DF  160A  118A  2348  120A  118A  	fcall	_nack_i2c
  2621  07E4                     l144:
  2622  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  2623  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  2624  07E6  1D8C               	btfss	12,3	;volatile
  2625  07E7  2FE9               	goto	u3841
  2626  07E8  2FEA               	goto	u3840
  2627  07E9                     u3841:
  2628  07E9  2FE4               	goto	l144
  2629  07EA                     u3840:
  2630  07EA                     l146:
  2631                           
  2632                           ;I2C.c: 101:     SSPIF=0;
  2633  07EA  118C               	bcf	12,3	;volatile
  2634  07EB                     l2687:
  2635                           
  2636                           ;I2C.c: 102:     return data;
  2637  07EB  0875               	movf	mas_read@data,w
  2638  07EC                     l147:
  2639  07EC  0008               	return
  2640  07ED                     __end_of_mas_read:
  2641                           
  2642                           	psect	text5
  2643  1348                     __ptext5:	
  2644 ;; *************** function _nack_i2c *****************
  2645 ;; Defined at:
  2646 ;;		line 62 in file "I2C.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;		None
  2649 ;; Auto vars:     Size  Location     Type
  2650 ;;		None
  2651 ;; Return value:  Size  Location     Type
  2652 ;;                  1    wreg      void 
  2653 ;; Registers used:
  2654 ;;		None
  2655 ;; Tracked objects:
  2656 ;;		On entry : 0/0
  2657 ;;		On exit  : 0/0
  2658 ;;		Unchanged: 0/0
  2659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2660 ;;      Params:         0       0       0       0       0
  2661 ;;      Locals:         0       0       0       0       0
  2662 ;;      Temps:          0       0       0       0       0
  2663 ;;      Totals:         0       0       0       0       0
  2664 ;;Total ram usage:        0 bytes
  2665 ;; Hardware stack levels used:    1
  2666 ;; Hardware stack levels required when called:    1
  2667 ;; This function calls:
  2668 ;;		Nothing
  2669 ;; This function is called by:
  2670 ;;		_mas_read
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           
  2675                           ;psect for function _nack_i2c
  2676  1348                     _nack_i2c:
  2677  1348                     l2267:	
  2678                           ;incstack = 0
  2679                           ; Regs used in _nack_i2c: []
  2680                           
  2681                           
  2682                           ;I2C.c: 64:  ACKDT = 1;
  2683  1348  1683               	bsf	3,5	;RP0=1, select bank1
  2684  1349  1303               	bcf	3,6	;RP1=0, select bank1
  2685  134A  1691               	bsf	17,5	;volatile
  2686                           
  2687                           ;I2C.c: 65:  ACKEN = 1;
  2688  134B  1611               	bsf	17,4	;volatile
  2689  134C                     l121:	
  2690                           ;I2C.c: 66:     while(ACKEN);
  2691                           
  2692  134C  1A11               	btfsc	17,4	;volatile
  2693  134D  2B4F               	goto	u2861
  2694  134E  2B50               	goto	u2860
  2695  134F                     u2861:
  2696  134F  2B4C               	goto	l121
  2697  1350                     u2860:
  2698  1350                     l124:
  2699  1350  0008               	return
  2700  1351                     __end_of_nack_i2c:
  2701                           
  2702                           	psect	text6
  2703  133F                     __ptext6:	
  2704 ;; *************** function _ack_i2c *****************
  2705 ;; Defined at:
  2706 ;;		line 55 in file "I2C.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      void 
  2713 ;; Registers used:
  2714 ;;		None
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2720 ;;      Params:         0       0       0       0       0
  2721 ;;      Locals:         0       0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0
  2723 ;;      Totals:         0       0       0       0       0
  2724 ;;Total ram usage:        0 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    1
  2727 ;; This function calls:
  2728 ;;		Nothing
  2729 ;; This function is called by:
  2730 ;;		_mas_read
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           
  2735                           ;psect for function _ack_i2c
  2736  133F                     _ack_i2c:
  2737  133F                     l2265:	
  2738                           ;incstack = 0
  2739                           ; Regs used in _ack_i2c: []
  2740                           
  2741                           
  2742                           ;I2C.c: 57:  ACKDT = 0;
  2743  133F  1683               	bsf	3,5	;RP0=1, select bank1
  2744  1340  1303               	bcf	3,6	;RP1=0, select bank1
  2745  1341  1291               	bcf	17,5	;volatile
  2746                           
  2747                           ;I2C.c: 58:     ACKEN = 1;
  2748  1342  1611               	bsf	17,4	;volatile
  2749  1343                     l115:	
  2750                           ;I2C.c: 59:     while(ACKEN);
  2751                           
  2752  1343  1A11               	btfsc	17,4	;volatile
  2753  1344  2B46               	goto	u2851
  2754  1345  2B47               	goto	u2850
  2755  1346                     u2851:
  2756  1346  2B43               	goto	l115
  2757  1347                     u2850:
  2758  1347                     l118:
  2759  1347  0008               	return
  2760  1348                     __end_of_ack_i2c:
  2761                           
  2762                           	psect	text7
  2763  087A                     __ptext7:	
  2764 ;; *************** function _ftoa *****************
  2765 ;; Defined at:
  2766 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftoa.c"
  2767 ;; Parameters:    Size  Location     Type
  2768 ;;  f               4   64[BANK0 ] float 
  2769 ;;  status          2   68[BANK0 ] PTR int 
  2770 ;;		 -> RAM(512), 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  l               4   75[BANK0 ] unsigned long 
  2773 ;;  rem             4   71[BANK0 ] unsigned long 
  2774 ;;  cp              1   79[BANK0 ] PTR unsigned char 
  2775 ;;		 -> ftoa@buf(17), 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      PTR unsigned char 
  2778 ;; Registers used:
  2779 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2785 ;;      Params:         0       6       0       0       0
  2786 ;;      Locals:         0       9       0       0       0
  2787 ;;      Temps:          0       1       0       0       0
  2788 ;;      Totals:         0      16       0       0       0
  2789 ;;Total ram usage:       16 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    3
  2792 ;; This function calls:
  2793 ;;		___flge
  2794 ;;		___flmul
  2795 ;;		___flneg
  2796 ;;		___flsub
  2797 ;;		___fltol
  2798 ;;		___xxtofl
  2799 ;;		_sprintf
  2800 ;; This function is called by:
  2801 ;;		_giro_read
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           
  2806                           ;psect for function _ftoa
  2807  087A                     _ftoa:
  2808  087A                     l3267:	
  2809                           ;incstack = 0
  2810                           ; Regs used in _ftoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2811                           
  2812  087A  30DF               	movlw	(low (ftoa@buf| 0))& (0+255)
  2813  087B  1283               	bcf	3,5	;RP0=0, select bank0
  2814  087C  1303               	bcf	3,6	;RP1=0, select bank0
  2815  087D  00E6               	movwf	??_ftoa
  2816  087E  0866               	movf	??_ftoa,w
  2817  087F  00EF               	movwf	ftoa@cp
  2818  0880                     l3269:
  2819  0880  0863               	movf	ftoa@f+3,w
  2820  0881  00A3               	movwf	___flge@ff1+3
  2821  0882  0862               	movf	ftoa@f+2,w
  2822  0883  00A2               	movwf	___flge@ff1+2
  2823  0884  0861               	movf	ftoa@f+1,w
  2824  0885  00A1               	movwf	___flge@ff1+1
  2825  0886  0860               	movf	ftoa@f,w
  2826  0887  00A0               	movwf	___flge@ff1
  2827  0888  3000               	movlw	0
  2828  0889  00A7               	movwf	___flge@ff2+3
  2829  088A  3000               	movlw	0
  2830  088B  00A6               	movwf	___flge@ff2+2
  2831  088C  3000               	movlw	0
  2832  088D  00A5               	movwf	___flge@ff2+1
  2833  088E  3000               	movlw	0
  2834  088F  00A4               	movwf	___flge@ff2
  2835  0890  160A  118A  25EE  120A  158A  	fcall	___flge
  2836  0895  1803               	btfsc	3,0
  2837  0896  2898               	goto	u4851
  2838  0897  2899               	goto	u4850
  2839  0898                     u4851:
  2840  0898  28BD               	goto	l3277
  2841  0899                     u4850:
  2842  0899                     l3271:
  2843  0899  302D               	movlw	45
  2844  089A  1283               	bcf	3,5	;RP0=0, select bank0
  2845  089B  1303               	bcf	3,6	;RP1=0, select bank0
  2846  089C  00E6               	movwf	??_ftoa
  2847  089D  086F               	movf	ftoa@cp,w
  2848  089E  0084               	movwf	4
  2849  089F  0866               	movf	??_ftoa,w
  2850  08A0  1383               	bcf	3,7	;select IRP bank0
  2851  08A1  0080               	movwf	0
  2852  08A2                     l3273:
  2853  08A2  3001               	movlw	1
  2854  08A3  00E6               	movwf	??_ftoa
  2855  08A4  0866               	movf	??_ftoa,w
  2856  08A5  07EF               	addwf	ftoa@cp,f
  2857  08A6                     l3275:
  2858  08A6  0863               	movf	ftoa@f+3,w
  2859  08A7  00F6               	movwf	___flneg@f1+3
  2860  08A8  0862               	movf	ftoa@f+2,w
  2861  08A9  00F5               	movwf	___flneg@f1+2
  2862  08AA  0861               	movf	ftoa@f+1,w
  2863  08AB  00F4               	movwf	___flneg@f1+1
  2864  08AC  0860               	movf	ftoa@f,w
  2865  08AD  00F3               	movwf	___flneg@f1
  2866  08AE  160A  118A  2351  120A  158A  	fcall	___flneg
  2867  08B3  0876               	movf	?___flneg+3,w
  2868  08B4  1283               	bcf	3,5	;RP0=0, select bank0
  2869  08B5  1303               	bcf	3,6	;RP1=0, select bank0
  2870  08B6  00E3               	movwf	ftoa@f+3
  2871  08B7  0875               	movf	?___flneg+2,w
  2872  08B8  00E2               	movwf	ftoa@f+2
  2873  08B9  0874               	movf	?___flneg+1,w
  2874  08BA  00E1               	movwf	ftoa@f+1
  2875  08BB  0873               	movf	?___flneg,w
  2876  08BC  00E0               	movwf	ftoa@f
  2877  08BD                     l3277:
  2878  08BD  1283               	bcf	3,5	;RP0=0, select bank0
  2879  08BE  1303               	bcf	3,6	;RP1=0, select bank0
  2880  08BF  0863               	movf	ftoa@f+3,w
  2881  08C0  00C7               	movwf	___fltol@f1+3
  2882  08C1  0862               	movf	ftoa@f+2,w
  2883  08C2  00C6               	movwf	___fltol@f1+2
  2884  08C3  0861               	movf	ftoa@f+1,w
  2885  08C4  00C5               	movwf	___fltol@f1+1
  2886  08C5  0860               	movf	ftoa@f,w
  2887  08C6  00C4               	movwf	___fltol@f1
  2888  08C7  160A  118A  2572  120A  158A  	fcall	___fltol
  2889  08CC  1283               	bcf	3,5	;RP0=0, select bank0
  2890  08CD  1303               	bcf	3,6	;RP1=0, select bank0
  2891  08CE  0847               	movf	?___fltol+3,w
  2892  08CF  00EE               	movwf	ftoa@l+3
  2893  08D0  0846               	movf	?___fltol+2,w
  2894  08D1  00ED               	movwf	ftoa@l+2
  2895  08D2  0845               	movf	?___fltol+1,w
  2896  08D3  00EC               	movwf	ftoa@l+1
  2897  08D4  0844               	movf	?___fltol,w
  2898  08D5  00EB               	movwf	ftoa@l
  2899  08D6                     l3279:
  2900  08D6  086E               	movf	ftoa@l+3,w
  2901  08D7  00F6               	movwf	___xxtofl@val+3
  2902  08D8  086D               	movf	ftoa@l+2,w
  2903  08D9  00F5               	movwf	___xxtofl@val+2
  2904  08DA  086C               	movf	ftoa@l+1,w
  2905  08DB  00F4               	movwf	___xxtofl@val+1
  2906  08DC  086B               	movf	ftoa@l,w
  2907  08DD  00F3               	movwf	___xxtofl@val
  2908  08DE  3000               	movlw	0
  2909  08DF  160A  118A  2744  120A  158A  	fcall	___xxtofl
  2910  08E4  0876               	movf	?___xxtofl+3,w
  2911  08E5  1283               	bcf	3,5	;RP0=0, select bank0
  2912  08E6  1303               	bcf	3,6	;RP1=0, select bank0
  2913  08E7  00DB               	movwf	___flsub@a+3
  2914  08E8  0875               	movf	?___xxtofl+2,w
  2915  08E9  00DA               	movwf	___flsub@a+2
  2916  08EA  0874               	movf	?___xxtofl+1,w
  2917  08EB  00D9               	movwf	___flsub@a+1
  2918  08EC  0873               	movf	?___xxtofl,w
  2919  08ED  00D8               	movwf	___flsub@a
  2920  08EE  0863               	movf	ftoa@f+3,w
  2921  08EF  00DF               	movwf	___flsub@b+3
  2922  08F0  0862               	movf	ftoa@f+2,w
  2923  08F1  00DE               	movwf	___flsub@b+2
  2924  08F2  0861               	movf	ftoa@f+1,w
  2925  08F3  00DD               	movwf	___flsub@b+1
  2926  08F4  0860               	movf	ftoa@f,w
  2927  08F5  00DC               	movwf	___flsub@b
  2928  08F6  160A  118A  23E3  120A  158A  	fcall	___flsub
  2929  08FB  1283               	bcf	3,5	;RP0=0, select bank0
  2930  08FC  1303               	bcf	3,6	;RP1=0, select bank0
  2931  08FD  085B               	movf	?___flsub+3,w
  2932  08FE  00E3               	movwf	ftoa@f+3
  2933  08FF  085A               	movf	?___flsub+2,w
  2934  0900  00E2               	movwf	ftoa@f+2
  2935  0901  0859               	movf	?___flsub+1,w
  2936  0902  00E1               	movwf	ftoa@f+1
  2937  0903  0858               	movf	?___flsub,w
  2938  0904  00E0               	movwf	ftoa@f
  2939  0905                     l3281:
  2940  0905  0863               	movf	ftoa@f+3,w
  2941  0906  00B1               	movwf	___flmul@a+3
  2942  0907  0862               	movf	ftoa@f+2,w
  2943  0908  00B0               	movwf	___flmul@a+2
  2944  0909  0861               	movf	ftoa@f+1,w
  2945  090A  00AF               	movwf	___flmul@a+1
  2946  090B  0860               	movf	ftoa@f,w
  2947  090C  00AE               	movwf	___flmul@a
  2948  090D  3049               	movlw	73
  2949  090E  00AD               	movwf	___flmul@b+3
  2950  090F  3074               	movlw	116
  2951  0910  00AC               	movwf	___flmul@b+2
  2952  0911  3024               	movlw	36
  2953  0912  00AB               	movwf	___flmul@b+1
  2954  0913  3000               	movlw	0
  2955  0914  00AA               	movwf	___flmul@b
  2956  0915  120A  118A  2460  120A  158A  	fcall	___flmul
  2957  091A  1283               	bcf	3,5	;RP0=0, select bank0
  2958  091B  1303               	bcf	3,6	;RP1=0, select bank0
  2959  091C  082D               	movf	?___flmul+3,w
  2960  091D  00C7               	movwf	___fltol@f1+3
  2961  091E  082C               	movf	?___flmul+2,w
  2962  091F  00C6               	movwf	___fltol@f1+2
  2963  0920  082B               	movf	?___flmul+1,w
  2964  0921  00C5               	movwf	___fltol@f1+1
  2965  0922  082A               	movf	?___flmul,w
  2966  0923  00C4               	movwf	___fltol@f1
  2967  0924  160A  118A  2572  120A  158A  	fcall	___fltol
  2968  0929  1283               	bcf	3,5	;RP0=0, select bank0
  2969  092A  1303               	bcf	3,6	;RP1=0, select bank0
  2970  092B  0847               	movf	?___fltol+3,w
  2971  092C  00EA               	movwf	ftoa@rem+3
  2972  092D  0846               	movf	?___fltol+2,w
  2973  092E  00E9               	movwf	ftoa@rem+2
  2974  092F  0845               	movf	?___fltol+1,w
  2975  0930  00E8               	movwf	ftoa@rem+1
  2976  0931  0844               	movf	?___fltol,w
  2977  0932  00E7               	movwf	ftoa@rem
  2978  0933                     l3283:
  2979  0933  3029               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  2980  0934  00E6               	movwf	??_ftoa
  2981  0935  0866               	movf	??_ftoa,w
  2982  0936  00B1               	movwf	sprintf@f
  2983  0937  086E               	movf	ftoa@l+3,w
  2984  0938  00B5               	movwf	?_sprintf+4
  2985  0939  086D               	movf	ftoa@l+2,w
  2986  093A  00B4               	movwf	?_sprintf+3
  2987  093B  086C               	movf	ftoa@l+1,w
  2988  093C  00B3               	movwf	?_sprintf+2
  2989  093D  086B               	movf	ftoa@l,w
  2990  093E  00B2               	movwf	?_sprintf+1
  2991  093F  086A               	movf	ftoa@rem+3,w
  2992  0940  00B9               	movwf	?_sprintf+8
  2993  0941  0869               	movf	ftoa@rem+2,w
  2994  0942  00B8               	movwf	?_sprintf+7
  2995  0943  0868               	movf	ftoa@rem+1,w
  2996  0944  00B7               	movwf	?_sprintf+6
  2997  0945  0867               	movf	ftoa@rem,w
  2998  0946  00B6               	movwf	?_sprintf+5
  2999  0947  086F               	movf	ftoa@cp,w
  3000  0948  120A  158A  232C  120A  158A  	fcall	_sprintf
  3001  094D                     l3285:
  3002  094D  30DF               	movlw	(low (ftoa@buf| 0))& (0+255)
  3003  094E                     l772:
  3004  094E  0008               	return
  3005  094F                     __end_of_ftoa:
  3006                           
  3007                           	psect	text8
  3008  0B2C                     __ptext8:	
  3009 ;; *************** function _sprintf *****************
  3010 ;; Defined at:
  3011 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;  sp              1    wreg     PTR unsigned char 
  3014 ;;		 -> ftoa@buf(17), 
  3015 ;;  f               1   17[BANK0 ] PTR const unsigned char 
  3016 ;;		 -> STR_7(11), 
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  sp              1   37[BANK0 ] PTR unsigned char 
  3019 ;;		 -> ftoa@buf(17), 
  3020 ;;  val             4   33[BANK0 ] unsigned long 
  3021 ;;  tmpval          4    0        struct .
  3022 ;;  prec            2   40[BANK0 ] int 
  3023 ;;  width           2   38[BANK0 ] int 
  3024 ;;  cp              2    0        PTR const unsigned char 
  3025 ;;  len             2    0        unsigned int 
  3026 ;;  c               1   42[BANK0 ] unsigned char 
  3027 ;;  ap              1   32[BANK0 ] PTR void [1]
  3028 ;;		 -> ?_sprintf(2), 
  3029 ;;  flag            1   31[BANK0 ] unsigned char 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  2   17[BANK0 ] int 
  3032 ;; Registers used:
  3033 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3039 ;;      Params:         0       9       0       0       0
  3040 ;;      Locals:         0      12       0       0       0
  3041 ;;      Temps:          0       5       0       0       0
  3042 ;;      Totals:         0      26       0       0       0
  3043 ;;Total ram usage:       26 bytes
  3044 ;; Hardware stack levels used:    1
  3045 ;; Hardware stack levels required when called:    2
  3046 ;; This function calls:
  3047 ;;		___lldiv
  3048 ;;		___llmod
  3049 ;;		___wmul
  3050 ;;		_isdigit
  3051 ;; This function is called by:
  3052 ;;		_ftoa
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           
  3057                           ;psect for function _sprintf
  3058  0B2C                     _sprintf:
  3059                           
  3060                           ;incstack = 0
  3061                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3062                           ;sprintf@sp stored from wreg
  3063  0B2C  1283               	bcf	3,5	;RP0=0, select bank0
  3064  0B2D  1303               	bcf	3,6	;RP1=0, select bank0
  3065  0B2E  00C5               	movwf	sprintf@sp
  3066  0B2F                     l3139:
  3067                           
  3068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  3069  0B2F  3032               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  3070  0B30  00BA               	movwf	??_sprintf
  3071  0B31  083A               	movf	??_sprintf,w
  3072  0B32  00C0               	movwf	sprintf@ap
  3073                           
  3074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3075  0B33  2D61               	goto	l3237
  3076  0B34                     l3141:
  3077                           
  3078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  3079  0B34  3025               	movlw	37
  3080  0B35  064A               	xorwf	sprintf@c,w
  3081  0B36  1903               	btfsc	3,2
  3082  0B37  2B39               	goto	u4631
  3083  0B38  2B3A               	goto	u4630
  3084  0B39                     u4631:
  3085  0B39  2B46               	goto	l3147
  3086  0B3A                     u4630:
  3087  0B3A                     l3143:
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  3090  0B3A  084A               	movf	sprintf@c,w
  3091  0B3B  00BA               	movwf	??_sprintf
  3092  0B3C  0845               	movf	sprintf@sp,w
  3093  0B3D  0084               	movwf	4
  3094  0B3E  083A               	movf	??_sprintf,w
  3095  0B3F  1383               	bcf	3,7	;select IRP bank0
  3096  0B40  0080               	movwf	0
  3097  0B41                     l3145:
  3098  0B41  3001               	movlw	1
  3099  0B42  00BA               	movwf	??_sprintf
  3100  0B43  083A               	movf	??_sprintf,w
  3101  0B44  07C5               	addwf	sprintf@sp,f
  3102                           
  3103                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  3104  0B45  2D61               	goto	l3237
  3105  0B46                     l3147:
  3106                           
  3107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  3108  0B46  01C6               	clrf	sprintf@width
  3109  0B47  01C7               	clrf	sprintf@width+1
  3110                           
  3111                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  3112  0B48  01BF               	clrf	sprintf@flag
  3113  0B49                     l3149:
  3114                           
  3115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  3116  0B49  0831               	movf	sprintf@f,w
  3117  0B4A  0084               	movwf	4
  3118  0B4B  160A  118A  200A  120A  158A  	fcall	stringdir
  3119  0B50  120A  118A  27ED  120A  158A  	fcall	_isdigit
  3120  0B55  1C03               	btfss	3,0
  3121  0B56  2B58               	goto	u4641
  3122  0B57  2B59               	goto	u4640
  3123  0B58                     u4641:
  3124  0B58  2B99               	goto	l3161
  3125  0B59                     u4640:
  3126  0B59                     l3151:
  3127                           
  3128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  3129  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  3131  0B5B  01C6               	clrf	sprintf@width
  3132  0B5C  01C7               	clrf	sprintf@width+1
  3133  0B5D                     l3153:
  3134                           
  3135                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  3136  0B5D  300A               	movlw	10
  3137  0B5E  00F3               	movwf	___wmul@multiplier
  3138  0B5F  3000               	movlw	0
  3139  0B60  00F4               	movwf	___wmul@multiplier+1
  3140  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0B63  0847               	movf	sprintf@width+1,w
  3143  0B64  00F6               	movwf	___wmul@multiplicand+1
  3144  0B65  0846               	movf	sprintf@width,w
  3145  0B66  00F5               	movwf	___wmul@multiplicand
  3146  0B67  160A  118A  2407  120A  158A  	fcall	___wmul
  3147  0B6C  0874               	movf	?___wmul+1,w
  3148  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  3149  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  3150  0B6F  00C7               	movwf	sprintf@width+1
  3151  0B70  0873               	movf	?___wmul,w
  3152  0B71  00C6               	movwf	sprintf@width
  3153  0B72                     l3155:
  3154                           
  3155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  3156  0B72  0831               	movf	sprintf@f,w
  3157  0B73  0084               	movwf	4
  3158  0B74  160A  118A  200A  120A  158A  	fcall	stringdir
  3159  0B79  3ED0               	addlw	208
  3160  0B7A  00BA               	movwf	??_sprintf
  3161  0B7B  30FF               	movlw	255
  3162  0B7C  1803               	skipnc
  3163  0B7D  3000               	movlw	0
  3164  0B7E  00BB               	movwf	??_sprintf+1
  3165  0B7F  083A               	movf	??_sprintf,w
  3166  0B80  07C6               	addwf	sprintf@width,f
  3167  0B81  1803               	skipnc
  3168  0B82  0AC7               	incf	sprintf@width+1,f
  3169  0B83  083B               	movf	??_sprintf+1,w
  3170  0B84  07C7               	addwf	sprintf@width+1,f
  3171  0B85                     l3157:
  3172  0B85  3001               	movlw	1
  3173  0B86  00BA               	movwf	??_sprintf
  3174  0B87  083A               	movf	??_sprintf,w
  3175  0B88  07B1               	addwf	sprintf@f,f
  3176  0B89                     l3159:
  3177                           
  3178                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  3179  0B89  0831               	movf	sprintf@f,w
  3180  0B8A  0084               	movwf	4
  3181  0B8B  160A  118A  200A  120A  158A  	fcall	stringdir
  3182  0B90  120A  118A  27ED  120A  158A  	fcall	_isdigit
  3183  0B95  1803               	btfsc	3,0
  3184  0B96  2B98               	goto	u4651
  3185  0B97  2B99               	goto	u4650
  3186  0B98                     u4651:
  3187  0B98  2B5D               	goto	l3153
  3188  0B99                     u4650:
  3189  0B99                     l3161:
  3190                           
  3191                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  3192  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  3193  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  3194  0B9B  0831               	movf	sprintf@f,w
  3195  0B9C  0084               	movwf	4
  3196  0B9D  160A  118A  200A  120A  158A  	fcall	stringdir
  3197  0BA2  3A2E               	xorlw	46
  3198  0BA3  1D03               	skipz
  3199  0BA4  2BA6               	goto	u4661
  3200  0BA5  2BA7               	goto	u4660
  3201  0BA6                     u4661:
  3202  0BA6  2BEB               	goto	l3175
  3203  0BA7                     u4660:
  3204  0BA7                     l3163:
  3205                           
  3206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  3207  0BA7  3001               	movlw	1
  3208  0BA8  00BA               	movwf	??_sprintf
  3209  0BA9  083A               	movf	??_sprintf,w
  3210  0BAA  07B1               	addwf	sprintf@f,f
  3211  0BAB                     l3165:
  3212                           
  3213                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  3214  0BAB  01C8               	clrf	sprintf@prec
  3215  0BAC  01C9               	clrf	sprintf@prec+1
  3216                           
  3217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3218  0BAD  2BDA               	goto	l3173
  3219  0BAE                     l3167:
  3220                           
  3221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  3222  0BAE  300A               	movlw	10
  3223  0BAF  00F3               	movwf	___wmul@multiplier
  3224  0BB0  3000               	movlw	0
  3225  0BB1  00F4               	movwf	___wmul@multiplier+1
  3226  0BB2  1283               	bcf	3,5	;RP0=0, select bank0
  3227  0BB3  1303               	bcf	3,6	;RP1=0, select bank0
  3228  0BB4  0849               	movf	sprintf@prec+1,w
  3229  0BB5  00F6               	movwf	___wmul@multiplicand+1
  3230  0BB6  0848               	movf	sprintf@prec,w
  3231  0BB7  00F5               	movwf	___wmul@multiplicand
  3232  0BB8  160A  118A  2407  120A  158A  	fcall	___wmul
  3233  0BBD  0874               	movf	?___wmul+1,w
  3234  0BBE  1283               	bcf	3,5	;RP0=0, select bank0
  3235  0BBF  1303               	bcf	3,6	;RP1=0, select bank0
  3236  0BC0  00C9               	movwf	sprintf@prec+1
  3237  0BC1  0873               	movf	?___wmul,w
  3238  0BC2  00C8               	movwf	sprintf@prec
  3239  0BC3                     l3169:
  3240                           
  3241                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  3242  0BC3  0831               	movf	sprintf@f,w
  3243  0BC4  0084               	movwf	4
  3244  0BC5  160A  118A  200A  120A  158A  	fcall	stringdir
  3245  0BCA  3ED0               	addlw	208
  3246  0BCB  00BA               	movwf	??_sprintf
  3247  0BCC  30FF               	movlw	255
  3248  0BCD  1803               	skipnc
  3249  0BCE  3000               	movlw	0
  3250  0BCF  00BB               	movwf	??_sprintf+1
  3251  0BD0  083A               	movf	??_sprintf,w
  3252  0BD1  07C8               	addwf	sprintf@prec,f
  3253  0BD2  1803               	skipnc
  3254  0BD3  0AC9               	incf	sprintf@prec+1,f
  3255  0BD4  083B               	movf	??_sprintf+1,w
  3256  0BD5  07C9               	addwf	sprintf@prec+1,f
  3257  0BD6                     l3171:
  3258  0BD6  3001               	movlw	1
  3259  0BD7  00BA               	movwf	??_sprintf
  3260  0BD8  083A               	movf	??_sprintf,w
  3261  0BD9  07B1               	addwf	sprintf@f,f
  3262  0BDA                     l3173:
  3263                           
  3264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  3265  0BDA  0831               	movf	sprintf@f,w
  3266  0BDB  0084               	movwf	4
  3267  0BDC  160A  118A  200A  120A  158A  	fcall	stringdir
  3268  0BE1  120A  118A  27ED  120A  158A  	fcall	_isdigit
  3269  0BE6  1803               	btfsc	3,0
  3270  0BE7  2BE9               	goto	u4671
  3271  0BE8  2BEA               	goto	u4670
  3272  0BE9                     u4671:
  3273  0BE9  2BAE               	goto	l3167
  3274  0BEA                     u4670:
  3275  0BEA  2BF5               	goto	l3181
  3276  0BEB                     l3175:
  3277                           
  3278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  3279  0BEB  01C8               	clrf	sprintf@prec
  3280  0BEC  01C9               	clrf	sprintf@prec+1
  3281  0BED  2BF5               	goto	l3181
  3282  0BEE                     l798:	
  3283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 667:   case 'l':
  3284                           
  3285                           
  3286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 669:    flag |= 0
      +                          x10;
  3287  0BEE  163F               	bsf	sprintf@flag,4
  3288                           
  3289                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 670:    goto loop
      +                          ;
  3290  0BEF  2BF5               	goto	l3181
  3291  0BF0                     l3177:
  3292                           
  3293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  3294  0BF0  30C0               	movlw	192
  3295  0BF1  00BA               	movwf	??_sprintf
  3296  0BF2  083A               	movf	??_sprintf,w
  3297  0BF3  04BF               	iorwf	sprintf@flag,f
  3298                           
  3299                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 845:    break;
  3300  0BF4  2C14               	goto	l801
  3301  0BF5                     l3181:
  3302  0BF5  3001               	movlw	1
  3303  0BF6  1283               	bcf	3,5	;RP0=0, select bank0
  3304  0BF7  1303               	bcf	3,6	;RP1=0, select bank0
  3305  0BF8  07B1               	addwf	sprintf@f,f
  3306  0BF9  30FF               	movlw	-1
  3307  0BFA  0731               	addwf	sprintf@f,w
  3308  0BFB  0084               	movwf	4
  3309  0BFC  160A  118A  200A  120A  158A  	fcall	stringdir
  3310  0C01  00CA               	movwf	sprintf@c
  3311  0C02  00BA               	movwf	??_sprintf
  3312  0C03  01BB               	clrf	??_sprintf+1
  3313                           
  3314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3315                           ; Switch size 1, requested type "simple"
  3316                           ; Number of cases is 1, Range of values is 0 to 0
  3317                           ; switch strategies available:
  3318                           ; Name         Instructions Cycles
  3319                           ; simple_byte            4     3 (average)
  3320                           ; direct_byte           11     8 (fixed)
  3321                           ; jumptable            260     6 (fixed)
  3322                           ;	Chosen strategy is simple_byte
  3323  0C04  083B               	movf	??_sprintf+1,w
  3324  0C05  3A00               	xorlw	0	; case 0
  3325  0C06  1903               	skipnz
  3326  0C07  2C09               	goto	l3411
  3327  0C08  2D61               	goto	l3237
  3328  0C09                     l3411:
  3329                           
  3330                           ; Switch size 1, requested type "simple"
  3331                           ; Number of cases is 3, Range of values is 0 to 117
  3332                           ; switch strategies available:
  3333                           ; Name         Instructions Cycles
  3334                           ; simple_byte           10     6 (average)
  3335                           ; jumptable            260     6 (fixed)
  3336                           ;	Chosen strategy is simple_byte
  3337  0C09  083A               	movf	??_sprintf,w
  3338  0C0A  3A00               	xorlw	0	; case 0
  3339  0C0B  1903               	skipnz
  3340  0C0C  2D73               	goto	l3239
  3341  0C0D  3A6C               	xorlw	108	; case 108
  3342  0C0E  1903               	skipnz
  3343  0C0F  2BEE               	goto	l798
  3344  0C10  3A19               	xorlw	25	; case 117
  3345  0C11  1903               	skipnz
  3346  0C12  2BF0               	goto	l3177
  3347  0C13  2D61               	goto	l3237
  3348  0C14                     l801:
  3349                           
  3350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1307:     if(flag & 0x10)
  3351  0C14  1E3F               	btfss	sprintf@flag,4
  3352  0C15  2C17               	goto	u4681
  3353  0C16  2C18               	goto	u4680
  3354  0C17                     u4681:
  3355  0C17  2C2B               	goto	l3187
  3356  0C18                     u4680:
  3357  0C18                     l3183:
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1308:     val = (
      +                          *(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned long)0));
  3360  0C18  0840               	movf	sprintf@ap,w
  3361  0C19  0084               	movwf	4
  3362  0C1A  1383               	bcf	3,7	;select IRP bank0
  3363  0C1B  0800               	movf	0,w
  3364  0C1C  00C1               	movwf	sprintf@val
  3365  0C1D  0A84               	incf	4,f
  3366  0C1E  0800               	movf	0,w
  3367  0C1F  00C2               	movwf	sprintf@val+1
  3368  0C20  0A84               	incf	4,f
  3369  0C21  0800               	movf	0,w
  3370  0C22  00C3               	movwf	sprintf@val+2
  3371  0C23  0A84               	incf	4,f
  3372  0C24  0800               	movf	0,w
  3373  0C25  00C4               	movwf	sprintf@val+3
  3374  0C26                     l3185:
  3375  0C26  3004               	movlw	4
  3376  0C27  00BA               	movwf	??_sprintf
  3377  0C28  083A               	movf	??_sprintf,w
  3378  0C29  07C0               	addwf	sprintf@ap,f
  3379  0C2A  2C3D               	goto	l3191
  3380  0C2B                     l3187:
  3381                           
  3382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1312:     val = (
      +                          *(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  3383  0C2B  0840               	movf	sprintf@ap,w
  3384  0C2C  0084               	movwf	4
  3385  0C2D  1383               	bcf	3,7	;select IRP bank0
  3386  0C2E  0800               	movf	0,w
  3387  0C2F  00BA               	movwf	??_sprintf
  3388  0C30  0A84               	incf	4,f
  3389  0C31  0800               	movf	0,w
  3390  0C32  00BB               	movwf	??_sprintf+1
  3391  0C33  083A               	movf	??_sprintf,w
  3392  0C34  00C1               	movwf	sprintf@val
  3393  0C35  083B               	movf	??_sprintf+1,w
  3394  0C36  00C2               	movwf	sprintf@val+1
  3395  0C37  01C3               	clrf	sprintf@val+2
  3396  0C38  01C4               	clrf	sprintf@val+3
  3397  0C39                     l3189:
  3398  0C39  3002               	movlw	2
  3399  0C3A  00BA               	movwf	??_sprintf
  3400  0C3B  083A               	movf	??_sprintf,w
  3401  0C3C  07C0               	addwf	sprintf@ap,f
  3402  0C3D                     l3191:
  3403                           
  3404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
  3405  0C3D  0848               	movf	sprintf@prec,w
  3406  0C3E  0449               	iorwf	sprintf@prec+1,w
  3407  0C3F  1D03               	btfss	3,2
  3408  0C40  2C42               	goto	u4691
  3409  0C41  2C43               	goto	u4690
  3410  0C42                     u4691:
  3411  0C42  2C51               	goto	l3197
  3412  0C43                     u4690:
  3413  0C43                     l3193:
  3414  0C43  0844               	movf	sprintf@val+3,w
  3415  0C44  0443               	iorwf	sprintf@val+2,w
  3416  0C45  0442               	iorwf	sprintf@val+1,w
  3417  0C46  0441               	iorwf	sprintf@val,w
  3418  0C47  1D03               	skipz
  3419  0C48  2C4A               	goto	u4701
  3420  0C49  2C4B               	goto	u4700
  3421  0C4A                     u4701:
  3422  0C4A  2C51               	goto	l3197
  3423  0C4B                     u4700:
  3424  0C4B                     l3195:
  3425                           
  3426                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3427  0C4B  3001               	movlw	1
  3428  0C4C  07C8               	addwf	sprintf@prec,f
  3429  0C4D  1803               	skipnc
  3430  0C4E  0AC9               	incf	sprintf@prec+1,f
  3431  0C4F  3000               	movlw	0
  3432  0C50  07C9               	addwf	sprintf@prec+1,f
  3433  0C51                     l3197:
  3434                           
  3435                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3436  0C51  01CA               	clrf	sprintf@c
  3437  0C52  0ACA               	incf	sprintf@c,f
  3438  0C53                     l3203:
  3439                           
  3440                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  3441  0C53  084A               	movf	sprintf@c,w
  3442  0C54  00BA               	movwf	??_sprintf
  3443  0C55  3001               	movlw	1
  3444  0C56                     u4715:
  3445  0C56  1003               	clrc
  3446  0C57  0DBA               	rlf	??_sprintf,f
  3447  0C58  3EFF               	addlw	-1
  3448  0C59  1D03               	skipz
  3449  0C5A  2C56               	goto	u4715
  3450  0C5B  1003               	clrc
  3451  0C5C  0D3A               	rlf	??_sprintf,w
  3452  0C5D  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3453  0C5E  0084               	movwf	4
  3454  0C5F  160A  118A  200A  120A  158A  	fcall	stringdir
  3455  0C64  00BB               	movwf	??_sprintf+1
  3456  0C65  160A  118A  200A  120A  158A  	fcall	stringdir
  3457  0C6A  00BC               	movwf	??_sprintf+2
  3458  0C6B  160A  118A  200A  120A  158A  	fcall	stringdir
  3459  0C70  00BD               	movwf	??_sprintf+3
  3460  0C71  160A  118A  200A  120A  158A  	fcall	stringdir
  3461  0C76  00BE               	movwf	??_sprintf+4
  3462  0C77  083E               	movf	??_sprintf+4,w
  3463  0C78  0244               	subwf	sprintf@val+3,w
  3464  0C79  1D03               	skipz
  3465  0C7A  2C85               	goto	u4725
  3466  0C7B  083D               	movf	??_sprintf+3,w
  3467  0C7C  0243               	subwf	sprintf@val+2,w
  3468  0C7D  1D03               	skipz
  3469  0C7E  2C85               	goto	u4725
  3470  0C7F  083C               	movf	??_sprintf+2,w
  3471  0C80  0242               	subwf	sprintf@val+1,w
  3472  0C81  1D03               	skipz
  3473  0C82  2C85               	goto	u4725
  3474  0C83  083B               	movf	??_sprintf+1,w
  3475  0C84  0241               	subwf	sprintf@val,w
  3476  0C85                     u4725:
  3477  0C85  1803               	skipnc
  3478  0C86  2C88               	goto	u4721
  3479  0C87  2C89               	goto	u4720
  3480  0C88                     u4721:
  3481  0C88  2C8A               	goto	l3207
  3482  0C89                     u4720:
  3483  0C89  2C94               	goto	l3209
  3484  0C8A                     l3207:
  3485  0C8A  3001               	movlw	1
  3486  0C8B  00BA               	movwf	??_sprintf
  3487  0C8C  083A               	movf	??_sprintf,w
  3488  0C8D  07CA               	addwf	sprintf@c,f
  3489  0C8E  300A               	movlw	10
  3490  0C8F  064A               	xorwf	sprintf@c,w
  3491  0C90  1D03               	btfss	3,2
  3492  0C91  2C93               	goto	u4731
  3493  0C92  2C94               	goto	u4730
  3494  0C93                     u4731:
  3495  0C93  2C53               	goto	l3203
  3496  0C94                     u4730:
  3497  0C94                     l3209:
  3498                           
  3499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3500  0C94  0849               	movf	sprintf@prec+1,w
  3501  0C95  3A80               	xorlw	128
  3502  0C96  3C80               	sublw	128
  3503  0C97  1D03               	skipz
  3504  0C98  2C9B               	goto	u4745
  3505  0C99  0848               	movf	sprintf@prec,w
  3506  0C9A  024A               	subwf	sprintf@c,w
  3507  0C9B                     u4745:
  3508  0C9B  1803               	skipnc
  3509  0C9C  2C9E               	goto	u4741
  3510  0C9D  2C9F               	goto	u4740
  3511  0C9E                     u4741:
  3512  0C9E  2CA6               	goto	l3213
  3513  0C9F                     u4740:
  3514  0C9F                     l3211:
  3515                           
  3516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3517  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  3518  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  3519  0CA1  0848               	movf	sprintf@prec,w
  3520  0CA2  00BA               	movwf	??_sprintf
  3521  0CA3  083A               	movf	??_sprintf,w
  3522  0CA4  00CA               	movwf	sprintf@c
  3523  0CA5  2CBE               	goto	l809
  3524  0CA6                     l3213:
  3525  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  3526  0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  3527  0CA8  0849               	movf	sprintf@prec+1,w
  3528  0CA9  3A80               	xorlw	128
  3529  0CAA  00BA               	movwf	??_sprintf
  3530  0CAB  3080               	movlw	128
  3531  0CAC  023A               	subwf	??_sprintf,w
  3532  0CAD  1D03               	skipz
  3533  0CAE  2CB1               	goto	u4755
  3534  0CAF  084A               	movf	sprintf@c,w
  3535  0CB0  0248               	subwf	sprintf@prec,w
  3536  0CB1                     u4755:
  3537  0CB1  1803               	skipnc
  3538  0CB2  2CB4               	goto	u4751
  3539  0CB3  2CB5               	goto	u4750
  3540  0CB4                     u4751:
  3541  0CB4  2CBE               	goto	l809
  3542  0CB5                     u4750:
  3543  0CB5                     l3215:
  3544                           
  3545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3546  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
  3547  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
  3548  0CB7  084A               	movf	sprintf@c,w
  3549  0CB8  00BA               	movwf	??_sprintf
  3550  0CB9  01BB               	clrf	??_sprintf+1
  3551  0CBA  083A               	movf	??_sprintf,w
  3552  0CBB  00C8               	movwf	sprintf@prec
  3553  0CBC  083B               	movf	??_sprintf+1,w
  3554  0CBD  00C9               	movwf	sprintf@prec+1
  3555  0CBE                     l809:
  3556                           
  3557                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3558  0CBE  1283               	bcf	3,5	;RP0=0, select bank0
  3559  0CBF  1303               	bcf	3,6	;RP1=0, select bank0
  3560  0CC0  0847               	movf	sprintf@width+1,w
  3561  0CC1  3A80               	xorlw	128
  3562  0CC2  3C80               	sublw	128
  3563  0CC3  1D03               	skipz
  3564  0CC4  2CC7               	goto	u4765
  3565  0CC5  0846               	movf	sprintf@width,w
  3566  0CC6  024A               	subwf	sprintf@c,w
  3567  0CC7                     u4765:
  3568  0CC7  1803               	skipnc
  3569  0CC8  2CCA               	goto	u4761
  3570  0CC9  2CCB               	goto	u4760
  3571  0CCA                     u4761:
  3572  0CCA  2CD7               	goto	l3219
  3573  0CCB                     u4760:
  3574  0CCB                     l3217:
  3575                           
  3576                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3577  0CCB  1283               	bcf	3,5	;RP0=0, select bank0
  3578  0CCC  1303               	bcf	3,6	;RP1=0, select bank0
  3579  0CCD  084A               	movf	sprintf@c,w
  3580  0CCE  00BA               	movwf	??_sprintf
  3581  0CCF  01BB               	clrf	??_sprintf+1
  3582  0CD0  083A               	movf	??_sprintf,w
  3583  0CD1  02C6               	subwf	sprintf@width,f
  3584  0CD2  083B               	movf	??_sprintf+1,w
  3585  0CD3  1C03               	skipc
  3586  0CD4  03C7               	decf	sprintf@width+1,f
  3587  0CD5  02C7               	subwf	sprintf@width+1,f
  3588  0CD6  2CDB               	goto	l3221
  3589  0CD7                     l3219:
  3590                           
  3591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3592  0CD7  1283               	bcf	3,5	;RP0=0, select bank0
  3593  0CD8  1303               	bcf	3,6	;RP1=0, select bank0
  3594  0CD9  01C6               	clrf	sprintf@width
  3595  0CDA  01C7               	clrf	sprintf@width+1
  3596  0CDB                     l3221:
  3597                           
  3598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3599  0CDB  0846               	movf	sprintf@width,w
  3600  0CDC  0447               	iorwf	sprintf@width+1,w
  3601  0CDD  1903               	btfsc	3,2
  3602  0CDE  2CE0               	goto	u4771
  3603  0CDF  2CE1               	goto	u4770
  3604  0CE0                     u4771:
  3605  0CE0  2D53               	goto	l3235
  3606  0CE1                     u4770:
  3607  0CE1                     l3223:
  3608                           
  3609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3610  0CE1  3020               	movlw	32
  3611  0CE2  00BA               	movwf	??_sprintf
  3612  0CE3  0845               	movf	sprintf@sp,w
  3613  0CE4  0084               	movwf	4
  3614  0CE5  083A               	movf	??_sprintf,w
  3615  0CE6  1383               	bcf	3,7	;select IRP bank0
  3616  0CE7  0080               	movwf	0
  3617  0CE8                     l3225:
  3618  0CE8  3001               	movlw	1
  3619  0CE9  00BA               	movwf	??_sprintf
  3620  0CEA  083A               	movf	??_sprintf,w
  3621  0CEB  07C5               	addwf	sprintf@sp,f
  3622  0CEC                     l3227:
  3623  0CEC  30FF               	movlw	255
  3624  0CED  07C6               	addwf	sprintf@width,f
  3625  0CEE  1803               	skipnc
  3626  0CEF  0AC7               	incf	sprintf@width+1,f
  3627  0CF0  30FF               	movlw	255
  3628  0CF1  07C7               	addwf	sprintf@width+1,f
  3629  0CF2  0846               	movf	sprintf@width,w
  3630  0CF3  0447               	iorwf	sprintf@width+1,w
  3631  0CF4  1D03               	btfss	3,2
  3632  0CF5  2CF7               	goto	u4781
  3633  0CF6  2CF8               	goto	u4780
  3634  0CF7                     u4781:
  3635  0CF7  2CE1               	goto	l3223
  3636  0CF8                     u4780:
  3637  0CF8  2D53               	goto	l3235
  3638  0CF9                     l3229:
  3639                           
  3640                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
  3641  0CF9  3000               	movlw	0
  3642  0CFA  00AB               	movwf	___llmod@divisor+3
  3643  0CFB  3000               	movlw	0
  3644  0CFC  00AA               	movwf	___llmod@divisor+2
  3645  0CFD  3000               	movlw	0
  3646  0CFE  00A9               	movwf	___llmod@divisor+1
  3647  0CFF  300A               	movlw	10
  3648  0D00  00A8               	movwf	___llmod@divisor
  3649  0D01  0848               	movf	sprintf@prec,w
  3650  0D02  00BA               	movwf	??_sprintf
  3651  0D03  3001               	movlw	1
  3652  0D04                     u4795:
  3653  0D04  1003               	clrc
  3654  0D05  0DBA               	rlf	??_sprintf,f
  3655  0D06  3EFF               	addlw	-1
  3656  0D07  1D03               	skipz
  3657  0D08  2D04               	goto	u4795
  3658  0D09  1003               	clrc
  3659  0D0A  0D3A               	rlf	??_sprintf,w
  3660  0D0B  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3661  0D0C  0084               	movwf	4
  3662  0D0D  160A  118A  200A  120A  158A  	fcall	stringdir
  3663  0D12  00A0               	movwf	___lldiv@divisor
  3664  0D13  160A  118A  200A  120A  158A  	fcall	stringdir
  3665  0D18  00A1               	movwf	___lldiv@divisor+1
  3666  0D19  160A  118A  200A  120A  158A  	fcall	stringdir
  3667  0D1E  00A2               	movwf	___lldiv@divisor+2
  3668  0D1F  160A  118A  200A  120A  158A  	fcall	stringdir
  3669  0D24  00A3               	movwf	___lldiv@divisor+3
  3670  0D25  0844               	movf	sprintf@val+3,w
  3671  0D26  00A7               	movwf	___lldiv@dividend+3
  3672  0D27  0843               	movf	sprintf@val+2,w
  3673  0D28  00A6               	movwf	___lldiv@dividend+2
  3674  0D29  0842               	movf	sprintf@val+1,w
  3675  0D2A  00A5               	movwf	___lldiv@dividend+1
  3676  0D2B  0841               	movf	sprintf@val,w
  3677  0D2C  00A4               	movwf	___lldiv@dividend
  3678  0D2D  160A  118A  250A  120A  158A  	fcall	___lldiv
  3679  0D32  1283               	bcf	3,5	;RP0=0, select bank0
  3680  0D33  1303               	bcf	3,6	;RP1=0, select bank0
  3681  0D34  0823               	movf	?___lldiv+3,w
  3682  0D35  00AF               	movwf	___llmod@dividend+3
  3683  0D36  0822               	movf	?___lldiv+2,w
  3684  0D37  00AE               	movwf	___llmod@dividend+2
  3685  0D38  0821               	movf	?___lldiv+1,w
  3686  0D39  00AD               	movwf	___llmod@dividend+1
  3687  0D3A  0820               	movf	?___lldiv,w
  3688  0D3B  00AC               	movwf	___llmod@dividend
  3689  0D3C  160A  118A  2455  120A  158A  	fcall	___llmod
  3690  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  3691  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  3692  0D43  0828               	movf	?___llmod,w
  3693  0D44  3E30               	addlw	48
  3694  0D45  00BB               	movwf	??_sprintf+1
  3695  0D46  083B               	movf	??_sprintf+1,w
  3696  0D47  00CA               	movwf	sprintf@c
  3697  0D48                     l3231:
  3698                           
  3699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  3700  0D48  084A               	movf	sprintf@c,w
  3701  0D49  00BA               	movwf	??_sprintf
  3702  0D4A  0845               	movf	sprintf@sp,w
  3703  0D4B  0084               	movwf	4
  3704  0D4C  083A               	movf	??_sprintf,w
  3705  0D4D  1383               	bcf	3,7	;select IRP bank0
  3706  0D4E  0080               	movwf	0
  3707  0D4F                     l3233:
  3708  0D4F  3001               	movlw	1
  3709  0D50  00BA               	movwf	??_sprintf
  3710  0D51  083A               	movf	??_sprintf,w
  3711  0D52  07C5               	addwf	sprintf@sp,f
  3712  0D53                     l3235:
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  3715  0D53  30FF               	movlw	255
  3716  0D54  07C8               	addwf	sprintf@prec,f
  3717  0D55  1803               	skipnc
  3718  0D56  0AC9               	incf	sprintf@prec+1,f
  3719  0D57  30FF               	movlw	255
  3720  0D58  07C9               	addwf	sprintf@prec+1,f
  3721  0D59  0A48               	incf	sprintf@prec,w
  3722  0D5A  1D03               	skipz
  3723  0D5B  2D60               	goto	u4801
  3724  0D5C  0A49               	incf	sprintf@prec+1,w
  3725  0D5D  1D03               	btfss	3,2
  3726  0D5E  2D60               	goto	u4801
  3727  0D5F  2D61               	goto	u4800
  3728  0D60                     u4801:
  3729  0D60  2CF9               	goto	l3229
  3730  0D61                     u4800:
  3731  0D61                     l3237:
  3732                           
  3733                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3734  0D61  3001               	movlw	1
  3735  0D62  07B1               	addwf	sprintf@f,f
  3736  0D63  30FF               	movlw	-1
  3737  0D64  0731               	addwf	sprintf@f,w
  3738  0D65  0084               	movwf	4
  3739  0D66  160A  118A  200A  120A  158A  	fcall	stringdir
  3740  0D6B  00BA               	movwf	??_sprintf
  3741  0D6C  083A               	movf	??_sprintf,w
  3742  0D6D  00CA               	movwf	sprintf@c
  3743  0D6E  084A               	movf	sprintf@c,w
  3744  0D6F  1D03               	btfss	3,2
  3745  0D70  2D72               	goto	u4811
  3746  0D71  2D73               	goto	u4810
  3747  0D72                     u4811:
  3748  0D72  2B34               	goto	l3141
  3749  0D73                     u4810:
  3750  0D73                     l3239:
  3751                           
  3752                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3753  0D73  0845               	movf	sprintf@sp,w
  3754  0D74  0084               	movwf	4
  3755  0D75  1383               	bcf	3,7	;select IRP bank0
  3756  0D76  0180               	clrf	0
  3757  0D77                     l820:
  3758  0D77  0008               	return
  3759  0D78                     __end_of_sprintf:
  3760                           
  3761                           	psect	text9
  3762  07ED                     __ptext9:	
  3763 ;; *************** function _isdigit *****************
  3764 ;; Defined at:
  3765 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;  c               1    wreg     unsigned char 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;  c               1    4[COMMON] unsigned char 
  3770 ;; Return value:  Size  Location     Type
  3771 ;;		None               void
  3772 ;; Registers used:
  3773 ;;		wreg, status,2, status,0
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3779 ;;      Params:         0       0       0       0       0
  3780 ;;      Locals:         2       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0
  3782 ;;      Totals:         2       0       0       0       0
  3783 ;;Total ram usage:        2 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    1
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_sprintf
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           
  3794                           ;psect for function _isdigit
  3795  07ED                     _isdigit:
  3796                           
  3797                           ;incstack = 0
  3798                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3799                           ;isdigit@c stored from wreg
  3800  07ED  00F4               	movwf	isdigit@c
  3801  07EE                     l2245:
  3802  07EE  01F3               	clrf	_isdigit$856
  3803  07EF                     l2247:
  3804  07EF  303A               	movlw	58
  3805  07F0  0274               	subwf	isdigit@c,w
  3806  07F1  1803               	skipnc
  3807  07F2  2FF4               	goto	u2811
  3808  07F3  2FF5               	goto	u2810
  3809  07F4                     u2811:
  3810  07F4  2FFD               	goto	l2253
  3811  07F5                     u2810:
  3812  07F5                     l2249:
  3813  07F5  3030               	movlw	48
  3814  07F6  0274               	subwf	isdigit@c,w
  3815  07F7  1C03               	skipc
  3816  07F8  2FFA               	goto	u2821
  3817  07F9  2FFB               	goto	u2820
  3818  07FA                     u2821:
  3819  07FA  2FFD               	goto	l2253
  3820  07FB                     u2820:
  3821  07FB                     l2251:
  3822  07FB  01F3               	clrf	_isdigit$856
  3823  07FC  0AF3               	incf	_isdigit$856,f
  3824  07FD                     l2253:
  3825  07FD  0C73               	rrf	_isdigit$856,w
  3826  07FE                     l825:
  3827  07FE  0008               	return
  3828  07FF                     __end_of_isdigit:
  3829                           
  3830                           	psect	text10
  3831  1407                     __ptext10:	
  3832 ;; *************** function ___wmul *****************
  3833 ;; Defined at:
  3834 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  multiplier      2    3[COMMON] unsigned int 
  3837 ;;  multiplicand    2    5[COMMON] unsigned int 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  product         2    7[COMMON] unsigned int 
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  2    3[COMMON] unsigned int 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2, status,0
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3849 ;;      Params:         4       0       0       0       0
  3850 ;;      Locals:         2       0       0       0       0
  3851 ;;      Temps:          0       0       0       0       0
  3852 ;;      Totals:         6       0       0       0       0
  3853 ;;Total ram usage:        6 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; Hardware stack levels required when called:    1
  3856 ;; This function calls:
  3857 ;;		Nothing
  3858 ;; This function is called by:
  3859 ;;		_sprintf
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           
  3864                           ;psect for function ___wmul
  3865  1407                     ___wmul:
  3866  1407                     l1979:	
  3867                           ;incstack = 0
  3868                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3869                           
  3870  1407  01F7               	clrf	___wmul@product
  3871  1408  01F8               	clrf	___wmul@product+1
  3872  1409                     l1981:
  3873  1409  1C73               	btfss	___wmul@multiplier,0
  3874  140A  2C0C               	goto	u2151
  3875  140B  2C0D               	goto	u2150
  3876  140C                     u2151:
  3877  140C  2C13               	goto	l316
  3878  140D                     u2150:
  3879  140D                     l1983:
  3880  140D  0875               	movf	___wmul@multiplicand,w
  3881  140E  07F7               	addwf	___wmul@product,f
  3882  140F  1803               	skipnc
  3883  1410  0AF8               	incf	___wmul@product+1,f
  3884  1411  0876               	movf	___wmul@multiplicand+1,w
  3885  1412  07F8               	addwf	___wmul@product+1,f
  3886  1413                     l316:
  3887  1413  3001               	movlw	1
  3888  1414                     u2165:
  3889  1414  1003               	clrc
  3890  1415  0DF5               	rlf	___wmul@multiplicand,f
  3891  1416  0DF6               	rlf	___wmul@multiplicand+1,f
  3892  1417  3EFF               	addlw	-1
  3893  1418  1D03               	skipz
  3894  1419  2C14               	goto	u2165
  3895  141A                     l1985:
  3896  141A  3001               	movlw	1
  3897  141B                     u2175:
  3898  141B  1003               	clrc
  3899  141C  0CF4               	rrf	___wmul@multiplier+1,f
  3900  141D  0CF3               	rrf	___wmul@multiplier,f
  3901  141E  3EFF               	addlw	-1
  3902  141F  1D03               	skipz
  3903  1420  2C1B               	goto	u2175
  3904  1421                     l1987:
  3905  1421  0873               	movf	___wmul@multiplier,w
  3906  1422  0474               	iorwf	___wmul@multiplier+1,w
  3907  1423  1D03               	btfss	3,2
  3908  1424  2C26               	goto	u2181
  3909  1425  2C27               	goto	u2180
  3910  1426                     u2181:
  3911  1426  2C09               	goto	l1981
  3912  1427                     u2180:
  3913  1427                     l1989:
  3914  1427  0878               	movf	___wmul@product+1,w
  3915  1428  00F4               	movwf	?___wmul+1
  3916  1429  0877               	movf	___wmul@product,w
  3917  142A  00F3               	movwf	?___wmul
  3918  142B                     l318:
  3919  142B  0008               	return
  3920  142C                     __end_of___wmul:
  3921                           
  3922                           	psect	text11
  3923  1455                     __ptext11:	
  3924 ;; *************** function ___llmod *****************
  3925 ;; Defined at:
  3926 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  3927 ;; Parameters:    Size  Location     Type
  3928 ;;  divisor         4    8[BANK0 ] unsigned long 
  3929 ;;  dividend        4   12[BANK0 ] unsigned long 
  3930 ;; Auto vars:     Size  Location     Type
  3931 ;;  counter         1   16[BANK0 ] unsigned char 
  3932 ;; Return value:  Size  Location     Type
  3933 ;;                  4    8[BANK0 ] unsigned long 
  3934 ;; Registers used:
  3935 ;;		wreg, status,2, status,0
  3936 ;; Tracked objects:
  3937 ;;		On entry : 0/0
  3938 ;;		On exit  : 0/0
  3939 ;;		Unchanged: 0/0
  3940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3941 ;;      Params:         0       8       0       0       0
  3942 ;;      Locals:         0       1       0       0       0
  3943 ;;      Temps:          1       0       0       0       0
  3944 ;;      Totals:         1       9       0       0       0
  3945 ;;Total ram usage:       10 bytes
  3946 ;; Hardware stack levels used:    1
  3947 ;; Hardware stack levels required when called:    1
  3948 ;; This function calls:
  3949 ;;		Nothing
  3950 ;; This function is called by:
  3951 ;;		_sprintf
  3952 ;; This function uses a non-reentrant model
  3953 ;;
  3954                           
  3955                           
  3956                           ;psect for function ___llmod
  3957  1455                     ___llmod:
  3958  1455                     l3019:	
  3959                           ;incstack = 0
  3960                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  3961                           
  3962  1455  1283               	bcf	3,5	;RP0=0, select bank0
  3963  1456  1303               	bcf	3,6	;RP1=0, select bank0
  3964  1457  082B               	movf	___llmod@divisor+3,w
  3965  1458  042A               	iorwf	___llmod@divisor+2,w
  3966  1459  0429               	iorwf	___llmod@divisor+1,w
  3967  145A  0428               	iorwf	___llmod@divisor,w
  3968  145B  1903               	skipnz
  3969  145C  2C5E               	goto	u4261
  3970  145D  2C5F               	goto	u4260
  3971  145E                     u4261:
  3972  145E  2CA2               	goto	l3035
  3973  145F                     u4260:
  3974  145F                     l3021:
  3975  145F  01B0               	clrf	___llmod@counter
  3976  1460  0AB0               	incf	___llmod@counter,f
  3977  1461  2C6F               	goto	l3025
  3978  1462                     l3023:
  3979  1462  3001               	movlw	1
  3980  1463  00F9               	movwf	??___llmod
  3981  1464                     u4275:
  3982  1464  1003               	clrc
  3983  1465  0DA8               	rlf	___llmod@divisor,f
  3984  1466  0DA9               	rlf	___llmod@divisor+1,f
  3985  1467  0DAA               	rlf	___llmod@divisor+2,f
  3986  1468  0DAB               	rlf	___llmod@divisor+3,f
  3987  1469  0BF9               	decfsz	??___llmod,f
  3988  146A  2C64               	goto	u4275
  3989  146B  3001               	movlw	1
  3990  146C  00F9               	movwf	??___llmod
  3991  146D  0879               	movf	??___llmod,w
  3992  146E  07B0               	addwf	___llmod@counter,f
  3993  146F                     l3025:
  3994  146F  1FAB               	btfss	___llmod@divisor+3,7
  3995  1470  2C72               	goto	u4281
  3996  1471  2C73               	goto	u4280
  3997  1472                     u4281:
  3998  1472  2C62               	goto	l3023
  3999  1473                     u4280:
  4000  1473                     l3027:
  4001  1473  082B               	movf	___llmod@divisor+3,w
  4002  1474  022F               	subwf	___llmod@dividend+3,w
  4003  1475  1D03               	skipz
  4004  1476  2C81               	goto	u4295
  4005  1477  082A               	movf	___llmod@divisor+2,w
  4006  1478  022E               	subwf	___llmod@dividend+2,w
  4007  1479  1D03               	skipz
  4008  147A  2C81               	goto	u4295
  4009  147B  0829               	movf	___llmod@divisor+1,w
  4010  147C  022D               	subwf	___llmod@dividend+1,w
  4011  147D  1D03               	skipz
  4012  147E  2C81               	goto	u4295
  4013  147F  0828               	movf	___llmod@divisor,w
  4014  1480  022C               	subwf	___llmod@dividend,w
  4015  1481                     u4295:
  4016  1481  1C03               	skipc
  4017  1482  2C84               	goto	u4291
  4018  1483  2C85               	goto	u4290
  4019  1484                     u4291:
  4020  1484  2C93               	goto	l3031
  4021  1485                     u4290:
  4022  1485                     l3029:
  4023  1485  0828               	movf	___llmod@divisor,w
  4024  1486  02AC               	subwf	___llmod@dividend,f
  4025  1487  0829               	movf	___llmod@divisor+1,w
  4026  1488  1C03               	skipc
  4027  1489  0F29               	incfsz	___llmod@divisor+1,w
  4028  148A  02AD               	subwf	___llmod@dividend+1,f
  4029  148B  082A               	movf	___llmod@divisor+2,w
  4030  148C  1C03               	skipc
  4031  148D  0F2A               	incfsz	___llmod@divisor+2,w
  4032  148E  02AE               	subwf	___llmod@dividend+2,f
  4033  148F  082B               	movf	___llmod@divisor+3,w
  4034  1490  1C03               	skipc
  4035  1491  0F2B               	incfsz	___llmod@divisor+3,w
  4036  1492  02AF               	subwf	___llmod@dividend+3,f
  4037  1493                     l3031:
  4038  1493  3001               	movlw	1
  4039  1494                     u4305:
  4040  1494  1003               	clrc
  4041  1495  0CAB               	rrf	___llmod@divisor+3,f
  4042  1496  0CAA               	rrf	___llmod@divisor+2,f
  4043  1497  0CA9               	rrf	___llmod@divisor+1,f
  4044  1498  0CA8               	rrf	___llmod@divisor,f
  4045  1499  3EFF               	addlw	-1
  4046  149A  1D03               	skipz
  4047  149B  2C94               	goto	u4305
  4048  149C                     l3033:
  4049  149C  3001               	movlw	1
  4050  149D  02B0               	subwf	___llmod@counter,f
  4051  149E  1D03               	btfss	3,2
  4052  149F  2CA1               	goto	u4311
  4053  14A0  2CA2               	goto	u4310
  4054  14A1                     u4311:
  4055  14A1  2C73               	goto	l3027
  4056  14A2                     u4310:
  4057  14A2                     l3035:
  4058  14A2  082F               	movf	___llmod@dividend+3,w
  4059  14A3  00AB               	movwf	?___llmod+3
  4060  14A4  082E               	movf	___llmod@dividend+2,w
  4061  14A5  00AA               	movwf	?___llmod+2
  4062  14A6  082D               	movf	___llmod@dividend+1,w
  4063  14A7  00A9               	movwf	?___llmod+1
  4064  14A8  082C               	movf	___llmod@dividend,w
  4065  14A9  00A8               	movwf	?___llmod
  4066  14AA                     l538:
  4067  14AA  0008               	return
  4068  14AB                     __end_of___llmod:
  4069                           
  4070                           	psect	text12
  4071  1744                     __ptext12:	
  4072 ;; *************** function ___xxtofl *****************
  4073 ;; Defined at:
  4074 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;  sign            1    wreg     unsigned char 
  4077 ;;  val             4    3[COMMON] long 
  4078 ;; Auto vars:     Size  Location     Type
  4079 ;;  sign            1    4[BANK0 ] unsigned char 
  4080 ;;  arg             4    6[BANK0 ] unsigned long 
  4081 ;;  exp             1    5[BANK0 ] unsigned char 
  4082 ;; Return value:  Size  Location     Type
  4083 ;;                  4    3[COMMON] unsigned char 
  4084 ;; Registers used:
  4085 ;;		wreg, status,2, status,0
  4086 ;; Tracked objects:
  4087 ;;		On entry : 0/0
  4088 ;;		On exit  : 0/0
  4089 ;;		Unchanged: 0/0
  4090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4091 ;;      Params:         4       0       0       0       0
  4092 ;;      Locals:         0       6       0       0       0
  4093 ;;      Temps:          0       4       0       0       0
  4094 ;;      Totals:         4      10       0       0       0
  4095 ;;Total ram usage:       14 bytes
  4096 ;; Hardware stack levels used:    1
  4097 ;; Hardware stack levels required when called:    1
  4098 ;; This function calls:
  4099 ;;		Nothing
  4100 ;; This function is called by:
  4101 ;;		_giro_read
  4102 ;;		_ftoa
  4103 ;; This function uses a non-reentrant model
  4104 ;;
  4105                           
  4106                           
  4107                           ;psect for function ___xxtofl
  4108  1744                     ___xxtofl:
  4109                           
  4110                           ;incstack = 0
  4111                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4112                           ;___xxtofl@sign stored from wreg
  4113  1744  1283               	bcf	3,5	;RP0=0, select bank0
  4114  1745  1303               	bcf	3,6	;RP1=0, select bank0
  4115  1746  00A4               	movwf	___xxtofl@sign
  4116  1747                     l3095:
  4117  1747  0824               	movf	___xxtofl@sign,w
  4118  1748  1903               	btfsc	3,2
  4119  1749  2F4B               	goto	u4491
  4120  174A  2F4C               	goto	u4490
  4121  174B                     u4491:
  4122  174B  2F60               	goto	l3101
  4123  174C                     u4490:
  4124  174C                     l3097:
  4125  174C  1FF6               	btfss	___xxtofl@val+3,7
  4126  174D  2F4F               	goto	u4501
  4127  174E  2F50               	goto	u4500
  4128  174F                     u4501:
  4129  174F  2F60               	goto	l3101
  4130  1750                     u4500:
  4131  1750                     l3099:
  4132  1750  0973               	comf	___xxtofl@val,w
  4133  1751  00A6               	movwf	___xxtofl@arg
  4134  1752  0974               	comf	___xxtofl@val+1,w
  4135  1753  00A7               	movwf	___xxtofl@arg+1
  4136  1754  0975               	comf	___xxtofl@val+2,w
  4137  1755  00A8               	movwf	___xxtofl@arg+2
  4138  1756  0976               	comf	___xxtofl@val+3,w
  4139  1757  00A9               	movwf	___xxtofl@arg+3
  4140  1758  0AA6               	incf	___xxtofl@arg,f
  4141  1759  1903               	skipnz
  4142  175A  0AA7               	incf	___xxtofl@arg+1,f
  4143  175B  1903               	skipnz
  4144  175C  0AA8               	incf	___xxtofl@arg+2,f
  4145  175D  1903               	skipnz
  4146  175E  0AA9               	incf	___xxtofl@arg+3,f
  4147  175F  2F68               	goto	l749
  4148  1760                     l3101:
  4149  1760  0876               	movf	___xxtofl@val+3,w
  4150  1761  00A9               	movwf	___xxtofl@arg+3
  4151  1762  0875               	movf	___xxtofl@val+2,w
  4152  1763  00A8               	movwf	___xxtofl@arg+2
  4153  1764  0874               	movf	___xxtofl@val+1,w
  4154  1765  00A7               	movwf	___xxtofl@arg+1
  4155  1766  0873               	movf	___xxtofl@val,w
  4156  1767  00A6               	movwf	___xxtofl@arg
  4157  1768                     l749:
  4158  1768  0876               	movf	___xxtofl@val+3,w
  4159  1769  0475               	iorwf	___xxtofl@val+2,w
  4160  176A  0474               	iorwf	___xxtofl@val+1,w
  4161  176B  0473               	iorwf	___xxtofl@val,w
  4162  176C  1D03               	skipz
  4163  176D  2F6F               	goto	u4511
  4164  176E  2F70               	goto	u4510
  4165  176F                     u4511:
  4166  176F  2F79               	goto	l3107
  4167  1770                     u4510:
  4168  1770                     l3103:
  4169  1770  3000               	movlw	0
  4170  1771  00F6               	movwf	?___xxtofl+3
  4171  1772  3000               	movlw	0
  4172  1773  00F5               	movwf	?___xxtofl+2
  4173  1774  3000               	movlw	0
  4174  1775  00F4               	movwf	?___xxtofl+1
  4175  1776  3000               	movlw	0
  4176  1777  00F3               	movwf	?___xxtofl
  4177  1778  2FFF               	goto	l751
  4178  1779                     l3107:
  4179  1779  3096               	movlw	150
  4180  177A  00A0               	movwf	??___xxtofl
  4181  177B  0820               	movf	??___xxtofl,w
  4182  177C  00A5               	movwf	___xxtofl@exp
  4183  177D  2F8B               	goto	l3111
  4184  177E                     l3109:
  4185  177E  3001               	movlw	1
  4186  177F  00A0               	movwf	??___xxtofl
  4187  1780  0820               	movf	??___xxtofl,w
  4188  1781  07A5               	addwf	___xxtofl@exp,f
  4189  1782  3001               	movlw	1
  4190  1783                     u4525:
  4191  1783  1003               	clrc
  4192  1784  0CA9               	rrf	___xxtofl@arg+3,f
  4193  1785  0CA8               	rrf	___xxtofl@arg+2,f
  4194  1786  0CA7               	rrf	___xxtofl@arg+1,f
  4195  1787  0CA6               	rrf	___xxtofl@arg,f
  4196  1788  3EFF               	addlw	-1
  4197  1789  1D03               	skipz
  4198  178A  2F83               	goto	u4525
  4199  178B                     l3111:
  4200  178B  30FE               	movlw	254
  4201  178C  0529               	andwf	___xxtofl@arg+3,w
  4202  178D  1D03               	btfss	3,2
  4203  178E  2F90               	goto	u4531
  4204  178F  2F91               	goto	u4530
  4205  1790                     u4531:
  4206  1790  2F7E               	goto	l3109
  4207  1791                     u4530:
  4208  1791  2FAD               	goto	l755
  4209  1792                     l3113:
  4210  1792  3001               	movlw	1
  4211  1793  00A0               	movwf	??___xxtofl
  4212  1794  0820               	movf	??___xxtofl,w
  4213  1795  07A5               	addwf	___xxtofl@exp,f
  4214  1796                     l3115:
  4215  1796  3001               	movlw	1
  4216  1797  07A6               	addwf	___xxtofl@arg,f
  4217  1798  3000               	movlw	0
  4218  1799  1803               	skipnc
  4219  179A  3001               	movlw	1
  4220  179B  07A7               	addwf	___xxtofl@arg+1,f
  4221  179C  3000               	movlw	0
  4222  179D  1803               	skipnc
  4223  179E  3001               	movlw	1
  4224  179F  07A8               	addwf	___xxtofl@arg+2,f
  4225  17A0  3000               	movlw	0
  4226  17A1  1803               	skipnc
  4227  17A2  3001               	movlw	1
  4228  17A3  07A9               	addwf	___xxtofl@arg+3,f
  4229  17A4                     l3117:
  4230  17A4  3001               	movlw	1
  4231  17A5                     u4545:
  4232  17A5  1003               	clrc
  4233  17A6  0CA9               	rrf	___xxtofl@arg+3,f
  4234  17A7  0CA8               	rrf	___xxtofl@arg+2,f
  4235  17A8  0CA7               	rrf	___xxtofl@arg+1,f
  4236  17A9  0CA6               	rrf	___xxtofl@arg,f
  4237  17AA  3EFF               	addlw	-1
  4238  17AB  1D03               	skipz
  4239  17AC  2FA5               	goto	u4545
  4240  17AD                     l755:
  4241  17AD  30FF               	movlw	255
  4242  17AE  0529               	andwf	___xxtofl@arg+3,w
  4243  17AF  1D03               	btfss	3,2
  4244  17B0  2FB2               	goto	u4551
  4245  17B1  2FB3               	goto	u4550
  4246  17B2                     u4551:
  4247  17B2  2F92               	goto	l3113
  4248  17B3                     u4550:
  4249  17B3  2FBF               	goto	l3121
  4250  17B4                     l3119:
  4251  17B4  3001               	movlw	1
  4252  17B5  02A5               	subwf	___xxtofl@exp,f
  4253  17B6  3001               	movlw	1
  4254  17B7  00A0               	movwf	??___xxtofl
  4255  17B8                     u4565:
  4256  17B8  1003               	clrc
  4257  17B9  0DA6               	rlf	___xxtofl@arg,f
  4258  17BA  0DA7               	rlf	___xxtofl@arg+1,f
  4259  17BB  0DA8               	rlf	___xxtofl@arg+2,f
  4260  17BC  0DA9               	rlf	___xxtofl@arg+3,f
  4261  17BD  0BA0               	decfsz	??___xxtofl,f
  4262  17BE  2FB8               	goto	u4565
  4263  17BF                     l3121:
  4264  17BF  1BA8               	btfsc	___xxtofl@arg+2,7
  4265  17C0  2FC2               	goto	u4571
  4266  17C1  2FC3               	goto	u4570
  4267  17C2                     u4571:
  4268  17C2  2FC9               	goto	l762
  4269  17C3                     u4570:
  4270  17C3                     l3123:
  4271  17C3  3002               	movlw	2
  4272  17C4  0225               	subwf	___xxtofl@exp,w
  4273  17C5  1803               	skipnc
  4274  17C6  2FC8               	goto	u4581
  4275  17C7  2FC9               	goto	u4580
  4276  17C8                     u4581:
  4277  17C8  2FB4               	goto	l3119
  4278  17C9                     u4580:
  4279  17C9                     l762:
  4280  17C9  1825               	btfsc	___xxtofl@exp,0
  4281  17CA  2FCC               	goto	u4591
  4282  17CB  2FCD               	goto	u4590
  4283  17CC                     u4591:
  4284  17CC  2FD5               	goto	l763
  4285  17CD                     u4590:
  4286  17CD                     l3125:
  4287  17CD  30FF               	movlw	255
  4288  17CE  05A6               	andwf	___xxtofl@arg,f
  4289  17CF  30FF               	movlw	255
  4290  17D0  05A7               	andwf	___xxtofl@arg+1,f
  4291  17D1  307F               	movlw	127
  4292  17D2  05A8               	andwf	___xxtofl@arg+2,f
  4293  17D3  30FF               	movlw	255
  4294  17D4  05A9               	andwf	___xxtofl@arg+3,f
  4295  17D5                     l763:
  4296  17D5  1003               	clrc
  4297  17D6  0CA5               	rrf	___xxtofl@exp,f
  4298  17D7                     l3127:
  4299  17D7  0825               	movf	___xxtofl@exp,w
  4300  17D8  00A0               	movwf	??___xxtofl
  4301  17D9  01A1               	clrf	??___xxtofl+1
  4302  17DA  01A2               	clrf	??___xxtofl+2
  4303  17DB  01A3               	clrf	??___xxtofl+3
  4304  17DC  3018               	movlw	24
  4305  17DD                     u4605:
  4306  17DD  1003               	clrc
  4307  17DE  0DA0               	rlf	??___xxtofl,f
  4308  17DF  0DA1               	rlf	??___xxtofl+1,f
  4309  17E0  0DA2               	rlf	??___xxtofl+2,f
  4310  17E1  0DA3               	rlf	??___xxtofl+3,f
  4311  17E2                     u4600:
  4312  17E2  3EFF               	addlw	-1
  4313  17E3  1D03               	skipz
  4314  17E4  2FDD               	goto	u4605
  4315  17E5  0820               	movf	??___xxtofl,w
  4316  17E6  04A6               	iorwf	___xxtofl@arg,f
  4317  17E7  0821               	movf	??___xxtofl+1,w
  4318  17E8  04A7               	iorwf	___xxtofl@arg+1,f
  4319  17E9  0822               	movf	??___xxtofl+2,w
  4320  17EA  04A8               	iorwf	___xxtofl@arg+2,f
  4321  17EB  0823               	movf	??___xxtofl+3,w
  4322  17EC  04A9               	iorwf	___xxtofl@arg+3,f
  4323  17ED                     l3129:
  4324  17ED  0824               	movf	___xxtofl@sign,w
  4325  17EE  1903               	btfsc	3,2
  4326  17EF  2FF1               	goto	u4611
  4327  17F0  2FF2               	goto	u4610
  4328  17F1                     u4611:
  4329  17F1  2FF7               	goto	l3135
  4330  17F2                     u4610:
  4331  17F2                     l3131:
  4332  17F2  1FF6               	btfss	___xxtofl@val+3,7
  4333  17F3  2FF5               	goto	u4621
  4334  17F4  2FF6               	goto	u4620
  4335  17F5                     u4621:
  4336  17F5  2FF7               	goto	l3135
  4337  17F6                     u4620:
  4338  17F6                     l3133:
  4339  17F6  17A9               	bsf	___xxtofl@arg+3,7
  4340  17F7                     l3135:
  4341  17F7  0829               	movf	___xxtofl@arg+3,w
  4342  17F8  00F6               	movwf	?___xxtofl+3
  4343  17F9  0828               	movf	___xxtofl@arg+2,w
  4344  17FA  00F5               	movwf	?___xxtofl+2
  4345  17FB  0827               	movf	___xxtofl@arg+1,w
  4346  17FC  00F4               	movwf	?___xxtofl+1
  4347  17FD  0826               	movf	___xxtofl@arg,w
  4348  17FE  00F3               	movwf	?___xxtofl
  4349  17FF                     l751:
  4350  17FF  0008               	return
  4351  1800                     __end_of___xxtofl:
  4352                           
  4353                           	psect	text13
  4354  1572                     __ptext13:	
  4355 ;; *************** function ___fltol *****************
  4356 ;; Defined at:
  4357 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;  f1              4   36[BANK0 ] unsigned char 
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  exp1            1    8[COMMON] unsigned char 
  4362 ;;  sign1           1    7[COMMON] unsigned char 
  4363 ;; Return value:  Size  Location     Type
  4364 ;;                  4   36[BANK0 ] long 
  4365 ;; Registers used:
  4366 ;;		wreg, status,2, status,0
  4367 ;; Tracked objects:
  4368 ;;		On entry : 0/0
  4369 ;;		On exit  : 0/0
  4370 ;;		Unchanged: 0/0
  4371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4372 ;;      Params:         0       4       0       0       0
  4373 ;;      Locals:         2       0       0       0       0
  4374 ;;      Temps:          0       5       0       0       0
  4375 ;;      Totals:         2       9       0       0       0
  4376 ;;Total ram usage:       11 bytes
  4377 ;; Hardware stack levels used:    1
  4378 ;; Hardware stack levels required when called:    1
  4379 ;; This function calls:
  4380 ;;		Nothing
  4381 ;; This function is called by:
  4382 ;;		_ftoa
  4383 ;; This function uses a non-reentrant model
  4384 ;;
  4385                           
  4386                           
  4387                           ;psect for function ___fltol
  4388  1572                     ___fltol:
  4389  1572                     l3059:	
  4390                           ;incstack = 0
  4391                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4392                           
  4393  1572  1003               	clrc
  4394  1573  1283               	bcf	3,5	;RP0=0, select bank0
  4395  1574  1303               	bcf	3,6	;RP1=0, select bank0
  4396  1575  0D46               	rlf	___fltol@f1+2,w
  4397  1576  0D47               	rlf	___fltol@f1+3,w
  4398  1577  00C8               	movwf	??___fltol
  4399  1578  0848               	movf	??___fltol,w
  4400  1579  00F8               	movwf	___fltol@exp1
  4401  157A  0878               	movf	___fltol@exp1,w
  4402  157B  1D03               	btfss	3,2
  4403  157C  2D7E               	goto	u4391
  4404  157D  2D7F               	goto	u4390
  4405  157E                     u4391:
  4406  157E  2D88               	goto	l3065
  4407  157F                     u4390:
  4408  157F                     l3061:
  4409  157F  3000               	movlw	0
  4410  1580  00C7               	movwf	?___fltol+3
  4411  1581  3000               	movlw	0
  4412  1582  00C6               	movwf	?___fltol+2
  4413  1583  3000               	movlw	0
  4414  1584  00C5               	movwf	?___fltol+1
  4415  1585  3000               	movlw	0
  4416  1586  00C4               	movwf	?___fltol
  4417  1587  2DED               	goto	l502
  4418  1588                     l3065:
  4419  1588  0844               	movf	___fltol@f1,w
  4420  1589  00C8               	movwf	??___fltol
  4421  158A  0845               	movf	___fltol@f1+1,w
  4422  158B  00C9               	movwf	??___fltol+1
  4423  158C  0846               	movf	___fltol@f1+2,w
  4424  158D  00CA               	movwf	??___fltol+2
  4425  158E  0847               	movf	___fltol@f1+3,w
  4426  158F  00CB               	movwf	??___fltol+3
  4427  1590  301F               	movlw	31
  4428  1591                     u4405:
  4429  1591  1003               	clrc
  4430  1592  0CCB               	rrf	??___fltol+3,f
  4431  1593  0CCA               	rrf	??___fltol+2,f
  4432  1594  0CC9               	rrf	??___fltol+1,f
  4433  1595  0CC8               	rrf	??___fltol,f
  4434  1596                     u4400:
  4435  1596  3EFF               	addlw	-1
  4436  1597  1D03               	skipz
  4437  1598  2D91               	goto	u4405
  4438  1599  0848               	movf	??___fltol,w
  4439  159A  00CC               	movwf	??___fltol+4
  4440  159B  084C               	movf	??___fltol+4,w
  4441  159C  00F7               	movwf	___fltol@sign1
  4442  159D                     l3067:
  4443  159D  17C6               	bsf	___fltol@f1+2,7
  4444  159E                     l3069:
  4445  159E  30FF               	movlw	255
  4446  159F  05C4               	andwf	___fltol@f1,f
  4447  15A0  30FF               	movlw	255
  4448  15A1  05C5               	andwf	___fltol@f1+1,f
  4449  15A2  30FF               	movlw	255
  4450  15A3  05C6               	andwf	___fltol@f1+2,f
  4451  15A4  3000               	movlw	0
  4452  15A5  05C7               	andwf	___fltol@f1+3,f
  4453  15A6                     l3071:
  4454  15A6  3096               	movlw	150
  4455  15A7  02F8               	subwf	___fltol@exp1,f
  4456  15A8                     l3073:
  4457  15A8  1FF8               	btfss	___fltol@exp1,7
  4458  15A9  2DAB               	goto	u4411
  4459  15AA  2DAC               	goto	u4410
  4460  15AB                     u4411:
  4461  15AB  2DC6               	goto	l3083
  4462  15AC                     u4410:
  4463  15AC                     l3075:
  4464  15AC  0878               	movf	___fltol@exp1,w
  4465  15AD  3A80               	xorlw	128
  4466  15AE  3E97               	addlw	151
  4467  15AF  1803               	skipnc
  4468  15B0  2DB2               	goto	u4421
  4469  15B1  2DB3               	goto	u4420
  4470  15B2                     u4421:
  4471  15B2  2DB4               	goto	l3081
  4472  15B3                     u4420:
  4473  15B3  2D7F               	goto	l3061
  4474  15B4                     l3081:
  4475  15B4  3001               	movlw	1
  4476  15B5                     u4435:
  4477  15B5  1003               	clrc
  4478  15B6  0CC7               	rrf	___fltol@f1+3,f
  4479  15B7  0CC6               	rrf	___fltol@f1+2,f
  4480  15B8  0CC5               	rrf	___fltol@f1+1,f
  4481  15B9  0CC4               	rrf	___fltol@f1,f
  4482  15BA  3EFF               	addlw	-1
  4483  15BB  1D03               	skipz
  4484  15BC  2DB5               	goto	u4435
  4485  15BD  3001               	movlw	1
  4486  15BE  00C8               	movwf	??___fltol
  4487  15BF  0848               	movf	??___fltol,w
  4488  15C0  07F8               	addwf	___fltol@exp1,f
  4489  15C1  1D03               	btfss	3,2
  4490  15C2  2DC4               	goto	u4441
  4491  15C3  2DC5               	goto	u4440
  4492  15C4                     u4441:
  4493  15C4  2DB4               	goto	l3081
  4494  15C5                     u4440:
  4495  15C5  2DDD               	goto	l3091
  4496  15C6                     l3083:
  4497  15C6  3020               	movlw	32
  4498  15C7  0278               	subwf	___fltol@exp1,w
  4499  15C8  1C03               	skipc
  4500  15C9  2DCB               	goto	u4451
  4501  15CA  2DCC               	goto	u4450
  4502  15CB                     u4451:
  4503  15CB  2DD8               	goto	l509
  4504  15CC                     u4450:
  4505  15CC  2D7F               	goto	l3061
  4506  15CD                     l3089:
  4507  15CD  3001               	movlw	1
  4508  15CE  00C8               	movwf	??___fltol
  4509  15CF                     u4465:
  4510  15CF  1003               	clrc
  4511  15D0  0DC4               	rlf	___fltol@f1,f
  4512  15D1  0DC5               	rlf	___fltol@f1+1,f
  4513  15D2  0DC6               	rlf	___fltol@f1+2,f
  4514  15D3  0DC7               	rlf	___fltol@f1+3,f
  4515  15D4  0BC8               	decfsz	??___fltol,f
  4516  15D5  2DCF               	goto	u4465
  4517  15D6  3001               	movlw	1
  4518  15D7  02F8               	subwf	___fltol@exp1,f
  4519  15D8                     l509:
  4520  15D8  0878               	movf	___fltol@exp1,w
  4521  15D9  1D03               	btfss	3,2
  4522  15DA  2DDC               	goto	u4471
  4523  15DB  2DDD               	goto	u4470
  4524  15DC                     u4471:
  4525  15DC  2DCD               	goto	l3089
  4526  15DD                     u4470:
  4527  15DD                     l3091:
  4528  15DD  0877               	movf	___fltol@sign1,w
  4529  15DE  1903               	btfsc	3,2
  4530  15DF  2DE1               	goto	u4481
  4531  15E0  2DE2               	goto	u4480
  4532  15E1                     u4481:
  4533  15E1  2DED               	goto	l512
  4534  15E2                     u4480:
  4535  15E2                     l3093:
  4536  15E2  09C4               	comf	___fltol@f1,f
  4537  15E3  09C5               	comf	___fltol@f1+1,f
  4538  15E4  09C6               	comf	___fltol@f1+2,f
  4539  15E5  09C7               	comf	___fltol@f1+3,f
  4540  15E6  0AC4               	incf	___fltol@f1,f
  4541  15E7  1903               	skipnz
  4542  15E8  0AC5               	incf	___fltol@f1+1,f
  4543  15E9  1903               	skipnz
  4544  15EA  0AC6               	incf	___fltol@f1+2,f
  4545  15EB  1903               	skipnz
  4546  15EC  0AC7               	incf	___fltol@f1+3,f
  4547  15ED                     l512:
  4548  15ED                     l502:
  4549  15ED  0008               	return
  4550  15EE                     __end_of___fltol:
  4551                           
  4552                           	psect	text14
  4553  13E3                     __ptext14:	
  4554 ;; *************** function ___flsub *****************
  4555 ;; Defined at:
  4556 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  a               4   56[BANK0 ] long 
  4559 ;;  b               4   60[BANK0 ] long 
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;		None
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  4   56[BANK0 ] long 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4571 ;;      Params:         0       8       0       0       0
  4572 ;;      Locals:         0       0       0       0       0
  4573 ;;      Temps:          0       0       0       0       0
  4574 ;;      Totals:         0       8       0       0       0
  4575 ;;Total ram usage:        8 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    2
  4578 ;; This function calls:
  4579 ;;		___fladd
  4580 ;; This function is called by:
  4581 ;;		_ftoa
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           
  4585                           
  4586                           ;psect for function ___flsub
  4587  13E3                     ___flsub:
  4588  13E3                     l2333:	
  4589                           ;incstack = 0
  4590                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4591                           
  4592  13E3  3080               	movlw	128
  4593  13E4  1283               	bcf	3,5	;RP0=0, select bank0
  4594  13E5  1303               	bcf	3,6	;RP1=0, select bank0
  4595  13E6  06DB               	xorwf	___flsub@a+3,f
  4596  13E7                     l2335:
  4597  13E7  085F               	movf	___flsub@b+3,w
  4598  13E8  00C7               	movwf	___fladd@b+3
  4599  13E9  085E               	movf	___flsub@b+2,w
  4600  13EA  00C6               	movwf	___fladd@b+2
  4601  13EB  085D               	movf	___flsub@b+1,w
  4602  13EC  00C5               	movwf	___fladd@b+1
  4603  13ED  085C               	movf	___flsub@b,w
  4604  13EE  00C4               	movwf	___fladd@b
  4605  13EF  085B               	movf	___flsub@a+3,w
  4606  13F0  00CB               	movwf	___fladd@a+3
  4607  13F1  085A               	movf	___flsub@a+2,w
  4608  13F2  00CA               	movwf	___fladd@a+2
  4609  13F3  0859               	movf	___flsub@a+1,w
  4610  13F4  00C9               	movwf	___fladd@a+1
  4611  13F5  0858               	movf	___flsub@a,w
  4612  13F6  00C8               	movwf	___fladd@a
  4613  13F7  120A  158A  2578  160A  118A  	fcall	___fladd
  4614  13FC  1283               	bcf	3,5	;RP0=0, select bank0
  4615  13FD  1303               	bcf	3,6	;RP1=0, select bank0
  4616  13FE  0847               	movf	?___fladd+3,w
  4617  13FF  00DB               	movwf	?___flsub+3
  4618  1400  0846               	movf	?___fladd+2,w
  4619  1401  00DA               	movwf	?___flsub+2
  4620  1402  0845               	movf	?___fladd+1,w
  4621  1403  00D9               	movwf	?___flsub+1
  4622  1404  0844               	movf	?___fladd,w
  4623  1405  00D8               	movwf	?___flsub
  4624  1406                     l655:
  4625  1406  0008               	return
  4626  1407                     __end_of___flsub:
  4627                           
  4628                           	psect	text15
  4629  0D78                     __ptext15:	
  4630 ;; *************** function ___fladd *****************
  4631 ;; Defined at:
  4632 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;  b               4   36[BANK0 ] long 
  4635 ;;  a               4   40[BANK0 ] long 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  grs             1   55[BANK0 ] unsigned char 
  4638 ;;  bexp            1   54[BANK0 ] unsigned char 
  4639 ;;  aexp            1   53[BANK0 ] unsigned char 
  4640 ;;  signs           1   52[BANK0 ] unsigned char 
  4641 ;; Return value:  Size  Location     Type
  4642 ;;                  4   36[BANK0 ] unsigned char 
  4643 ;; Registers used:
  4644 ;;		wreg, status,2, status,0, btemp+1
  4645 ;; Tracked objects:
  4646 ;;		On entry : 0/0
  4647 ;;		On exit  : 0/0
  4648 ;;		Unchanged: 0/0
  4649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4650 ;;      Params:         0       8       0       0       0
  4651 ;;      Locals:         0       4       0       0       0
  4652 ;;      Temps:          0       8       0       0       0
  4653 ;;      Totals:         0      20       0       0       0
  4654 ;;Total ram usage:       20 bytes
  4655 ;; Hardware stack levels used:    1
  4656 ;; Hardware stack levels required when called:    1
  4657 ;; This function calls:
  4658 ;;		Nothing
  4659 ;; This function is called by:
  4660 ;;		_giro_read
  4661 ;;		___flsub
  4662 ;; This function uses a non-reentrant model
  4663 ;;
  4664                           
  4665                           
  4666                           ;psect for function ___fladd
  4667  0D78                     ___fladd:
  4668  0D78                     l2037:	
  4669                           ;incstack = 0
  4670                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4671                           
  4672  0D78  1283               	bcf	3,5	;RP0=0, select bank0
  4673  0D79  1303               	bcf	3,6	;RP1=0, select bank0
  4674  0D7A  0847               	movf	___fladd@b+3,w
  4675  0D7B  3980               	andlw	128
  4676  0D7C  00CC               	movwf	??___fladd
  4677  0D7D  084C               	movf	??___fladd,w
  4678  0D7E  00D4               	movwf	___fladd@signs
  4679  0D7F                     l2039:
  4680  0D7F  0847               	movf	___fladd@b+3,w
  4681  0D80  00CC               	movwf	??___fladd
  4682  0D81  074C               	addwf	??___fladd,w
  4683  0D82  00CD               	movwf	??___fladd+1
  4684  0D83  084D               	movf	??___fladd+1,w
  4685  0D84  00D6               	movwf	___fladd@bexp
  4686  0D85                     l2041:
  4687  0D85  1FC6               	btfss	___fladd@b+2,7
  4688  0D86  2D88               	goto	u2321
  4689  0D87  2D89               	goto	u2320
  4690  0D88                     u2321:
  4691  0D88  2D8A               	goto	l2045
  4692  0D89                     u2320:
  4693  0D89                     l2043:
  4694  0D89  1456               	bsf	___fladd@bexp,0
  4695  0D8A                     l2045:
  4696  0D8A  0856               	movf	___fladd@bexp,w
  4697  0D8B  1903               	btfsc	3,2
  4698  0D8C  2D8E               	goto	u2331
  4699  0D8D  2D8F               	goto	u2330
  4700  0D8E                     u2331:
  4701  0D8E  2D9F               	goto	l2055
  4702  0D8F                     u2330:
  4703  0D8F                     l2047:
  4704  0D8F  0A56               	incf	___fladd@bexp,w
  4705  0D90  1D03               	btfss	3,2
  4706  0D91  2D93               	goto	u2341
  4707  0D92  2D94               	goto	u2340
  4708  0D93                     u2341:
  4709  0D93  2D9C               	goto	l2051
  4710  0D94                     u2340:
  4711  0D94                     l2049:
  4712  0D94  3000               	movlw	0
  4713  0D95  00C7               	movwf	___fladd@b+3
  4714  0D96  3000               	movlw	0
  4715  0D97  00C6               	movwf	___fladd@b+2
  4716  0D98  3000               	movlw	0
  4717  0D99  00C5               	movwf	___fladd@b+1
  4718  0D9A  3000               	movlw	0
  4719  0D9B  00C4               	movwf	___fladd@b
  4720  0D9C                     l2051:
  4721  0D9C  17C6               	bsf	___fladd@b+2,7
  4722  0D9D                     l2053:
  4723  0D9D  01C7               	clrf	___fladd@b+3
  4724  0D9E  2DA7               	goto	l2057
  4725  0D9F                     l2055:
  4726  0D9F  3000               	movlw	0
  4727  0DA0  00C7               	movwf	___fladd@b+3
  4728  0DA1  3000               	movlw	0
  4729  0DA2  00C6               	movwf	___fladd@b+2
  4730  0DA3  3000               	movlw	0
  4731  0DA4  00C5               	movwf	___fladd@b+1
  4732  0DA5  3000               	movlw	0
  4733  0DA6  00C4               	movwf	___fladd@b
  4734  0DA7                     l2057:
  4735  0DA7  084B               	movf	___fladd@a+3,w
  4736  0DA8  3980               	andlw	128
  4737  0DA9  00CC               	movwf	??___fladd
  4738  0DAA  084C               	movf	??___fladd,w
  4739  0DAB  00D5               	movwf	___fladd@aexp
  4740  0DAC                     l2059:
  4741  0DAC  0855               	movf	___fladd@aexp,w
  4742  0DAD  0654               	xorwf	___fladd@signs,w
  4743  0DAE  1903               	skipnz
  4744  0DAF  2DB1               	goto	u2351
  4745  0DB0  2DB2               	goto	u2350
  4746  0DB1                     u2351:
  4747  0DB1  2DB3               	goto	l2063
  4748  0DB2                     u2350:
  4749  0DB2                     l2061:
  4750  0DB2  1754               	bsf	___fladd@signs,6
  4751  0DB3                     l2063:
  4752  0DB3  084B               	movf	___fladd@a+3,w
  4753  0DB4  00CC               	movwf	??___fladd
  4754  0DB5  074C               	addwf	??___fladd,w
  4755  0DB6  00CD               	movwf	??___fladd+1
  4756  0DB7  084D               	movf	??___fladd+1,w
  4757  0DB8  00D5               	movwf	___fladd@aexp
  4758  0DB9                     l2065:
  4759  0DB9  1FCA               	btfss	___fladd@a+2,7
  4760  0DBA  2DBC               	goto	u2361
  4761  0DBB  2DBD               	goto	u2360
  4762  0DBC                     u2361:
  4763  0DBC  2DBE               	goto	l2069
  4764  0DBD                     u2360:
  4765  0DBD                     l2067:
  4766  0DBD  1455               	bsf	___fladd@aexp,0
  4767  0DBE                     l2069:
  4768  0DBE  0855               	movf	___fladd@aexp,w
  4769  0DBF  1903               	btfsc	3,2
  4770  0DC0  2DC2               	goto	u2371
  4771  0DC1  2DC3               	goto	u2370
  4772  0DC2                     u2371:
  4773  0DC2  2DD3               	goto	l2079
  4774  0DC3                     u2370:
  4775  0DC3                     l2071:
  4776  0DC3  0A55               	incf	___fladd@aexp,w
  4777  0DC4  1D03               	btfss	3,2
  4778  0DC5  2DC7               	goto	u2381
  4779  0DC6  2DC8               	goto	u2380
  4780  0DC7                     u2381:
  4781  0DC7  2DD0               	goto	l2075
  4782  0DC8                     u2380:
  4783  0DC8                     l2073:
  4784  0DC8  3000               	movlw	0
  4785  0DC9  00CB               	movwf	___fladd@a+3
  4786  0DCA  3000               	movlw	0
  4787  0DCB  00CA               	movwf	___fladd@a+2
  4788  0DCC  3000               	movlw	0
  4789  0DCD  00C9               	movwf	___fladd@a+1
  4790  0DCE  3000               	movlw	0
  4791  0DCF  00C8               	movwf	___fladd@a
  4792  0DD0                     l2075:
  4793  0DD0  17CA               	bsf	___fladd@a+2,7
  4794  0DD1                     l2077:
  4795  0DD1  01CB               	clrf	___fladd@a+3
  4796  0DD2  2DDB               	goto	l609
  4797  0DD3                     l2079:
  4798  0DD3  3000               	movlw	0
  4799  0DD4  00CB               	movwf	___fladd@a+3
  4800  0DD5  3000               	movlw	0
  4801  0DD6  00CA               	movwf	___fladd@a+2
  4802  0DD7  3000               	movlw	0
  4803  0DD8  00C9               	movwf	___fladd@a+1
  4804  0DD9  3000               	movlw	0
  4805  0DDA  00C8               	movwf	___fladd@a
  4806  0DDB                     l609:
  4807  0DDB  0856               	movf	___fladd@bexp,w
  4808  0DDC  0255               	subwf	___fladd@aexp,w
  4809  0DDD  1803               	skipnc
  4810  0DDE  2DE0               	goto	u2391
  4811  0DDF  2DE1               	goto	u2390
  4812  0DE0                     u2391:
  4813  0DE0  2E25               	goto	l2115
  4814  0DE1                     u2390:
  4815  0DE1                     l2081:
  4816  0DE1  1F54               	btfss	___fladd@signs,6
  4817  0DE2  2DE4               	goto	u2401
  4818  0DE3  2DE5               	goto	u2400
  4819  0DE4                     u2401:
  4820  0DE4  2DE9               	goto	l2085
  4821  0DE5                     u2400:
  4822  0DE5                     l2083:
  4823  0DE5  3080               	movlw	128
  4824  0DE6  00CC               	movwf	??___fladd
  4825  0DE7  084C               	movf	??___fladd,w
  4826  0DE8  06D4               	xorwf	___fladd@signs,f
  4827  0DE9                     l2085:
  4828  0DE9  0856               	movf	___fladd@bexp,w
  4829  0DEA  00CC               	movwf	??___fladd
  4830  0DEB  084C               	movf	??___fladd,w
  4831  0DEC  00D7               	movwf	___fladd@grs
  4832  0DED                     l2087:
  4833  0DED  0855               	movf	___fladd@aexp,w
  4834  0DEE  00CC               	movwf	??___fladd
  4835  0DEF  084C               	movf	??___fladd,w
  4836  0DF0  00D6               	movwf	___fladd@bexp
  4837  0DF1                     l2089:
  4838  0DF1  0857               	movf	___fladd@grs,w
  4839  0DF2  00CC               	movwf	??___fladd
  4840  0DF3  084C               	movf	??___fladd,w
  4841  0DF4  00D5               	movwf	___fladd@aexp
  4842  0DF5                     l2091:
  4843  0DF5  0844               	movf	___fladd@b,w
  4844  0DF6  00CC               	movwf	??___fladd
  4845  0DF7  084C               	movf	??___fladd,w
  4846  0DF8  00D7               	movwf	___fladd@grs
  4847  0DF9                     l2093:
  4848  0DF9  0848               	movf	___fladd@a,w
  4849  0DFA  00CC               	movwf	??___fladd
  4850  0DFB  084C               	movf	??___fladd,w
  4851  0DFC  00C4               	movwf	___fladd@b
  4852  0DFD                     l2095:
  4853  0DFD  0857               	movf	___fladd@grs,w
  4854  0DFE  00CC               	movwf	??___fladd
  4855  0DFF  084C               	movf	??___fladd,w
  4856  0E00  00C8               	movwf	___fladd@a
  4857  0E01                     l2097:
  4858  0E01  0845               	movf	___fladd@b+1,w
  4859  0E02  00CC               	movwf	??___fladd
  4860  0E03  084C               	movf	??___fladd,w
  4861  0E04  00D7               	movwf	___fladd@grs
  4862  0E05                     l2099:
  4863  0E05  0849               	movf	___fladd@a+1,w
  4864  0E06  00CC               	movwf	??___fladd
  4865  0E07  084C               	movf	??___fladd,w
  4866  0E08  00C5               	movwf	___fladd@b+1
  4867  0E09                     l2101:
  4868  0E09  0857               	movf	___fladd@grs,w
  4869  0E0A  00CC               	movwf	??___fladd
  4870  0E0B  084C               	movf	??___fladd,w
  4871  0E0C  00C9               	movwf	___fladd@a+1
  4872  0E0D                     l2103:
  4873  0E0D  0846               	movf	___fladd@b+2,w
  4874  0E0E  00CC               	movwf	??___fladd
  4875  0E0F  084C               	movf	??___fladd,w
  4876  0E10  00D7               	movwf	___fladd@grs
  4877  0E11                     l2105:
  4878  0E11  084A               	movf	___fladd@a+2,w
  4879  0E12  00CC               	movwf	??___fladd
  4880  0E13  084C               	movf	??___fladd,w
  4881  0E14  00C6               	movwf	___fladd@b+2
  4882  0E15                     l2107:
  4883  0E15  0857               	movf	___fladd@grs,w
  4884  0E16  00CC               	movwf	??___fladd
  4885  0E17  084C               	movf	??___fladd,w
  4886  0E18  00CA               	movwf	___fladd@a+2
  4887  0E19                     l2109:
  4888  0E19  0847               	movf	___fladd@b+3,w
  4889  0E1A  00CC               	movwf	??___fladd
  4890  0E1B  084C               	movf	??___fladd,w
  4891  0E1C  00D7               	movwf	___fladd@grs
  4892  0E1D                     l2111:
  4893  0E1D  084B               	movf	___fladd@a+3,w
  4894  0E1E  00CC               	movwf	??___fladd
  4895  0E1F  084C               	movf	??___fladd,w
  4896  0E20  00C7               	movwf	___fladd@b+3
  4897  0E21                     l2113:
  4898  0E21  0857               	movf	___fladd@grs,w
  4899  0E22  00CC               	movwf	??___fladd
  4900  0E23  084C               	movf	??___fladd,w
  4901  0E24  00CB               	movwf	___fladd@a+3
  4902  0E25                     l2115:
  4903  0E25  01D7               	clrf	___fladd@grs
  4904  0E26                     l2117:
  4905  0E26  0855               	movf	___fladd@aexp,w
  4906  0E27  00CC               	movwf	??___fladd
  4907  0E28  01CD               	clrf	??___fladd+1
  4908  0E29  084D               	movf	??___fladd+1,w
  4909  0E2A  00CF               	movwf	??___fladd+3
  4910  0E2B  0856               	movf	___fladd@bexp,w
  4911  0E2C  024C               	subwf	??___fladd,w
  4912  0E2D  00CE               	movwf	??___fladd+2
  4913  0E2E  1C03               	skipc
  4914  0E2F  03CF               	decf	??___fladd+3,f
  4915  0E30  084F               	movf	??___fladd+3,w
  4916  0E31  3A80               	xorlw	128
  4917  0E32  00FF               	movwf	btemp+1
  4918  0E33  3080               	movlw	128
  4919  0E34  027F               	subwf	btemp+1,w
  4920  0E35  1D03               	skipz
  4921  0E36  2E39               	goto	u2415
  4922  0E37  301A               	movlw	26
  4923  0E38  024E               	subwf	??___fladd+2,w
  4924  0E39                     u2415:
  4925  0E39  1C03               	skipc
  4926  0E3A  2E3C               	goto	u2411
  4927  0E3B  2E3D               	goto	u2410
  4928  0E3C                     u2411:
  4929  0E3C  2E7A               	goto	l2133
  4930  0E3D                     u2410:
  4931  0E3D                     l2119:
  4932  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  4933  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  4934  0E3F  0847               	movf	___fladd@b+3,w
  4935  0E40  0446               	iorwf	___fladd@b+2,w
  4936  0E41  0445               	iorwf	___fladd@b+1,w
  4937  0E42  0444               	iorwf	___fladd@b,w
  4938  0E43  1D03               	skipz
  4939  0E44  2E46               	goto	u2421
  4940  0E45  2E48               	goto	u2420
  4941  0E46                     u2421:
  4942  0E46  3001               	movlw	1
  4943  0E47  2E49               	goto	u2430
  4944  0E48                     u2420:
  4945  0E48  3000               	movlw	0
  4946  0E49                     u2430:
  4947  0E49  00CC               	movwf	??___fladd
  4948  0E4A  084C               	movf	??___fladd,w
  4949  0E4B  00D7               	movwf	___fladd@grs
  4950  0E4C  3000               	movlw	0
  4951  0E4D  00C7               	movwf	___fladd@b+3
  4952  0E4E  3000               	movlw	0
  4953  0E4F  00C6               	movwf	___fladd@b+2
  4954  0E50  3000               	movlw	0
  4955  0E51  00C5               	movwf	___fladd@b+1
  4956  0E52  3000               	movlw	0
  4957  0E53  00C4               	movwf	___fladd@b
  4958  0E54  0855               	movf	___fladd@aexp,w
  4959  0E55  00CC               	movwf	??___fladd
  4960  0E56  084C               	movf	??___fladd,w
  4961  0E57  00D6               	movwf	___fladd@bexp
  4962  0E58  2E82               	goto	l613
  4963  0E59                     l615:
  4964  0E59  1C57               	btfss	___fladd@grs,0
  4965  0E5A  2E5C               	goto	u2441
  4966  0E5B  2E5D               	goto	u2440
  4967  0E5C                     u2441:
  4968  0E5C  2E66               	goto	l2123
  4969  0E5D                     u2440:
  4970  0E5D                     l2121:
  4971  0E5D  0857               	movf	___fladd@grs,w
  4972  0E5E  00CC               	movwf	??___fladd
  4973  0E5F  1003               	clrc
  4974  0E60  0C4C               	rrf	??___fladd,w
  4975  0E61  3801               	iorlw	1
  4976  0E62  00CD               	movwf	??___fladd+1
  4977  0E63  084D               	movf	??___fladd+1,w
  4978  0E64  00D7               	movwf	___fladd@grs
  4979  0E65  2E68               	goto	l2125
  4980  0E66                     l2123:
  4981  0E66  1003               	clrc
  4982  0E67  0CD7               	rrf	___fladd@grs,f
  4983  0E68                     l2125:
  4984  0E68  1C44               	btfss	___fladd@b,0
  4985  0E69  2E6B               	goto	u2451
  4986  0E6A  2E6C               	goto	u2450
  4987  0E6B                     u2451:
  4988  0E6B  2E6D               	goto	l2129
  4989  0E6C                     u2450:
  4990  0E6C                     l2127:
  4991  0E6C  17D7               	bsf	___fladd@grs,7
  4992  0E6D                     l2129:
  4993  0E6D  3001               	movlw	1
  4994  0E6E  00CC               	movwf	??___fladd
  4995  0E6F                     u2465:
  4996  0E6F  0D47               	rlf	___fladd@b+3,w
  4997  0E70  0CC7               	rrf	___fladd@b+3,f
  4998  0E71  0CC6               	rrf	___fladd@b+2,f
  4999  0E72  0CC5               	rrf	___fladd@b+1,f
  5000  0E73  0CC4               	rrf	___fladd@b,f
  5001  0E74  0BCC               	decfsz	??___fladd& (0+127),f
  5002  0E75  2E6F               	goto	u2465
  5003  0E76                     l2131:
  5004  0E76  3001               	movlw	1
  5005  0E77  00CC               	movwf	??___fladd
  5006  0E78  084C               	movf	??___fladd,w
  5007  0E79  07D6               	addwf	___fladd@bexp,f
  5008  0E7A                     l2133:
  5009  0E7A  1283               	bcf	3,5	;RP0=0, select bank0
  5010  0E7B  1303               	bcf	3,6	;RP1=0, select bank0
  5011  0E7C  0855               	movf	___fladd@aexp,w
  5012  0E7D  0256               	subwf	___fladd@bexp,w
  5013  0E7E  1C03               	skipc
  5014  0E7F  2E81               	goto	u2471
  5015  0E80  2E82               	goto	u2470
  5016  0E81                     u2471:
  5017  0E81  2E59               	goto	l615
  5018  0E82                     u2470:
  5019  0E82                     l613:
  5020  0E82  1B54               	btfsc	___fladd@signs,6
  5021  0E83  2E85               	goto	u2481
  5022  0E84  2E86               	goto	u2480
  5023  0E85                     u2481:
  5024  0E85  2ED1               	goto	l2159
  5025  0E86                     u2480:
  5026  0E86                     l2135:
  5027  0E86  0856               	movf	___fladd@bexp,w
  5028  0E87  1D03               	btfss	3,2
  5029  0E88  2E8A               	goto	u2491
  5030  0E89  2E8B               	goto	u2490
  5031  0E8A                     u2491:
  5032  0E8A  2E94               	goto	l2141
  5033  0E8B                     u2490:
  5034  0E8B                     l2137:
  5035  0E8B  3000               	movlw	0
  5036  0E8C  00C7               	movwf	?___fladd+3
  5037  0E8D  3000               	movlw	0
  5038  0E8E  00C6               	movwf	?___fladd+2
  5039  0E8F  3000               	movlw	0
  5040  0E90  00C5               	movwf	?___fladd+1
  5041  0E91  3000               	movlw	0
  5042  0E92  00C4               	movwf	?___fladd
  5043  0E93  2FFF               	goto	l622
  5044  0E94                     l2141:
  5045  0E94  0848               	movf	___fladd@a,w
  5046  0E95  07C4               	addwf	___fladd@b,f
  5047  0E96  0849               	movf	___fladd@a+1,w
  5048  0E97  1103               	clrz
  5049  0E98  1803               	skipnc
  5050  0E99  3E01               	addlw	1
  5051  0E9A  1903               	skipnz
  5052  0E9B  2E9D               	goto	u2501
  5053  0E9C  07C5               	addwf	___fladd@b+1,f
  5054  0E9D                     u2501:
  5055  0E9D  084A               	movf	___fladd@a+2,w
  5056  0E9E  1103               	clrz
  5057  0E9F  1803               	skipnc
  5058  0EA0  3E01               	addlw	1
  5059  0EA1  1903               	skipnz
  5060  0EA2  2EA4               	goto	u2502
  5061  0EA3  07C6               	addwf	___fladd@b+2,f
  5062  0EA4                     u2502:
  5063  0EA4  084B               	movf	___fladd@a+3,w
  5064  0EA5  1103               	clrz
  5065  0EA6  1803               	skipnc
  5066  0EA7  3E01               	addlw	1
  5067  0EA8  1903               	skipnz
  5068  0EA9  2EAB               	goto	u2503
  5069  0EAA  07C7               	addwf	___fladd@b+3,f
  5070  0EAB                     u2503:
  5071  0EAB                     l2143:
  5072  0EAB  1C47               	btfss	___fladd@b+3,0
  5073  0EAC  2EAE               	goto	u2511
  5074  0EAD  2EAF               	goto	u2510
  5075  0EAE                     u2511:
  5076  0EAE  2F85               	goto	l2193
  5077  0EAF                     u2510:
  5078  0EAF                     l2145:
  5079  0EAF  1C57               	btfss	___fladd@grs,0
  5080  0EB0  2EB2               	goto	u2521
  5081  0EB1  2EB3               	goto	u2520
  5082  0EB2                     u2521:
  5083  0EB2  2EBC               	goto	l2149
  5084  0EB3                     u2520:
  5085  0EB3                     l2147:
  5086  0EB3  0857               	movf	___fladd@grs,w
  5087  0EB4  00CC               	movwf	??___fladd
  5088  0EB5  1003               	clrc
  5089  0EB6  0C4C               	rrf	??___fladd,w
  5090  0EB7  3801               	iorlw	1
  5091  0EB8  00CD               	movwf	??___fladd+1
  5092  0EB9  084D               	movf	??___fladd+1,w
  5093  0EBA  00D7               	movwf	___fladd@grs
  5094  0EBB  2EBE               	goto	l2151
  5095  0EBC                     l2149:
  5096  0EBC  1003               	clrc
  5097  0EBD  0CD7               	rrf	___fladd@grs,f
  5098  0EBE                     l2151:
  5099  0EBE  1C44               	btfss	___fladd@b,0
  5100  0EBF  2EC1               	goto	u2531
  5101  0EC0  2EC2               	goto	u2530
  5102  0EC1                     u2531:
  5103  0EC1  2EC3               	goto	l2155
  5104  0EC2                     u2530:
  5105  0EC2                     l2153:
  5106  0EC2  17D7               	bsf	___fladd@grs,7
  5107  0EC3                     l2155:
  5108  0EC3  3001               	movlw	1
  5109  0EC4  00CC               	movwf	??___fladd
  5110  0EC5                     u2545:
  5111  0EC5  0D47               	rlf	___fladd@b+3,w
  5112  0EC6  0CC7               	rrf	___fladd@b+3,f
  5113  0EC7  0CC6               	rrf	___fladd@b+2,f
  5114  0EC8  0CC5               	rrf	___fladd@b+1,f
  5115  0EC9  0CC4               	rrf	___fladd@b,f
  5116  0ECA  0BCC               	decfsz	??___fladd& (0+127),f
  5117  0ECB  2EC5               	goto	u2545
  5118  0ECC                     l2157:
  5119  0ECC  3001               	movlw	1
  5120  0ECD  00CC               	movwf	??___fladd
  5121  0ECE  084C               	movf	??___fladd,w
  5122  0ECF  07D6               	addwf	___fladd@bexp,f
  5123  0ED0  2F85               	goto	l2193
  5124  0ED1                     l2159:
  5125  0ED1  0847               	movf	___fladd@b+3,w
  5126  0ED2  3A80               	xorlw	128
  5127  0ED3  00FF               	movwf	btemp+1
  5128  0ED4  084B               	movf	___fladd@a+3,w
  5129  0ED5  3A80               	xorlw	128
  5130  0ED6  027F               	subwf	btemp+1,w
  5131  0ED7  1D03               	skipz
  5132  0ED8  2EE3               	goto	u2553
  5133  0ED9  084A               	movf	___fladd@a+2,w
  5134  0EDA  0246               	subwf	___fladd@b+2,w
  5135  0EDB  1D03               	skipz
  5136  0EDC  2EE3               	goto	u2553
  5137  0EDD  0849               	movf	___fladd@a+1,w
  5138  0EDE  0245               	subwf	___fladd@b+1,w
  5139  0EDF  1D03               	skipz
  5140  0EE0  2EE3               	goto	u2553
  5141  0EE1  0848               	movf	___fladd@a,w
  5142  0EE2  0244               	subwf	___fladd@b,w
  5143  0EE3                     u2553:
  5144  0EE3  1803               	skipnc
  5145  0EE4  2EE6               	goto	u2551
  5146  0EE5  2EE7               	goto	u2550
  5147  0EE6                     u2551:
  5148  0EE6  2F3F               	goto	l2169
  5149  0EE7                     u2550:
  5150  0EE7                     l2161:
  5151  0EE7  30FF               	movlw	255
  5152  0EE8  00CC               	movwf	??___fladd
  5153  0EE9  30FF               	movlw	255
  5154  0EEA  00CD               	movwf	??___fladd+1
  5155  0EEB  30FF               	movlw	255
  5156  0EEC  00CE               	movwf	??___fladd+2
  5157  0EED  30FF               	movlw	255
  5158  0EEE  00CF               	movwf	??___fladd+3
  5159  0EEF  0848               	movf	___fladd@a,w
  5160  0EF0  00D0               	movwf	??___fladd+4
  5161  0EF1  0849               	movf	___fladd@a+1,w
  5162  0EF2  00D1               	movwf	??___fladd+5
  5163  0EF3  084A               	movf	___fladd@a+2,w
  5164  0EF4  00D2               	movwf	??___fladd+6
  5165  0EF5  084B               	movf	___fladd@a+3,w
  5166  0EF6  00D3               	movwf	??___fladd+7
  5167  0EF7  0844               	movf	___fladd@b,w
  5168  0EF8  02D0               	subwf	??___fladd+4,f
  5169  0EF9  0845               	movf	___fladd@b+1,w
  5170  0EFA  1C03               	skipc
  5171  0EFB  0F45               	incfsz	___fladd@b+1,w
  5172  0EFC  2EFE               	goto	u2561
  5173  0EFD  2EFF               	goto	u2562
  5174  0EFE                     u2561:
  5175  0EFE  02D1               	subwf	??___fladd+5,f
  5176  0EFF                     u2562:
  5177  0EFF  0846               	movf	___fladd@b+2,w
  5178  0F00  1C03               	skipc
  5179  0F01  0F46               	incfsz	___fladd@b+2,w
  5180  0F02  2F04               	goto	u2563
  5181  0F03  2F05               	goto	u2564
  5182  0F04                     u2563:
  5183  0F04  02D2               	subwf	??___fladd+6,f
  5184  0F05                     u2564:
  5185  0F05  0847               	movf	___fladd@b+3,w
  5186  0F06  1C03               	skipc
  5187  0F07  0F47               	incfsz	___fladd@b+3,w
  5188  0F08  2F0A               	goto	u2565
  5189  0F09  2F0B               	goto	u2566
  5190  0F0A                     u2565:
  5191  0F0A  02D3               	subwf	??___fladd+7,f
  5192  0F0B                     u2566:
  5193  0F0B  0850               	movf	??___fladd+4,w
  5194  0F0C  07CC               	addwf	??___fladd,f
  5195  0F0D  0851               	movf	??___fladd+5,w
  5196  0F0E  1803               	skipnc
  5197  0F0F  0F51               	incfsz	??___fladd+5,w
  5198  0F10  2F12               	goto	u2570
  5199  0F11  2F13               	goto	u2571
  5200  0F12                     u2570:
  5201  0F12  07CD               	addwf	??___fladd+1,f
  5202  0F13                     u2571:
  5203  0F13  0852               	movf	??___fladd+6,w
  5204  0F14  1803               	skipnc
  5205  0F15  0F52               	incfsz	??___fladd+6,w
  5206  0F16  2F18               	goto	u2572
  5207  0F17  2F19               	goto	u2573
  5208  0F18                     u2572:
  5209  0F18  07CE               	addwf	??___fladd+2,f
  5210  0F19                     u2573:
  5211  0F19  0853               	movf	??___fladd+7,w
  5212  0F1A  1803               	skipnc
  5213  0F1B  0A53               	incf	??___fladd+7,w
  5214  0F1C  07CF               	addwf	??___fladd+3,f
  5215  0F1D  084F               	movf	??___fladd+3,w
  5216  0F1E  00C7               	movwf	___fladd@b+3
  5217  0F1F  084E               	movf	??___fladd+2,w
  5218  0F20  00C6               	movwf	___fladd@b+2
  5219  0F21  084D               	movf	??___fladd+1,w
  5220  0F22  00C5               	movwf	___fladd@b+1
  5221  0F23  084C               	movf	??___fladd,w
  5222  0F24  00C4               	movwf	___fladd@b
  5223  0F25                     l2163:
  5224  0F25  3080               	movlw	128
  5225  0F26  00CC               	movwf	??___fladd
  5226  0F27  084C               	movf	??___fladd,w
  5227  0F28  06D4               	xorwf	___fladd@signs,f
  5228  0F29  09D7               	comf	___fladd@grs,f
  5229  0F2A  0AD7               	incf	___fladd@grs,f
  5230  0F2B                     l2165:
  5231  0F2B  0857               	movf	___fladd@grs,w
  5232  0F2C  1D03               	btfss	3,2
  5233  0F2D  2F2F               	goto	u2581
  5234  0F2E  2F30               	goto	u2580
  5235  0F2F                     u2581:
  5236  0F2F  2F4D               	goto	l630
  5237  0F30                     u2580:
  5238  0F30                     l2167:
  5239  0F30  3001               	movlw	1
  5240  0F31  07C4               	addwf	___fladd@b,f
  5241  0F32  3000               	movlw	0
  5242  0F33  1803               	skipnc
  5243  0F34  3001               	movlw	1
  5244  0F35  07C5               	addwf	___fladd@b+1,f
  5245  0F36  3000               	movlw	0
  5246  0F37  1803               	skipnc
  5247  0F38  3001               	movlw	1
  5248  0F39  07C6               	addwf	___fladd@b+2,f
  5249  0F3A  3000               	movlw	0
  5250  0F3B  1803               	skipnc
  5251  0F3C  3001               	movlw	1
  5252  0F3D  07C7               	addwf	___fladd@b+3,f
  5253  0F3E  2F4D               	goto	l630
  5254  0F3F                     l2169:
  5255  0F3F  0848               	movf	___fladd@a,w
  5256  0F40  02C4               	subwf	___fladd@b,f
  5257  0F41  0849               	movf	___fladd@a+1,w
  5258  0F42  1C03               	skipc
  5259  0F43  0F49               	incfsz	___fladd@a+1,w
  5260  0F44  02C5               	subwf	___fladd@b+1,f
  5261  0F45  084A               	movf	___fladd@a+2,w
  5262  0F46  1C03               	skipc
  5263  0F47  0F4A               	incfsz	___fladd@a+2,w
  5264  0F48  02C6               	subwf	___fladd@b+2,f
  5265  0F49  084B               	movf	___fladd@a+3,w
  5266  0F4A  1C03               	skipc
  5267  0F4B  0F4B               	incfsz	___fladd@a+3,w
  5268  0F4C  02C7               	subwf	___fladd@b+3,f
  5269  0F4D                     l630:
  5270  0F4D  0847               	movf	___fladd@b+3,w
  5271  0F4E  0446               	iorwf	___fladd@b+2,w
  5272  0F4F  0445               	iorwf	___fladd@b+1,w
  5273  0F50  0444               	iorwf	___fladd@b,w
  5274  0F51  1D03               	skipz
  5275  0F52  2F54               	goto	u2591
  5276  0F53  2F55               	goto	u2590
  5277  0F54                     u2591:
  5278  0F54  2F81               	goto	l2191
  5279  0F55                     u2590:
  5280  0F55                     l2171:
  5281  0F55  0857               	movf	___fladd@grs,w
  5282  0F56  1D03               	btfss	3,2
  5283  0F57  2F59               	goto	u2601
  5284  0F58  2F5A               	goto	u2600
  5285  0F59                     u2601:
  5286  0F59  2F81               	goto	l2191
  5287  0F5A                     u2600:
  5288  0F5A                     l2173:
  5289  0F5A  3000               	movlw	0
  5290  0F5B  00C7               	movwf	?___fladd+3
  5291  0F5C  3000               	movlw	0
  5292  0F5D  00C6               	movwf	?___fladd+2
  5293  0F5E  3000               	movlw	0
  5294  0F5F  00C5               	movwf	?___fladd+1
  5295  0F60  3000               	movlw	0
  5296  0F61  00C4               	movwf	?___fladd
  5297  0F62  2FFF               	goto	l622
  5298  0F63                     l2177:
  5299  0F63  3001               	movlw	1
  5300  0F64  00CC               	movwf	??___fladd
  5301  0F65                     u2615:
  5302  0F65  1003               	clrc
  5303  0F66  0DC4               	rlf	___fladd@b,f
  5304  0F67  0DC5               	rlf	___fladd@b+1,f
  5305  0F68  0DC6               	rlf	___fladd@b+2,f
  5306  0F69  0DC7               	rlf	___fladd@b+3,f
  5307  0F6A  0BCC               	decfsz	??___fladd,f
  5308  0F6B  2F65               	goto	u2615
  5309  0F6C                     l2179:
  5310  0F6C  1FD7               	btfss	___fladd@grs,7
  5311  0F6D  2F6F               	goto	u2621
  5312  0F6E  2F70               	goto	u2620
  5313  0F6F                     u2621:
  5314  0F6F  2F71               	goto	l634
  5315  0F70                     u2620:
  5316  0F70                     l2181:
  5317  0F70  1444               	bsf	___fladd@b,0
  5318  0F71                     l634:
  5319  0F71  1C57               	btfss	___fladd@grs,0
  5320  0F72  2F74               	goto	u2631
  5321  0F73  2F75               	goto	u2630
  5322  0F74                     u2631:
  5323  0F74  2F78               	goto	l2185
  5324  0F75                     u2630:
  5325  0F75                     l2183:
  5326  0F75  1403               	setc
  5327  0F76  0DD7               	rlf	___fladd@grs,f
  5328  0F77  2F7A               	goto	l2187
  5329  0F78                     l2185:
  5330  0F78  1003               	clrc
  5331  0F79  0DD7               	rlf	___fladd@grs,f
  5332  0F7A                     l2187:
  5333  0F7A  0856               	movf	___fladd@bexp,w
  5334  0F7B  1903               	btfsc	3,2
  5335  0F7C  2F7E               	goto	u2641
  5336  0F7D  2F7F               	goto	u2640
  5337  0F7E                     u2641:
  5338  0F7E  2F81               	goto	l2191
  5339  0F7F                     u2640:
  5340  0F7F                     l2189:
  5341  0F7F  3001               	movlw	1
  5342  0F80  02D6               	subwf	___fladd@bexp,f
  5343  0F81                     l2191:
  5344  0F81  1FC6               	btfss	___fladd@b+2,7
  5345  0F82  2F84               	goto	u2651
  5346  0F83  2F85               	goto	u2650
  5347  0F84                     u2651:
  5348  0F84  2F63               	goto	l2177
  5349  0F85                     u2650:
  5350  0F85                     l2193:
  5351  0F85  01D5               	clrf	___fladd@aexp
  5352  0F86                     l2195:
  5353  0F86  1FD7               	btfss	___fladd@grs,7
  5354  0F87  2F89               	goto	u2661
  5355  0F88  2F8A               	goto	u2660
  5356  0F89                     u2661:
  5357  0F89  2F98               	goto	l2203
  5358  0F8A                     u2660:
  5359  0F8A                     l2197:
  5360  0F8A  0857               	movf	___fladd@grs,w
  5361  0F8B  397F               	andlw	127
  5362  0F8C  1903               	btfsc	3,2
  5363  0F8D  2F8F               	goto	u2671
  5364  0F8E  2F90               	goto	u2670
  5365  0F8F                     u2671:
  5366  0F8F  2F93               	goto	l640
  5367  0F90                     u2670:
  5368  0F90                     l2199:
  5369  0F90  01D5               	clrf	___fladd@aexp
  5370  0F91  0AD5               	incf	___fladd@aexp,f
  5371  0F92  2F98               	goto	l2203
  5372  0F93                     l640:
  5373  0F93  1C44               	btfss	___fladd@b,0
  5374  0F94  2F96               	goto	u2681
  5375  0F95  2F97               	goto	u2680
  5376  0F96                     u2681:
  5377  0F96  2F98               	goto	l2203
  5378  0F97                     u2680:
  5379  0F97  2F90               	goto	l2199
  5380  0F98                     l2203:
  5381  0F98  0855               	movf	___fladd@aexp,w
  5382  0F99  1903               	btfsc	3,2
  5383  0F9A  2F9C               	goto	u2691
  5384  0F9B  2F9D               	goto	u2690
  5385  0F9C                     u2691:
  5386  0F9C  2FD1               	goto	l643
  5387  0F9D                     u2690:
  5388  0F9D                     l2205:
  5389  0F9D  3001               	movlw	1
  5390  0F9E  07C4               	addwf	___fladd@b,f
  5391  0F9F  3000               	movlw	0
  5392  0FA0  1803               	skipnc
  5393  0FA1  3001               	movlw	1
  5394  0FA2  07C5               	addwf	___fladd@b+1,f
  5395  0FA3  3000               	movlw	0
  5396  0FA4  1803               	skipnc
  5397  0FA5  3001               	movlw	1
  5398  0FA6  07C6               	addwf	___fladd@b+2,f
  5399  0FA7  3000               	movlw	0
  5400  0FA8  1803               	skipnc
  5401  0FA9  3001               	movlw	1
  5402  0FAA  07C7               	addwf	___fladd@b+3,f
  5403  0FAB                     l2207:
  5404  0FAB  1C47               	btfss	___fladd@b+3,0
  5405  0FAC  2FAE               	goto	u2701
  5406  0FAD  2FAF               	goto	u2700
  5407  0FAE                     u2701:
  5408  0FAE  2FD1               	goto	l643
  5409  0FAF                     u2700:
  5410  0FAF                     l2209:
  5411  0FAF  0844               	movf	___fladd@b,w
  5412  0FB0  00CC               	movwf	??___fladd
  5413  0FB1  0845               	movf	___fladd@b+1,w
  5414  0FB2  00CD               	movwf	??___fladd+1
  5415  0FB3  0846               	movf	___fladd@b+2,w
  5416  0FB4  00CE               	movwf	??___fladd+2
  5417  0FB5  0847               	movf	___fladd@b+3,w
  5418  0FB6  00CF               	movwf	??___fladd+3
  5419  0FB7  3001               	movlw	1
  5420  0FB8  00D0               	movwf	??___fladd+4
  5421  0FB9                     u2715:
  5422  0FB9  0D4F               	rlf	??___fladd+3,w
  5423  0FBA  0CCF               	rrf	??___fladd+3,f
  5424  0FBB  0CCE               	rrf	??___fladd+2,f
  5425  0FBC  0CCD               	rrf	??___fladd+1,f
  5426  0FBD  0CCC               	rrf	??___fladd,f
  5427  0FBE                     u2710:
  5428  0FBE  0BD0               	decfsz	??___fladd+4,f
  5429  0FBF  2FB9               	goto	u2715
  5430  0FC0  084F               	movf	??___fladd+3,w
  5431  0FC1  00C7               	movwf	___fladd@b+3
  5432  0FC2  084E               	movf	??___fladd+2,w
  5433  0FC3  00C6               	movwf	___fladd@b+2
  5434  0FC4  084D               	movf	??___fladd+1,w
  5435  0FC5  00C5               	movwf	___fladd@b+1
  5436  0FC6  084C               	movf	??___fladd,w
  5437  0FC7  00C4               	movwf	___fladd@b
  5438  0FC8  0A56               	incf	___fladd@bexp,w
  5439  0FC9  1903               	btfsc	3,2
  5440  0FCA  2FCC               	goto	u2721
  5441  0FCB  2FCD               	goto	u2720
  5442  0FCC                     u2721:
  5443  0FCC  2FD1               	goto	l643
  5444  0FCD                     u2720:
  5445  0FCD                     l2211:
  5446  0FCD  3001               	movlw	1
  5447  0FCE  00CC               	movwf	??___fladd
  5448  0FCF  084C               	movf	??___fladd,w
  5449  0FD0  07D6               	addwf	___fladd@bexp,f
  5450  0FD1                     l643:
  5451  0FD1  0A56               	incf	___fladd@bexp,w
  5452  0FD2  1903               	btfsc	3,2
  5453  0FD3  2FD5               	goto	u2731
  5454  0FD4  2FD6               	goto	u2730
  5455  0FD5                     u2731:
  5456  0FD5  2FDB               	goto	l2215
  5457  0FD6                     u2730:
  5458  0FD6                     l2213:
  5459  0FD6  0856               	movf	___fladd@bexp,w
  5460  0FD7  1D03               	btfss	3,2
  5461  0FD8  2FDA               	goto	u2741
  5462  0FD9  2FDB               	goto	u2740
  5463  0FDA                     u2741:
  5464  0FDA  2FE9               	goto	l2221
  5465  0FDB                     u2740:
  5466  0FDB                     l2215:
  5467  0FDB  3000               	movlw	0
  5468  0FDC  00C7               	movwf	___fladd@b+3
  5469  0FDD  3000               	movlw	0
  5470  0FDE  00C6               	movwf	___fladd@b+2
  5471  0FDF  3000               	movlw	0
  5472  0FE0  00C5               	movwf	___fladd@b+1
  5473  0FE1  3000               	movlw	0
  5474  0FE2  00C4               	movwf	___fladd@b
  5475  0FE3                     l2217:
  5476  0FE3  0856               	movf	___fladd@bexp,w
  5477  0FE4  1D03               	btfss	3,2
  5478  0FE5  2FE7               	goto	u2751
  5479  0FE6  2FE8               	goto	u2750
  5480  0FE7                     u2751:
  5481  0FE7  2FE9               	goto	l2221
  5482  0FE8                     u2750:
  5483  0FE8                     l2219:
  5484  0FE8  01D4               	clrf	___fladd@signs
  5485  0FE9                     l2221:
  5486  0FE9  1C56               	btfss	___fladd@bexp,0
  5487  0FEA  2FEC               	goto	u2761
  5488  0FEB  2FED               	goto	u2760
  5489  0FEC                     u2761:
  5490  0FEC  2FEF               	goto	l2225
  5491  0FED                     u2760:
  5492  0FED                     l2223:
  5493  0FED  17C6               	bsf	___fladd@b+2,7
  5494  0FEE  2FF3               	goto	l651
  5495  0FEF                     l2225:
  5496  0FEF  307F               	movlw	127
  5497  0FF0  00CC               	movwf	??___fladd
  5498  0FF1  084C               	movf	??___fladd,w
  5499  0FF2  05C6               	andwf	___fladd@b+2,f
  5500  0FF3                     l651:
  5501  0FF3  0856               	movf	___fladd@bexp,w
  5502  0FF4  00CC               	movwf	??___fladd
  5503  0FF5  1003               	clrc
  5504  0FF6  0C4C               	rrf	??___fladd,w
  5505  0FF7  00CD               	movwf	??___fladd+1
  5506  0FF8  084D               	movf	??___fladd+1,w
  5507  0FF9  00C7               	movwf	___fladd@b+3
  5508  0FFA                     l2227:
  5509  0FFA  1FD4               	btfss	___fladd@signs,7
  5510  0FFB  2FFD               	goto	u2771
  5511  0FFC  2FFE               	goto	u2770
  5512  0FFD                     u2771:
  5513  0FFD  2FFF               	goto	l652
  5514  0FFE                     u2770:
  5515  0FFE                     l2229:
  5516  0FFE  17C7               	bsf	___fladd@b+3,7
  5517  0FFF                     l652:
  5518  0FFF                     l622:
  5519  0FFF  0008               	return
  5520  1000                     __end_of___fladd:
  5521                           
  5522                           	psect	text16
  5523  1351                     __ptext16:	
  5524 ;; *************** function ___flneg *****************
  5525 ;; Defined at:
  5526 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;  f1              4    3[COMMON] unsigned char 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;		None
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  4    3[COMMON] unsigned char 
  5533 ;; Registers used:
  5534 ;;		wreg
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5540 ;;      Params:         4       0       0       0       0
  5541 ;;      Locals:         0       0       0       0       0
  5542 ;;      Temps:          0       0       0       0       0
  5543 ;;      Totals:         4       0       0       0       0
  5544 ;;Total ram usage:        4 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:    1
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_ftoa
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554                           
  5555                           ;psect for function ___flneg
  5556  1351                     ___flneg:
  5557  1351                     l2289:	
  5558                           ;incstack = 0
  5559                           ; Regs used in ___flneg: [wreg]
  5560                           
  5561  1351  0876               	movf	___flneg@f1+3,w
  5562  1352  0475               	iorwf	___flneg@f1+2,w
  5563  1353  0474               	iorwf	___flneg@f1+1,w
  5564  1354  0473               	iorwf	___flneg@f1,w
  5565  1355  1903               	skipnz
  5566  1356  2B58               	goto	u2941
  5567  1357  2B59               	goto	u2940
  5568  1358                     u2941:
  5569  1358  2B5B               	goto	l2293
  5570  1359                     u2940:
  5571  1359                     l2291:
  5572  1359  3080               	movlw	128
  5573  135A  06F6               	xorwf	___flneg@f1+3,f
  5574  135B                     l2293:
  5575  135B                     l498:
  5576  135B  0008               	return
  5577  135C                     __end_of___flneg:
  5578                           
  5579                           	psect	text17
  5580  0460                     __ptext17:	
  5581 ;; *************** function ___flmul *****************
  5582 ;; Defined at:
  5583 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5584 ;; Parameters:    Size  Location     Type
  5585 ;;  b               4   10[BANK0 ] unsigned char 
  5586 ;;  a               4   14[BANK0 ] unsigned char 
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;  prod            4   30[BANK0 ] struct .
  5589 ;;  grs             4   24[BANK0 ] unsigned long 
  5590 ;;  temp            2   34[BANK0 ] struct .
  5591 ;;  bexp            1   29[BANK0 ] unsigned char 
  5592 ;;  aexp            1   28[BANK0 ] unsigned char 
  5593 ;;  sign            1   23[BANK0 ] unsigned char 
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  4   10[BANK0 ] unsigned char 
  5596 ;; Registers used:
  5597 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5603 ;;      Params:         0       8       0       0       0
  5604 ;;      Locals:         0      13       0       0       0
  5605 ;;      Temps:          0       5       0       0       0
  5606 ;;      Totals:         0      26       0       0       0
  5607 ;;Total ram usage:       26 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    2
  5610 ;; This function calls:
  5611 ;;		__Umul8_16
  5612 ;; This function is called by:
  5613 ;;		_giro_read
  5614 ;;		_ftoa
  5615 ;; This function uses a non-reentrant model
  5616 ;;
  5617                           
  5618                           
  5619                           ;psect for function ___flmul
  5620  0460                     ___flmul:
  5621  0460                     l2339:	
  5622                           ;incstack = 0
  5623                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5624                           
  5625  0460  1283               	bcf	3,5	;RP0=0, select bank0
  5626  0461  1303               	bcf	3,6	;RP1=0, select bank0
  5627  0462  082D               	movf	___flmul@b+3,w
  5628  0463  3980               	andlw	128
  5629  0464  00B2               	movwf	??___flmul
  5630  0465  0832               	movf	??___flmul,w
  5631  0466  00B7               	movwf	___flmul@sign
  5632  0467                     l2341:
  5633  0467  082D               	movf	___flmul@b+3,w
  5634  0468  00B2               	movwf	??___flmul
  5635  0469  0732               	addwf	??___flmul,w
  5636  046A  00B3               	movwf	??___flmul+1
  5637  046B  0833               	movf	??___flmul+1,w
  5638  046C  00BD               	movwf	___flmul@bexp
  5639  046D                     l2343:
  5640  046D  1FAC               	btfss	___flmul@b+2,7
  5641  046E  2C70               	goto	u3051
  5642  046F  2C71               	goto	u3050
  5643  0470                     u3051:
  5644  0470  2C72               	goto	l2347
  5645  0471                     u3050:
  5646  0471                     l2345:
  5647  0471  143D               	bsf	___flmul@bexp,0
  5648  0472                     l2347:
  5649  0472  083D               	movf	___flmul@bexp,w
  5650  0473  1903               	btfsc	3,2
  5651  0474  2C76               	goto	u3061
  5652  0475  2C77               	goto	u3060
  5653  0476                     u3061:
  5654  0476  2C86               	goto	l2355
  5655  0477                     u3060:
  5656  0477                     l2349:
  5657  0477  0A3D               	incf	___flmul@bexp,w
  5658  0478  1D03               	btfss	3,2
  5659  0479  2C7B               	goto	u3071
  5660  047A  2C7C               	goto	u3070
  5661  047B                     u3071:
  5662  047B  2C84               	goto	l2353
  5663  047C                     u3070:
  5664  047C                     l2351:
  5665  047C  3000               	movlw	0
  5666  047D  00AD               	movwf	___flmul@b+3
  5667  047E  3000               	movlw	0
  5668  047F  00AC               	movwf	___flmul@b+2
  5669  0480  3000               	movlw	0
  5670  0481  00AB               	movwf	___flmul@b+1
  5671  0482  3000               	movlw	0
  5672  0483  00AA               	movwf	___flmul@b
  5673  0484                     l2353:
  5674  0484  17AC               	bsf	___flmul@b+2,7
  5675  0485  2C8E               	goto	l2357
  5676  0486                     l2355:
  5677  0486  3000               	movlw	0
  5678  0487  00AD               	movwf	___flmul@b+3
  5679  0488  3000               	movlw	0
  5680  0489  00AC               	movwf	___flmul@b+2
  5681  048A  3000               	movlw	0
  5682  048B  00AB               	movwf	___flmul@b+1
  5683  048C  3000               	movlw	0
  5684  048D  00AA               	movwf	___flmul@b
  5685  048E                     l2357:
  5686  048E  0831               	movf	___flmul@a+3,w
  5687  048F  3980               	andlw	128
  5688  0490  00B2               	movwf	??___flmul
  5689  0491  0832               	movf	??___flmul,w
  5690  0492  06B7               	xorwf	___flmul@sign,f
  5691  0493                     l2359:
  5692  0493  0831               	movf	___flmul@a+3,w
  5693  0494  00B2               	movwf	??___flmul
  5694  0495  0732               	addwf	??___flmul,w
  5695  0496  00B3               	movwf	??___flmul+1
  5696  0497  0833               	movf	??___flmul+1,w
  5697  0498  00BC               	movwf	___flmul@aexp
  5698  0499                     l2361:
  5699  0499  1FB0               	btfss	___flmul@a+2,7
  5700  049A  2C9C               	goto	u3081
  5701  049B  2C9D               	goto	u3080
  5702  049C                     u3081:
  5703  049C  2C9E               	goto	l2365
  5704  049D                     u3080:
  5705  049D                     l2363:
  5706  049D  143C               	bsf	___flmul@aexp,0
  5707  049E                     l2365:
  5708  049E  083C               	movf	___flmul@aexp,w
  5709  049F  1903               	btfsc	3,2
  5710  04A0  2CA2               	goto	u3091
  5711  04A1  2CA3               	goto	u3090
  5712  04A2                     u3091:
  5713  04A2  2CB2               	goto	l2373
  5714  04A3                     u3090:
  5715  04A3                     l2367:
  5716  04A3  0A3C               	incf	___flmul@aexp,w
  5717  04A4  1D03               	btfss	3,2
  5718  04A5  2CA7               	goto	u3101
  5719  04A6  2CA8               	goto	u3100
  5720  04A7                     u3101:
  5721  04A7  2CB0               	goto	l2371
  5722  04A8                     u3100:
  5723  04A8                     l2369:
  5724  04A8  3000               	movlw	0
  5725  04A9  00B1               	movwf	___flmul@a+3
  5726  04AA  3000               	movlw	0
  5727  04AB  00B0               	movwf	___flmul@a+2
  5728  04AC  3000               	movlw	0
  5729  04AD  00AF               	movwf	___flmul@a+1
  5730  04AE  3000               	movlw	0
  5731  04AF  00AE               	movwf	___flmul@a
  5732  04B0                     l2371:
  5733  04B0  17B0               	bsf	___flmul@a+2,7
  5734  04B1  2CBA               	goto	l2375
  5735  04B2                     l2373:
  5736  04B2  3000               	movlw	0
  5737  04B3  00B1               	movwf	___flmul@a+3
  5738  04B4  3000               	movlw	0
  5739  04B5  00B0               	movwf	___flmul@a+2
  5740  04B6  3000               	movlw	0
  5741  04B7  00AF               	movwf	___flmul@a+1
  5742  04B8  3000               	movlw	0
  5743  04B9  00AE               	movwf	___flmul@a
  5744  04BA                     l2375:
  5745  04BA  083C               	movf	___flmul@aexp,w
  5746  04BB  1903               	btfsc	3,2
  5747  04BC  2CBE               	goto	u3111
  5748  04BD  2CBF               	goto	u3110
  5749  04BE                     u3111:
  5750  04BE  2CC4               	goto	l2379
  5751  04BF                     u3110:
  5752  04BF                     l2377:
  5753  04BF  083D               	movf	___flmul@bexp,w
  5754  04C0  1D03               	btfss	3,2
  5755  04C1  2CC3               	goto	u3121
  5756  04C2  2CC4               	goto	u3120
  5757  04C3                     u3121:
  5758  04C3  2CCD               	goto	l2383
  5759  04C4                     u3120:
  5760  04C4                     l2379:
  5761  04C4  3000               	movlw	0
  5762  04C5  00AD               	movwf	?___flmul+3
  5763  04C6  3000               	movlw	0
  5764  04C7  00AC               	movwf	?___flmul+2
  5765  04C8  3000               	movlw	0
  5766  04C9  00AB               	movwf	?___flmul+1
  5767  04CA  3000               	movlw	0
  5768  04CB  00AA               	movwf	?___flmul
  5769  04CC  2FC0               	goto	l705
  5770  04CD                     l2383:
  5771  04CD  082A               	movf	___flmul@b,w
  5772  04CE  00B2               	movwf	??___flmul
  5773  04CF  0832               	movf	??___flmul,w
  5774  04D0  00F3               	movwf	__Umul8_16@multiplicand
  5775  04D1  0830               	movf	___flmul@a+2,w
  5776  04D2  160A  118A  242C  120A  118A  	fcall	__Umul8_16
  5777  04D7  0874               	movf	?__Umul8_16+1,w
  5778  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  5779  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  5780  04DA  00C3               	movwf	___flmul@temp+1
  5781  04DB  0873               	movf	?__Umul8_16,w
  5782  04DC  00C2               	movwf	___flmul@temp
  5783  04DD                     l2385:
  5784  04DD  0842               	movf	___flmul@temp,w
  5785  04DE  00B2               	movwf	??___flmul
  5786  04DF  01B3               	clrf	??___flmul+1
  5787  04E0  01B4               	clrf	??___flmul+2
  5788  04E1  01B5               	clrf	??___flmul+3
  5789  04E2  0835               	movf	??___flmul+3,w
  5790  04E3  00BB               	movwf	___flmul@grs+3
  5791  04E4  0834               	movf	??___flmul+2,w
  5792  04E5  00BA               	movwf	___flmul@grs+2
  5793  04E6  0833               	movf	??___flmul+1,w
  5794  04E7  00B9               	movwf	___flmul@grs+1
  5795  04E8  0832               	movf	??___flmul,w
  5796  04E9  00B8               	movwf	___flmul@grs
  5797  04EA                     l2387:
  5798  04EA  0843               	movf	___flmul@temp+1,w
  5799  04EB  00B2               	movwf	??___flmul
  5800  04EC  01B3               	clrf	??___flmul+1
  5801  04ED  01B4               	clrf	??___flmul+2
  5802  04EE  01B5               	clrf	??___flmul+3
  5803  04EF  0835               	movf	??___flmul+3,w
  5804  04F0  00C1               	movwf	___flmul@prod+3
  5805  04F1  0834               	movf	??___flmul+2,w
  5806  04F2  00C0               	movwf	___flmul@prod+2
  5807  04F3  0833               	movf	??___flmul+1,w
  5808  04F4  00BF               	movwf	___flmul@prod+1
  5809  04F5  0832               	movf	??___flmul,w
  5810  04F6  00BE               	movwf	___flmul@prod
  5811  04F7  082B               	movf	___flmul@b+1,w
  5812  04F8  00B2               	movwf	??___flmul
  5813  04F9  0832               	movf	??___flmul,w
  5814  04FA  00F3               	movwf	__Umul8_16@multiplicand
  5815  04FB  082F               	movf	___flmul@a+1,w
  5816  04FC  160A  118A  242C  120A  118A  	fcall	__Umul8_16
  5817  0501  0874               	movf	?__Umul8_16+1,w
  5818  0502  1283               	bcf	3,5	;RP0=0, select bank0
  5819  0503  1303               	bcf	3,6	;RP1=0, select bank0
  5820  0504  00C3               	movwf	___flmul@temp+1
  5821  0505  0873               	movf	?__Umul8_16,w
  5822  0506  00C2               	movwf	___flmul@temp
  5823  0507                     l2389:
  5824  0507  0842               	movf	___flmul@temp,w
  5825  0508  00B2               	movwf	??___flmul
  5826  0509  01B3               	clrf	??___flmul+1
  5827  050A  01B4               	clrf	??___flmul+2
  5828  050B  01B5               	clrf	??___flmul+3
  5829  050C  0832               	movf	??___flmul,w
  5830  050D  07B8               	addwf	___flmul@grs,f
  5831  050E  0833               	movf	??___flmul+1,w
  5832  050F  1103               	clrz
  5833  0510  1803               	skipnc
  5834  0511  3E01               	addlw	1
  5835  0512  1903               	skipnz
  5836  0513  2D15               	goto	u3131
  5837  0514  07B9               	addwf	___flmul@grs+1,f
  5838  0515                     u3131:
  5839  0515  0834               	movf	??___flmul+2,w
  5840  0516  1103               	clrz
  5841  0517  1803               	skipnc
  5842  0518  3E01               	addlw	1
  5843  0519  1903               	skipnz
  5844  051A  2D1C               	goto	u3132
  5845  051B  07BA               	addwf	___flmul@grs+2,f
  5846  051C                     u3132:
  5847  051C  0835               	movf	??___flmul+3,w
  5848  051D  1103               	clrz
  5849  051E  1803               	skipnc
  5850  051F  3E01               	addlw	1
  5851  0520  1903               	skipnz
  5852  0521  2D23               	goto	u3133
  5853  0522  07BB               	addwf	___flmul@grs+3,f
  5854  0523                     u3133:
  5855  0523                     l2391:
  5856  0523  0843               	movf	___flmul@temp+1,w
  5857  0524  00B2               	movwf	??___flmul
  5858  0525  01B3               	clrf	??___flmul+1
  5859  0526  01B4               	clrf	??___flmul+2
  5860  0527  01B5               	clrf	??___flmul+3
  5861  0528  0832               	movf	??___flmul,w
  5862  0529  07BE               	addwf	___flmul@prod,f
  5863  052A  0833               	movf	??___flmul+1,w
  5864  052B  1103               	clrz
  5865  052C  1803               	skipnc
  5866  052D  3E01               	addlw	1
  5867  052E  1903               	skipnz
  5868  052F  2D31               	goto	u3141
  5869  0530  07BF               	addwf	___flmul@prod+1,f
  5870  0531                     u3141:
  5871  0531  0834               	movf	??___flmul+2,w
  5872  0532  1103               	clrz
  5873  0533  1803               	skipnc
  5874  0534  3E01               	addlw	1
  5875  0535  1903               	skipnz
  5876  0536  2D38               	goto	u3142
  5877  0537  07C0               	addwf	___flmul@prod+2,f
  5878  0538                     u3142:
  5879  0538  0835               	movf	??___flmul+3,w
  5880  0539  1103               	clrz
  5881  053A  1803               	skipnc
  5882  053B  3E01               	addlw	1
  5883  053C  1903               	skipnz
  5884  053D  2D3F               	goto	u3143
  5885  053E  07C1               	addwf	___flmul@prod+3,f
  5886  053F                     u3143:
  5887  053F  082C               	movf	___flmul@b+2,w
  5888  0540  00B2               	movwf	??___flmul
  5889  0541  0832               	movf	??___flmul,w
  5890  0542  00F3               	movwf	__Umul8_16@multiplicand
  5891  0543  082E               	movf	___flmul@a,w
  5892  0544  160A  118A  242C  120A  118A  	fcall	__Umul8_16
  5893  0549  0874               	movf	?__Umul8_16+1,w
  5894  054A  1283               	bcf	3,5	;RP0=0, select bank0
  5895  054B  1303               	bcf	3,6	;RP1=0, select bank0
  5896  054C  00C3               	movwf	___flmul@temp+1
  5897  054D  0873               	movf	?__Umul8_16,w
  5898  054E  00C2               	movwf	___flmul@temp
  5899  054F                     l2393:
  5900  054F  0842               	movf	___flmul@temp,w
  5901  0550  00B2               	movwf	??___flmul
  5902  0551  01B3               	clrf	??___flmul+1
  5903  0552  01B4               	clrf	??___flmul+2
  5904  0553  01B5               	clrf	??___flmul+3
  5905  0554  0832               	movf	??___flmul,w
  5906  0555  07B8               	addwf	___flmul@grs,f
  5907  0556  0833               	movf	??___flmul+1,w
  5908  0557  1103               	clrz
  5909  0558  1803               	skipnc
  5910  0559  3E01               	addlw	1
  5911  055A  1903               	skipnz
  5912  055B  2D5D               	goto	u3151
  5913  055C  07B9               	addwf	___flmul@grs+1,f
  5914  055D                     u3151:
  5915  055D  0834               	movf	??___flmul+2,w
  5916  055E  1103               	clrz
  5917  055F  1803               	skipnc
  5918  0560  3E01               	addlw	1
  5919  0561  1903               	skipnz
  5920  0562  2D64               	goto	u3152
  5921  0563  07BA               	addwf	___flmul@grs+2,f
  5922  0564                     u3152:
  5923  0564  0835               	movf	??___flmul+3,w
  5924  0565  1103               	clrz
  5925  0566  1803               	skipnc
  5926  0567  3E01               	addlw	1
  5927  0568  1903               	skipnz
  5928  0569  2D6B               	goto	u3153
  5929  056A  07BB               	addwf	___flmul@grs+3,f
  5930  056B                     u3153:
  5931  056B                     l2395:
  5932  056B  0843               	movf	___flmul@temp+1,w
  5933  056C  00B2               	movwf	??___flmul
  5934  056D  01B3               	clrf	??___flmul+1
  5935  056E  01B4               	clrf	??___flmul+2
  5936  056F  01B5               	clrf	??___flmul+3
  5937  0570  0832               	movf	??___flmul,w
  5938  0571  07BE               	addwf	___flmul@prod,f
  5939  0572  0833               	movf	??___flmul+1,w
  5940  0573  1103               	clrz
  5941  0574  1803               	skipnc
  5942  0575  3E01               	addlw	1
  5943  0576  1903               	skipnz
  5944  0577  2D79               	goto	u3161
  5945  0578  07BF               	addwf	___flmul@prod+1,f
  5946  0579                     u3161:
  5947  0579  0834               	movf	??___flmul+2,w
  5948  057A  1103               	clrz
  5949  057B  1803               	skipnc
  5950  057C  3E01               	addlw	1
  5951  057D  1903               	skipnz
  5952  057E  2D80               	goto	u3162
  5953  057F  07C0               	addwf	___flmul@prod+2,f
  5954  0580                     u3162:
  5955  0580  0835               	movf	??___flmul+3,w
  5956  0581  1103               	clrz
  5957  0582  1803               	skipnc
  5958  0583  3E01               	addlw	1
  5959  0584  1903               	skipnz
  5960  0585  2D87               	goto	u3163
  5961  0586  07C1               	addwf	___flmul@prod+3,f
  5962  0587                     u3163:
  5963  0587                     l2397:
  5964  0587  3008               	movlw	8
  5965  0588  00B2               	movwf	??___flmul
  5966  0589                     u3175:
  5967  0589  1003               	clrc
  5968  058A  0DB8               	rlf	___flmul@grs,f
  5969  058B  0DB9               	rlf	___flmul@grs+1,f
  5970  058C  0DBA               	rlf	___flmul@grs+2,f
  5971  058D  0DBB               	rlf	___flmul@grs+3,f
  5972  058E  0BB2               	decfsz	??___flmul,f
  5973  058F  2D89               	goto	u3175
  5974  0590                     l2399:
  5975  0590  082B               	movf	___flmul@b+1,w
  5976  0591  00B2               	movwf	??___flmul
  5977  0592  0832               	movf	??___flmul,w
  5978  0593  00F3               	movwf	__Umul8_16@multiplicand
  5979  0594  082E               	movf	___flmul@a,w
  5980  0595  160A  118A  242C  120A  118A  	fcall	__Umul8_16
  5981  059A  0874               	movf	?__Umul8_16+1,w
  5982  059B  1283               	bcf	3,5	;RP0=0, select bank0
  5983  059C  1303               	bcf	3,6	;RP1=0, select bank0
  5984  059D  00C3               	movwf	___flmul@temp+1
  5985  059E  0873               	movf	?__Umul8_16,w
  5986  059F  00C2               	movwf	___flmul@temp
  5987  05A0                     l2401:
  5988  05A0  0842               	movf	___flmul@temp,w
  5989  05A1  00B2               	movwf	??___flmul
  5990  05A2  0843               	movf	___flmul@temp+1,w
  5991  05A3  00B3               	movwf	??___flmul+1
  5992  05A4  01B4               	clrf	??___flmul+2
  5993  05A5  01B5               	clrf	??___flmul+3
  5994  05A6  0832               	movf	??___flmul,w
  5995  05A7  07B8               	addwf	___flmul@grs,f
  5996  05A8  0833               	movf	??___flmul+1,w
  5997  05A9  1103               	clrz
  5998  05AA  1803               	skipnc
  5999  05AB  3E01               	addlw	1
  6000  05AC  1903               	skipnz
  6001  05AD  2DAF               	goto	u3181
  6002  05AE  07B9               	addwf	___flmul@grs+1,f
  6003  05AF                     u3181:
  6004  05AF  0834               	movf	??___flmul+2,w
  6005  05B0  1103               	clrz
  6006  05B1  1803               	skipnc
  6007  05B2  3E01               	addlw	1
  6008  05B3  1903               	skipnz
  6009  05B4  2DB6               	goto	u3182
  6010  05B5  07BA               	addwf	___flmul@grs+2,f
  6011  05B6                     u3182:
  6012  05B6  0835               	movf	??___flmul+3,w
  6013  05B7  1103               	clrz
  6014  05B8  1803               	skipnc
  6015  05B9  3E01               	addlw	1
  6016  05BA  1903               	skipnz
  6017  05BB  2DBD               	goto	u3183
  6018  05BC  07BB               	addwf	___flmul@grs+3,f
  6019  05BD                     u3183:
  6020  05BD                     l2403:
  6021  05BD  082A               	movf	___flmul@b,w
  6022  05BE  00B2               	movwf	??___flmul
  6023  05BF  0832               	movf	??___flmul,w
  6024  05C0  00F3               	movwf	__Umul8_16@multiplicand
  6025  05C1  082F               	movf	___flmul@a+1,w
  6026  05C2  160A  118A  242C  120A  118A  	fcall	__Umul8_16
  6027  05C7  0874               	movf	?__Umul8_16+1,w
  6028  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  6029  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  6030  05CA  00C3               	movwf	___flmul@temp+1
  6031  05CB  0873               	movf	?__Umul8_16,w
  6032  05CC  00C2               	movwf	___flmul@temp
  6033  05CD                     l2405:
  6034  05CD  0842               	movf	___flmul@temp,w
  6035  05CE  00B2               	movwf	??___flmul
  6036  05CF  0843               	movf	___flmul@temp+1,w
  6037  05D0  00B3               	movwf	??___flmul+1
  6038  05D1  01B4               	clrf	??___flmul+2
  6039  05D2  01B5               	clrf	??___flmul+3
  6040  05D3  0832               	movf	??___flmul,w
  6041  05D4  07B8               	addwf	___flmul@grs,f
  6042  05D5  0833               	movf	??___flmul+1,w
  6043  05D6  1103               	clrz
  6044  05D7  1803               	skipnc
  6045  05D8  3E01               	addlw	1
  6046  05D9  1903               	skipnz
  6047  05DA  2DDC               	goto	u3191
  6048  05DB  07B9               	addwf	___flmul@grs+1,f
  6049  05DC                     u3191:
  6050  05DC  0834               	movf	??___flmul+2,w
  6051  05DD  1103               	clrz
  6052  05DE  1803               	skipnc
  6053  05DF  3E01               	addlw	1
  6054  05E0  1903               	skipnz
  6055  05E1  2DE3               	goto	u3192
  6056  05E2  07BA               	addwf	___flmul@grs+2,f
  6057  05E3                     u3192:
  6058  05E3  0835               	movf	??___flmul+3,w
  6059  05E4  1103               	clrz
  6060  05E5  1803               	skipnc
  6061  05E6  3E01               	addlw	1
  6062  05E7  1903               	skipnz
  6063  05E8  2DEA               	goto	u3193
  6064  05E9  07BB               	addwf	___flmul@grs+3,f
  6065  05EA                     u3193:
  6066  05EA                     l2407:
  6067  05EA  3008               	movlw	8
  6068  05EB  00B2               	movwf	??___flmul
  6069  05EC                     u3205:
  6070  05EC  1003               	clrc
  6071  05ED  0DB8               	rlf	___flmul@grs,f
  6072  05EE  0DB9               	rlf	___flmul@grs+1,f
  6073  05EF  0DBA               	rlf	___flmul@grs+2,f
  6074  05F0  0DBB               	rlf	___flmul@grs+3,f
  6075  05F1  0BB2               	decfsz	??___flmul,f
  6076  05F2  2DEC               	goto	u3205
  6077  05F3  082A               	movf	___flmul@b,w
  6078  05F4  00B2               	movwf	??___flmul
  6079  05F5  0832               	movf	??___flmul,w
  6080  05F6  00F3               	movwf	__Umul8_16@multiplicand
  6081  05F7  082E               	movf	___flmul@a,w
  6082  05F8  160A  118A  242C  120A  118A  	fcall	__Umul8_16
  6083  05FD  0874               	movf	?__Umul8_16+1,w
  6084  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  6085  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  6086  0600  00C3               	movwf	___flmul@temp+1
  6087  0601  0873               	movf	?__Umul8_16,w
  6088  0602  00C2               	movwf	___flmul@temp
  6089  0603                     l2409:
  6090  0603  0842               	movf	___flmul@temp,w
  6091  0604  00B2               	movwf	??___flmul
  6092  0605  0843               	movf	___flmul@temp+1,w
  6093  0606  00B3               	movwf	??___flmul+1
  6094  0607  01B4               	clrf	??___flmul+2
  6095  0608  01B5               	clrf	??___flmul+3
  6096  0609  0832               	movf	??___flmul,w
  6097  060A  07B8               	addwf	___flmul@grs,f
  6098  060B  0833               	movf	??___flmul+1,w
  6099  060C  1103               	clrz
  6100  060D  1803               	skipnc
  6101  060E  3E01               	addlw	1
  6102  060F  1903               	skipnz
  6103  0610  2E12               	goto	u3211
  6104  0611  07B9               	addwf	___flmul@grs+1,f
  6105  0612                     u3211:
  6106  0612  0834               	movf	??___flmul+2,w
  6107  0613  1103               	clrz
  6108  0614  1803               	skipnc
  6109  0615  3E01               	addlw	1
  6110  0616  1903               	skipnz
  6111  0617  2E19               	goto	u3212
  6112  0618  07BA               	addwf	___flmul@grs+2,f
  6113  0619                     u3212:
  6114  0619  0835               	movf	??___flmul+3,w
  6115  061A  1103               	clrz
  6116  061B  1803               	skipnc
  6117  061C  3E01               	addlw	1
  6118  061D  1903               	skipnz
  6119  061E  2E20               	goto	u3213
  6120  061F  07BB               	addwf	___flmul@grs+3,f
  6121  0620                     u3213:
  6122  0620                     l2411:
  6123  0620  082B               	movf	___flmul@b+1,w
  6124  0621  00B2               	movwf	??___flmul
  6125  0622  0832               	movf	??___flmul,w
  6126  0623  00F3               	movwf	__Umul8_16@multiplicand
  6127  0624  0830               	movf	___flmul@a+2,w
  6128  0625  160A  118A  242C  120A  118A  	fcall	__Umul8_16
  6129  062A  0874               	movf	?__Umul8_16+1,w
  6130  062B  1283               	bcf	3,5	;RP0=0, select bank0
  6131  062C  1303               	bcf	3,6	;RP1=0, select bank0
  6132  062D  00C3               	movwf	___flmul@temp+1
  6133  062E  0873               	movf	?__Umul8_16,w
  6134  062F  00C2               	movwf	___flmul@temp
  6135  0630  0842               	movf	___flmul@temp,w
  6136  0631  00B2               	movwf	??___flmul
  6137  0632  0843               	movf	___flmul@temp+1,w
  6138  0633  00B3               	movwf	??___flmul+1
  6139  0634  01B4               	clrf	??___flmul+2
  6140  0635  01B5               	clrf	??___flmul+3
  6141  0636  0832               	movf	??___flmul,w
  6142  0637  07BE               	addwf	___flmul@prod,f
  6143  0638  0833               	movf	??___flmul+1,w
  6144  0639  1103               	clrz
  6145  063A  1803               	skipnc
  6146  063B  3E01               	addlw	1
  6147  063C  1903               	skipnz
  6148  063D  2E3F               	goto	u3221
  6149  063E  07BF               	addwf	___flmul@prod+1,f
  6150  063F                     u3221:
  6151  063F  0834               	movf	??___flmul+2,w
  6152  0640  1103               	clrz
  6153  0641  1803               	skipnc
  6154  0642  3E01               	addlw	1
  6155  0643  1903               	skipnz
  6156  0644  2E46               	goto	u3222
  6157  0645  07C0               	addwf	___flmul@prod+2,f
  6158  0646                     u3222:
  6159  0646  0835               	movf	??___flmul+3,w
  6160  0647  1103               	clrz
  6161  0648  1803               	skipnc
  6162  0649  3E01               	addlw	1
  6163  064A  1903               	skipnz
  6164  064B  2E4D               	goto	u3223
  6165  064C  07C1               	addwf	___flmul@prod+3,f
  6166  064D                     u3223:
  6167  064D                     l2413:
  6168  064D  082C               	movf	___flmul@b+2,w
  6169  064E  00B2               	movwf	??___flmul
  6170  064F  0832               	movf	??___flmul,w
  6171  0650  00F3               	movwf	__Umul8_16@multiplicand
  6172  0651  082F               	movf	___flmul@a+1,w
  6173  0652  160A  118A  242C  120A  118A  	fcall	__Umul8_16
  6174  0657  0874               	movf	?__Umul8_16+1,w
  6175  0658  1283               	bcf	3,5	;RP0=0, select bank0
  6176  0659  1303               	bcf	3,6	;RP1=0, select bank0
  6177  065A  00C3               	movwf	___flmul@temp+1
  6178  065B  0873               	movf	?__Umul8_16,w
  6179  065C  00C2               	movwf	___flmul@temp
  6180  065D                     l2415:
  6181  065D  0842               	movf	___flmul@temp,w
  6182  065E  00B2               	movwf	??___flmul
  6183  065F  0843               	movf	___flmul@temp+1,w
  6184  0660  00B3               	movwf	??___flmul+1
  6185  0661  01B4               	clrf	??___flmul+2
  6186  0662  01B5               	clrf	??___flmul+3
  6187  0663  0832               	movf	??___flmul,w
  6188  0664  07BE               	addwf	___flmul@prod,f
  6189  0665  0833               	movf	??___flmul+1,w
  6190  0666  1103               	clrz
  6191  0667  1803               	skipnc
  6192  0668  3E01               	addlw	1
  6193  0669  1903               	skipnz
  6194  066A  2E6C               	goto	u3231
  6195  066B  07BF               	addwf	___flmul@prod+1,f
  6196  066C                     u3231:
  6197  066C  0834               	movf	??___flmul+2,w
  6198  066D  1103               	clrz
  6199  066E  1803               	skipnc
  6200  066F  3E01               	addlw	1
  6201  0670  1903               	skipnz
  6202  0671  2E73               	goto	u3232
  6203  0672  07C0               	addwf	___flmul@prod+2,f
  6204  0673                     u3232:
  6205  0673  0835               	movf	??___flmul+3,w
  6206  0674  1103               	clrz
  6207  0675  1803               	skipnc
  6208  0676  3E01               	addlw	1
  6209  0677  1903               	skipnz
  6210  0678  2E7A               	goto	u3233
  6211  0679  07C1               	addwf	___flmul@prod+3,f
  6212  067A                     u3233:
  6213  067A  082C               	movf	___flmul@b+2,w
  6214  067B  00B2               	movwf	??___flmul
  6215  067C  0832               	movf	??___flmul,w
  6216  067D  00F3               	movwf	__Umul8_16@multiplicand
  6217  067E  0830               	movf	___flmul@a+2,w
  6218  067F  160A  118A  242C  120A  118A  	fcall	__Umul8_16
  6219  0684  0874               	movf	?__Umul8_16+1,w
  6220  0685  1283               	bcf	3,5	;RP0=0, select bank0
  6221  0686  1303               	bcf	3,6	;RP1=0, select bank0
  6222  0687  00C3               	movwf	___flmul@temp+1
  6223  0688  0873               	movf	?__Umul8_16,w
  6224  0689  00C2               	movwf	___flmul@temp
  6225  068A                     l2417:
  6226  068A  0842               	movf	___flmul@temp,w
  6227  068B  00B2               	movwf	??___flmul
  6228  068C  0843               	movf	___flmul@temp+1,w
  6229  068D  00B3               	movwf	??___flmul+1
  6230  068E  01B4               	clrf	??___flmul+2
  6231  068F  01B5               	clrf	??___flmul+3
  6232  0690  3008               	movlw	8
  6233  0691                     u3245:
  6234  0691  1003               	clrc
  6235  0692  0DB2               	rlf	??___flmul,f
  6236  0693  0DB3               	rlf	??___flmul+1,f
  6237  0694  0DB4               	rlf	??___flmul+2,f
  6238  0695  0DB5               	rlf	??___flmul+3,f
  6239  0696                     u3240:
  6240  0696  3EFF               	addlw	-1
  6241  0697  1D03               	skipz
  6242  0698  2E91               	goto	u3245
  6243  0699  0832               	movf	??___flmul,w
  6244  069A  07BE               	addwf	___flmul@prod,f
  6245  069B  0833               	movf	??___flmul+1,w
  6246  069C  1103               	clrz
  6247  069D  1803               	skipnc
  6248  069E  3E01               	addlw	1
  6249  069F  1903               	skipnz
  6250  06A0  2EA2               	goto	u3251
  6251  06A1  07BF               	addwf	___flmul@prod+1,f
  6252  06A2                     u3251:
  6253  06A2  0834               	movf	??___flmul+2,w
  6254  06A3  1103               	clrz
  6255  06A4  1803               	skipnc
  6256  06A5  3E01               	addlw	1
  6257  06A6  1903               	skipnz
  6258  06A7  2EA9               	goto	u3252
  6259  06A8  07C0               	addwf	___flmul@prod+2,f
  6260  06A9                     u3252:
  6261  06A9  0835               	movf	??___flmul+3,w
  6262  06AA  1103               	clrz
  6263  06AB  1803               	skipnc
  6264  06AC  3E01               	addlw	1
  6265  06AD  1903               	skipnz
  6266  06AE  2EB0               	goto	u3253
  6267  06AF  07C1               	addwf	___flmul@prod+3,f
  6268  06B0                     u3253:
  6269  06B0                     l2419:
  6270  06B0  0838               	movf	___flmul@grs,w
  6271  06B1  00B2               	movwf	??___flmul
  6272  06B2  0839               	movf	___flmul@grs+1,w
  6273  06B3  00B3               	movwf	??___flmul+1
  6274  06B4  083A               	movf	___flmul@grs+2,w
  6275  06B5  00B4               	movwf	??___flmul+2
  6276  06B6  083B               	movf	___flmul@grs+3,w
  6277  06B7  00B5               	movwf	??___flmul+3
  6278  06B8  3018               	movlw	24
  6279  06B9                     u3265:
  6280  06B9  1003               	clrc
  6281  06BA  0CB5               	rrf	??___flmul+3,f
  6282  06BB  0CB4               	rrf	??___flmul+2,f
  6283  06BC  0CB3               	rrf	??___flmul+1,f
  6284  06BD  0CB2               	rrf	??___flmul,f
  6285  06BE                     u3260:
  6286  06BE  3EFF               	addlw	-1
  6287  06BF  1D03               	skipz
  6288  06C0  2EB9               	goto	u3265
  6289  06C1  0832               	movf	??___flmul,w
  6290  06C2  07BE               	addwf	___flmul@prod,f
  6291  06C3  0833               	movf	??___flmul+1,w
  6292  06C4  1103               	clrz
  6293  06C5  1803               	skipnc
  6294  06C6  3E01               	addlw	1
  6295  06C7  1903               	skipnz
  6296  06C8  2ECA               	goto	u3271
  6297  06C9  07BF               	addwf	___flmul@prod+1,f
  6298  06CA                     u3271:
  6299  06CA  0834               	movf	??___flmul+2,w
  6300  06CB  1103               	clrz
  6301  06CC  1803               	skipnc
  6302  06CD  3E01               	addlw	1
  6303  06CE  1903               	skipnz
  6304  06CF  2ED1               	goto	u3272
  6305  06D0  07C0               	addwf	___flmul@prod+2,f
  6306  06D1                     u3272:
  6307  06D1  0835               	movf	??___flmul+3,w
  6308  06D2  1103               	clrz
  6309  06D3  1803               	skipnc
  6310  06D4  3E01               	addlw	1
  6311  06D5  1903               	skipnz
  6312  06D6  2ED8               	goto	u3273
  6313  06D7  07C1               	addwf	___flmul@prod+3,f
  6314  06D8                     u3273:
  6315  06D8                     l2421:
  6316  06D8  3008               	movlw	8
  6317  06D9  00B2               	movwf	??___flmul
  6318  06DA                     u3285:
  6319  06DA  1003               	clrc
  6320  06DB  0DB8               	rlf	___flmul@grs,f
  6321  06DC  0DB9               	rlf	___flmul@grs+1,f
  6322  06DD  0DBA               	rlf	___flmul@grs+2,f
  6323  06DE  0DBB               	rlf	___flmul@grs+3,f
  6324  06DF  0BB2               	decfsz	??___flmul,f
  6325  06E0  2EDA               	goto	u3285
  6326  06E1                     l2423:
  6327  06E1  083D               	movf	___flmul@bexp,w
  6328  06E2  073C               	addwf	___flmul@aexp,w
  6329  06E3  00B2               	movwf	??___flmul
  6330  06E4  01B3               	clrf	??___flmul+1
  6331  06E5  0DB3               	rlf	??___flmul+1,f
  6332  06E6  0832               	movf	??___flmul,w
  6333  06E7  3E82               	addlw	130
  6334  06E8  00C2               	movwf	___flmul@temp
  6335  06E9  0833               	movf	??___flmul+1,w
  6336  06EA  1803               	skipnc
  6337  06EB  3E01               	addlw	1
  6338  06EC  3EFF               	addlw	255
  6339  06ED  00C3               	movwf	___flmul@temp+1
  6340  06EE  2F0C               	goto	l2435
  6341  06EF                     l2425:
  6342  06EF  3001               	movlw	1
  6343  06F0  00B2               	movwf	??___flmul
  6344  06F1                     u3295:
  6345  06F1  1003               	clrc
  6346  06F2  0DBE               	rlf	___flmul@prod,f
  6347  06F3  0DBF               	rlf	___flmul@prod+1,f
  6348  06F4  0DC0               	rlf	___flmul@prod+2,f
  6349  06F5  0DC1               	rlf	___flmul@prod+3,f
  6350  06F6  0BB2               	decfsz	??___flmul,f
  6351  06F7  2EF1               	goto	u3295
  6352  06F8                     l2427:
  6353  06F8  1FBB               	btfss	___flmul@grs+3,7
  6354  06F9  2EFB               	goto	u3301
  6355  06FA  2EFC               	goto	u3300
  6356  06FB                     u3301:
  6357  06FB  2EFD               	goto	l2431
  6358  06FC                     u3300:
  6359  06FC                     l2429:
  6360  06FC  143E               	bsf	___flmul@prod,0
  6361  06FD                     l2431:
  6362  06FD  3001               	movlw	1
  6363  06FE  00B2               	movwf	??___flmul
  6364  06FF                     u3315:
  6365  06FF  1003               	clrc
  6366  0700  0DB8               	rlf	___flmul@grs,f
  6367  0701  0DB9               	rlf	___flmul@grs+1,f
  6368  0702  0DBA               	rlf	___flmul@grs+2,f
  6369  0703  0DBB               	rlf	___flmul@grs+3,f
  6370  0704  0BB2               	decfsz	??___flmul,f
  6371  0705  2EFF               	goto	u3315
  6372  0706                     l2433:
  6373  0706  30FF               	movlw	255
  6374  0707  07C2               	addwf	___flmul@temp,f
  6375  0708  1803               	skipnc
  6376  0709  0AC3               	incf	___flmul@temp+1,f
  6377  070A  30FF               	movlw	255
  6378  070B  07C3               	addwf	___flmul@temp+1,f
  6379  070C                     l2435:
  6380  070C  1FC0               	btfss	___flmul@prod+2,7
  6381  070D  2F0F               	goto	u3321
  6382  070E  2F10               	goto	u3320
  6383  070F                     u3321:
  6384  070F  2EEF               	goto	l2425
  6385  0710                     u3320:
  6386  0710                     l2437:
  6387  0710  01BC               	clrf	___flmul@aexp
  6388  0711                     l2439:
  6389  0711  1FBB               	btfss	___flmul@grs+3,7
  6390  0712  2F14               	goto	u3331
  6391  0713  2F15               	goto	u3330
  6392  0714                     u3331:
  6393  0714  2F31               	goto	l2447
  6394  0715                     u3330:
  6395  0715                     l2441:
  6396  0715  30FF               	movlw	255
  6397  0716  0538               	andwf	___flmul@grs,w
  6398  0717  00B2               	movwf	??___flmul
  6399  0718  30FF               	movlw	255
  6400  0719  0539               	andwf	___flmul@grs+1,w
  6401  071A  00B3               	movwf	??___flmul+1
  6402  071B  30FF               	movlw	255
  6403  071C  053A               	andwf	___flmul@grs+2,w
  6404  071D  00B4               	movwf	??___flmul+2
  6405  071E  307F               	movlw	127
  6406  071F  053B               	andwf	___flmul@grs+3,w
  6407  0720  00B5               	movwf	??___flmul+3
  6408  0721  0835               	movf	??___flmul+3,w
  6409  0722  0434               	iorwf	??___flmul+2,w
  6410  0723  0433               	iorwf	??___flmul+1,w
  6411  0724  0432               	iorwf	??___flmul,w
  6412  0725  1903               	skipnz
  6413  0726  2F28               	goto	u3341
  6414  0727  2F29               	goto	u3340
  6415  0728                     u3341:
  6416  0728  2F2C               	goto	l711
  6417  0729                     u3340:
  6418  0729                     l2443:
  6419  0729  01BC               	clrf	___flmul@aexp
  6420  072A  0ABC               	incf	___flmul@aexp,f
  6421  072B  2F31               	goto	l2447
  6422  072C                     l711:
  6423  072C  1C3E               	btfss	___flmul@prod,0
  6424  072D  2F2F               	goto	u3351
  6425  072E  2F30               	goto	u3350
  6426  072F                     u3351:
  6427  072F  2F31               	goto	l2447
  6428  0730                     u3350:
  6429  0730  2F29               	goto	l2443
  6430  0731                     l2447:
  6431  0731  083C               	movf	___flmul@aexp,w
  6432  0732  1903               	btfsc	3,2
  6433  0733  2F35               	goto	u3361
  6434  0734  2F36               	goto	u3360
  6435  0735                     u3361:
  6436  0735  2F67               	goto	l2457
  6437  0736                     u3360:
  6438  0736                     l2449:
  6439  0736  3001               	movlw	1
  6440  0737  07BE               	addwf	___flmul@prod,f
  6441  0738  3000               	movlw	0
  6442  0739  1803               	skipnc
  6443  073A  3001               	movlw	1
  6444  073B  07BF               	addwf	___flmul@prod+1,f
  6445  073C  3000               	movlw	0
  6446  073D  1803               	skipnc
  6447  073E  3001               	movlw	1
  6448  073F  07C0               	addwf	___flmul@prod+2,f
  6449  0740  3000               	movlw	0
  6450  0741  1803               	skipnc
  6451  0742  3001               	movlw	1
  6452  0743  07C1               	addwf	___flmul@prod+3,f
  6453  0744                     l2451:
  6454  0744  1C41               	btfss	___flmul@prod+3,0
  6455  0745  2F47               	goto	u3371
  6456  0746  2F48               	goto	u3370
  6457  0747                     u3371:
  6458  0747  2F67               	goto	l2457
  6459  0748                     u3370:
  6460  0748                     l2453:
  6461  0748  083E               	movf	___flmul@prod,w
  6462  0749  00B2               	movwf	??___flmul
  6463  074A  083F               	movf	___flmul@prod+1,w
  6464  074B  00B3               	movwf	??___flmul+1
  6465  074C  0840               	movf	___flmul@prod+2,w
  6466  074D  00B4               	movwf	??___flmul+2
  6467  074E  0841               	movf	___flmul@prod+3,w
  6468  074F  00B5               	movwf	??___flmul+3
  6469  0750  3001               	movlw	1
  6470  0751  00B6               	movwf	??___flmul+4
  6471  0752                     u3385:
  6472  0752  0D35               	rlf	??___flmul+3,w
  6473  0753  0CB5               	rrf	??___flmul+3,f
  6474  0754  0CB4               	rrf	??___flmul+2,f
  6475  0755  0CB3               	rrf	??___flmul+1,f
  6476  0756  0CB2               	rrf	??___flmul,f
  6477  0757                     u3380:
  6478  0757  0BB6               	decfsz	??___flmul+4,f
  6479  0758  2F52               	goto	u3385
  6480  0759  0835               	movf	??___flmul+3,w
  6481  075A  00C1               	movwf	___flmul@prod+3
  6482  075B  0834               	movf	??___flmul+2,w
  6483  075C  00C0               	movwf	___flmul@prod+2
  6484  075D  0833               	movf	??___flmul+1,w
  6485  075E  00BF               	movwf	___flmul@prod+1
  6486  075F  0832               	movf	??___flmul,w
  6487  0760  00BE               	movwf	___flmul@prod
  6488  0761                     l2455:
  6489  0761  3001               	movlw	1
  6490  0762  07C2               	addwf	___flmul@temp,f
  6491  0763  1803               	skipnc
  6492  0764  0AC3               	incf	___flmul@temp+1,f
  6493  0765  3000               	movlw	0
  6494  0766  07C3               	addwf	___flmul@temp+1,f
  6495  0767                     l2457:
  6496  0767  0843               	movf	___flmul@temp+1,w
  6497  0768  3A80               	xorlw	128
  6498  0769  00FF               	movwf	btemp+1
  6499  076A  3080               	movlw	128
  6500  076B  027F               	subwf	btemp+1,w
  6501  076C  1D03               	skipz
  6502  076D  2F70               	goto	u3395
  6503  076E  30FF               	movlw	255
  6504  076F  0242               	subwf	___flmul@temp,w
  6505  0770                     u3395:
  6506  0770  1C03               	skipc
  6507  0771  2F73               	goto	u3391
  6508  0772  2F74               	goto	u3390
  6509  0773                     u3391:
  6510  0773  2F7F               	goto	l2461
  6511  0774                     u3390:
  6512  0774                     l2459:
  6513  0774  307F               	movlw	127
  6514  0775  1283               	bcf	3,5	;RP0=0, select bank0
  6515  0776  1303               	bcf	3,6	;RP1=0, select bank0
  6516  0777  00C1               	movwf	___flmul@prod+3
  6517  0778  3080               	movlw	128
  6518  0779  00C0               	movwf	___flmul@prod+2
  6519  077A  3000               	movlw	0
  6520  077B  00BF               	movwf	___flmul@prod+1
  6521  077C  3000               	movlw	0
  6522  077D  00BE               	movwf	___flmul@prod
  6523  077E  2FB4               	goto	l717
  6524  077F                     l2461:
  6525  077F  1283               	bcf	3,5	;RP0=0, select bank0
  6526  0780  1303               	bcf	3,6	;RP1=0, select bank0
  6527  0781  0843               	movf	___flmul@temp+1,w
  6528  0782  3A80               	xorlw	128
  6529  0783  00FF               	movwf	btemp+1
  6530  0784  3080               	movlw	128
  6531  0785  027F               	subwf	btemp+1,w
  6532  0786  1D03               	skipz
  6533  0787  2F8A               	goto	u3405
  6534  0788  3001               	movlw	1
  6535  0789  0242               	subwf	___flmul@temp,w
  6536  078A                     u3405:
  6537  078A  1803               	skipnc
  6538  078B  2F8D               	goto	u3401
  6539  078C  2F8E               	goto	u3400
  6540  078D                     u3401:
  6541  078D  2F9A               	goto	l2467
  6542  078E                     u3400:
  6543  078E                     l2463:
  6544  078E  3000               	movlw	0
  6545  078F  1283               	bcf	3,5	;RP0=0, select bank0
  6546  0790  1303               	bcf	3,6	;RP1=0, select bank0
  6547  0791  00C1               	movwf	___flmul@prod+3
  6548  0792  3000               	movlw	0
  6549  0793  00C0               	movwf	___flmul@prod+2
  6550  0794  3000               	movlw	0
  6551  0795  00BF               	movwf	___flmul@prod+1
  6552  0796  3000               	movlw	0
  6553  0797  00BE               	movwf	___flmul@prod
  6554  0798                     l2465:
  6555  0798  01B7               	clrf	___flmul@sign
  6556  0799  2FB4               	goto	l717
  6557  079A                     l2467:
  6558  079A  1283               	bcf	3,5	;RP0=0, select bank0
  6559  079B  1303               	bcf	3,6	;RP1=0, select bank0
  6560  079C  0842               	movf	___flmul@temp,w
  6561  079D  00B2               	movwf	??___flmul
  6562  079E  0832               	movf	??___flmul,w
  6563  079F  00BD               	movwf	___flmul@bexp
  6564  07A0  30FF               	movlw	255
  6565  07A1  05BE               	andwf	___flmul@prod,f
  6566  07A2  30FF               	movlw	255
  6567  07A3  05BF               	andwf	___flmul@prod+1,f
  6568  07A4  307F               	movlw	127
  6569  07A5  05C0               	andwf	___flmul@prod+2,f
  6570  07A6  3000               	movlw	0
  6571  07A7  05C1               	andwf	___flmul@prod+3,f
  6572  07A8                     l2469:
  6573  07A8  1C3D               	btfss	___flmul@bexp,0
  6574  07A9  2FAB               	goto	u3411
  6575  07AA  2FAC               	goto	u3410
  6576  07AB                     u3411:
  6577  07AB  2FAD               	goto	l2473
  6578  07AC                     u3410:
  6579  07AC                     l2471:
  6580  07AC  17C0               	bsf	___flmul@prod+2,7
  6581  07AD                     l2473:
  6582  07AD  083D               	movf	___flmul@bexp,w
  6583  07AE  00B2               	movwf	??___flmul
  6584  07AF  1003               	clrc
  6585  07B0  0C32               	rrf	??___flmul,w
  6586  07B1  00B3               	movwf	??___flmul+1
  6587  07B2  0833               	movf	??___flmul+1,w
  6588  07B3  00C1               	movwf	___flmul@prod+3
  6589  07B4                     l717:
  6590  07B4  0837               	movf	___flmul@sign,w
  6591  07B5  00B2               	movwf	??___flmul
  6592  07B6  0832               	movf	??___flmul,w
  6593  07B7  04C1               	iorwf	___flmul@prod+3,f
  6594  07B8                     l2475:
  6595  07B8  0841               	movf	___flmul@prod+3,w
  6596  07B9  00AD               	movwf	?___flmul+3
  6597  07BA  0840               	movf	___flmul@prod+2,w
  6598  07BB  00AC               	movwf	?___flmul+2
  6599  07BC  083F               	movf	___flmul@prod+1,w
  6600  07BD  00AB               	movwf	?___flmul+1
  6601  07BE  083E               	movf	___flmul@prod,w
  6602  07BF  00AA               	movwf	?___flmul
  6603  07C0                     l705:
  6604  07C0  0008               	return
  6605  07C1                     __end_of___flmul:
  6606                           
  6607                           	psect	text18
  6608  142C                     __ptext18:	
  6609 ;; *************** function __Umul8_16 *****************
  6610 ;; Defined at:
  6611 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6612 ;; Parameters:    Size  Location     Type
  6613 ;;  multiplier      1    wreg     unsigned char 
  6614 ;;  multiplicand    1    3[COMMON] unsigned char 
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;  multiplier      1    4[BANK0 ] unsigned char 
  6617 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  6618 ;;  product         2    0[BANK0 ] unsigned int 
  6619 ;; Return value:  Size  Location     Type
  6620 ;;                  2    3[COMMON] unsigned int 
  6621 ;; Registers used:
  6622 ;;		wreg, status,2, status,0
  6623 ;; Tracked objects:
  6624 ;;		On entry : 0/0
  6625 ;;		On exit  : 0/0
  6626 ;;		Unchanged: 0/0
  6627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6628 ;;      Params:         2       0       0       0       0
  6629 ;;      Locals:         0       5       0       0       0
  6630 ;;      Temps:          2       0       0       0       0
  6631 ;;      Totals:         4       5       0       0       0
  6632 ;;Total ram usage:        9 bytes
  6633 ;; Hardware stack levels used:    1
  6634 ;; Hardware stack levels required when called:    1
  6635 ;; This function calls:
  6636 ;;		Nothing
  6637 ;; This function is called by:
  6638 ;;		___flmul
  6639 ;; This function uses a non-reentrant model
  6640 ;;
  6641                           
  6642                           
  6643                           ;psect for function __Umul8_16
  6644  142C                     __Umul8_16:
  6645                           
  6646                           ;incstack = 0
  6647                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6648                           ;__Umul8_16@multiplier stored from wreg
  6649  142C  1283               	bcf	3,5	;RP0=0, select bank0
  6650  142D  1303               	bcf	3,6	;RP1=0, select bank0
  6651  142E  00A4               	movwf	__Umul8_16@multiplier
  6652  142F                     l2231:
  6653  142F  01A0               	clrf	__Umul8_16@product
  6654  1430  01A1               	clrf	__Umul8_16@product+1
  6655  1431                     l2233:
  6656  1431  0873               	movf	__Umul8_16@multiplicand,w
  6657  1432  00F5               	movwf	??__Umul8_16
  6658  1433  01F6               	clrf	??__Umul8_16+1
  6659  1434  0875               	movf	??__Umul8_16,w
  6660  1435  00A2               	movwf	__Umul8_16@word_mpld
  6661  1436  0876               	movf	??__Umul8_16+1,w
  6662  1437  00A3               	movwf	__Umul8_16@word_mpld+1
  6663  1438                     l2235:
  6664  1438  1C24               	btfss	__Umul8_16@multiplier,0
  6665  1439  2C3B               	goto	u2781
  6666  143A  2C3C               	goto	u2780
  6667  143B                     u2781:
  6668  143B  2C42               	goto	l724
  6669  143C                     u2780:
  6670  143C                     l2237:
  6671  143C  0822               	movf	__Umul8_16@word_mpld,w
  6672  143D  07A0               	addwf	__Umul8_16@product,f
  6673  143E  1803               	skipnc
  6674  143F  0AA1               	incf	__Umul8_16@product+1,f
  6675  1440  0823               	movf	__Umul8_16@word_mpld+1,w
  6676  1441  07A1               	addwf	__Umul8_16@product+1,f
  6677  1442                     l724:
  6678  1442  3001               	movlw	1
  6679  1443                     u2795:
  6680  1443  1003               	clrc
  6681  1444  0DA2               	rlf	__Umul8_16@word_mpld,f
  6682  1445  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  6683  1446  3EFF               	addlw	-1
  6684  1447  1D03               	skipz
  6685  1448  2C43               	goto	u2795
  6686  1449  1003               	clrc
  6687  144A  0CA4               	rrf	__Umul8_16@multiplier,f
  6688  144B                     l2239:
  6689  144B  0824               	movf	__Umul8_16@multiplier,w
  6690  144C  1D03               	btfss	3,2
  6691  144D  2C4F               	goto	u2801
  6692  144E  2C50               	goto	u2800
  6693  144F                     u2801:
  6694  144F  2C38               	goto	l2235
  6695  1450                     u2800:
  6696  1450                     l2241:
  6697  1450  0821               	movf	__Umul8_16@product+1,w
  6698  1451  00F4               	movwf	?__Umul8_16+1
  6699  1452  0820               	movf	__Umul8_16@product,w
  6700  1453  00F3               	movwf	?__Umul8_16
  6701  1454                     l726:
  6702  1454  0008               	return
  6703  1455                     __end_of__Umul8_16:
  6704                           
  6705                           	psect	text19
  6706  15EE                     __ptext19:	
  6707 ;; *************** function ___flge *****************
  6708 ;; Defined at:
  6709 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  6710 ;; Parameters:    Size  Location     Type
  6711 ;;  ff1             4    0[BANK0 ] unsigned int 
  6712 ;;  ff2             4    4[BANK0 ] unsigned int 
  6713 ;; Auto vars:     Size  Location     Type
  6714 ;;		None
  6715 ;; Return value:  Size  Location     Type
  6716 ;;		None               void
  6717 ;; Registers used:
  6718 ;;		wreg, status,2, status,0
  6719 ;; Tracked objects:
  6720 ;;		On entry : 0/0
  6721 ;;		On exit  : 0/0
  6722 ;;		Unchanged: 0/0
  6723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6724 ;;      Params:         0       8       0       0       0
  6725 ;;      Locals:         0       0       0       0       0
  6726 ;;      Temps:          4       0       0       0       0
  6727 ;;      Totals:         4       8       0       0       0
  6728 ;;Total ram usage:       12 bytes
  6729 ;; Hardware stack levels used:    1
  6730 ;; Hardware stack levels required when called:    1
  6731 ;; This function calls:
  6732 ;;		Nothing
  6733 ;; This function is called by:
  6734 ;;		_ftoa
  6735 ;; This function uses a non-reentrant model
  6736 ;;
  6737                           
  6738                           
  6739                           ;psect for function ___flge
  6740  15EE                     ___flge:
  6741  15EE                     l3039:	
  6742                           ;incstack = 0
  6743                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6744                           
  6745  15EE  3000               	movlw	0
  6746  15EF  1283               	bcf	3,5	;RP0=0, select bank0
  6747  15F0  1303               	bcf	3,6	;RP1=0, select bank0
  6748  15F1  0520               	andwf	___flge@ff1,w
  6749  15F2  00F3               	movwf	??___flge
  6750  15F3  3000               	movlw	0
  6751  15F4  0521               	andwf	___flge@ff1+1,w
  6752  15F5  00F4               	movwf	??___flge+1
  6753  15F6  3080               	movlw	128
  6754  15F7  0522               	andwf	___flge@ff1+2,w
  6755  15F8  00F5               	movwf	??___flge+2
  6756  15F9  307F               	movlw	127
  6757  15FA  0523               	andwf	___flge@ff1+3,w
  6758  15FB  00F6               	movwf	??___flge+3
  6759  15FC  0876               	movf	??___flge+3,w
  6760  15FD  0475               	iorwf	??___flge+2,w
  6761  15FE  0474               	iorwf	??___flge+1,w
  6762  15FF  0473               	iorwf	??___flge,w
  6763  1600  1D03               	skipz
  6764  1601  2E03               	goto	u4321
  6765  1602  2E04               	goto	u4320
  6766  1603                     u4321:
  6767  1603  2E0C               	goto	l490
  6768  1604                     u4320:
  6769  1604                     l3041:
  6770  1604  3000               	movlw	0
  6771  1605  00A3               	movwf	___flge@ff1+3
  6772  1606  3000               	movlw	0
  6773  1607  00A2               	movwf	___flge@ff1+2
  6774  1608  3000               	movlw	0
  6775  1609  00A1               	movwf	___flge@ff1+1
  6776  160A  3000               	movlw	0
  6777  160B  00A0               	movwf	___flge@ff1
  6778  160C                     l490:
  6779  160C  3000               	movlw	0
  6780  160D  0524               	andwf	___flge@ff2,w
  6781  160E  00F3               	movwf	??___flge
  6782  160F  3000               	movlw	0
  6783  1610  0525               	andwf	___flge@ff2+1,w
  6784  1611  00F4               	movwf	??___flge+1
  6785  1612  3080               	movlw	128
  6786  1613  0526               	andwf	___flge@ff2+2,w
  6787  1614  00F5               	movwf	??___flge+2
  6788  1615  307F               	movlw	127
  6789  1616  0527               	andwf	___flge@ff2+3,w
  6790  1617  00F6               	movwf	??___flge+3
  6791  1618  0876               	movf	??___flge+3,w
  6792  1619  0475               	iorwf	??___flge+2,w
  6793  161A  0474               	iorwf	??___flge+1,w
  6794  161B  0473               	iorwf	??___flge,w
  6795  161C  1D03               	skipz
  6796  161D  2E1F               	goto	u4331
  6797  161E  2E20               	goto	u4330
  6798  161F                     u4331:
  6799  161F  2E28               	goto	l3045
  6800  1620                     u4330:
  6801  1620                     l3043:
  6802  1620  3000               	movlw	0
  6803  1621  00A7               	movwf	___flge@ff2+3
  6804  1622  3000               	movlw	0
  6805  1623  00A6               	movwf	___flge@ff2+2
  6806  1624  3000               	movlw	0
  6807  1625  00A5               	movwf	___flge@ff2+1
  6808  1626  3000               	movlw	0
  6809  1627  00A4               	movwf	___flge@ff2
  6810  1628                     l3045:
  6811  1628  1FA3               	btfss	___flge@ff1+3,7
  6812  1629  2E2B               	goto	u4341
  6813  162A  2E2C               	goto	u4340
  6814  162B                     u4341:
  6815  162B  2E50               	goto	l3049
  6816  162C                     u4340:
  6817  162C                     l3047:
  6818  162C  3000               	movlw	0
  6819  162D  00F3               	movwf	??___flge
  6820  162E  3000               	movlw	0
  6821  162F  00F4               	movwf	??___flge+1
  6822  1630  3000               	movlw	0
  6823  1631  00F5               	movwf	??___flge+2
  6824  1632  3080               	movlw	128
  6825  1633  00F6               	movwf	??___flge+3
  6826  1634  0820               	movf	___flge@ff1,w
  6827  1635  02F3               	subwf	??___flge,f
  6828  1636  0821               	movf	___flge@ff1+1,w
  6829  1637  1C03               	skipc
  6830  1638  0F21               	incfsz	___flge@ff1+1,w
  6831  1639  2E3B               	goto	u4351
  6832  163A  2E3C               	goto	u4352
  6833  163B                     u4351:
  6834  163B  02F4               	subwf	??___flge+1,f
  6835  163C                     u4352:
  6836  163C  0822               	movf	___flge@ff1+2,w
  6837  163D  1C03               	skipc
  6838  163E  0F22               	incfsz	___flge@ff1+2,w
  6839  163F  2E41               	goto	u4353
  6840  1640  2E42               	goto	u4354
  6841  1641                     u4353:
  6842  1641  02F5               	subwf	??___flge+2,f
  6843  1642                     u4354:
  6844  1642  0823               	movf	___flge@ff1+3,w
  6845  1643  1C03               	skipc
  6846  1644  0F23               	incfsz	___flge@ff1+3,w
  6847  1645  2E47               	goto	u4355
  6848  1646  2E48               	goto	u4356
  6849  1647                     u4355:
  6850  1647  02F6               	subwf	??___flge+3,f
  6851  1648                     u4356:
  6852  1648  0876               	movf	??___flge+3,w
  6853  1649  00A3               	movwf	___flge@ff1+3
  6854  164A  0875               	movf	??___flge+2,w
  6855  164B  00A2               	movwf	___flge@ff1+2
  6856  164C  0874               	movf	??___flge+1,w
  6857  164D  00A1               	movwf	___flge@ff1+1
  6858  164E  0873               	movf	??___flge,w
  6859  164F  00A0               	movwf	___flge@ff1
  6860  1650                     l3049:
  6861  1650  1FA7               	btfss	___flge@ff2+3,7
  6862  1651  2E53               	goto	u4361
  6863  1652  2E54               	goto	u4360
  6864  1653                     u4361:
  6865  1653  2E78               	goto	l493
  6866  1654                     u4360:
  6867  1654                     l3051:
  6868  1654  3000               	movlw	0
  6869  1655  00F3               	movwf	??___flge
  6870  1656  3000               	movlw	0
  6871  1657  00F4               	movwf	??___flge+1
  6872  1658  3000               	movlw	0
  6873  1659  00F5               	movwf	??___flge+2
  6874  165A  3080               	movlw	128
  6875  165B  00F6               	movwf	??___flge+3
  6876  165C  0824               	movf	___flge@ff2,w
  6877  165D  02F3               	subwf	??___flge,f
  6878  165E  0825               	movf	___flge@ff2+1,w
  6879  165F  1C03               	skipc
  6880  1660  0F25               	incfsz	___flge@ff2+1,w
  6881  1661  2E63               	goto	u4371
  6882  1662  2E64               	goto	u4372
  6883  1663                     u4371:
  6884  1663  02F4               	subwf	??___flge+1,f
  6885  1664                     u4372:
  6886  1664  0826               	movf	___flge@ff2+2,w
  6887  1665  1C03               	skipc
  6888  1666  0F26               	incfsz	___flge@ff2+2,w
  6889  1667  2E69               	goto	u4373
  6890  1668  2E6A               	goto	u4374
  6891  1669                     u4373:
  6892  1669  02F5               	subwf	??___flge+2,f
  6893  166A                     u4374:
  6894  166A  0827               	movf	___flge@ff2+3,w
  6895  166B  1C03               	skipc
  6896  166C  0F27               	incfsz	___flge@ff2+3,w
  6897  166D  2E6F               	goto	u4375
  6898  166E  2E70               	goto	u4376
  6899  166F                     u4375:
  6900  166F  02F6               	subwf	??___flge+3,f
  6901  1670                     u4376:
  6902  1670  0876               	movf	??___flge+3,w
  6903  1671  00A7               	movwf	___flge@ff2+3
  6904  1672  0875               	movf	??___flge+2,w
  6905  1673  00A6               	movwf	___flge@ff2+2
  6906  1674  0874               	movf	??___flge+1,w
  6907  1675  00A5               	movwf	___flge@ff2+1
  6908  1676  0873               	movf	??___flge,w
  6909  1677  00A4               	movwf	___flge@ff2
  6910  1678                     l493:
  6911  1678  3080               	movlw	128
  6912  1679  06A3               	xorwf	___flge@ff1+3,f
  6913  167A  3080               	movlw	128
  6914  167B  06A7               	xorwf	___flge@ff2+3,f
  6915  167C  0827               	movf	___flge@ff2+3,w
  6916  167D  0223               	subwf	___flge@ff1+3,w
  6917  167E  1D03               	skipz
  6918  167F  2E8A               	goto	u4385
  6919  1680  0826               	movf	___flge@ff2+2,w
  6920  1681  0222               	subwf	___flge@ff1+2,w
  6921  1682  1D03               	skipz
  6922  1683  2E8A               	goto	u4385
  6923  1684  0825               	movf	___flge@ff2+1,w
  6924  1685  0221               	subwf	___flge@ff1+1,w
  6925  1686  1D03               	skipz
  6926  1687  2E8A               	goto	u4385
  6927  1688  0824               	movf	___flge@ff2,w
  6928  1689  0220               	subwf	___flge@ff1,w
  6929  168A                     u4385:
  6930  168A  1803               	skipnc
  6931  168B  2E8D               	goto	u4381
  6932  168C  2E8E               	goto	u4380
  6933  168D                     u4381:
  6934  168D  2E90               	goto	l3055
  6935  168E                     u4380:
  6936  168E                     l3053:
  6937  168E  1003               	clrc
  6938  168F  2E91               	goto	l494
  6939  1690                     l3055:
  6940  1690  1403               	setc
  6941  1691                     l494:
  6942  1691  0008               	return
  6943  1692                     __end_of___flge:
  6944                           
  6945                           	psect	text20
  6946  094F                     __ptext20:	
  6947 ;; *************** function ___fldiv *****************
  6948 ;; Defined at:
  6949 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcdiv.c"
  6950 ;; Parameters:    Size  Location     Type
  6951 ;;  a               4   10[BANK0 ] unsigned int 
  6952 ;;  b               4   14[BANK0 ] unsigned int 
  6953 ;; Auto vars:     Size  Location     Type
  6954 ;;  grs             4   30[BANK0 ] unsigned long 
  6955 ;;  rem             4   23[BANK0 ] unsigned long 
  6956 ;;  new_exp         2   28[BANK0 ] int 
  6957 ;;  aexp            1   35[BANK0 ] unsigned char 
  6958 ;;  bexp            1   34[BANK0 ] unsigned char 
  6959 ;;  sign            1   27[BANK0 ] unsigned char 
  6960 ;; Return value:  Size  Location     Type
  6961 ;;                  4   10[BANK0 ] unsigned char 
  6962 ;; Registers used:
  6963 ;;		wreg, status,2, status,0, btemp+1
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6969 ;;      Params:         0       8       0       0       0
  6970 ;;      Locals:         0      13       0       0       0
  6971 ;;      Temps:          0       5       0       0       0
  6972 ;;      Totals:         0      26       0       0       0
  6973 ;;Total ram usage:       26 bytes
  6974 ;; Hardware stack levels used:    1
  6975 ;; Hardware stack levels required when called:    1
  6976 ;; This function calls:
  6977 ;;		Nothing
  6978 ;; This function is called by:
  6979 ;;		_giro_read
  6980 ;; This function uses a non-reentrant model
  6981 ;;
  6982                           
  6983                           
  6984                           ;psect for function ___fldiv
  6985  094F                     ___fldiv:
  6986  094F                     l2713:	
  6987                           ;incstack = 0
  6988                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6989                           
  6990  094F  1283               	bcf	3,5	;RP0=0, select bank0
  6991  0950  1303               	bcf	3,6	;RP1=0, select bank0
  6992  0951  0831               	movf	___fldiv@b+3,w
  6993  0952  3980               	andlw	128
  6994  0953  00B2               	movwf	??___fldiv
  6995  0954  0832               	movf	??___fldiv,w
  6996  0955  00BB               	movwf	___fldiv@sign
  6997  0956                     l2715:
  6998  0956  0831               	movf	___fldiv@b+3,w
  6999  0957  00B2               	movwf	??___fldiv
  7000  0958  0732               	addwf	??___fldiv,w
  7001  0959  00B3               	movwf	??___fldiv+1
  7002  095A  0833               	movf	??___fldiv+1,w
  7003  095B  00C2               	movwf	___fldiv@bexp
  7004  095C                     l2717:
  7005  095C  1FB0               	btfss	___fldiv@b+2,7
  7006  095D  295F               	goto	u3861
  7007  095E  2960               	goto	u3860
  7008  095F                     u3861:
  7009  095F  2961               	goto	l2721
  7010  0960                     u3860:
  7011  0960                     l2719:
  7012  0960  1442               	bsf	___fldiv@bexp,0
  7013  0961                     l2721:
  7014  0961  0842               	movf	___fldiv@bexp,w
  7015  0962  1903               	btfsc	3,2
  7016  0963  2965               	goto	u3871
  7017  0964  2966               	goto	u3870
  7018  0965                     u3871:
  7019  0965  2976               	goto	l2731
  7020  0966                     u3870:
  7021  0966                     l2723:
  7022  0966  0A42               	incf	___fldiv@bexp,w
  7023  0967  1D03               	btfss	3,2
  7024  0968  296A               	goto	u3881
  7025  0969  296B               	goto	u3880
  7026  096A                     u3881:
  7027  096A  2973               	goto	l2727
  7028  096B                     u3880:
  7029  096B                     l2725:
  7030  096B  3000               	movlw	0
  7031  096C  00B1               	movwf	___fldiv@b+3
  7032  096D  3000               	movlw	0
  7033  096E  00B0               	movwf	___fldiv@b+2
  7034  096F  3000               	movlw	0
  7035  0970  00AF               	movwf	___fldiv@b+1
  7036  0971  3000               	movlw	0
  7037  0972  00AE               	movwf	___fldiv@b
  7038  0973                     l2727:
  7039  0973  17B0               	bsf	___fldiv@b+2,7
  7040  0974                     l2729:
  7041  0974  01B1               	clrf	___fldiv@b+3
  7042  0975  297E               	goto	l2733
  7043  0976                     l2731:
  7044  0976  3000               	movlw	0
  7045  0977  00B1               	movwf	___fldiv@b+3
  7046  0978  3000               	movlw	0
  7047  0979  00B0               	movwf	___fldiv@b+2
  7048  097A  3000               	movlw	0
  7049  097B  00AF               	movwf	___fldiv@b+1
  7050  097C  3000               	movlw	0
  7051  097D  00AE               	movwf	___fldiv@b
  7052  097E                     l2733:
  7053  097E  082D               	movf	___fldiv@a+3,w
  7054  097F  3980               	andlw	128
  7055  0980  00B2               	movwf	??___fldiv
  7056  0981  0832               	movf	??___fldiv,w
  7057  0982  06BB               	xorwf	___fldiv@sign,f
  7058  0983                     l2735:
  7059  0983  082D               	movf	___fldiv@a+3,w
  7060  0984  00B2               	movwf	??___fldiv
  7061  0985  0732               	addwf	??___fldiv,w
  7062  0986  00B3               	movwf	??___fldiv+1
  7063  0987  0833               	movf	??___fldiv+1,w
  7064  0988  00C3               	movwf	___fldiv@aexp
  7065  0989                     l2737:
  7066  0989  1FAC               	btfss	___fldiv@a+2,7
  7067  098A  298C               	goto	u3891
  7068  098B  298D               	goto	u3890
  7069  098C                     u3891:
  7070  098C  298E               	goto	l2741
  7071  098D                     u3890:
  7072  098D                     l2739:
  7073  098D  1443               	bsf	___fldiv@aexp,0
  7074  098E                     l2741:
  7075  098E  0843               	movf	___fldiv@aexp,w
  7076  098F  1903               	btfsc	3,2
  7077  0990  2992               	goto	u3901
  7078  0991  2993               	goto	u3900
  7079  0992                     u3901:
  7080  0992  29A3               	goto	l2751
  7081  0993                     u3900:
  7082  0993                     l2743:
  7083  0993  0A43               	incf	___fldiv@aexp,w
  7084  0994  1D03               	btfss	3,2
  7085  0995  2997               	goto	u3911
  7086  0996  2998               	goto	u3910
  7087  0997                     u3911:
  7088  0997  29A0               	goto	l2747
  7089  0998                     u3910:
  7090  0998                     l2745:
  7091  0998  3000               	movlw	0
  7092  0999  00AD               	movwf	___fldiv@a+3
  7093  099A  3000               	movlw	0
  7094  099B  00AC               	movwf	___fldiv@a+2
  7095  099C  3000               	movlw	0
  7096  099D  00AB               	movwf	___fldiv@a+1
  7097  099E  3000               	movlw	0
  7098  099F  00AA               	movwf	___fldiv@a
  7099  09A0                     l2747:
  7100  09A0  17AC               	bsf	___fldiv@a+2,7
  7101  09A1                     l2749:
  7102  09A1  01AD               	clrf	___fldiv@a+3
  7103  09A2  29AB               	goto	l665
  7104  09A3                     l2751:
  7105  09A3  3000               	movlw	0
  7106  09A4  00AD               	movwf	___fldiv@a+3
  7107  09A5  3000               	movlw	0
  7108  09A6  00AC               	movwf	___fldiv@a+2
  7109  09A7  3000               	movlw	0
  7110  09A8  00AB               	movwf	___fldiv@a+1
  7111  09A9  3000               	movlw	0
  7112  09AA  00AA               	movwf	___fldiv@a
  7113  09AB                     l665:
  7114  09AB  082D               	movf	___fldiv@a+3,w
  7115  09AC  042C               	iorwf	___fldiv@a+2,w
  7116  09AD  042B               	iorwf	___fldiv@a+1,w
  7117  09AE  042A               	iorwf	___fldiv@a,w
  7118  09AF  1D03               	skipz
  7119  09B0  29B2               	goto	u3921
  7120  09B1  29B3               	goto	u3920
  7121  09B2                     u3921:
  7122  09B2  29CC               	goto	l2761
  7123  09B3                     u3920:
  7124  09B3                     l2753:
  7125  09B3  3000               	movlw	0
  7126  09B4  00B1               	movwf	___fldiv@b+3
  7127  09B5  3000               	movlw	0
  7128  09B6  00B0               	movwf	___fldiv@b+2
  7129  09B7  3000               	movlw	0
  7130  09B8  00AF               	movwf	___fldiv@b+1
  7131  09B9  3000               	movlw	0
  7132  09BA  00AE               	movwf	___fldiv@b
  7133  09BB  3080               	movlw	128
  7134  09BC  04B0               	iorwf	___fldiv@b+2,f
  7135  09BD  307F               	movlw	127
  7136  09BE  04B1               	iorwf	___fldiv@b+3,f
  7137  09BF                     l2755:
  7138  09BF  083B               	movf	___fldiv@sign,w
  7139  09C0  00B2               	movwf	??___fldiv
  7140  09C1  0832               	movf	??___fldiv,w
  7141  09C2  04B1               	iorwf	___fldiv@b+3,f
  7142  09C3                     l2757:
  7143  09C3  0831               	movf	___fldiv@b+3,w
  7144  09C4  00AD               	movwf	?___fldiv+3
  7145  09C5  0830               	movf	___fldiv@b+2,w
  7146  09C6  00AC               	movwf	?___fldiv+2
  7147  09C7  082F               	movf	___fldiv@b+1,w
  7148  09C8  00AB               	movwf	?___fldiv+1
  7149  09C9  082E               	movf	___fldiv@b,w
  7150  09CA  00AA               	movwf	?___fldiv
  7151  09CB  2B2B               	goto	l667
  7152  09CC                     l2761:
  7153  09CC  0842               	movf	___fldiv@bexp,w
  7154  09CD  1D03               	btfss	3,2
  7155  09CE  29D0               	goto	u3931
  7156  09CF  29D1               	goto	u3930
  7157  09D0                     u3931:
  7158  09D0  29DA               	goto	l2767
  7159  09D1                     u3930:
  7160  09D1                     l2763:
  7161  09D1  3000               	movlw	0
  7162  09D2  00AD               	movwf	?___fldiv+3
  7163  09D3  3000               	movlw	0
  7164  09D4  00AC               	movwf	?___fldiv+2
  7165  09D5  3000               	movlw	0
  7166  09D6  00AB               	movwf	?___fldiv+1
  7167  09D7  3000               	movlw	0
  7168  09D8  00AA               	movwf	?___fldiv
  7169  09D9  2B2B               	goto	l667
  7170  09DA                     l2767:
  7171  09DA  0842               	movf	___fldiv@bexp,w
  7172  09DB  00B2               	movwf	??___fldiv
  7173  09DC  01B3               	clrf	??___fldiv+1
  7174  09DD  0833               	movf	??___fldiv+1,w
  7175  09DE  00B5               	movwf	??___fldiv+3
  7176  09DF  0843               	movf	___fldiv@aexp,w
  7177  09E0  0232               	subwf	??___fldiv,w
  7178  09E1  00B4               	movwf	??___fldiv+2
  7179  09E2  1C03               	skipc
  7180  09E3  03B5               	decf	??___fldiv+3,f
  7181  09E4  0834               	movf	??___fldiv+2,w
  7182  09E5  3E7F               	addlw	127
  7183  09E6  00BC               	movwf	___fldiv@new_exp
  7184  09E7  0835               	movf	??___fldiv+3,w
  7185  09E8  1803               	skipnc
  7186  09E9  3E01               	addlw	1
  7187  09EA  3E00               	addlw	0
  7188  09EB  00BD               	movwf	___fldiv@new_exp+1
  7189  09EC                     l2769:
  7190  09EC  0831               	movf	___fldiv@b+3,w
  7191  09ED  00BA               	movwf	___fldiv@rem+3
  7192  09EE  0830               	movf	___fldiv@b+2,w
  7193  09EF  00B9               	movwf	___fldiv@rem+2
  7194  09F0  082F               	movf	___fldiv@b+1,w
  7195  09F1  00B8               	movwf	___fldiv@rem+1
  7196  09F2  082E               	movf	___fldiv@b,w
  7197  09F3  00B7               	movwf	___fldiv@rem
  7198  09F4                     l2771:
  7199  09F4  3000               	movlw	0
  7200  09F5  00B1               	movwf	___fldiv@b+3
  7201  09F6  3000               	movlw	0
  7202  09F7  00B0               	movwf	___fldiv@b+2
  7203  09F8  3000               	movlw	0
  7204  09F9  00AF               	movwf	___fldiv@b+1
  7205  09FA  3000               	movlw	0
  7206  09FB  00AE               	movwf	___fldiv@b
  7207  09FC                     l2773:
  7208  09FC  3000               	movlw	0
  7209  09FD  00C1               	movwf	___fldiv@grs+3
  7210  09FE  3000               	movlw	0
  7211  09FF  00C0               	movwf	___fldiv@grs+2
  7212  0A00  3000               	movlw	0
  7213  0A01  00BF               	movwf	___fldiv@grs+1
  7214  0A02  3000               	movlw	0
  7215  0A03  00BE               	movwf	___fldiv@grs
  7216  0A04                     l2775:
  7217  0A04  01C3               	clrf	___fldiv@aexp
  7218  0A05  2A50               	goto	l2795
  7219  0A06                     l2777:
  7220  0A06  0843               	movf	___fldiv@aexp,w
  7221  0A07  1903               	btfsc	3,2
  7222  0A08  2A0A               	goto	u3941
  7223  0A09  2A0B               	goto	u3940
  7224  0A0A                     u3941:
  7225  0A0A  2A2B               	goto	l2787
  7226  0A0B                     u3940:
  7227  0A0B                     l2779:
  7228  0A0B  3001               	movlw	1
  7229  0A0C  00B2               	movwf	??___fldiv
  7230  0A0D                     u3955:
  7231  0A0D  1003               	clrc
  7232  0A0E  0DB7               	rlf	___fldiv@rem,f
  7233  0A0F  0DB8               	rlf	___fldiv@rem+1,f
  7234  0A10  0DB9               	rlf	___fldiv@rem+2,f
  7235  0A11  0DBA               	rlf	___fldiv@rem+3,f
  7236  0A12  0BB2               	decfsz	??___fldiv,f
  7237  0A13  2A0D               	goto	u3955
  7238  0A14  3001               	movlw	1
  7239  0A15  00B2               	movwf	??___fldiv
  7240  0A16                     u3965:
  7241  0A16  1003               	clrc
  7242  0A17  0DAE               	rlf	___fldiv@b,f
  7243  0A18  0DAF               	rlf	___fldiv@b+1,f
  7244  0A19  0DB0               	rlf	___fldiv@b+2,f
  7245  0A1A  0DB1               	rlf	___fldiv@b+3,f
  7246  0A1B  0BB2               	decfsz	??___fldiv,f
  7247  0A1C  2A16               	goto	u3965
  7248  0A1D                     l2781:
  7249  0A1D  1FC1               	btfss	___fldiv@grs+3,7
  7250  0A1E  2A20               	goto	u3971
  7251  0A1F  2A21               	goto	u3970
  7252  0A20                     u3971:
  7253  0A20  2A22               	goto	l2785
  7254  0A21                     u3970:
  7255  0A21                     l2783:
  7256  0A21  142E               	bsf	___fldiv@b,0
  7257  0A22                     l2785:
  7258  0A22  3001               	movlw	1
  7259  0A23  00B2               	movwf	??___fldiv
  7260  0A24                     u3985:
  7261  0A24  1003               	clrc
  7262  0A25  0DBE               	rlf	___fldiv@grs,f
  7263  0A26  0DBF               	rlf	___fldiv@grs+1,f
  7264  0A27  0DC0               	rlf	___fldiv@grs+2,f
  7265  0A28  0DC1               	rlf	___fldiv@grs+3,f
  7266  0A29  0BB2               	decfsz	??___fldiv,f
  7267  0A2A  2A24               	goto	u3985
  7268  0A2B                     l2787:
  7269  0A2B  082D               	movf	___fldiv@a+3,w
  7270  0A2C  023A               	subwf	___fldiv@rem+3,w
  7271  0A2D  1D03               	skipz
  7272  0A2E  2A39               	goto	u3995
  7273  0A2F  082C               	movf	___fldiv@a+2,w
  7274  0A30  0239               	subwf	___fldiv@rem+2,w
  7275  0A31  1D03               	skipz
  7276  0A32  2A39               	goto	u3995
  7277  0A33  082B               	movf	___fldiv@a+1,w
  7278  0A34  0238               	subwf	___fldiv@rem+1,w
  7279  0A35  1D03               	skipz
  7280  0A36  2A39               	goto	u3995
  7281  0A37  082A               	movf	___fldiv@a,w
  7282  0A38  0237               	subwf	___fldiv@rem,w
  7283  0A39                     u3995:
  7284  0A39  1C03               	skipc
  7285  0A3A  2A3C               	goto	u3991
  7286  0A3B  2A3D               	goto	u3990
  7287  0A3C                     u3991:
  7288  0A3C  2A4C               	goto	l2793
  7289  0A3D                     u3990:
  7290  0A3D                     l2789:
  7291  0A3D  1741               	bsf	___fldiv@grs+3,6
  7292  0A3E                     l2791:
  7293  0A3E  082A               	movf	___fldiv@a,w
  7294  0A3F  02B7               	subwf	___fldiv@rem,f
  7295  0A40  082B               	movf	___fldiv@a+1,w
  7296  0A41  1C03               	skipc
  7297  0A42  0F2B               	incfsz	___fldiv@a+1,w
  7298  0A43  02B8               	subwf	___fldiv@rem+1,f
  7299  0A44  082C               	movf	___fldiv@a+2,w
  7300  0A45  1C03               	skipc
  7301  0A46  0F2C               	incfsz	___fldiv@a+2,w
  7302  0A47  02B9               	subwf	___fldiv@rem+2,f
  7303  0A48  082D               	movf	___fldiv@a+3,w
  7304  0A49  1C03               	skipc
  7305  0A4A  0F2D               	incfsz	___fldiv@a+3,w
  7306  0A4B  02BA               	subwf	___fldiv@rem+3,f
  7307  0A4C                     l2793:
  7308  0A4C  3001               	movlw	1
  7309  0A4D  00B2               	movwf	??___fldiv
  7310  0A4E  0832               	movf	??___fldiv,w
  7311  0A4F  07C3               	addwf	___fldiv@aexp,f
  7312  0A50                     l2795:
  7313  0A50  301A               	movlw	26
  7314  0A51  0243               	subwf	___fldiv@aexp,w
  7315  0A52  1C03               	skipc
  7316  0A53  2A55               	goto	u4001
  7317  0A54  2A56               	goto	u4000
  7318  0A55                     u4001:
  7319  0A55  2A06               	goto	l2777
  7320  0A56                     u4000:
  7321  0A56                     l2797:
  7322  0A56  083A               	movf	___fldiv@rem+3,w
  7323  0A57  0439               	iorwf	___fldiv@rem+2,w
  7324  0A58  0438               	iorwf	___fldiv@rem+1,w
  7325  0A59  0437               	iorwf	___fldiv@rem,w
  7326  0A5A  1903               	skipnz
  7327  0A5B  2A5D               	goto	u4011
  7328  0A5C  2A5E               	goto	u4010
  7329  0A5D                     u4011:
  7330  0A5D  2A7D               	goto	l2811
  7331  0A5E                     u4010:
  7332  0A5E                     l2799:
  7333  0A5E  143E               	bsf	___fldiv@grs,0
  7334  0A5F  2A7D               	goto	l2811
  7335  0A60                     l2801:
  7336  0A60  3001               	movlw	1
  7337  0A61  00B2               	movwf	??___fldiv
  7338  0A62                     u4025:
  7339  0A62  1003               	clrc
  7340  0A63  0DAE               	rlf	___fldiv@b,f
  7341  0A64  0DAF               	rlf	___fldiv@b+1,f
  7342  0A65  0DB0               	rlf	___fldiv@b+2,f
  7343  0A66  0DB1               	rlf	___fldiv@b+3,f
  7344  0A67  0BB2               	decfsz	??___fldiv,f
  7345  0A68  2A62               	goto	u4025
  7346  0A69                     l2803:
  7347  0A69  1FC1               	btfss	___fldiv@grs+3,7
  7348  0A6A  2A6C               	goto	u4031
  7349  0A6B  2A6D               	goto	u4030
  7350  0A6C                     u4031:
  7351  0A6C  2A6E               	goto	l2807
  7352  0A6D                     u4030:
  7353  0A6D                     l2805:
  7354  0A6D  142E               	bsf	___fldiv@b,0
  7355  0A6E                     l2807:
  7356  0A6E  3001               	movlw	1
  7357  0A6F  00B2               	movwf	??___fldiv
  7358  0A70                     u4045:
  7359  0A70  1003               	clrc
  7360  0A71  0DBE               	rlf	___fldiv@grs,f
  7361  0A72  0DBF               	rlf	___fldiv@grs+1,f
  7362  0A73  0DC0               	rlf	___fldiv@grs+2,f
  7363  0A74  0DC1               	rlf	___fldiv@grs+3,f
  7364  0A75  0BB2               	decfsz	??___fldiv,f
  7365  0A76  2A70               	goto	u4045
  7366  0A77                     l2809:
  7367  0A77  30FF               	movlw	255
  7368  0A78  07BC               	addwf	___fldiv@new_exp,f
  7369  0A79  1803               	skipnc
  7370  0A7A  0ABD               	incf	___fldiv@new_exp+1,f
  7371  0A7B  30FF               	movlw	255
  7372  0A7C  07BD               	addwf	___fldiv@new_exp+1,f
  7373  0A7D                     l2811:
  7374  0A7D  1FB0               	btfss	___fldiv@b+2,7
  7375  0A7E  2A80               	goto	u4051
  7376  0A7F  2A81               	goto	u4050
  7377  0A80                     u4051:
  7378  0A80  2A60               	goto	l2801
  7379  0A81                     u4050:
  7380  0A81                     l2813:
  7381  0A81  01C3               	clrf	___fldiv@aexp
  7382  0A82                     l2815:
  7383  0A82  1FC1               	btfss	___fldiv@grs+3,7
  7384  0A83  2A85               	goto	u4061
  7385  0A84  2A86               	goto	u4060
  7386  0A85                     u4061:
  7387  0A85  2AA2               	goto	l2823
  7388  0A86                     u4060:
  7389  0A86                     l2817:
  7390  0A86  30FF               	movlw	255
  7391  0A87  053E               	andwf	___fldiv@grs,w
  7392  0A88  00B2               	movwf	??___fldiv
  7393  0A89  30FF               	movlw	255
  7394  0A8A  053F               	andwf	___fldiv@grs+1,w
  7395  0A8B  00B3               	movwf	??___fldiv+1
  7396  0A8C  30FF               	movlw	255
  7397  0A8D  0540               	andwf	___fldiv@grs+2,w
  7398  0A8E  00B4               	movwf	??___fldiv+2
  7399  0A8F  307F               	movlw	127
  7400  0A90  0541               	andwf	___fldiv@grs+3,w
  7401  0A91  00B5               	movwf	??___fldiv+3
  7402  0A92  0835               	movf	??___fldiv+3,w
  7403  0A93  0434               	iorwf	??___fldiv+2,w
  7404  0A94  0433               	iorwf	??___fldiv+1,w
  7405  0A95  0432               	iorwf	??___fldiv,w
  7406  0A96  1903               	skipnz
  7407  0A97  2A99               	goto	u4071
  7408  0A98  2A9A               	goto	u4070
  7409  0A99                     u4071:
  7410  0A99  2A9D               	goto	l681
  7411  0A9A                     u4070:
  7412  0A9A                     l2819:
  7413  0A9A  01C3               	clrf	___fldiv@aexp
  7414  0A9B  0AC3               	incf	___fldiv@aexp,f
  7415  0A9C  2AA2               	goto	l2823
  7416  0A9D                     l681:
  7417  0A9D  1C2E               	btfss	___fldiv@b,0
  7418  0A9E  2AA0               	goto	u4081
  7419  0A9F  2AA1               	goto	u4080
  7420  0AA0                     u4081:
  7421  0AA0  2AA2               	goto	l2823
  7422  0AA1                     u4080:
  7423  0AA1  2A9A               	goto	l2819
  7424  0AA2                     l2823:
  7425  0AA2  0843               	movf	___fldiv@aexp,w
  7426  0AA3  1903               	btfsc	3,2
  7427  0AA4  2AA6               	goto	u4091
  7428  0AA5  2AA7               	goto	u4090
  7429  0AA6                     u4091:
  7430  0AA6  2AD8               	goto	l2833
  7431  0AA7                     u4090:
  7432  0AA7                     l2825:
  7433  0AA7  3001               	movlw	1
  7434  0AA8  07AE               	addwf	___fldiv@b,f
  7435  0AA9  3000               	movlw	0
  7436  0AAA  1803               	skipnc
  7437  0AAB  3001               	movlw	1
  7438  0AAC  07AF               	addwf	___fldiv@b+1,f
  7439  0AAD  3000               	movlw	0
  7440  0AAE  1803               	skipnc
  7441  0AAF  3001               	movlw	1
  7442  0AB0  07B0               	addwf	___fldiv@b+2,f
  7443  0AB1  3000               	movlw	0
  7444  0AB2  1803               	skipnc
  7445  0AB3  3001               	movlw	1
  7446  0AB4  07B1               	addwf	___fldiv@b+3,f
  7447  0AB5                     l2827:
  7448  0AB5  1C31               	btfss	___fldiv@b+3,0
  7449  0AB6  2AB8               	goto	u4101
  7450  0AB7  2AB9               	goto	u4100
  7451  0AB8                     u4101:
  7452  0AB8  2AD8               	goto	l2833
  7453  0AB9                     u4100:
  7454  0AB9                     l2829:
  7455  0AB9  082E               	movf	___fldiv@b,w
  7456  0ABA  00B2               	movwf	??___fldiv
  7457  0ABB  082F               	movf	___fldiv@b+1,w
  7458  0ABC  00B3               	movwf	??___fldiv+1
  7459  0ABD  0830               	movf	___fldiv@b+2,w
  7460  0ABE  00B4               	movwf	??___fldiv+2
  7461  0ABF  0831               	movf	___fldiv@b+3,w
  7462  0AC0  00B5               	movwf	??___fldiv+3
  7463  0AC1  3001               	movlw	1
  7464  0AC2  00B6               	movwf	??___fldiv+4
  7465  0AC3                     u4115:
  7466  0AC3  0D35               	rlf	??___fldiv+3,w
  7467  0AC4  0CB5               	rrf	??___fldiv+3,f
  7468  0AC5  0CB4               	rrf	??___fldiv+2,f
  7469  0AC6  0CB3               	rrf	??___fldiv+1,f
  7470  0AC7  0CB2               	rrf	??___fldiv,f
  7471  0AC8                     u4110:
  7472  0AC8  0BB6               	decfsz	??___fldiv+4,f
  7473  0AC9  2AC3               	goto	u4115
  7474  0ACA  0835               	movf	??___fldiv+3,w
  7475  0ACB  00B1               	movwf	___fldiv@b+3
  7476  0ACC  0834               	movf	??___fldiv+2,w
  7477  0ACD  00B0               	movwf	___fldiv@b+2
  7478  0ACE  0833               	movf	??___fldiv+1,w
  7479  0ACF  00AF               	movwf	___fldiv@b+1
  7480  0AD0  0832               	movf	??___fldiv,w
  7481  0AD1  00AE               	movwf	___fldiv@b
  7482  0AD2                     l2831:
  7483  0AD2  3001               	movlw	1
  7484  0AD3  07BC               	addwf	___fldiv@new_exp,f
  7485  0AD4  1803               	skipnc
  7486  0AD5  0ABD               	incf	___fldiv@new_exp+1,f
  7487  0AD6  3000               	movlw	0
  7488  0AD7  07BD               	addwf	___fldiv@new_exp+1,f
  7489  0AD8                     l2833:
  7490  0AD8  083D               	movf	___fldiv@new_exp+1,w
  7491  0AD9  3A80               	xorlw	128
  7492  0ADA  00FF               	movwf	btemp+1
  7493  0ADB  3080               	movlw	128
  7494  0ADC  027F               	subwf	btemp+1,w
  7495  0ADD  1D03               	skipz
  7496  0ADE  2AE1               	goto	u4125
  7497  0ADF  30FF               	movlw	255
  7498  0AE0  023C               	subwf	___fldiv@new_exp,w
  7499  0AE1                     u4125:
  7500  0AE1  1C03               	skipc
  7501  0AE2  2AE4               	goto	u4121
  7502  0AE3  2AE5               	goto	u4120
  7503  0AE4                     u4121:
  7504  0AE4  2AF3               	goto	l2837
  7505  0AE5                     u4120:
  7506  0AE5                     l2835:
  7507  0AE5  30FF               	movlw	255
  7508  0AE6  1283               	bcf	3,5	;RP0=0, select bank0
  7509  0AE7  1303               	bcf	3,6	;RP1=0, select bank0
  7510  0AE8  00BC               	movwf	___fldiv@new_exp
  7511  0AE9  3000               	movlw	0
  7512  0AEA  00BD               	movwf	___fldiv@new_exp+1
  7513  0AEB  3000               	movlw	0
  7514  0AEC  00B1               	movwf	___fldiv@b+3
  7515  0AED  3000               	movlw	0
  7516  0AEE  00B0               	movwf	___fldiv@b+2
  7517  0AEF  3000               	movlw	0
  7518  0AF0  00AF               	movwf	___fldiv@b+1
  7519  0AF1  3000               	movlw	0
  7520  0AF2  00AE               	movwf	___fldiv@b
  7521  0AF3                     l2837:
  7522  0AF3  1283               	bcf	3,5	;RP0=0, select bank0
  7523  0AF4  1303               	bcf	3,6	;RP1=0, select bank0
  7524  0AF5  083D               	movf	___fldiv@new_exp+1,w
  7525  0AF6  3A80               	xorlw	128
  7526  0AF7  00FF               	movwf	btemp+1
  7527  0AF8  3080               	movlw	128
  7528  0AF9  027F               	subwf	btemp+1,w
  7529  0AFA  1D03               	skipz
  7530  0AFB  2AFE               	goto	u4135
  7531  0AFC  3001               	movlw	1
  7532  0AFD  023C               	subwf	___fldiv@new_exp,w
  7533  0AFE                     u4135:
  7534  0AFE  1803               	skipnc
  7535  0AFF  2B01               	goto	u4131
  7536  0B00  2B02               	goto	u4130
  7537  0B01                     u4131:
  7538  0B01  2B0F               	goto	l687
  7539  0B02                     u4130:
  7540  0B02                     l2839:
  7541  0B02  1283               	bcf	3,5	;RP0=0, select bank0
  7542  0B03  1303               	bcf	3,6	;RP1=0, select bank0
  7543  0B04  01BC               	clrf	___fldiv@new_exp
  7544  0B05  01BD               	clrf	___fldiv@new_exp+1
  7545  0B06                     l2841:
  7546  0B06  3000               	movlw	0
  7547  0B07  00B1               	movwf	___fldiv@b+3
  7548  0B08  3000               	movlw	0
  7549  0B09  00B0               	movwf	___fldiv@b+2
  7550  0B0A  3000               	movlw	0
  7551  0B0B  00AF               	movwf	___fldiv@b+1
  7552  0B0C  3000               	movlw	0
  7553  0B0D  00AE               	movwf	___fldiv@b
  7554  0B0E                     l2843:
  7555  0B0E  01BB               	clrf	___fldiv@sign
  7556  0B0F                     l687:
  7557  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  7558  0B10  1303               	bcf	3,6	;RP1=0, select bank0
  7559  0B11  083C               	movf	___fldiv@new_exp,w
  7560  0B12  00B2               	movwf	??___fldiv
  7561  0B13  0832               	movf	??___fldiv,w
  7562  0B14  00C2               	movwf	___fldiv@bexp
  7563  0B15                     l2845:
  7564  0B15  1C42               	btfss	___fldiv@bexp,0
  7565  0B16  2B18               	goto	u4141
  7566  0B17  2B19               	goto	u4140
  7567  0B18                     u4141:
  7568  0B18  2B1B               	goto	l2849
  7569  0B19                     u4140:
  7570  0B19                     l2847:
  7571  0B19  17B0               	bsf	___fldiv@b+2,7
  7572  0B1A  2B1F               	goto	l689
  7573  0B1B                     l2849:
  7574  0B1B  307F               	movlw	127
  7575  0B1C  00B2               	movwf	??___fldiv
  7576  0B1D  0832               	movf	??___fldiv,w
  7577  0B1E  05B0               	andwf	___fldiv@b+2,f
  7578  0B1F                     l689:
  7579  0B1F  0842               	movf	___fldiv@bexp,w
  7580  0B20  00B2               	movwf	??___fldiv
  7581  0B21  1003               	clrc
  7582  0B22  0C32               	rrf	??___fldiv,w
  7583  0B23  00B3               	movwf	??___fldiv+1
  7584  0B24  0833               	movf	??___fldiv+1,w
  7585  0B25  00B1               	movwf	___fldiv@b+3
  7586  0B26  083B               	movf	___fldiv@sign,w
  7587  0B27  00B2               	movwf	??___fldiv
  7588  0B28  0832               	movf	??___fldiv,w
  7589  0B29  04B1               	iorwf	___fldiv@b+3,f
  7590  0B2A  29C3               	goto	l2757
  7591  0B2B                     l667:
  7592  0B2B  0008               	return
  7593  0B2C                     __end_of___fldiv:
  7594                           
  7595                           	psect	text21
  7596  1336                     __ptext21:	
  7597 ;; *************** function _Rinit *****************
  7598 ;; Defined at:
  7599 ;;		line 43 in file "I2C.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;		None
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;		None
  7604 ;; Return value:  Size  Location     Type
  7605 ;;                  1    wreg      void 
  7606 ;; Registers used:
  7607 ;;		wreg, status,2, status,0, pclath, cstack
  7608 ;; Tracked objects:
  7609 ;;		On entry : 0/0
  7610 ;;		On exit  : 0/0
  7611 ;;		Unchanged: 0/0
  7612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7613 ;;      Params:         0       0       0       0       0
  7614 ;;      Locals:         0       0       0       0       0
  7615 ;;      Temps:          0       0       0       0       0
  7616 ;;      Totals:         0       0       0       0       0
  7617 ;;Total ram usage:        0 bytes
  7618 ;; Hardware stack levels used:    1
  7619 ;; Hardware stack levels required when called:    2
  7620 ;; This function calls:
  7621 ;;		_wait
  7622 ;; This function is called by:
  7623 ;;		_giro_read
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           
  7627                           
  7628                           ;psect for function _Rinit
  7629  1336                     _Rinit:
  7630  1336                     l2667:	
  7631                           ;incstack = 0
  7632                           ; Regs used in _Rinit: [wreg+status,2+status,0+pclath+cstack]
  7633                           
  7634                           
  7635                           ;I2C.c: 45:     wait();
  7636  1336  160A  118A  2375  160A  118A  	fcall	_wait
  7637  133B                     l2669:
  7638                           
  7639                           ;I2C.c: 46:     RSEN = 1;
  7640  133B  1683               	bsf	3,5	;RP0=1, select bank1
  7641  133C  1303               	bcf	3,6	;RP1=0, select bank1
  7642  133D  1491               	bsf	17,1	;volatile
  7643  133E                     l109:
  7644  133E  0008               	return
  7645  133F                     __end_of_Rinit:
  7646                           
  7647                           	psect	text22
  7648  1692                     __ptext22:	
  7649 ;; *************** function _giro_init *****************
  7650 ;; Defined at:
  7651 ;;		line 19 in file "GIRO.c"
  7652 ;; Parameters:    Size  Location     Type
  7653 ;;		None
  7654 ;; Auto vars:     Size  Location     Type
  7655 ;;		None
  7656 ;; Return value:  Size  Location     Type
  7657 ;;                  1    wreg      void 
  7658 ;; Registers used:
  7659 ;;		wreg, status,2, status,0, pclath, cstack
  7660 ;; Tracked objects:
  7661 ;;		On entry : 0/0
  7662 ;;		On exit  : 0/0
  7663 ;;		Unchanged: 0/0
  7664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7665 ;;      Params:         0       0       0       0       0
  7666 ;;      Locals:         0       0       0       0       0
  7667 ;;      Temps:          0       0       0       0       0
  7668 ;;      Totals:         0       0       0       0       0
  7669 ;;Total ram usage:        0 bytes
  7670 ;; Hardware stack levels used:    1
  7671 ;; Hardware stack levels required when called:    4
  7672 ;; This function calls:
  7673 ;;		_config_i2cmas
  7674 ;;		_config_us
  7675 ;;		_i2c_init
  7676 ;;		_mas_write
  7677 ;;		_stop
  7678 ;; This function is called by:
  7679 ;;		_main
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           
  7684                           ;psect for function _giro_init
  7685  1692                     _giro_init:
  7686  1692                     l3289:	
  7687                           ;incstack = 0
  7688                           ; Regs used in _giro_init: [wreg+status,2+status,0+pclath+cstack]
  7689                           
  7690                           
  7691                           ;GIRO.c: 21:     config_i2cmas();
  7692  1692  160A  118A  2368  160A  118A  	fcall	_config_i2cmas
  7693                           
  7694                           ;GIRO.c: 22:     config_us(9600, 1);
  7695  1697  3000               	movlw	0
  7696  1698  1283               	bcf	3,5	;RP0=0, select bank0
  7697  1699  1303               	bcf	3,6	;RP1=0, select bank0
  7698  169A  00AB               	movwf	config_us@baud_rate+3
  7699  169B  3000               	movlw	0
  7700  169C  00AA               	movwf	config_us@baud_rate+2
  7701  169D  3025               	movlw	37
  7702  169E  00A9               	movwf	config_us@baud_rate+1
  7703  169F  3080               	movlw	128
  7704  16A0  00A8               	movwf	config_us@baud_rate
  7705  16A1  01AC               	clrf	config_us@BRGH
  7706  16A2  0AAC               	incf	config_us@BRGH,f
  7707  16A3  120A  158A  2006  160A  118A  	fcall	_config_us
  7708                           
  7709                           ;GIRO.c: 26:     i2c_init(0XD0);
  7710  16A8  30D0               	movlw	208
  7711  16A9  160A  118A  23A1  160A  118A  	fcall	_i2c_init
  7712                           
  7713                           ;GIRO.c: 27:     mas_write(0x6B);
  7714  16AE  306B               	movlw	107
  7715  16AF  160A  118A  2391  160A  118A  	fcall	_mas_write
  7716                           
  7717                           ;GIRO.c: 28:     mas_write(0x01);
  7718  16B4  3001               	movlw	1
  7719  16B5  160A  118A  2391  160A  118A  	fcall	_mas_write
  7720                           
  7721                           ;GIRO.c: 29:     stop();
  7722  16BA  160A  118A  232D  160A  118A  	fcall	_stop
  7723                           
  7724                           ;GIRO.c: 33:     i2c_init(0XD0);
  7725  16BF  30D0               	movlw	208
  7726  16C0  160A  118A  23A1  160A  118A  	fcall	_i2c_init
  7727                           
  7728                           ;GIRO.c: 34:     mas_write(0x00);
  7729  16C5  3000               	movlw	0
  7730  16C6  160A  118A  2391  160A  118A  	fcall	_mas_write
  7731                           
  7732                           ;GIRO.c: 35:     stop();
  7733  16CB  160A  118A  232D  160A  118A  	fcall	_stop
  7734                           
  7735                           ;GIRO.c: 38:     i2c_init(0XD0);
  7736  16D0  30D0               	movlw	208
  7737  16D1  160A  118A  23A1  160A  118A  	fcall	_i2c_init
  7738                           
  7739                           ;GIRO.c: 39:     mas_write(0x19);
  7740  16D6  3019               	movlw	25
  7741  16D7  160A  118A  2391  160A  118A  	fcall	_mas_write
  7742                           
  7743                           ;GIRO.c: 40:     mas_write(0x08);
  7744  16DC  3008               	movlw	8
  7745  16DD  160A  118A  2391  160A  118A  	fcall	_mas_write
  7746                           
  7747                           ;GIRO.c: 41:     stop();
  7748  16E2  160A  118A  232D  160A  118A  	fcall	_stop
  7749                           
  7750                           ;GIRO.c: 44:     i2c_init(0XD0);
  7751  16E7  30D0               	movlw	208
  7752  16E8  160A  118A  23A1  160A  118A  	fcall	_i2c_init
  7753                           
  7754                           ;GIRO.c: 45:     mas_write(0x1A);
  7755  16ED  301A               	movlw	26
  7756  16EE  160A  118A  2391  160A  118A  	fcall	_mas_write
  7757                           
  7758                           ;GIRO.c: 46:     mas_write(0x00);
  7759  16F3  3000               	movlw	0
  7760  16F4  160A  118A  2391  160A  118A  	fcall	_mas_write
  7761                           
  7762                           ;GIRO.c: 47:     stop();
  7763  16F9  160A  118A  232D  160A  118A  	fcall	_stop
  7764                           
  7765                           ;GIRO.c: 49:     i2c_init(0XD0);
  7766  16FE  30D0               	movlw	208
  7767  16FF  160A  118A  23A1  160A  118A  	fcall	_i2c_init
  7768                           
  7769                           ;GIRO.c: 50:     mas_write(0x1B);
  7770  1704  301B               	movlw	27
  7771  1705  160A  118A  2391  160A  118A  	fcall	_mas_write
  7772                           
  7773                           ;GIRO.c: 51:     mas_write(0x00);
  7774  170A  3000               	movlw	0
  7775  170B  160A  118A  2391  160A  118A  	fcall	_mas_write
  7776                           
  7777                           ;GIRO.c: 52:     stop();
  7778  1710  160A  118A  232D  160A  118A  	fcall	_stop
  7779                           
  7780                           ;GIRO.c: 54:     i2c_init(0XD0);
  7781  1715  30D0               	movlw	208
  7782  1716  160A  118A  23A1  160A  118A  	fcall	_i2c_init
  7783                           
  7784                           ;GIRO.c: 55:     mas_write(0x1C);
  7785  171B  301C               	movlw	28
  7786  171C  160A  118A  2391  160A  118A  	fcall	_mas_write
  7787                           
  7788                           ;GIRO.c: 56:     mas_write(0x00);
  7789  1721  3000               	movlw	0
  7790  1722  160A  118A  2391  160A  118A  	fcall	_mas_write
  7791                           
  7792                           ;GIRO.c: 57:     stop();
  7793  1727  160A  118A  232D  160A  118A  	fcall	_stop
  7794                           
  7795                           ;GIRO.c: 61:     i2c_init(0X68);
  7796  172C  3068               	movlw	104
  7797  172D  160A  118A  23A1  160A  118A  	fcall	_i2c_init
  7798                           
  7799                           ;GIRO.c: 62:     mas_write(0x6C);
  7800  1732  306C               	movlw	108
  7801  1733  160A  118A  2391  160A  118A  	fcall	_mas_write
  7802                           
  7803                           ;GIRO.c: 63:     mas_write(0x00);
  7804  1738  3000               	movlw	0
  7805  1739  160A  118A  2391  160A  118A  	fcall	_mas_write
  7806                           
  7807                           ;GIRO.c: 64:     stop();
  7808  173E  160A  118A  232D  160A  118A  	fcall	_stop
  7809  1743                     l172:
  7810  1743  0008               	return
  7811  1744                     __end_of_giro_init:
  7812                           
  7813                           	psect	text23
  7814  132D                     __ptext23:	
  7815 ;; *************** function _stop *****************
  7816 ;; Defined at:
  7817 ;;		line 49 in file "I2C.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;		None
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;		None
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  1    wreg      void 
  7824 ;; Registers used:
  7825 ;;		wreg, status,2, status,0, pclath, cstack
  7826 ;; Tracked objects:
  7827 ;;		On entry : 0/0
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7831 ;;      Params:         0       0       0       0       0
  7832 ;;      Locals:         0       0       0       0       0
  7833 ;;      Temps:          0       0       0       0       0
  7834 ;;      Totals:         0       0       0       0       0
  7835 ;;Total ram usage:        0 bytes
  7836 ;; Hardware stack levels used:    1
  7837 ;; Hardware stack levels required when called:    2
  7838 ;; This function calls:
  7839 ;;		_wait
  7840 ;; This function is called by:
  7841 ;;		_giro_init
  7842 ;;		_giro_read
  7843 ;; This function uses a non-reentrant model
  7844 ;;
  7845                           
  7846                           
  7847                           ;psect for function _stop
  7848  132D                     _stop:
  7849  132D                     l2671:	
  7850                           ;incstack = 0
  7851                           ; Regs used in _stop: [wreg+status,2+status,0+pclath+cstack]
  7852                           
  7853                           
  7854                           ;I2C.c: 51:     wait();
  7855  132D  160A  118A  2375  160A  118A  	fcall	_wait
  7856  1332                     l2673:
  7857                           
  7858                           ;I2C.c: 52:     PEN = 1;
  7859  1332  1683               	bsf	3,5	;RP0=1, select bank1
  7860  1333  1303               	bcf	3,6	;RP1=0, select bank1
  7861  1334  1511               	bsf	17,2	;volatile
  7862  1335                     l112:
  7863  1335  0008               	return
  7864  1336                     __end_of_stop:
  7865                           
  7866                           	psect	text24
  7867  13A1                     __ptext24:	
  7868 ;; *************** function _i2c_init *****************
  7869 ;; Defined at:
  7870 ;;		line 36 in file "I2C.c"
  7871 ;; Parameters:    Size  Location     Type
  7872 ;;  d               1    wreg     unsigned char 
  7873 ;; Auto vars:     Size  Location     Type
  7874 ;;  d               1    4[COMMON] unsigned char 
  7875 ;; Return value:  Size  Location     Type
  7876 ;;                  1    wreg      void 
  7877 ;; Registers used:
  7878 ;;		wreg, status,2, status,0, pclath, cstack
  7879 ;; Tracked objects:
  7880 ;;		On entry : 0/0
  7881 ;;		On exit  : 0/0
  7882 ;;		Unchanged: 0/0
  7883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7884 ;;      Params:         0       0       0       0       0
  7885 ;;      Locals:         1       0       0       0       0
  7886 ;;      Temps:          0       0       0       0       0
  7887 ;;      Totals:         1       0       0       0       0
  7888 ;;Total ram usage:        1 bytes
  7889 ;; Hardware stack levels used:    1
  7890 ;; Hardware stack levels required when called:    3
  7891 ;; This function calls:
  7892 ;;		_mas_write
  7893 ;;		_wait
  7894 ;; This function is called by:
  7895 ;;		_giro_init
  7896 ;;		_giro_read
  7897 ;; This function uses a non-reentrant model
  7898 ;;
  7899                           
  7900                           
  7901                           ;psect for function _i2c_init
  7902  13A1                     _i2c_init:
  7903                           
  7904                           ;incstack = 0
  7905                           ; Regs used in _i2c_init: [wreg+status,2+status,0+pclath+cstack]
  7906                           ;i2c_init@d stored from wreg
  7907  13A1  00F4               	movwf	i2c_init@d
  7908  13A2                     l2663:
  7909                           
  7910                           ;I2C.c: 36: void i2c_init(char d);I2C.c: 37: {;I2C.c: 38:     wait();
  7911  13A2  160A  118A  2375  160A  118A  	fcall	_wait
  7912  13A7                     l2665:
  7913                           
  7914                           ;I2C.c: 39:     SEN = 1;
  7915  13A7  1683               	bsf	3,5	;RP0=1, select bank1
  7916  13A8  1303               	bcf	3,6	;RP1=0, select bank1
  7917  13A9  1411               	bsf	17,0	;volatile
  7918                           
  7919                           ;I2C.c: 40:     mas_write(d);
  7920  13AA  0874               	movf	i2c_init@d,w
  7921  13AB  160A  118A  2391  160A  118A  	fcall	_mas_write
  7922  13B0                     l106:
  7923  13B0  0008               	return
  7924  13B1                     __end_of_i2c_init:
  7925                           
  7926                           	psect	text25
  7927  1391                     __ptext25:	
  7928 ;; *************** function _mas_write *****************
  7929 ;; Defined at:
  7930 ;;		line 69 in file "I2C.c"
  7931 ;; Parameters:    Size  Location     Type
  7932 ;;  data            1    wreg     unsigned char 
  7933 ;; Auto vars:     Size  Location     Type
  7934 ;;  data            1    3[COMMON] unsigned char 
  7935 ;; Return value:  Size  Location     Type
  7936 ;;                  1    wreg      unsigned char 
  7937 ;; Registers used:
  7938 ;;		wreg, status,2, status,0, pclath, cstack
  7939 ;; Tracked objects:
  7940 ;;		On entry : 0/0
  7941 ;;		On exit  : 0/0
  7942 ;;		Unchanged: 0/0
  7943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7944 ;;      Params:         0       0       0       0       0
  7945 ;;      Locals:         1       0       0       0       0
  7946 ;;      Temps:          0       0       0       0       0
  7947 ;;      Totals:         1       0       0       0       0
  7948 ;;Total ram usage:        1 bytes
  7949 ;; Hardware stack levels used:    1
  7950 ;; Hardware stack levels required when called:    2
  7951 ;; This function calls:
  7952 ;;		_wait
  7953 ;; This function is called by:
  7954 ;;		_i2c_init
  7955 ;;		_giro_init
  7956 ;;		_giro_read
  7957 ;; This function uses a non-reentrant model
  7958 ;;
  7959                           
  7960                           
  7961                           ;psect for function _mas_write
  7962  1391                     _mas_write:
  7963                           
  7964                           ;incstack = 0
  7965                           ; Regs used in _mas_write: [wreg+status,2+status,0+pclath+cstack]
  7966                           ;mas_write@data stored from wreg
  7967  1391  00F3               	movwf	mas_write@data
  7968  1392                     l2261:
  7969                           
  7970                           ;I2C.c: 69: unsigned char mas_write(unsigned char data);I2C.c: 70: {;I2C.c: 71:     wait
      +                          ();
  7971  1392  160A  118A  2375  160A  118A  	fcall	_wait
  7972  1397                     l2263:
  7973                           
  7974                           ;I2C.c: 72:     SSPBUF = data;
  7975  1397  0873               	movf	mas_write@data,w
  7976  1398  1283               	bcf	3,5	;RP0=0, select bank0
  7977  1399  1303               	bcf	3,6	;RP1=0, select bank0
  7978  139A  0093               	movwf	19	;volatile
  7979  139B                     l127:	
  7980                           ;I2C.c: 73:     while(!SSPIF);
  7981                           
  7982  139B  1D8C               	btfss	12,3	;volatile
  7983  139C  2B9E               	goto	u2841
  7984  139D  2B9F               	goto	u2840
  7985  139E                     u2841:
  7986  139E  2B9B               	goto	l127
  7987  139F                     u2840:
  7988  139F                     l129:
  7989                           
  7990                           ;I2C.c: 74:  SSPIF = 0;
  7991  139F  118C               	bcf	12,3	;volatile
  7992  13A0                     l130:	
  7993                           ;I2C.c: 75:     return ACKSTAT;;	Return value of _mas_write is never used
  7994                           
  7995  13A0  0008               	return
  7996  13A1                     __end_of_mas_write:
  7997                           
  7998                           	psect	text26
  7999  1375                     __ptext26:	
  8000 ;; *************** function _wait *****************
  8001 ;; Defined at:
  8002 ;;		line 25 in file "I2C.c"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;		None
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;		None
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  1    wreg      void 
  8009 ;; Registers used:
  8010 ;;		wreg, status,2
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8016 ;;      Params:         0       0       0       0       0
  8017 ;;      Locals:         0       0       0       0       0
  8018 ;;      Temps:          0       0       0       0       0
  8019 ;;      Totals:         0       0       0       0       0
  8020 ;;Total ram usage:        0 bytes
  8021 ;; Hardware stack levels used:    1
  8022 ;; Hardware stack levels required when called:    1
  8023 ;; This function calls:
  8024 ;;		Nothing
  8025 ;; This function is called by:
  8026 ;;		_i2c_init
  8027 ;;		_Rinit
  8028 ;;		_stop
  8029 ;;		_mas_write
  8030 ;;		_mas_read
  8031 ;;		_mas_init
  8032 ;;		_mas_readbyte
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036                           
  8037                           ;psect for function _wait
  8038  1375                     _wait:
  8039  1375                     l1975:	
  8040                           ;incstack = 0
  8041                           ; Regs used in _wait: [wreg+status,2]
  8042                           
  8043  1375                     l97:	
  8044                           ;I2C.c: 27:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8045                           
  8046  1375  1683               	bsf	3,5	;RP0=1, select bank1
  8047  1376  1303               	bcf	3,6	;RP1=0, select bank1
  8048  1377  1914               	btfsc	20,2	;volatile
  8049  1378  2B7A               	goto	u2131
  8050  1379  2B7B               	goto	u2130
  8051  137A                     u2131:
  8052  137A  2B75               	goto	l97
  8053  137B                     u2130:
  8054  137B                     l1977:
  8055  137B  0811               	movf	17,w	;volatile
  8056  137C  391F               	andlw	31
  8057  137D  1D03               	btfss	3,2
  8058  137E  2B80               	goto	u2141
  8059  137F  2B81               	goto	u2140
  8060  1380                     u2141:
  8061  1380  2B75               	goto	l97
  8062  1381                     u2140:
  8063  1381                     l100:
  8064  1381  0008               	return
  8065  1382                     __end_of_wait:
  8066                           
  8067                           	psect	text27
  8068  0806                     __ptext27:	
  8069 ;; *************** function _config_us *****************
  8070 ;; Defined at:
  8071 ;;		line 11 in file "USART.c"
  8072 ;; Parameters:    Size  Location     Type
  8073 ;;  baud_rate       4    8[BANK0 ] const unsigned long 
  8074 ;;  BRGH            1   12[BANK0 ] const unsigned char 
  8075 ;; Auto vars:     Size  Location     Type
  8076 ;;		None
  8077 ;; Return value:  Size  Location     Type
  8078 ;;                  1    wreg      void 
  8079 ;; Registers used:
  8080 ;;		wreg, status,2, status,0, pclath, cstack
  8081 ;; Tracked objects:
  8082 ;;		On entry : 0/0
  8083 ;;		On exit  : 0/0
  8084 ;;		Unchanged: 0/0
  8085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8086 ;;      Params:         0       5       0       0       0
  8087 ;;      Locals:         0       0       0       0       0
  8088 ;;      Temps:          0       4       0       0       0
  8089 ;;      Totals:         0       9       0       0       0
  8090 ;;Total ram usage:        9 bytes
  8091 ;; Hardware stack levels used:    1
  8092 ;; Hardware stack levels required when called:    2
  8093 ;; This function calls:
  8094 ;;		___lldiv
  8095 ;; This function is called by:
  8096 ;;		_giro_init
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           
  8101                           ;psect for function _config_us
  8102  0806                     _config_us:
  8103  0806                     l3247:	
  8104                           ;incstack = 0
  8105                           ; Regs used in _config_us: [wreg+status,2+status,0+pclath+cstack]
  8106                           
  8107                           
  8108                           ;USART.c: 12:     if (BRGH == 0) {
  8109  0806  1283               	bcf	3,5	;RP0=0, select bank0
  8110  0807  1303               	bcf	3,6	;RP1=0, select bank0
  8111  0808  082C               	movf	config_us@BRGH,w
  8112  0809  1D03               	btfss	3,2
  8113  080A  280C               	goto	u4821
  8114  080B  280D               	goto	u4820
  8115  080C                     u4821:
  8116  080C  283C               	goto	l3253
  8117  080D                     u4820:
  8118  080D                     l3249:
  8119                           
  8120                           ;USART.c: 13:         SPBRG = 4000000/(64*baud_rate) - 1;
  8121  080D  0828               	movf	config_us@baud_rate,w
  8122  080E  00AD               	movwf	??_config_us
  8123  080F  0829               	movf	config_us@baud_rate+1,w
  8124  0810  00AE               	movwf	??_config_us+1
  8125  0811  082A               	movf	config_us@baud_rate+2,w
  8126  0812  00AF               	movwf	??_config_us+2
  8127  0813  082B               	movf	config_us@baud_rate+3,w
  8128  0814  00B0               	movwf	??_config_us+3
  8129  0815  3006               	movlw	6
  8130  0816                     u4835:
  8131  0816  1003               	clrc
  8132  0817  0DAD               	rlf	??_config_us,f
  8133  0818  0DAE               	rlf	??_config_us+1,f
  8134  0819  0DAF               	rlf	??_config_us+2,f
  8135  081A  0DB0               	rlf	??_config_us+3,f
  8136  081B                     u4830:
  8137  081B  3EFF               	addlw	-1
  8138  081C  1D03               	skipz
  8139  081D  2816               	goto	u4835
  8140  081E  0830               	movf	??_config_us+3,w
  8141  081F  00A3               	movwf	___lldiv@divisor+3
  8142  0820  082F               	movf	??_config_us+2,w
  8143  0821  00A2               	movwf	___lldiv@divisor+2
  8144  0822  082E               	movf	??_config_us+1,w
  8145  0823  00A1               	movwf	___lldiv@divisor+1
  8146  0824  082D               	movf	??_config_us,w
  8147  0825  00A0               	movwf	___lldiv@divisor
  8148  0826  3000               	movlw	0
  8149  0827  00A7               	movwf	___lldiv@dividend+3
  8150  0828  303D               	movlw	61
  8151  0829  00A6               	movwf	___lldiv@dividend+2
  8152  082A  3009               	movlw	9
  8153  082B  00A5               	movwf	___lldiv@dividend+1
  8154  082C  3000               	movlw	0
  8155  082D  00A4               	movwf	___lldiv@dividend
  8156  082E  160A  118A  250A  120A  158A  	fcall	___lldiv
  8157  0833  1283               	bcf	3,5	;RP0=0, select bank0
  8158  0834  1303               	bcf	3,6	;RP1=0, select bank0
  8159  0835  0820               	movf	?___lldiv,w
  8160  0836  3EFF               	addlw	255
  8161  0837  1683               	bsf	3,5	;RP0=1, select bank1
  8162  0838  1303               	bcf	3,6	;RP1=0, select bank1
  8163  0839  0099               	movwf	25	;volatile
  8164  083A                     l3251:
  8165                           
  8166                           ;USART.c: 14:         TXSTAbits.BRGH = 0;
  8167  083A  1118               	bcf	24,2	;volatile
  8168                           
  8169                           ;USART.c: 15:     } else {
  8170  083B  286A               	goto	l3257
  8171  083C                     l3253:
  8172                           
  8173                           ;USART.c: 16:         SPBRG = 4000000/(16*baud_rate) - 1;
  8174  083C  0828               	movf	config_us@baud_rate,w
  8175  083D  00AD               	movwf	??_config_us
  8176  083E  0829               	movf	config_us@baud_rate+1,w
  8177  083F  00AE               	movwf	??_config_us+1
  8178  0840  082A               	movf	config_us@baud_rate+2,w
  8179  0841  00AF               	movwf	??_config_us+2
  8180  0842  082B               	movf	config_us@baud_rate+3,w
  8181  0843  00B0               	movwf	??_config_us+3
  8182  0844  3004               	movlw	4
  8183  0845                     u4845:
  8184  0845  1003               	clrc
  8185  0846  0DAD               	rlf	??_config_us,f
  8186  0847  0DAE               	rlf	??_config_us+1,f
  8187  0848  0DAF               	rlf	??_config_us+2,f
  8188  0849  0DB0               	rlf	??_config_us+3,f
  8189  084A                     u4840:
  8190  084A  3EFF               	addlw	-1
  8191  084B  1D03               	skipz
  8192  084C  2845               	goto	u4845
  8193  084D  0830               	movf	??_config_us+3,w
  8194  084E  00A3               	movwf	___lldiv@divisor+3
  8195  084F  082F               	movf	??_config_us+2,w
  8196  0850  00A2               	movwf	___lldiv@divisor+2
  8197  0851  082E               	movf	??_config_us+1,w
  8198  0852  00A1               	movwf	___lldiv@divisor+1
  8199  0853  082D               	movf	??_config_us,w
  8200  0854  00A0               	movwf	___lldiv@divisor
  8201  0855  3000               	movlw	0
  8202  0856  00A7               	movwf	___lldiv@dividend+3
  8203  0857  303D               	movlw	61
  8204  0858  00A6               	movwf	___lldiv@dividend+2
  8205  0859  3009               	movlw	9
  8206  085A  00A5               	movwf	___lldiv@dividend+1
  8207  085B  3000               	movlw	0
  8208  085C  00A4               	movwf	___lldiv@dividend
  8209  085D  160A  118A  250A  120A  158A  	fcall	___lldiv
  8210  0862  1283               	bcf	3,5	;RP0=0, select bank0
  8211  0863  1303               	bcf	3,6	;RP1=0, select bank0
  8212  0864  0820               	movf	?___lldiv,w
  8213  0865  3EFF               	addlw	255
  8214  0866  1683               	bsf	3,5	;RP0=1, select bank1
  8215  0867  1303               	bcf	3,6	;RP1=0, select bank1
  8216  0868  0099               	movwf	25	;volatile
  8217  0869                     l3255:
  8218                           
  8219                           ;USART.c: 17:         TXSTAbits.BRGH = 1;
  8220  0869  1518               	bsf	24,2	;volatile
  8221  086A                     l3257:
  8222                           
  8223                           ;USART.c: 19:     BAUDCTL = 0B00000000;
  8224  086A  1683               	bsf	3,5	;RP0=1, select bank3
  8225  086B  1703               	bsf	3,6	;RP1=1, select bank3
  8226  086C  0187               	clrf	7	;volatile
  8227  086D                     l3259:
  8228                           
  8229                           ;USART.c: 20:     TXSTA = 0B00100100;
  8230  086D  3024               	movlw	36
  8231  086E  1683               	bsf	3,5	;RP0=1, select bank1
  8232  086F  1303               	bcf	3,6	;RP1=0, select bank1
  8233  0870  0098               	movwf	24	;volatile
  8234  0871                     l3261:
  8235                           
  8236                           ;USART.c: 21:     RCSTA = 0B10010000;
  8237  0871  3090               	movlw	144
  8238  0872  1283               	bcf	3,5	;RP0=0, select bank0
  8239  0873  1303               	bcf	3,6	;RP1=0, select bank0
  8240  0874  0098               	movwf	24	;volatile
  8241  0875                     l3263:
  8242                           
  8243                           ;USART.c: 22:     TRISCbits.TRISC7 = 1;
  8244  0875  1683               	bsf	3,5	;RP0=1, select bank1
  8245  0876  1303               	bcf	3,6	;RP1=0, select bank1
  8246  0877  1787               	bsf	7,7	;volatile
  8247  0878                     l3265:
  8248                           
  8249                           ;USART.c: 23:     TRISCbits.TRISC6 = 0;
  8250  0878  1307               	bcf	7,6	;volatile
  8251  0879                     l25:
  8252  0879  0008               	return
  8253  087A                     __end_of_config_us:
  8254                           
  8255                           	psect	text28
  8256  150A                     __ptext28:	
  8257 ;; *************** function ___lldiv *****************
  8258 ;; Defined at:
  8259 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;  divisor         4    0[BANK0 ] unsigned long 
  8262 ;;  dividend        4    4[BANK0 ] unsigned long 
  8263 ;; Auto vars:     Size  Location     Type
  8264 ;;  quotient        4    4[COMMON] unsigned long 
  8265 ;;  counter         1    8[COMMON] unsigned char 
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  4    0[BANK0 ] unsigned long 
  8268 ;; Registers used:
  8269 ;;		wreg, status,2, status,0
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8275 ;;      Params:         0       8       0       0       0
  8276 ;;      Locals:         5       0       0       0       0
  8277 ;;      Temps:          1       0       0       0       0
  8278 ;;      Totals:         6       8       0       0       0
  8279 ;;Total ram usage:       14 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:    1
  8282 ;; This function calls:
  8283 ;;		Nothing
  8284 ;; This function is called by:
  8285 ;;		_config_us
  8286 ;;		_sprintf
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           
  8291                           ;psect for function ___lldiv
  8292  150A                     ___lldiv:
  8293  150A                     l2995:	
  8294                           ;incstack = 0
  8295                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8296                           
  8297  150A  3000               	movlw	0
  8298  150B  00F7               	movwf	___lldiv@quotient+3
  8299  150C  3000               	movlw	0
  8300  150D  00F6               	movwf	___lldiv@quotient+2
  8301  150E  3000               	movlw	0
  8302  150F  00F5               	movwf	___lldiv@quotient+1
  8303  1510  3000               	movlw	0
  8304  1511  00F4               	movwf	___lldiv@quotient
  8305  1512  1283               	bcf	3,5	;RP0=0, select bank0
  8306  1513  1303               	bcf	3,6	;RP1=0, select bank0
  8307  1514  0823               	movf	___lldiv@divisor+3,w
  8308  1515  0422               	iorwf	___lldiv@divisor+2,w
  8309  1516  0421               	iorwf	___lldiv@divisor+1,w
  8310  1517  0420               	iorwf	___lldiv@divisor,w
  8311  1518  1903               	skipnz
  8312  1519  2D1B               	goto	u4191
  8313  151A  2D1C               	goto	u4190
  8314  151B                     u4191:
  8315  151B  2D69               	goto	l3015
  8316  151C                     u4190:
  8317  151C                     l2997:
  8318  151C  01F8               	clrf	___lldiv@counter
  8319  151D  0AF8               	incf	___lldiv@counter,f
  8320  151E  2D2C               	goto	l3001
  8321  151F                     l2999:
  8322  151F  3001               	movlw	1
  8323  1520  00F3               	movwf	??___lldiv
  8324  1521                     u4205:
  8325  1521  1003               	clrc
  8326  1522  0DA0               	rlf	___lldiv@divisor,f
  8327  1523  0DA1               	rlf	___lldiv@divisor+1,f
  8328  1524  0DA2               	rlf	___lldiv@divisor+2,f
  8329  1525  0DA3               	rlf	___lldiv@divisor+3,f
  8330  1526  0BF3               	decfsz	??___lldiv,f
  8331  1527  2D21               	goto	u4205
  8332  1528  3001               	movlw	1
  8333  1529  00F3               	movwf	??___lldiv
  8334  152A  0873               	movf	??___lldiv,w
  8335  152B  07F8               	addwf	___lldiv@counter,f
  8336  152C                     l3001:
  8337  152C  1FA3               	btfss	___lldiv@divisor+3,7
  8338  152D  2D2F               	goto	u4211
  8339  152E  2D30               	goto	u4210
  8340  152F                     u4211:
  8341  152F  2D1F               	goto	l2999
  8342  1530                     u4210:
  8343  1530                     l3003:
  8344  1530  3001               	movlw	1
  8345  1531  00F3               	movwf	??___lldiv
  8346  1532                     u4225:
  8347  1532  1003               	clrc
  8348  1533  0DF4               	rlf	___lldiv@quotient,f
  8349  1534  0DF5               	rlf	___lldiv@quotient+1,f
  8350  1535  0DF6               	rlf	___lldiv@quotient+2,f
  8351  1536  0DF7               	rlf	___lldiv@quotient+3,f
  8352  1537  0BF3               	decfsz	??___lldiv,f
  8353  1538  2D32               	goto	u4225
  8354  1539                     l3005:
  8355  1539  0823               	movf	___lldiv@divisor+3,w
  8356  153A  0227               	subwf	___lldiv@dividend+3,w
  8357  153B  1D03               	skipz
  8358  153C  2D47               	goto	u4235
  8359  153D  0822               	movf	___lldiv@divisor+2,w
  8360  153E  0226               	subwf	___lldiv@dividend+2,w
  8361  153F  1D03               	skipz
  8362  1540  2D47               	goto	u4235
  8363  1541  0821               	movf	___lldiv@divisor+1,w
  8364  1542  0225               	subwf	___lldiv@dividend+1,w
  8365  1543  1D03               	skipz
  8366  1544  2D47               	goto	u4235
  8367  1545  0820               	movf	___lldiv@divisor,w
  8368  1546  0224               	subwf	___lldiv@dividend,w
  8369  1547                     u4235:
  8370  1547  1C03               	skipc
  8371  1548  2D4A               	goto	u4231
  8372  1549  2D4B               	goto	u4230
  8373  154A                     u4231:
  8374  154A  2D5A               	goto	l3011
  8375  154B                     u4230:
  8376  154B                     l3007:
  8377  154B  0820               	movf	___lldiv@divisor,w
  8378  154C  02A4               	subwf	___lldiv@dividend,f
  8379  154D  0821               	movf	___lldiv@divisor+1,w
  8380  154E  1C03               	skipc
  8381  154F  0F21               	incfsz	___lldiv@divisor+1,w
  8382  1550  02A5               	subwf	___lldiv@dividend+1,f
  8383  1551  0822               	movf	___lldiv@divisor+2,w
  8384  1552  1C03               	skipc
  8385  1553  0F22               	incfsz	___lldiv@divisor+2,w
  8386  1554  02A6               	subwf	___lldiv@dividend+2,f
  8387  1555  0823               	movf	___lldiv@divisor+3,w
  8388  1556  1C03               	skipc
  8389  1557  0F23               	incfsz	___lldiv@divisor+3,w
  8390  1558  02A7               	subwf	___lldiv@dividend+3,f
  8391  1559                     l3009:
  8392  1559  1474               	bsf	___lldiv@quotient,0
  8393  155A                     l3011:
  8394  155A  3001               	movlw	1
  8395  155B                     u4245:
  8396  155B  1003               	clrc
  8397  155C  0CA3               	rrf	___lldiv@divisor+3,f
  8398  155D  0CA2               	rrf	___lldiv@divisor+2,f
  8399  155E  0CA1               	rrf	___lldiv@divisor+1,f
  8400  155F  0CA0               	rrf	___lldiv@divisor,f
  8401  1560  3EFF               	addlw	-1
  8402  1561  1D03               	skipz
  8403  1562  2D5B               	goto	u4245
  8404  1563                     l3013:
  8405  1563  3001               	movlw	1
  8406  1564  02F8               	subwf	___lldiv@counter,f
  8407  1565  1D03               	btfss	3,2
  8408  1566  2D68               	goto	u4251
  8409  1567  2D69               	goto	u4250
  8410  1568                     u4251:
  8411  1568  2D30               	goto	l3003
  8412  1569                     u4250:
  8413  1569                     l3015:
  8414  1569  0877               	movf	___lldiv@quotient+3,w
  8415  156A  00A3               	movwf	?___lldiv+3
  8416  156B  0876               	movf	___lldiv@quotient+2,w
  8417  156C  00A2               	movwf	?___lldiv+2
  8418  156D  0875               	movf	___lldiv@quotient+1,w
  8419  156E  00A1               	movwf	?___lldiv+1
  8420  156F  0874               	movf	___lldiv@quotient,w
  8421  1570  00A0               	movwf	?___lldiv
  8422  1571                     l352:
  8423  1571  0008               	return
  8424  1572                     __end_of___lldiv:
  8425                           
  8426                           	psect	text29
  8427  1368                     __ptext29:	
  8428 ;; *************** function _config_i2cmas *****************
  8429 ;; Defined at:
  8430 ;;		line 15 in file "I2C.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;		None
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;		None
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  1    wreg      void 
  8437 ;; Registers used:
  8438 ;;		wreg, status,2
  8439 ;; Tracked objects:
  8440 ;;		On entry : 0/0
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8444 ;;      Params:         0       0       0       0       0
  8445 ;;      Locals:         0       0       0       0       0
  8446 ;;      Temps:          0       0       0       0       0
  8447 ;;      Totals:         0       0       0       0       0
  8448 ;;Total ram usage:        0 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; Hardware stack levels required when called:    1
  8451 ;; This function calls:
  8452 ;;		Nothing
  8453 ;; This function is called by:
  8454 ;;		_giro_init
  8455 ;; This function uses a non-reentrant model
  8456 ;;
  8457                           
  8458                           
  8459                           ;psect for function _config_i2cmas
  8460  1368                     _config_i2cmas:
  8461  1368                     l1587:	
  8462                           ;incstack = 0
  8463                           ; Regs used in _config_i2cmas: [wreg+status,2]
  8464                           
  8465                           
  8466                           ;I2C.c: 17:   SSPCON = 0x28;
  8467  1368  3028               	movlw	40
  8468  1369  1283               	bcf	3,5	;RP0=0, select bank0
  8469  136A  1303               	bcf	3,6	;RP1=0, select bank0
  8470  136B  0094               	movwf	20	;volatile
  8471  136C                     l1589:
  8472                           
  8473                           ;I2C.c: 18:   SSPCON2 = 0x00;
  8474  136C  1683               	bsf	3,5	;RP0=1, select bank1
  8475  136D  1303               	bcf	3,6	;RP1=0, select bank1
  8476  136E  0191               	clrf	17	;volatile
  8477  136F                     l1591:
  8478                           
  8479                           ;I2C.c: 19:   SSPSTAT = 0x00;
  8480  136F  0194               	clrf	20	;volatile
  8481                           
  8482                           ;I2C.c: 20:   SSPADD = ((4000000/4)/100000) - 1;
  8483  1370  3009               	movlw	9
  8484  1371  0093               	movwf	19	;volatile
  8485  1372                     l1593:
  8486                           
  8487                           ;I2C.c: 21:   TRISC3 = 1;
  8488  1372  1587               	bsf	7,3	;volatile
  8489  1373                     l1595:
  8490                           
  8491                           ;I2C.c: 22:   TRISC4 = 1;
  8492  1373  1607               	bsf	7,4	;volatile
  8493  1374                     l94:
  8494  1374  0008               	return
  8495  1375                     __end_of_config_i2cmas:
  8496                           
  8497                           	psect	text30
  8498  1382                     __ptext30:	
  8499 ;; *************** function _Setup *****************
  8500 ;; Defined at:
  8501 ;;		line 83 in file "PIC.c"
  8502 ;; Parameters:    Size  Location     Type
  8503 ;;		None
  8504 ;; Auto vars:     Size  Location     Type
  8505 ;;		None
  8506 ;; Return value:  Size  Location     Type
  8507 ;;                  1    wreg      void 
  8508 ;; Registers used:
  8509 ;;		status,2
  8510 ;; Tracked objects:
  8511 ;;		On entry : 0/0
  8512 ;;		On exit  : 0/0
  8513 ;;		Unchanged: 0/0
  8514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8515 ;;      Params:         0       0       0       0       0
  8516 ;;      Locals:         0       0       0       0       0
  8517 ;;      Temps:          0       0       0       0       0
  8518 ;;      Totals:         0       0       0       0       0
  8519 ;;Total ram usage:        0 bytes
  8520 ;; Hardware stack levels used:    1
  8521 ;; Hardware stack levels required when called:    1
  8522 ;; This function calls:
  8523 ;;		Nothing
  8524 ;; This function is called by:
  8525 ;;		_main
  8526 ;; This function uses a non-reentrant model
  8527 ;;
  8528                           
  8529                           
  8530                           ;psect for function _Setup
  8531  1382                     _Setup:
  8532  1382                     l1893:	
  8533                           ;incstack = 0
  8534                           ; Regs used in _Setup: [status,2]
  8535                           
  8536  1382  1683               	bsf	3,5	;RP0=1, select bank3
  8537  1383  1703               	bsf	3,6	;RP1=1, select bank3
  8538  1384  0188               	clrf	8	;volatile
  8539  1385  1683               	bsf	3,5	;RP0=1, select bank1
  8540  1386  1303               	bcf	3,6	;RP1=0, select bank1
  8541  1387  0185               	clrf	5	;volatile
  8542  1388  1283               	bcf	3,5	;RP0=0, select bank0
  8543  1389  1303               	bcf	3,6	;RP1=0, select bank0
  8544  138A  0185               	clrf	5	;volatile
  8545  138B                     l1895:
  8546  138B  178B               	bsf	11,7	;volatile
  8547  138C                     l1897:
  8548  138C  170B               	bsf	11,6	;volatile
  8549  138D                     l1899:
  8550  138D  1683               	bsf	3,5	;RP0=1, select bank1
  8551  138E  1303               	bcf	3,6	;RP1=0, select bank1
  8552  138F  168C               	bsf	12,5	;volatile
  8553  1390                     l230:
  8554  1390  0008               	return
  8555  1391                     __end_of_Setup:
  8556                           
  8557                           	psect	text31
  8558  13B1                     __ptext31:	
  8559 ;; *************** function _ISR *****************
  8560 ;; Defined at:
  8561 ;;		line 47 in file "PIC.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;		None
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;		None
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  1    wreg      void 
  8568 ;; Registers used:
  8569 ;;		wreg
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8575 ;;      Params:         0       0       0       0       0
  8576 ;;      Locals:         0       0       0       0       0
  8577 ;;      Temps:          3       0       0       0       0
  8578 ;;      Totals:         3       0       0       0       0
  8579 ;;Total ram usage:        3 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; This function calls:
  8582 ;;		Nothing
  8583 ;; This function is called by:
  8584 ;;		Interrupt level 1
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588                           
  8589                           ;psect for function _ISR
  8590  13B1                     _ISR:
  8591  13B1                     i1l1933:
  8592                           
  8593                           ;PIC.c: 49: }
  8594  13B1  1283               	bcf	3,5	;RP0=0, select bank0
  8595  13B2  1303               	bcf	3,6	;RP1=0, select bank0
  8596  13B3  1E8C               	btfss	12,5	;volatile
  8597  13B4  2BB6               	goto	u212_21
  8598  13B5  2BB7               	goto	u212_20
  8599  13B6                     u212_21:
  8600  13B6  2BBB               	goto	i1l219
  8601  13B7                     u212_20:
  8602  13B7                     i1l1935:
  8603                           
  8604                           ;PIC.c: 50: 
  8605  13B7  081A               	movf	26,w	;volatile
  8606  13B8  00F0               	movwf	??_ISR
  8607  13B9  0870               	movf	??_ISR,w
  8608  13BA  00FA               	movwf	_input
  8609  13BB                     i1l219:	
  8610                           ;PIC.c: 51: void Setup(void) {
  8611                           
  8612  13BB  0872               	movf	??_ISR+2,w
  8613  13BC  008A               	movwf	10
  8614  13BD  0E71               	swapf	??_ISR+1,w
  8615  13BE  0083               	movwf	3
  8616  13BF  0EFE               	swapf	btemp,f
  8617  13C0  0E7E               	swapf	btemp,w
  8618  13C1  0009               	retfie
  8619  13C2                     __end_of_ISR:
  8620  007E                     btemp	set	126	;btemp
  8621  007E                     wtemp0	set	126
  8622                           
  8623                           	psect	intentry
  8624  0004                     __pintentry:	
  8625                           ;incstack = 0
  8626                           ; Regs used in _ISR: [wreg]
  8627                           
  8628  0004                     interrupt_function:
  8629  007E                     saved_w	set	btemp
  8630  0004  00FE               	movwf	btemp
  8631  0005  0E03               	swapf	3,w
  8632  0006  00F1               	movwf	??_ISR+1
  8633  0007  080A               	movf	10,w
  8634  0008  00F2               	movwf	??_ISR+2
  8635  0009  160A  118A  2BB1   	ljmp	_ISR
  8636                           
  8637                           	psect	config
  8638                           
  8639                           ;Config register CONFIG1 @ 0x2007
  8640                           ;	Oscillator Selection bits
  8641                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  8642                           ;	Watchdog Timer Enable bit
  8643                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  8644                           ;	Power-up Timer Enable bit
  8645                           ;	PWRTE = OFF, PWRT disabled
  8646                           ;	RE3/MCLR pin function select bit
  8647                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  8648                           ;	Code Protection bit
  8649                           ;	CP = OFF, Program memory code protection is disabled
  8650                           ;	Data Code Protection bit
  8651                           ;	CPD = OFF, Data memory code protection is disabled
  8652                           ;	Brown Out Reset Selection bits
  8653                           ;	BOREN = OFF, BOR disabled
  8654                           ;	Internal External Switchover bit
  8655                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  8656                           ;	Fail-Safe Clock Monitor Enabled bit
  8657                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  8658                           ;	Low Voltage Programming Enable bit
  8659                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  8660                           ;	In-Circuit Debugger Mode bit
  8661                           ;	DEBUG = 0x1, unprogrammed default
  8662  2007                     	org	8199
  8663  2007  20D4               	dw	8404
  8664                           
  8665                           ;Config register CONFIG2 @ 0x2008
  8666                           ;	Brown-out Reset Selection bit
  8667                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  8668                           ;	Flash Program Memory Self Write Enable bits
  8669                           ;	WRT = OFF, Write protection off
  8670  2008                     	org	8200
  8671  2008  3FFF               	dw	16383

Data Sizes:
    Strings     13
    Constant    40
    Data        0
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     80      80
    BANK1            80     63      80
    BANK3            96      3       3
    BANK2            96      0       0

Pointer List with Targets:

    ftoa@status	PTR int  size(2) Largest target is 512
		 -> RAM(DATA[512]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_7(CODE[11]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    ftoa@cp	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    sp__ftoa	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    giro_read@impresion	PTR unsigned char  size(1) Largest target is 17
		 -> ftoa@buf(BANK1[17]), 

    usart_string@data	PTR const unsigned char  size(2) Largest target is 17
		 -> ftoa@buf(BANK1[17]), STR_6(CODE[2]), STR_5(CODE[2]), STR_4(CODE[2]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _giro_read->_usart_string
    _usart_string->_usart_char
    _sprintf->___llmod
    ___llmod->___lldiv
    ___flsub->___xxtofl
    ___fladd->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _i2c_init->_mas_write
    _config_us->___lldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _giro_read->_ftoa
    _ftoa->___flsub
    _sprintf->___llmod
    ___llmod->___lldiv
    ___fltol->___flmul
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    _giro_init->_config_us
    _config_us->___lldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_giro_read

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   26077
                                              0 BANK3      3     3      0
                              _Setup
                          _giro_init
                          _giro_read
 ---------------------------------------------------------------------------------
 (1) _giro_read                                           63    63      0   24957
                                              0 BANK1     63    63      0
                              _Rinit
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                               _ftoa
                           _i2c_init
                           _mas_read
                          _mas_write
                               _stop
                         _usart_char
                       _usart_string
 ---------------------------------------------------------------------------------
 (2) _usart_string                                         8     5      3    2133
                                              4 COMMON     6     3      3
                                              0 BANK0      2     2      0
                         _usart_char
 ---------------------------------------------------------------------------------
 (3) _usart_char                                           1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _mas_read                                             3     3      0      45
                                              3 COMMON     3     3      0
                            _ack_i2c
                           _nack_i2c
                               _wait
 ---------------------------------------------------------------------------------
 (3) _nack_i2c                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ack_i2c                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ftoa                                                16    10      6   12801
                                             64 BANK0     16    10      6
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             34    25      9    3119
                                             17 BANK0     26    17      9
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     396
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                             10     2      8     412
                                              9 COMMON     1     1      0
                                              8 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1196
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             11     7      4     517
                                              7 COMMON     2     2      0
                                             36 BANK0      9     5      4
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flsub                                              8     0      8    2485
                                             56 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    2288
                                             36 BANK0     20    12      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    3329
                                             10 BANK0     26    18      8
                          __Umul8_16
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) ___flge                                              12     4      8     446
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             26    18      8    1273
                                             10 BANK0     26    18      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _Rinit                                                0     0      0       0
                               _wait
 ---------------------------------------------------------------------------------
 (1) _giro_init                                            0     0      0    1120
                      _config_i2cmas
                          _config_us
                           _i2c_init
                          _mas_write
                               _stop
 ---------------------------------------------------------------------------------
 (2) _stop                                                 0     0      0       0
                               _wait
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             1     1      0      44
                                              4 COMMON     1     1      0
                          _mas_write
                               _wait
 ---------------------------------------------------------------------------------
 (2) _mas_write                                            1     1      0      22
                                              3 COMMON     1     1      0
                               _wait
 ---------------------------------------------------------------------------------
 (3) _wait                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _config_us                                            9     4      5    1054
                                              8 BANK0      9     4      5
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             14     6      8     781
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) _config_i2cmas                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Setup
   _giro_init
     _config_i2cmas
     _config_us
       ___lldiv
     _i2c_init
       _mas_write
         _wait
       _wait
     _mas_write
       _wait
     _stop
       _wait
   _giro_read
     _Rinit
       _wait
     ___fladd
       ___fldiv (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       __Umul8_16
       ___xxtofl (ARG)
     ___xxtofl
     _ftoa
       ___flge
       ___flmul
         __Umul8_16
         ___xxtofl (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fltol
         ___flmul (ARG)
           __Umul8_16
           ___xxtofl (ARG)
       ___xxtofl
       _sprintf
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         _isdigit
     _i2c_init
       _mas_write
         _wait
       _wait
     _mas_read
       _ack_i2c
       _nack_i2c
       _wait
     _mas_write
       _wait
     _stop
       _wait
     _usart_char
     _usart_string
       _usart_char

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AE       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     3F      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      3       3       9        3.1%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AE      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Mar 07 13:31:03 2021

           ___fldiv@aexp 0043             ___fldiv@bexp 0042                        pc 0002  
           ___fldiv@sign 003B                       _BF 04A0                       l31 1367  
                     l25 0879                       l28 135D                       l39 1509  
                     l94 1374                       l97 1375                       fsr 0004  
    ___wmul@multiplicand 0075      __Umul8_16@word_mpld 0022                      l100 1381  
                    l112 1335                      l121 134C                      l130 13A0  
                    l106 13B0                      l115 1343                      l124 1350  
                    l109 133E                      l230 1390                      l118 1347  
                    l127 139B                      l144 07E4                      l129 139F  
                    l146 07EA                      l147 07EC                      l139 07CA  
                    l172 1743                      l316 1413                      l502 15ED  
                    l318 142B                      l183 045F                      l175 0023  
                    l352 1571                      l512 15ED                      l178 002F  
                    l613 0E82                      l509 15D8                      l630 0F4D  
                    l622 0FFF                      l711 072C                      l615 0E59  
                    l640 0F93                      l705 07C0                      l609 0DDB  
                    l801 0C14                      l490 160C                      l634 0F71  
                    l538 14AA                      l651 0FF3                      l643 0FD1  
                    l724 1442                      l652 0FFF                      l820 0D77  
                    l493 1678                      l717 07B4                      l494 1691  
                    l726 1454                      l655 1406                      l751 17FF  
                    l681 0A9D                      l665 09AB                      l825 07FE  
                    l809 0CBE                      l498 135B                      l762 17C9  
                    l667 0B2B                      l763 17D5                      l755 17AD  
                    l772 094E                      l749 1768                      l687 0B0F  
                    l689 0B1F                      l798 0BEE                      _PEN 048A  
                    _ISR 13B1                      _SEN 0488                      fsr0 0004  
                    indf 0000             ___flmul@aexp 003C             ___flmul@bexp 003D  
           ___flmul@sign 0037             ___flmul@temp 0042             ___flmul@prod 003E  
                   ?_ISR 0070             ___fltol@exp1 0078                     l2101 0E09  
                   l2111 0E1D                     l2103 0E0D                     l3001 152C  
                   l2121 0E5D                     l2113 0E21                     l2105 0E11  
                   l2041 0D85                     l3011 155A                     l3003 1530  
                   l2211 0FCD                     l2203 0F98                     l2131 0E76  
                   l2123 0E66                     l2107 0E15                     l2115 0E25  
                   l2051 0D9C                     l2043 0D89                     l3013 1563  
                   l3005 1539                     l2221 0FE9                     l2213 0FD6  
                   l2205 0F9D                     l2141 0E94                     l2125 0E68  
                   l2133 0E7A                     l2117 0E26                     l2109 0E19  
                   l2061 0DB2                     l2053 0D9D                     l2045 0D8A  
                   l2037 0D78                     l3101 1760                     l3021 145F  
                   l3007 154B                     l3015 1569                     l2231 142F  
                   l2223 0FED                     l2215 0FDB                     l2207 0FAB  
                   l2151 0EBE                     l2143 0EAB                     l2135 0E86  
                   l2127 0E6C                     l2119 0E3D                     l2071 0DC3  
                   l2063 0DB3                     l2047 0D8F                     l2055 0D9F  
                   l2039 0D7F                     l3111 178B                     l3103 1770  
                   l3031 1493                     l3023 1462                     l3009 1559  
                   l3041 1604                     l2241 1450                     l2233 1431  
                   l2401 05A0                     l2225 0FEF                     l2217 0FE3  
                   l2209 0FAF                     l2161 0EE7                     l2153 0EC2  
                   l2145 0EAF                     l2137 0E8B                     l2129 0E6D  
                   l2081 0DE1                     l2073 0DC8                     l2065 0DB9  
                   l2057 0DA7                     l2049 0D94                     l3121 17BF  
                   l3113 1792                     l3033 149C                     l3025 146F  
                   l3051 1654                     l3043 1620                     l2235 1438  
                   l2411 0620                     l2403 05BD                     l2227 0FFA  
                   l2219 0FE8                     l2171 0F55                     l2163 0F25  
                   l2155 0EC3                     l2147 0EB3                     l2091 0DF5  
                   l2083 0DE5                     l2075 0DD0                     l2067 0DBD  
                   l2059 0DAC                     l3131 17F2                     l3123 17C3  
                   l3115 1796                     l3107 1779                     l3027 1473  
                   l3035 14A2                     l3019 1455                     l2251 07FB  
                   l3211 0C9F                     l3203 0C53                     l2261 1392  
                   l3053 168E                     l3045 1628                     l2237 143C  
                   l2421 06D8                     l2413 064D                     l2405 05CD  
                   l2341 0467                     l2229 0FFE                     l2181 0F70  
                   l2173 0F5A                     l2165 0F2B                     l2157 0ECC  
                   l2149 0EBC                     l2093 0DF9                     l2085 0DE9  
                   l2077 0DD1                     l2069 0DBE                     l2333 13E3  
                   l3061 157F                     l3133 17F6                     l3125 17CD  
                   l3117 17A4                     l3109 177E                     l3029 1485  
                   l2253 07FD                     l2245 07EE                     l3221 0CDB  
                   l3213 0CA6                     l3141 0B34                     l2263 1397  
                   l3055 1690                     l3047 162C                     l3039 15EE  
                   l2239 144B                     l2431 06FD                     l2423 06E1  
                   l2415 065D                     l2407 05EA                     l2351 047C  
                   l2343 046D                     l2183 0F75                     l2191 0F81  
                   l2167 0F30                     l2159 0ED1                     l2095 0DFD  
                   l2087 0DED                     l2079 0DD3                     l2335 13E7  
                   l3071 15A6                     l3135 17F7                     l3127 17D7  
                   l3119 17B4                     l2247 07EF                     l3231 0D48  
                   l3223 0CE1                     l3215 0CB5                     l3207 0C8A  
                   l3151 0B59                     l3143 0B3A                     l3311 0066  
                   l3049 1650                     l2441 0715                     l2433 0706  
                   l2425 06EF                     l2417 068A                     l2409 0603  
                   l2361 0499                     l2353 0484                     l2345 0471  
                   l2185 0F78                     l2177 0F63                     l2169 0F3F  
                   l2193 0F85                     l2097 0E01                     l2089 0DF1  
                   l3081 15B4                     l3073 15A8                     l3065 1588  
                   l3129 17ED                     l2249 07F5                     l3233 0D4F  
                   l3225 0CE8                     l3217 0CCB                     l3209 0C94  
                   l3153 0B5D                     l3161 0B99                     l3145 0B41  
                   l2265 133F                     l2257 135D                     l3321 00B4  
                   l3313 0076                     l3305 0044                     l3251 083A  
                   l2451 0744                     l2443 0729                     l2427 06F8  
                   l2435 070C                     l2419 06B0                     l2371 04B0  
                   l2363 049D                     l2355 0486                     l2347 0472  
                   l2339 0460                     l2291 1359                     l2195 0F86  
                   l2187 0F7A                     l2179 0F6C                     l2099 0E05  
                   l3091 15DD                     l3075 15AC                     l3083 15C6  
                   l3067 159D                     l3059 1572                     l3227 0CEC  
                   l3235 0D53                     l3219 0CD7                     l3411 0C09  
                   l3171 0BD6                     l3163 0BA7                     l3155 0B72  
                   l3147 0B46                     l3139 0B2F                     l2267 1348  
                   l2259 1363                     l3331 0165                     l3323 00C3  
                   l3315 0087                     l3307 0053                     l3261 0871  
                   l3253 083C                     l2461 077F                     l2453 0748  
                   l2437 0710                     l2429 06FC                     l2373 04B2  
                   l2365 049E                     l2357 048E                     l2349 0477  
                   l2293 135B                     l2197 0F8A                     l2189 0F7F  
                   l3093 15E2                     l3069 159E                     l3229 0CF9  
                   l3181 0BF5                     l3173 0BDA                     l3165 0BAB  
                   l3157 0B85                     l3149 0B49                     l3237 0D61  
                   l3341 02C6                     l3333 01A7                     l3325 00D2  
                   l3317 0096                     l3309 0059                     l1591 136F  
                   l3263 0875                     l3255 0869                     l3247 0806  
                   l2471 07AC                     l2463 078E                     l2455 0761  
                   l2447 0731                     l2439 0711                     l2391 0523  
                   l2383 04CD                     l2375 04BA                     l2367 04A3  
                   l2359 0493                     l2199 0F90                     l3095 1747  
                   l3191 0C3D                     l3183 0C18                     l3239 0D73  
                   l3167 0BAE                     l3175 0BEB                     l3159 0B89  
                   l3271 0899                     l3351 0332                     l3343 02EA  
                   l3335 0200                     l3327 00E1                     l3319 00A5  
                   l1593 1372                     l3265 0878                     l3257 086A  
                   l3249 080D                     l2801 0A60                     l2721 0961  
                   l2713 094F                     l2473 07AD                     l2465 0798  
                   l2449 0736                     l2457 0767                     l2393 054F  
                   l2385 04DD                     l2377 04BF                     l2369 04A8  
                   l2289 1351                     l3089 15CD                     l3097 174C  
                   l3193 0C43                     l3185 0C26                     l3177 0BF0  
                   l3169 0BC3                     l3281 0905                     l3273 08A2  
                   l3361 0399                     l3353 0351                     l3345 02F7  
                   l3337 0242                     l3329 0123                     l1595 1373  
                   l1587 1368                     l3259 086D                     l2803 0A69  
                   l2811 0A7D                     l2723 0966                     l2731 0976  
                   l2715 0956                     l2475 07B8                     l2467 079A  
                   l2459 0774                     l2395 056B                     l2387 04EA  
                   l2379 04C4                     l3099 1750                     l3195 0C4B  
                   l3187 0C2B                     l3283 0933                     l3275 08A6  
                   l3267 087A                     l2651 14AB                     l3371 0402  
                   l3363 03A8                     l3355 035E                     l3347 0316  
                   l3339 0284                     l1589 136C                     l2813 0A81  
                   l2805 0A6D                     l2741 098E                     l2733 097E  
                   l2725 096B                     l2717 095C                     l2469 07A8  
                   l2397 0587                     l2389 0507                     l3197 0C51  
                   l3189 0C39                     l3285 094D                     l3277 08BD  
                   l3269 0880                     l2661 1501                     l2653 14B2  
                   l3381 0459                     l3373 040F                     l3365 03C7  
                   l3357 036D                     l3349 0323                     l3293 001D  
                   l2663 13A2                     l2671 132D                     l2831 0AD2  
                   l2823 0AA2                     l2815 0A82                     l2807 0A6E  
                   l2743 0993                     l2751 09A3                     l2735 0983  
                   l2727 0973                     l2719 0960                     l2399 0590  
                   l3279 08D6                     l2655 14CE                     l3375 041E  
                   l3367 03D4                     l3359 038C                     l3295 0029  
                   l2665 13A7                     l2673 1332                     l3289 1692  
                   l2841 0B06                     l2825 0AA7                     l2833 0AD8  
                   l2817 0A86                     l2809 0A77                     l2753 09B3  
                   l2761 09CC                     l2745 0998                     l2737 0989  
                   l2729 0974                     l2681 07D4                     l2657 14D6  
                   l3377 043D                     l3369 03E3                     l3297 0035  
                   l3385 13C2                     l2667 1336                     l2843 0B0E  
                   l2835 0AE5                     l2827 0AB5                     l2819 0A9A  
                   l2771 09F4                     l2763 09D1                     l2755 09BF  
                   l2747 09A0                     l2739 098D                     l2683 07D9  
                   l2675 07C2                     l2659 14E3                     l3379 044A  
                   l3299 0040                     l3387 13D0                     l1893 1382  
                   l2669 133B                     l2845 0B15                     l2837 0AF3  
                   l2829 0AB9                     l2781 0A1D                     l2773 09FC  
                   l2757 09C3                     l2749 09A1                     l1981 1409  
                   l2685 07DF                     l2677 07C7                     l3389 13DA  
                   l1895 138B                     l1975 1375                     l2847 0B19  
                   l2839 0B02                     l2791 0A3E                     l2783 0A21  
                   l2775 0A04                     l2767 09DA                     l1983 140D  
                   l2687 07EB                     l2679 07CE                     l1897 138C  
                   l1977 137B                     l2849 0B1B                     l2793 0A4C  
                   l2785 0A22                     l2777 0A06                     l2769 09EC  
                   l1985 141A                     l1899 138D                     l2779 0A0B  
                   l2787 0A2B                     l2795 0A50                     l1987 1421  
                   l1979 1407                     l2797 0A56                     l2789 0A3D  
                   l1989 1427                     l2799 0A5E                     l2995 150A  
                   l2997 151C                     l2999 151F                     STR_1 1043  
                   STR_2 1043                     STR_3 1043                     STR_4 1043  
                   STR_5 1043                     STR_6 1043                     STR_7 1038  
                   u2130 137B                     u2131 137A                     u2140 1381  
                   u3100 04A8                     u2141 1380                     u3101 04A7  
                   u3110 04BF                     u2150 140D                     u3111 04BE  
                   u2151 140C                     u4000 0A56                     u3120 04C4  
                   u2400 0DE5                     u2320 0D89                     u4001 0A55  
                   u3121 04C3                     u2401 0DE4                     u2321 0D88  
                   u4010 0A5E                     u3050 0471                     u2410 0E3D  
                   u2330 0D8F                     u4011 0A5D                     u3211 0612  
                   u3131 0515                     u3051 0470                     u2411 0E3C  
                   u2331 0D8E                     u4100 0AB9                     u3300 06FC  
                   u3212 0619                     u3132 051C                     u3060 0477  
                   u2420 0E48                     u2340 0D94                     u2180 1427  
                   u4101 0AB8                     u3301 06FB                     u3221 063F  
                   u3213 0620                     u3205 05EC                     u3141 0531  
                   u3133 0523                     u3061 0476                     u2501 0E9D  
                   u2421 0E46                     u2341 0D93                     u2181 1426  
                   u2165 1414                     u4110 0AC8                     u4030 0A6D  
                   u3222 0646                     u3142 0538                     u3070 047C  
                   u2510 0EAF                     u2502 0EA4                     u2430 0E49  
                   u2350 0DB2                     u4031 0A6C                     u3231 066C  
                   u3223 064D                     u3151 055D                     u3143 053F  
                   u3071 047B                     u2511 0EAE                     u2503 0EAB  
                   u2415 0E39                     u2351 0DB1                     u2175 141B  
                   u4120 0AE5                     u3400 078E                     u3320 0710  
                   u3240 0696                     u3232 0673                     u3152 0564  
                   u3080 049D                     u2600 0F5A                     u2520 0EB3  
                   u2440 0E5D                     u2360 0DBD                     u4121 0AE4  
                   u4025 0A62                     u3401 078D                     u3321 070F  
                   u3233 067A                     u3161 0579                     u3153 056B  
                   u3081 049C                     u2601 0F59                     u2521 0EB2  
                   u2441 0E5C                     u2361 0DBC                     u4210 1530  
                   u4130 0B02                     u4050 0A81                     u3410 07AC  
                   u3330 0715                     u3162 0580                     u3090 04A3  
                   u2530 0EC2                     u2450 0E6C                     u2370 0DC3  
                   u4211 152F                     u4131 0B01                     u4115 0AC3  
                   u4051 0A80                     u3411 07AB                     u3331 0714  
                   u3315 06FF                     u3251 06A2                     u3163 0587  
                   u3091 04A2                     u2531 0EC1                     u2451 0E6B  
                   u2371 0DC2                     u4140 0B19                     u4060 0A86  
                   u3340 0729                     u3260 06BE                     u3252 06A9  
                   u2700 0FAF                     u2620 0F70                     u2380 0DC8  
                   u4205 1521                     u4141 0B18                     u4125 0AE1  
                   u4061 0A85                     u4045 0A70                     u3405 078A  
                   u3341 0728                     u3253 06B0                     u3245 0691  
                   u3181 05AF                     u2701 0FAE                     u2621 0F6F  
                   u2381 0DC7                     u4230 154B                     u4070 0A9A  
                   u3350 0730                     u3182 05B6                     u2710 0FBE  
                   u2630 0F75                     u2550 0EE7                     u2470 0E82  
                   u2390 0DE1                     u4310 14A2                     u4231 154A  
                   u4135 0AFE                     u4071 0A99                     u3351 072F  
                   u3271 06CA                     u3191 05DC                     u3183 05BD  
                   u3175 0589                     u2631 0F74                     u2615 0F65  
                   u2551 0EE6                     u2471 0E81                     u2391 0DE0  
                   u4311 14A1                     u4080 0AA1                     u4320 1604  
                   u2800 1450                     u3360 0736                     u3272 06D1  
                   u3192 05E3                     u2720 0FCD                     u2640 0F7F  
                   u2480 0E86                     u4400 1596                     u4225 1532  
                   u4081 0AA0                     u4321 1603                     u2801 144F  
                   u3361 0735                     u3273 06D8                     u3265 06B9  
                   u3193 05EA                     u2721 0FCC                     u2641 0F7E  
                   u2561 0EFE                     u2553 0EE3                     u2545 0EC5  
                   u2481 0E85                     u2465 0E6F                     u4305 1494  
                   u4250 1569                     u4090 0AA7                     u4330 1620  
                   u3370 0748                     u2730 0FD6                     u2650 0F85  
                   u2570 0F12                     u2562 0EFF                     u2490 0E8B  
                   u4410 15AC                     u2810 07F5                     u4251 1568  
                   u4235 1547                     u4091 0AA6                     u4331 161F  
                   u3371 0747                     u2731 0FD5                     u2715 0FB9  
                   u2651 0F84                     u2571 0F13                     u2563 0F04  
                   u2491 0E8A                     u4411 15AB                     u2811 07F4  
                   u4340 162C                     u3380 0757                     u2740 0FDB  
                   u2660 0F8A                     u2580 0F30                     u2572 0F18  
                   u2564 0F05                     u4420 15B3                     u4500 1750  
                   u4260 145F                     u2820 07FB                     u4245 155B  
                   u4341 162B                     u3285 06DA                     u2741 0FDA  
                   u2661 0F89                     u2581 0F2F                     u2573 0F19  
                   u2565 0F0A                     u4421 15B2                     u4405 1591  
                   u4501 174F                     u4261 145E                     u2821 07FA  
                   u4190 151C                     u3390 0774                     u2750 0FE8  
                   u2670 0F90                     u2590 0F55                     u2566 0F0B  
                   u4510 1770                     u2830 1363                     u4191 151B  
                   u4351 163B                     u3391 0773                     u3295 06F1  
                   u2751 0FE7                     u2671 0F8F                     u2591 0F54  
                   u4511 176F                     u2831 1362                     u2840 139F  
                   u4360 1654                     u4352 163C                     u2760 0FED  
                   u2680 0F97                     u4440 15C5                     u4600 17E2  
                   u4280 1473                     u3800 14EF                     u2841 139E  
                   u4361 1653                     u4353 1641                     u3385 0752  
                   u2761 0FEC                     u2681 0F96                     u4441 15C4  
                   u4281 1472                     u4354 1642                     u2770 0FFE  
                   u2690 0F9D                     u4450 15CC                     u4610 17F2  
                   u4530 1791                     u4290 1485                     u2850 1347  
                   u3810 1501                     u4371 1663                     u4355 1647  
                   u3395 0770                     u2771 0FFD                     u2691 0F9C  
                   u4451 15CB                     u4435 15B5                     u4611 17F1  
                   u4531 1790                     u4291 1484                     u4275 1464  
                   u2851 1346                     u3811 1500                     u3900 0993  
                   u4380 168E                     u4372 1664                     u4356 1648  
                   u2780 143C                     u2940 1359                     u4620 17F6  
                   u4700 0C4B                     u2860 1350                     u3820 07CE  
                   u3901 0992                     u4381 168D                     u4373 1669  
                   u2781 143B                     u2941 1358                     u4621 17F5  
                   u4605 17DD                     u4525 1783                     u4701 0C4A  
                   u2861 134F                     u3821 07CD                     u3910 0998  
                   u4374 166A                     u4470 15DD                     u4390 157F  
                   u4550 17B3                     u4630 0B3A                     u3830 07D9  
                   u3911 0997                     u4375 166F                     u4471 15DC  
                   u4391 157E                     u4551 17B2                     u4295 1481  
                   u4631 0B39                     u3831 07D8                     u3920 09B3  
                   u4376 1670                     u4480 15E2                     u4800 0D61  
                   u4720 0C89                     u4640 0B59                     u3840 07EA  
                   u3921 09B2                     u4385 168A                     u4481 15E1  
                   u4465 15CF                     u4545 17A5                     u4801 0D60  
                   u4721 0C88                     u4641 0B58                     u3841 07E9  
                   u3930 09D1                     u4570 17C3                     u4490 174C  
                   u4810 0D73                     u4730 0C94                     u4650 0B99  
                   u3931 09D0                     u2795 1443                     u4571 17C2  
                   u4491 174B                     u4811 0D72                     u4731 0C93  
                   u4715 0C56                     u4651 0B98                     u4820 080D  
                   u3940 0A0B                     u3860 0960                     u4580 17C9  
                   u4740 0C9F                     u4660 0BA7                     u3780 14BC  
                   _RCEN 048B                     u4821 080C                     u3941 0A0A  
                   u3861 095F                     u4581 17C8                     u4565 17B8  
                   u4741 0C9E                     u4725 0C85                     u4661 0BA6  
                   u4830 081B                     u3870 0966                     u4590 17CD  
                   u4750 0CB5                     u4670 0BEA                     u3790 14E3  
                   u3871 0965                     u4591 17CC                     u4751 0CB4  
                   u4671 0BE9                     u3791 14E2                     u4840 084A  
                   u3880 096B                     u4760 0CCB                     u4680 0C18  
                   u3881 096A                     u4761 0CCA                     u4745 0C9B  
                   u4681 0C17                     u3970 0A21                     u3890 098D  
                   u4770 0CE1                     u4690 0C43                     u4850 0899  
                   u4835 0816                     u3971 0A20                     u3955 0A0D  
                   u3891 098C                     u4771 0CE0                     u4755 0CB1  
                   u4691 0C42                     u4851 0898                     u4907 1505  
                   u3795 14DF                     u4780 0CF8                     u4860 0029  
                   u4845 0845                     u3965 0A16                     u4781 0CF7  
                   u4765 0CC7                     u4861 0028                     u3990 0A3D  
                   u4870 0035                     u3991 0A3C                     u4871 0034  
                   u4880 0066                     u3985 0A24                     u4881 0065  
                   u3995 0A39                     u4795 0D04                     u4885 0062  
                   u4897 13CA                     _RSEN 0489                     _main 13C2  
                   _ftoa 087A                     _wait 1375                     btemp 007E  
                   _stop 132D                     start 000C       config_us@baud_rate 0028  
  __size_of_usart_string 005F          ___fldiv@new_exp 003C                    ??_ISR 0070  
          ___fltol@sign1 0077          __end_of___fladd 1000                    ?_main 0070  
                  _ACKEN 048C                    ?_ftoa 0060                    _ACKDT 048D  
        __end_of___fldiv 0B2C          __end_of___flneg 135C                    ?_wait 0070  
        __end_of___flmul 07C1          __end_of___flsub 1407          __end_of___fltol 15EE  
                  _ANSEL 0188          __end_of___lldiv 1572                    ?_stop 0070  
        __end_of_ack_i2c 1348          __end_of___llmod 14AB                    i1l219 13BB  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _PORTA 0005                    _TRISA 0085                    _SSPIF 0063  
                  _TXREG 0019                    _TXSTA 0098          ??_config_i2cmas 0073  
                  _Rinit 1336                    _Setup 1382          __end_of_dpowers 1038  
        __end_of_isdigit 07FF                    _input 007A             _usart_string 14AB  
                  ftoa@f 0060                    ftoa@l 006B                    pclath 000A  
                  status 0003            config_us@BRGH 002C                    wtemp0 007E  
        __end_of_sprintf 0D78          __initialization 000F             __end_of_main 13E3  
           __end_of_ftoa 094F             __end_of_wait 1382             __end_of_stop 1336  
       __end_of_i2c_init 13B1                   ??_main 0190                   ??_ftoa 0066  
                 ??_wait 0073                   ??_stop 0073                   ?_Rinit 0070  
                 ?_Setup 0070         ___llmod@dividend 002C                   i1l1933 13B1  
                 i1l1935 13B7                   u212_20 13B7                   u212_21 13B6  
                 _SSPADD 0093                   _TRISC3 043B                   _TRISC4 043C  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of___xxtofl 1800  
       __end_of_nack_i2c 1351                   ___flge 15EE                ??___fladd 004C  
                 ___wmul 1407                ??___fldiv 0032                ??___flneg 0077  
              ??___flmul 0032                ??___flsub 0077                ??___fltol 0048  
              ??___lldiv 0073                ??_ack_i2c 0073                ??___llmod 0079  
       __end_of_mas_read 07ED                   ftoa@cp 006F                ??_isdigit 0073  
     __size_of__Umul8_16 0029                   saved_w 007E                ??_sprintf 003A  
             ___flge@ff1 0020               ___flge@ff2 0024             ___xxtofl@arg 0026  
           ___xxtofl@exp 0025             ___xxtofl@val 0073             giro_read@val 00A4  
__end_of__initialization 0019               ___flneg@f1 0073               ___fltol@f1 0044  
         __pcstackCOMMON 0070            __end_of_Rinit 133F            __end_of_Setup 1391  
                ??_Rinit 0073                  ??_Setup 0073       __size_of_config_us 0074  
           sprintf@width 0046             mas_read@data 0075               __pbssBANK1 00DF  
     __size_of_giro_init 00B2       __size_of_giro_read 0443                ?_i2c_init 0070  
     __size_of_mas_write 0010        __end_of__Umul8_16 1455               __pmaintext 13C2  
                ?___flge 0020                  ?___wmul 0073               __pintentry 0004  
                _ACKSTAT 048E                  _BAUDCTL 0187                ?___xxtofl 0073  
                _SSPCON2 0091                  _SSPSTAT 0094                ?_nack_i2c 0070  
             __stringtab 1000               ??_i2c_init 0074                ?_mas_read 0070  
      __end_of_config_us 087A          __size_of___flge 00A4                  ___fladd 0D78  
                ___fldiv 094F                  ___flneg 1351                  ___flmul 0460  
                ___flsub 13E3                  ___fltol 1572                  ___lldiv 150A  
        __size_of___wmul 0025                  _ack_i2c 133F                  ___llmod 1455  
      __end_of_giro_init 1744        __end_of_giro_read 0460                  __ptext1 001D  
                __ptext2 14AB                  __ptext3 135C                  __ptext4 07C1  
                __ptext5 1348                  __ptext6 133F                  __ptext7 087A  
                __ptext8 0B2C                  __ptext9 07ED             __size_of_ISR 0011  
      __end_of_mas_write 13A1                  _dpowers 1010                  _isdigit 07ED  
             ??___xxtofl 0020    __end_of_config_i2cmas 1375                  _sprintf 0B2C  
                clrloop0 1326               ??_nack_i2c 0073     end_of_initialization 0019  
                ftoa@buf 00DF                  ftoa@rem 0067               ??_mas_read 0073  
        ___lldiv@divisor 0020          ___lldiv@counter 0078                _PORTAbits 0005  
            ___fladd@grs 0057            ___xxtofl@sign 0024                _TRISCbits 0087  
            ___fldiv@grs 003E              ___fldiv@rem 0037              ___flmul@grs 0038  
              i2c_init@d 0074                _TXSTAbits 0098               _usart_char 135C  
         __end_of___flge 1692           __end_of___wmul 142C               giro_read@i 00DC  
    start_initialization 000F              __end_of_ISR 13C2               ftoa@status 0064  
             mas_read@an 0074          ___llmod@divisor 0028          ___llmod@counter 0030  
      __size_of_i2c_init 0010                 ??___flge 0073                 ??___wmul 0077  
              __Umul8_16 142C                ___fladd@a 0048                ___fladd@b 0044  
              ___fldiv@a 002A                ___fldiv@b 002E                ___flmul@a 002E  
              ___flmul@b 002A              __pbssCOMMON 007A                ___flsub@a 0058  
              ___flsub@b 005C                ___latbits 0002            __pcstackBANK0 0020  
          __pcstackBANK1 00A0            __pcstackBANK3 0190        __size_of___xxtofl 00BC  
          ?_usart_string 0074        __size_of_nack_i2c 0009              sprintf@flag 003F  
            sprintf@prec 0048              ?_usart_char 0070        __size_of_mas_read 002C  
            usart_char@t 0073                 ?___fladd 0044                 ?___fldiv 002A  
               ?___flneg 0073                 ?___flmul 002A                 ?___flsub 0058  
               ?___fltol 0044                 ?___lldiv 0020         usart_string@data 0074  
               ?_ack_i2c 0070                 ?___llmod 0028               ?__Umul8_16 0073  
              _config_us 0806                __pstrings 1000                 ?_isdigit 0070  
              _giro_init 1692                _giro_read 001D           __size_of_Rinit 0009  
         __size_of_Setup 000F                _mas_write 1391           ??_usart_string 0077  
               ?_sprintf 0031            usart_string@i 0020        interrupt_function 0004  
         ___wmul@product 0077                clear_ram0 1325                 _PIE1bits 008C  
               _PIR1bits 000C      giro_read@almacenar1 00CE               ?_config_us 0028  
            __stringbase 100F        ___wmul@multiplier 0073               ?_giro_init 0070  
             ?_giro_read 0070      __size_of_usart_char 000C            mas_write@data 0073  
             ?_mas_write 0070                 _i2c_init 13A1              ??__Umul8_16 0075  
       __size_of___fladd 0288         __size_of___fldiv 01DD   __size_of_config_i2cmas 000D  
       __size_of___flneg 000B         __size_of___flmul 0361         __size_of___flsub 0024  
       __size_of___fltol 007C         __size_of___lldiv 0068         __size_of_ack_i2c 0009  
       __size_of___llmod 0056       __end_of__stringtab 1010              _isdigit$856 0073  
             sprintf@val 0041                 ___xxtofl 1744         __size_of_isdigit 0012  
               __ptext10 1407                 __ptext11 1455                 __ptext20 094F  
               __ptext12 1744                 __ptext21 1336                 __ptext13 1572  
               __ptext30 1382                 __ptext22 1692                 __ptext14 13E3  
               __ptext31 13B1                 __ptext23 132D                 __ptext15 0D78  
               __ptext24 13A1                 __ptext16 1351                 __ptext25 1391  
               __ptext17 0460                 __ptext26 1375                 __ptext18 142C  
               __ptext27 0806                 __ptext19 15EE                 __ptext28 150A  
               __ptext29 1368          usart_string@max 0076                 _nack_i2c 1348  
       __size_of_sprintf 024C                 _mas_read 07C1            __size_of_main 0021  
          __size_of_ftoa 00D5            __size_of_wait 000D            __size_of_stop 0009  
   __end_of_usart_string 150A              ??_config_us 002D              ??_giro_init 0079  
            ??_giro_read 00A0               _INTCONbits 000B              ??_mas_write 0073  
               isdigit@c 0074            _config_i2cmas 1368                 intlevel1 0000  
              sprintf@ap 0040                sprintf@sp 0045       giro_read@impresion 00DE  
       ___lldiv@dividend 0024             ??_usart_char 0073                stringcode 100A  
 __Umul8_16@multiplicand 0073                 sprintf@c 004A                 sprintf@f 0031  
       ___lldiv@quotient 0074                 stringdir 100A                 stringtab 1000  
     __end_of_usart_char 1368              _SSPCON2bits 0091           ?_config_i2cmas 0070  
          ___fladd@signs 0054             ___fladd@aexp 0055             ___fladd@bexp 0056  
   __Umul8_16@multiplier 0024           giro_read@final 00B2        __Umul8_16@product 0020  
