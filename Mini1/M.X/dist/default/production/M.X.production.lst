

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 17:46:04 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	intentry,global,class=CODE,delta=2
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 12/02/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  000E                     	;# 
    89  000E                     	;# 
    90  000F                     	;# 
    91  0010                     	;# 
    92  0011                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0015                     	;# 
    97  0015                     	;# 
    98  0016                     	;# 
    99  0017                     	;# 
   100  0018                     	;# 
   101  0019                     	;# 
   102  001A                     	;# 
   103  001B                     	;# 
   104  001B                     	;# 
   105  001C                     	;# 
   106  001D                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  0081                     	;# 
   110  0085                     	;# 
   111  0086                     	;# 
   112  0087                     	;# 
   113  0088                     	;# 
   114  0089                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  008F                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0093                     	;# 
   124  0093                     	;# 
   125  0094                     	;# 
   126  0095                     	;# 
   127  0096                     	;# 
   128  0097                     	;# 
   129  0098                     	;# 
   130  0099                     	;# 
   131  009A                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  009F                     	;# 
   137  0105                     	;# 
   138  0107                     	;# 
   139  0108                     	;# 
   140  0109                     	;# 
   141  010C                     	;# 
   142  010C                     	;# 
   143  010D                     	;# 
   144  010E                     	;# 
   145  010F                     	;# 
   146  0185                     	;# 
   147  0187                     	;# 
   148  0188                     	;# 
   149  0189                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  008F                     	;# 
   197  0090                     	;# 
   198  0091                     	;# 
   199  0092                     	;# 
   200  0093                     	;# 
   201  0093                     	;# 
   202  0093                     	;# 
   203  0094                     	;# 
   204  0095                     	;# 
   205  0096                     	;# 
   206  0097                     	;# 
   207  0098                     	;# 
   208  0099                     	;# 
   209  009A                     	;# 
   210  009B                     	;# 
   211  009C                     	;# 
   212  009D                     	;# 
   213  009E                     	;# 
   214  009F                     	;# 
   215  0105                     	;# 
   216  0107                     	;# 
   217  0108                     	;# 
   218  0109                     	;# 
   219  010C                     	;# 
   220  010C                     	;# 
   221  010D                     	;# 
   222  010E                     	;# 
   223  010F                     	;# 
   224  0185                     	;# 
   225  0187                     	;# 
   226  0188                     	;# 
   227  0189                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  0000                     	;# 
   231  0001                     	;# 
   232  0002                     	;# 
   233  0003                     	;# 
   234  0004                     	;# 
   235  0005                     	;# 
   236  0006                     	;# 
   237  0007                     	;# 
   238  0008                     	;# 
   239  0009                     	;# 
   240  000A                     	;# 
   241  000B                     	;# 
   242  000C                     	;# 
   243  000D                     	;# 
   244  000E                     	;# 
   245  000E                     	;# 
   246  000F                     	;# 
   247  0010                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0015                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001B                     	;# 
   261  001C                     	;# 
   262  001D                     	;# 
   263  001E                     	;# 
   264  001F                     	;# 
   265  0081                     	;# 
   266  0085                     	;# 
   267  0086                     	;# 
   268  0087                     	;# 
   269  0088                     	;# 
   270  0089                     	;# 
   271  008C                     	;# 
   272  008D                     	;# 
   273  008E                     	;# 
   274  008F                     	;# 
   275  0090                     	;# 
   276  0091                     	;# 
   277  0092                     	;# 
   278  0093                     	;# 
   279  0093                     	;# 
   280  0093                     	;# 
   281  0094                     	;# 
   282  0095                     	;# 
   283  0096                     	;# 
   284  0097                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009A                     	;# 
   288  009B                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  0105                     	;# 
   294  0107                     	;# 
   295  0108                     	;# 
   296  0109                     	;# 
   297  010C                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  0185                     	;# 
   303  0187                     	;# 
   304  0188                     	;# 
   305  0189                     	;# 
   306  018C                     	;# 
   307  018D                     	;# 
   308  0000                     	;# 
   309  0001                     	;# 
   310  0002                     	;# 
   311  0003                     	;# 
   312  0004                     	;# 
   313  0005                     	;# 
   314  0006                     	;# 
   315  0007                     	;# 
   316  0008                     	;# 
   317  0009                     	;# 
   318  000A                     	;# 
   319  000B                     	;# 
   320  000C                     	;# 
   321  000D                     	;# 
   322  000E                     	;# 
   323  000E                     	;# 
   324  000F                     	;# 
   325  0010                     	;# 
   326  0011                     	;# 
   327  0012                     	;# 
   328  0013                     	;# 
   329  0014                     	;# 
   330  0015                     	;# 
   331  0015                     	;# 
   332  0016                     	;# 
   333  0017                     	;# 
   334  0018                     	;# 
   335  0019                     	;# 
   336  001A                     	;# 
   337  001B                     	;# 
   338  001B                     	;# 
   339  001C                     	;# 
   340  001D                     	;# 
   341  001E                     	;# 
   342  001F                     	;# 
   343  0081                     	;# 
   344  0085                     	;# 
   345  0086                     	;# 
   346  0087                     	;# 
   347  0088                     	;# 
   348  0089                     	;# 
   349  008C                     	;# 
   350  008D                     	;# 
   351  008E                     	;# 
   352  008F                     	;# 
   353  0090                     	;# 
   354  0091                     	;# 
   355  0092                     	;# 
   356  0093                     	;# 
   357  0093                     	;# 
   358  0093                     	;# 
   359  0094                     	;# 
   360  0095                     	;# 
   361  0096                     	;# 
   362  0097                     	;# 
   363  0098                     	;# 
   364  0099                     	;# 
   365  009A                     	;# 
   366  009B                     	;# 
   367  009C                     	;# 
   368  009D                     	;# 
   369  009E                     	;# 
   370  009F                     	;# 
   371  0105                     	;# 
   372  0107                     	;# 
   373  0108                     	;# 
   374  0109                     	;# 
   375  010C                     	;# 
   376  010C                     	;# 
   377  010D                     	;# 
   378  010E                     	;# 
   379  010F                     	;# 
   380  0185                     	;# 
   381  0187                     	;# 
   382  0188                     	;# 
   383  0189                     	;# 
   384  018C                     	;# 
   385  018D                     	;# 
   386                           
   387                           	psect	idataBANK0
   388  0733                     __pidataBANK0:
   389                           
   390                           ;initializer for _cont
   391  0733  3427               	retlw	39
   392                           
   393                           ;initializer for _pot
   394  0734  3427               	retlw	39
   395  001A                     _RCREG	set	26
   396  000C                     _PIR1bits	set	12
   397  0019                     _TXREG	set	25
   398  0018                     _RCSTA	set	24
   399  0013                     _SSPBUF	set	19
   400  0006                     _PORTBbits	set	6
   401  000B                     _INTCON	set	11
   402  0014                     _SSPCON	set	20
   403  0006                     _PORTB	set	6
   404  0008                     _PORTD	set	8
   405  0007                     _PORTC	set	7
   406  0005                     _PORTA	set	5
   407  0038                     _RC0	set	56
   408  0039                     _RC1	set	57
   409  0047                     _RD7	set	71
   410  0046                     _RD6	set	70
   411  0045                     _RD5	set	69
   412  0044                     _RD4	set	68
   413  0043                     _RD3	set	67
   414  0042                     _RD2	set	66
   415  0041                     _RD1	set	65
   416  0040                     _RD0	set	64
   417  0063                     _SSPIF	set	99
   418  005F                     _GIE	set	95
   419  0098                     _TXSTAbits	set	152
   420  0098                     _TXSTA	set	152
   421  009A                     _SPBRGH	set	154
   422  0099                     _SPBRG	set	153
   423  008C                     _PIE1	set	140
   424  0091                     _SSPCON2	set	145
   425  0094                     _SSPSTAT	set	148
   426  0086                     _TRISB	set	134
   427  0088                     _TRISD	set	136
   428  0087                     _TRISC	set	135
   429  0085                     _TRISA	set	133
   430  0187                     _BAUDCTL	set	391
   431  0188                     _ANSEL	set	392
   432  0189                     _ANSELH	set	393
   433                           
   434                           	psect	strings
   435  0688                     __pstrings:
   436  0688                     stringtab:
   437  0688                     __stringtab:
   438  0688                     stringcode:	
   439                           ;	String table - string pointers are 1 byte each
   440                           
   441  0688                     stringdir:
   442  0688  3006               	movlw	high stringdir
   443  0689  008A               	movwf	10
   444  068A  0804               	movf	4,w
   445  068B  0A84               	incf	4,f
   446  068C  0782               	addwf	2,f
   447  068D                     __stringbase:
   448  068D  3400               	retlw	0
   449  068E                     __end_of__stringtab:
   450  068E                     STR_1:
   451  068E  3453               	retlw	83	;'S'
   452  068F  3431               	retlw	49	;'1'
   453  0690  343A               	retlw	58	;':'
   454  0691  3420               	retlw	32	;' '
   455  0692  3420               	retlw	32	;' '
   456  0693  3420               	retlw	32	;' '
   457  0694  3453               	retlw	83	;'S'
   458  0695  3432               	retlw	50	;'2'
   459  0696  343A               	retlw	58	;':'
   460  0697  3420               	retlw	32	;' '
   461  0698  3420               	retlw	32	;' '
   462  0699  3420               	retlw	32	;' '
   463  069A  3453               	retlw	83	;'S'
   464  069B  3433               	retlw	51	;'3'
   465  069C  343A               	retlw	58	;':'
   466  069D  3420               	retlw	32	;' '
   467  069E  3400               	retlw	0
   468  069F                     STR_2:
   469  069F  3420               	retlw	32	;' '
   470  06A0  3420               	retlw	32	;' '
   471  06A1  3400               	retlw	0
   472  069F                     
   473                           	psect	cinit
   474  000F                     start_initialization:	
   475                           ; #config settings
   476                           
   477  000F                     __initialization:
   478                           
   479                           ; Initialize objects allocated to BANK0
   480  000F  120A  118A  2733  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   481  0014  00BE               	movwf	__pdataBANK0& (0+127)
   482  0015  120A  118A  2734  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   483  001A  00BF               	movwf	(__pdataBANK0+1)& (0+127)
   484                           
   485                           ; Clear objects allocated to BANK0
   486  001B  01B7               	clrf	__pbssBANK0& (0+127)
   487  001C  01B8               	clrf	(__pbssBANK0+1)& (0+127)
   488  001D  01B9               	clrf	(__pbssBANK0+2)& (0+127)
   489  001E  01BA               	clrf	(__pbssBANK0+3)& (0+127)
   490  001F  01BB               	clrf	(__pbssBANK0+4)& (0+127)
   491  0020  01BC               	clrf	(__pbssBANK0+5)& (0+127)
   492  0021  01BD               	clrf	(__pbssBANK0+6)& (0+127)
   493                           
   494                           ; Clear objects allocated to COMMON
   495  0022  01F8               	clrf	__pbssCOMMON& (0+127)
   496  0023  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   497  0024  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   498  0025                     end_of_initialization:	
   499                           ;End of C runtime variable initialization code
   500                           
   501  0025                     __end_of__initialization:
   502  0025  0183               	clrf	3
   503  0026  120A  118A  2B22   	ljmp	_main	;jump to C main() function
   504                           
   505                           	psect	bssCOMMON
   506  0078                     __pbssCOMMON:
   507  0078                     _sdata:
   508  0078                     	ds	1
   509  0079                     _cont_d:
   510  0079                     	ds	1
   511  007A                     _cont_u:
   512  007A                     	ds	1
   513                           
   514                           	psect	bssBANK0
   515  0037                     __pbssBANK0:
   516  0037                     _aux:
   517  0037                     	ds	1
   518  0038                     _temp:
   519  0038                     	ds	1
   520  0039                     _cont_c:
   521  0039                     	ds	1
   522  003A                     _temp_m:
   523  003A                     	ds	1
   524  003B                     _pot_d2:
   525  003B                     	ds	1
   526  003C                     _pot_d1:
   527  003C                     	ds	1
   528  003D                     _pot_u:
   529  003D                     	ds	1
   530                           
   531                           	psect	dataBANK0
   532  003E                     __pdataBANK0:
   533  003E                     _cont:
   534  003E                     	ds	1
   535  003F                     _pot:
   536  003F                     	ds	1
   537                           
   538                           	psect	cstackCOMMON
   539  0070                     __pcstackCOMMON:
   540  0070                     ?_setup:
   541  0070                     ?_LCD_Init:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_header:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_s1spi:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_s2spi:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_s3spi:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_titulo:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_show:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_tnl_usart:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_config_us:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_LCD_data_string:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_tvirt_usart:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_LCD_data_char:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_LCD_datos:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_LCD_cmd:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_main:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_int1:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ??_int1:	
   590                           ; 1 bytes @ 0x0
   591                           
   592                           
   593                           ; 1 bytes @ 0x0
   594  0070                     	ds	3
   595  0073                     ??_setup:
   596  0073                     ??_s1spi:	
   597                           ; 1 bytes @ 0x3
   598                           
   599  0073                     ??_s2spi:	
   600                           ; 1 bytes @ 0x3
   601                           
   602  0073                     ??_s3spi:	
   603                           ; 1 bytes @ 0x3
   604                           
   605  0073                     ?_voltaje:	
   606                           ; 1 bytes @ 0x3
   607                           
   608  0073                     ??_tnl_usart:	
   609                           ; 1 bytes @ 0x3
   610                           
   611  0073                     ??_config_us:	
   612                           ; 1 bytes @ 0x3
   613                           
   614  0073                     ??_tvirt_usart:	
   615                           ; 1 bytes @ 0x3
   616                           
   617  0073                     ?_n_ascii:	
   618                           ; 1 bytes @ 0x3
   619                           
   620  0073                     ?_conts:	
   621                           ; 1 bytes @ 0x3
   622                           
   623  0073                     ??_LCD_datos:	
   624                           ; 1 bytes @ 0x3
   625                           
   626  0073                     ?___wmul:	
   627                           ; 1 bytes @ 0x3
   628                           
   629  0073                     voltaje@volt_u:	
   630                           ; 2 bytes @ 0x3
   631                           
   632  0073                     conts@uni:	
   633                           ; 1 bytes @ 0x3
   634                           
   635  0073                     LCD_datos@a:	
   636                           ; 1 bytes @ 0x3
   637                           
   638  0073                     tvirt_usart@t:	
   639                           ; 1 bytes @ 0x3
   640                           
   641  0073                     n_ascii@code:	
   642                           ; 1 bytes @ 0x3
   643                           
   644  0073                     ___wmul@multiplier:	
   645                           ; 1 bytes @ 0x3
   646                           
   647                           
   648                           ; 2 bytes @ 0x3
   649  0073                     	ds	1
   650  0074                     ??_header:
   651  0074                     ??_n_ascii:	
   652                           ; 1 bytes @ 0x4
   653                           
   654  0074                     ??_LCD_data_char:	
   655                           ; 1 bytes @ 0x4
   656                           
   657  0074                     ??_LCD_cmd:	
   658                           ; 1 bytes @ 0x4
   659                           
   660  0074                     voltaje@volt_d1:	
   661                           ; 1 bytes @ 0x4
   662                           
   663  0074                     conts@dec:	
   664                           ; 1 bytes @ 0x4
   665                           
   666                           
   667                           ; 1 bytes @ 0x4
   668  0074                     	ds	1
   669  0075                     voltaje@volt_d2:
   670  0075                     conts@cent:	
   671                           ; 1 bytes @ 0x5
   672                           
   673  0075                     LCD_data_char@a:	
   674                           ; 1 bytes @ 0x5
   675                           
   676  0075                     ___wmul@multiplicand:	
   677                           ; 1 bytes @ 0x5
   678                           
   679                           
   680                           ; 2 bytes @ 0x5
   681  0075                     	ds	1
   682  0076                     ??_voltaje:
   683  0076                     ??_LCD_data_string:	
   684                           ; 1 bytes @ 0x6
   685                           
   686  0076                     ??_conts:	
   687                           ; 1 bytes @ 0x6
   688                           
   689  0076                     LCD_cmd@a:	
   690                           ; 1 bytes @ 0x6
   691                           
   692  0076                     n_ascii@value:	
   693                           ; 1 bytes @ 0x6
   694                           
   695                           
   696                           ; 1 bytes @ 0x6
   697  0076                     	ds	1
   698  0077                     ?_LCD_move_cursor:
   699  0077                     ??___wmul:	
   700                           ; 1 bytes @ 0x7
   701                           
   702  0077                     ??___awdiv:	
   703                           ; 1 bytes @ 0x7
   704                           
   705  0077                     voltaje@data_in:	
   706                           ; 1 bytes @ 0x7
   707                           
   708  0077                     conts@data_in:	
   709                           ; 1 bytes @ 0x7
   710                           
   711  0077                     LCD_move_cursor@b:	
   712                           ; 1 bytes @ 0x7
   713                           
   714                           
   715                           ; 1 bytes @ 0x7
   716  0077                     	ds	1
   717  0078                     ??_titulo:
   718                           
   719                           	psect	cstackBANK0
   720  0020                     __pcstackBANK0:	
   721                           ; 1 bytes @ 0x8
   722                           
   723  0020                     ??_LCD_Init:
   724  0020                     ??_LCD_move_cursor:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0020                     LCD_data_string@i:	
   728                           ; 1 bytes @ 0x0
   729                           
   730  0020                     ___wmul@product:	
   731                           ; 2 bytes @ 0x0
   732                           
   733                           
   734                           ; 2 bytes @ 0x0
   735  0020                     	ds	1
   736  0021                     LCD_move_cursor@a:
   737                           
   738                           ; 1 bytes @ 0x1
   739  0021                     	ds	1
   740  0022                     ?___awdiv:
   741  0022                     LCD_move_cursor@temp:	
   742                           ; 2 bytes @ 0x2
   743                           
   744  0022                     LCD_data_string@a:	
   745                           ; 1 bytes @ 0x2
   746                           
   747  0022                     ___awdiv@divisor:	
   748                           ; 1 bytes @ 0x2
   749                           
   750                           
   751                           ; 2 bytes @ 0x2
   752  0022                     	ds	1
   753  0023                     ??_show:
   754                           
   755                           ; 1 bytes @ 0x3
   756  0023                     	ds	1
   757  0024                     ___awdiv@dividend:
   758                           
   759                           ; 2 bytes @ 0x4
   760  0024                     	ds	2
   761  0026                     ___awdiv@counter:
   762                           
   763                           ; 1 bytes @ 0x6
   764  0026                     	ds	1
   765  0027                     ___awdiv@sign:
   766                           
   767                           ; 1 bytes @ 0x7
   768  0027                     	ds	1
   769  0028                     ___awdiv@quotient:
   770                           
   771                           ; 2 bytes @ 0x8
   772  0028                     	ds	2
   773  002A                     ?_map_var:
   774  002A                     map_var@v_out:	
   775                           ; 1 bytes @ 0xA
   776                           
   777                           
   778                           ; 1 bytes @ 0xA
   779  002A                     	ds	1
   780  002B                     map_var@inMin:
   781                           
   782                           ; 1 bytes @ 0xB
   783  002B                     	ds	1
   784  002C                     map_var@inMax:
   785                           
   786                           ; 1 bytes @ 0xC
   787  002C                     	ds	1
   788  002D                     map_var@outMin:
   789                           
   790                           ; 1 bytes @ 0xD
   791  002D                     	ds	1
   792  002E                     map_var@outMax:
   793                           
   794                           ; 1 bytes @ 0xE
   795  002E                     	ds	1
   796  002F                     ??_map_var:
   797                           
   798                           ; 1 bytes @ 0xF
   799  002F                     	ds	3
   800  0032                     map_var@v_in:
   801                           
   802                           ; 1 bytes @ 0x12
   803  0032                     	ds	1
   804  0033                     ??_main:
   805                           
   806                           ; 1 bytes @ 0x13
   807  0033                     	ds	4
   808                           
   809                           	psect	maintext
   810  0322                     __pmaintext:	
   811 ;;
   812 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   813 ;;
   814 ;; *************** function _main *****************
   815 ;; Defined at:
   816 ;;		line 63 in file "mas.c"
   817 ;; Parameters:    Size  Location     Type
   818 ;;		None
   819 ;; Auto vars:     Size  Location     Type
   820 ;;		None
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : B00/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         0       0       0       0       0
   831 ;;      Locals:         0       0       0       0       0
   832 ;;      Temps:          0       4       0       0       0
   833 ;;      Totals:         0       4       0       0       0
   834 ;;Total ram usage:        4 bytes
   835 ;; Hardware stack levels required when called:    5
   836 ;; This function calls:
   837 ;;		_LCD_Init
   838 ;;		_header
   839 ;;		_map_var
   840 ;;		_s1spi
   841 ;;		_s2spi
   842 ;;		_s3spi
   843 ;;		_setup
   844 ;;		_show
   845 ;;		_titulo
   846 ;;		_tnl_usart
   847 ;;		_voltaje
   848 ;; This function is called by:
   849 ;;		Startup code after reset
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           
   854                           ;psect for function _main
   855  0322                     _main:
   856  0322                     l2071:	
   857                           ;incstack = 0
   858                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   859                           
   860                           
   861                           ;mas.c: 64:     setup();
   862  0322  120A  118A  25E2  120A  118A  	fcall	_setup
   863                           
   864                           ;mas.c: 65:     LCD_Init();
   865  0327  120A  118A  2482  120A  118A  	fcall	_LCD_Init
   866                           
   867                           ;mas.c: 66:     header();
   868  032C  120A  118A  221A  120A  118A  	fcall	_header
   869  0331                     l105:	
   870                           ;mas.c: 67:     while (1) {
   871                           
   872                           
   873                           ;mas.c: 68:         s1spi();
   874  0331  120A  118A  270E  120A  118A  	fcall	_s1spi
   875  0336                     l2073:
   876                           
   877                           ;mas.c: 69:         _delay((unsigned long)((5)*(4000000/4000.0)));
   878  0336  3007               	movlw	7
   879  0337  1283               	bcf	3,5	;RP0=0, select bank0
   880  0338  1303               	bcf	3,6	;RP1=0, select bank0
   881  0339  00B4               	movwf	??_main+1
   882  033A  307C               	movlw	124
   883  033B  00B3               	movwf	??_main
   884  033C                     u1007:
   885  033C  0BB3               	decfsz	??_main,f
   886  033D  2B3C               	goto	u1007
   887  033E  0BB4               	decfsz	??_main+1,f
   888  033F  2B3C               	goto	u1007
   889  0340  0000               	nop
   890  0341                     l2075:
   891                           
   892                           ;mas.c: 70:         s2spi();
   893  0341  120A  118A  2700  120A  118A  	fcall	_s2spi
   894                           
   895                           ;mas.c: 71:         _delay((unsigned long)((5)*(4000000/4000.0)));
   896  0346  3007               	movlw	7
   897  0347  1283               	bcf	3,5	;RP0=0, select bank0
   898  0348  1303               	bcf	3,6	;RP1=0, select bank0
   899  0349  00B4               	movwf	??_main+1
   900  034A  307C               	movlw	124
   901  034B  00B3               	movwf	??_main
   902  034C                     u1017:
   903  034C  0BB3               	decfsz	??_main,f
   904  034D  2B4C               	goto	u1017
   905  034E  0BB4               	decfsz	??_main+1,f
   906  034F  2B4C               	goto	u1017
   907  0350  0000               	nop
   908  0351                     l2077:
   909                           
   910                           ;mas.c: 72:         s3spi();
   911  0351  120A  118A  26F2  120A  118A  	fcall	_s3spi
   912  0356                     l2079:
   913                           
   914                           ;mas.c: 73:         _delay((unsigned long)((5)*(4000000/4000.0)));
   915  0356  3007               	movlw	7
   916  0357  1283               	bcf	3,5	;RP0=0, select bank0
   917  0358  1303               	bcf	3,6	;RP1=0, select bank0
   918  0359  00B4               	movwf	??_main+1
   919  035A  307C               	movlw	124
   920  035B  00B3               	movwf	??_main
   921  035C                     u1027:
   922  035C  0BB3               	decfsz	??_main,f
   923  035D  2B5C               	goto	u1027
   924  035E  0BB4               	decfsz	??_main+1,f
   925  035F  2B5C               	goto	u1027
   926  0360  0000               	nop
   927  0361                     l2081:
   928                           
   929                           ;mas.c: 74:         map_var(temp, &temp_m, 0, 255, 13, 150);
   930  0361  303A               	movlw	(low (_temp_m| 0))& (0+255)
   931  0362  1283               	bcf	3,5	;RP0=0, select bank0
   932  0363  1303               	bcf	3,6	;RP1=0, select bank0
   933  0364  00B3               	movwf	??_main
   934  0365  0833               	movf	??_main,w
   935  0366  00AA               	movwf	map_var@v_out
   936  0367  01AB               	clrf	map_var@inMin
   937  0368  30FF               	movlw	255
   938  0369  00B4               	movwf	??_main+1
   939  036A  0834               	movf	??_main+1,w
   940  036B  00AC               	movwf	map_var@inMax
   941  036C  300D               	movlw	13
   942  036D  00B5               	movwf	??_main+2
   943  036E  0835               	movf	??_main+2,w
   944  036F  00AD               	movwf	map_var@outMin
   945  0370  3096               	movlw	150
   946  0371  00B6               	movwf	??_main+3
   947  0372  0836               	movf	??_main+3,w
   948  0373  00AE               	movwf	map_var@outMax
   949  0374  0838               	movf	_temp,w
   950  0375  120A  118A  2581  120A  118A  	fcall	_map_var
   951  037A                     l2083:
   952                           
   953                           ;mas.c: 75:         voltaje(pot, &pot_u, &pot_d1, &pot_d2);
   954  037A  303D               	movlw	(low (_pot_u| 0))& (0+255)
   955  037B  1283               	bcf	3,5	;RP0=0, select bank0
   956  037C  1303               	bcf	3,6	;RP1=0, select bank0
   957  037D  00B3               	movwf	??_main
   958  037E  0833               	movf	??_main,w
   959  037F  00F3               	movwf	voltaje@volt_u
   960  0380  303C               	movlw	(low (_pot_d1| 0))& (0+255)
   961  0381  00B4               	movwf	??_main+1
   962  0382  0834               	movf	??_main+1,w
   963  0383  00F4               	movwf	voltaje@volt_d1
   964  0384  303B               	movlw	(low (_pot_d2| 0))& (0+255)
   965  0385  00B5               	movwf	??_main+2
   966  0386  0835               	movf	??_main+2,w
   967  0387  00F5               	movwf	voltaje@volt_d2
   968  0388  083F               	movf	_pot,w
   969  0389  120A  118A  250A  120A  118A  	fcall	_voltaje
   970  038E                     l2085:
   971                           
   972                           ;mas.c: 76:         titulo();
   973  038E  120A  118A  26E3  120A  118A  	fcall	_titulo
   974  0393                     l2087:
   975                           
   976                           ;mas.c: 77:         show();
   977  0393  120A  118A  2029  120A  118A  	fcall	_show
   978                           
   979                           ;mas.c: 79:         tnl_usart();
   980  0398  120A  118A  2728  120A  118A  	fcall	_tnl_usart
   981  039D  2B31               	goto	l105
   982  039E  120A  118A  280C   	ljmp	start
   983  03A1                     __end_of_main:
   984                           
   985                           	psect	text1
   986  050A                     __ptext1:	
   987 ;; *************** function _voltaje *****************
   988 ;; Defined at:
   989 ;;		line 249 in file "mas.c"
   990 ;; Parameters:    Size  Location     Type
   991 ;;  data_in         1    wreg     unsigned char 
   992 ;;  volt_u          1    3[COMMON] PTR unsigned char 
   993 ;;		 -> pot_u(1), 
   994 ;;  volt_d1         1    4[COMMON] PTR unsigned char 
   995 ;;		 -> pot_d1(1), 
   996 ;;  volt_d2         1    5[COMMON] PTR unsigned char 
   997 ;;		 -> pot_d2(1), 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  data_in         1    7[COMMON] unsigned char 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         3       0       0       0       0
  1010 ;;      Locals:         1       0       0       0       0
  1011 ;;      Temps:          1       0       0       0       0
  1012 ;;      Totals:         5       0       0       0       0
  1013 ;;Total ram usage:        5 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; Hardware stack levels required when called:    1
  1016 ;; This function calls:
  1017 ;;		Nothing
  1018 ;; This function is called by:
  1019 ;;		_main
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _voltaje
  1025  050A                     _voltaje:
  1026                           
  1027                           ;incstack = 0
  1028                           ; Regs used in _voltaje: [wreg-fsr0h+status,2+status,0]
  1029                           ;voltaje@data_in stored from wreg
  1030  050A  00F7               	movwf	voltaje@data_in
  1031  050B                     l1647:
  1032                           
  1033                           ;mas.c: 250:     while (data_in > 49) {
  1034  050B  2D17               	goto	l1651
  1035  050C                     l1649:
  1036                           
  1037                           ;mas.c: 251:         data_in = data_in - 50;
  1038  050C  0877               	movf	voltaje@data_in,w
  1039  050D  3ECE               	addlw	206
  1040  050E  00F6               	movwf	??_voltaje
  1041  050F  0876               	movf	??_voltaje,w
  1042  0510  00F7               	movwf	voltaje@data_in
  1043                           
  1044                           ;mas.c: 252:         aux++;
  1045  0511  3001               	movlw	1
  1046  0512  00F6               	movwf	??_voltaje
  1047  0513  0876               	movf	??_voltaje,w
  1048  0514  1283               	bcf	3,5	;RP0=0, select bank0
  1049  0515  1303               	bcf	3,6	;RP1=0, select bank0
  1050  0516  07B7               	addwf	_aux,f
  1051  0517                     l1651:
  1052                           
  1053                           ;mas.c: 250:     while (data_in > 49) {
  1054  0517  3032               	movlw	50
  1055  0518  0277               	subwf	voltaje@data_in,w
  1056  0519  1803               	skipnc
  1057  051A  2D1C               	goto	u681
  1058  051B  2D1D               	goto	u680
  1059  051C                     u681:
  1060  051C  2D0C               	goto	l1649
  1061  051D                     u680:
  1062  051D                     l1653:
  1063                           
  1064                           ;mas.c: 254:     *volt_u = aux;
  1065  051D  1283               	bcf	3,5	;RP0=0, select bank0
  1066  051E  1303               	bcf	3,6	;RP1=0, select bank0
  1067  051F  0837               	movf	_aux,w
  1068  0520  00F6               	movwf	??_voltaje
  1069  0521  0873               	movf	voltaje@volt_u,w
  1070  0522  0084               	movwf	4
  1071  0523  0876               	movf	??_voltaje,w
  1072  0524  1383               	bcf	3,7	;select IRP bank0
  1073  0525  0080               	movwf	0
  1074  0526                     l1655:
  1075                           
  1076                           ;mas.c: 255:     aux = 0;
  1077  0526  01B7               	clrf	_aux
  1078                           
  1079                           ;mas.c: 257:     while (data_in > 9) {
  1080  0527  2D31               	goto	l1659
  1081  0528                     l1657:
  1082                           
  1083                           ;mas.c: 258:         data_in = data_in - 10;
  1084  0528  0877               	movf	voltaje@data_in,w
  1085  0529  3EF6               	addlw	246
  1086  052A  00F6               	movwf	??_voltaje
  1087  052B  0876               	movf	??_voltaje,w
  1088  052C  00F7               	movwf	voltaje@data_in
  1089                           
  1090                           ;mas.c: 259:         aux++;
  1091  052D  3001               	movlw	1
  1092  052E  00F6               	movwf	??_voltaje
  1093  052F  0876               	movf	??_voltaje,w
  1094  0530  07B7               	addwf	_aux,f
  1095  0531                     l1659:
  1096                           
  1097                           ;mas.c: 257:     while (data_in > 9) {
  1098  0531  300A               	movlw	10
  1099  0532  0277               	subwf	voltaje@data_in,w
  1100  0533  1803               	skipnc
  1101  0534  2D36               	goto	u691
  1102  0535  2D37               	goto	u690
  1103  0536                     u691:
  1104  0536  2D28               	goto	l1657
  1105  0537                     u690:
  1106  0537                     l1661:
  1107                           
  1108                           ;mas.c: 261:     *volt_d1 = aux;
  1109  0537  0837               	movf	_aux,w
  1110  0538  00F6               	movwf	??_voltaje
  1111  0539  0874               	movf	voltaje@volt_d1,w
  1112  053A  0084               	movwf	4
  1113  053B  0876               	movf	??_voltaje,w
  1114  053C  1383               	bcf	3,7	;select IRP bank0
  1115  053D  0080               	movwf	0
  1116                           
  1117                           ;mas.c: 262:     *volt_d2 = data_in;
  1118  053E  0877               	movf	voltaje@data_in,w
  1119  053F  00F6               	movwf	??_voltaje
  1120  0540  0875               	movf	voltaje@volt_d2,w
  1121  0541  0084               	movwf	4
  1122  0542  0876               	movf	??_voltaje,w
  1123  0543  0080               	movwf	0
  1124  0544                     l1663:
  1125                           
  1126                           ;mas.c: 263:     aux = 0;
  1127  0544  01B7               	clrf	_aux
  1128  0545                     l141:
  1129  0545  0008               	return
  1130  0546                     __end_of_voltaje:
  1131                           
  1132                           	psect	text2
  1133  06E3                     __ptext2:	
  1134 ;; *************** function _titulo *****************
  1135 ;; Defined at:
  1136 ;;		line 111 in file "mas.c"
  1137 ;; Parameters:    Size  Location     Type
  1138 ;;		None
  1139 ;; Auto vars:     Size  Location     Type
  1140 ;;		None
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  1    wreg      void 
  1143 ;; Registers used:
  1144 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1150 ;;      Params:         0       0       0       0       0
  1151 ;;      Locals:         0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0
  1153 ;;      Totals:         0       0       0       0       0
  1154 ;;Total ram usage:        0 bytes
  1155 ;; Hardware stack levels used:    1
  1156 ;; Hardware stack levels required when called:    4
  1157 ;; This function calls:
  1158 ;;		_LCD_data_string
  1159 ;;		_LCD_move_cursor
  1160 ;; This function is called by:
  1161 ;;		_main
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165                           
  1166                           ;psect for function _titulo
  1167  06E3                     _titulo:
  1168  06E3                     l1969:	
  1169                           ;incstack = 0
  1170                           ; Regs used in _titulo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1171                           
  1172                           
  1173                           ;mas.c: 112:     LCD_move_cursor(1, 1);
  1174  06E3  01F7               	clrf	LCD_move_cursor@b
  1175  06E4  0AF7               	incf	LCD_move_cursor@b,f
  1176  06E5  3001               	movlw	1
  1177  06E6  120A  118A  2662  120A  118A  	fcall	_LCD_move_cursor
  1178  06EB                     l1971:
  1179                           
  1180                           ;mas.c: 113:     LCD_data_string("S1:   S2:   S3: ");
  1181  06EB  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1182  06EC  120A  118A  2639  120A  118A  	fcall	_LCD_data_string
  1183  06F1                     l114:
  1184  06F1  0008               	return
  1185  06F2                     __end_of_titulo:
  1186                           
  1187                           	psect	text3
  1188  0029                     __ptext3:	
  1189 ;; *************** function _show *****************
  1190 ;; Defined at:
  1191 ;;		line 175 in file "mas.c"
  1192 ;; Parameters:    Size  Location     Type
  1193 ;;		None
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;		None
  1196 ;; Return value:  Size  Location     Type
  1197 ;;                  1    wreg      void 
  1198 ;; Registers used:
  1199 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1200 ;; Tracked objects:
  1201 ;;		On entry : 0/0
  1202 ;;		On exit  : 0/0
  1203 ;;		Unchanged: 0/0
  1204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1205 ;;      Params:         0       0       0       0       0
  1206 ;;      Locals:         0       0       0       0       0
  1207 ;;      Temps:          0       3       0       0       0
  1208 ;;      Totals:         0       3       0       0       0
  1209 ;;Total ram usage:        3 bytes
  1210 ;; Hardware stack levels used:    1
  1211 ;; Hardware stack levels required when called:    4
  1212 ;; This function calls:
  1213 ;;		_LCD_data_char
  1214 ;;		_LCD_data_string
  1215 ;;		_LCD_move_cursor
  1216 ;;		_conts
  1217 ;;		_n_ascii
  1218 ;;		_tvirt_usart
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           
  1225                           ;psect for function _show
  1226  0029                     _show:
  1227  0029                     l1973:	
  1228                           ;incstack = 0
  1229                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1230                           
  1231                           
  1232                           ;mas.c: 176:     LCD_move_cursor(2, 1);
  1233  0029  01F7               	clrf	LCD_move_cursor@b
  1234  002A  0AF7               	incf	LCD_move_cursor@b,f
  1235  002B  3002               	movlw	2
  1236  002C  120A  118A  2662  120A  118A  	fcall	_LCD_move_cursor
  1237  0031                     l1975:
  1238                           
  1239                           ;mas.c: 178:     n_ascii(pot_u, &sdata);
  1240  0031  3078               	movlw	(low (_sdata| 0))& (0+255)
  1241  0032  1283               	bcf	3,5	;RP0=0, select bank0
  1242  0033  1303               	bcf	3,6	;RP1=0, select bank0
  1243  0034  00A3               	movwf	??_show
  1244  0035  0823               	movf	??_show,w
  1245  0036  00F3               	movwf	n_ascii@code
  1246  0037  083D               	movf	_pot_u,w
  1247  0038  120A  118A  23A1  120A  118A  	fcall	_n_ascii
  1248  003D                     l1977:
  1249                           
  1250                           ;mas.c: 179:     LCD_data_char(sdata);
  1251  003D  0878               	movf	_sdata,w
  1252  003E  120A  118A  26BC  120A  118A  	fcall	_LCD_data_char
  1253  0043                     l1979:
  1254                           
  1255                           ;mas.c: 180:     tvirt_usart(sdata);
  1256  0043  0878               	movf	_sdata,w
  1257  0044  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1258  0049                     l1981:
  1259                           
  1260                           ;mas.c: 181:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1261  0049  3003               	movlw	3
  1262  004A  1283               	bcf	3,5	;RP0=0, select bank0
  1263  004B  1303               	bcf	3,6	;RP1=0, select bank0
  1264  004C  00A4               	movwf	??_show+1
  1265  004D  3097               	movlw	151
  1266  004E  00A3               	movwf	??_show
  1267  004F                     u1037:
  1268  004F  0BA3               	decfsz	??_show,f
  1269  0050  284F               	goto	u1037
  1270  0051  0BA4               	decfsz	??_show+1,f
  1271  0052  284F               	goto	u1037
  1272  0053                     l1983:
  1273                           
  1274                           ;mas.c: 182:     LCD_data_char(46);
  1275  0053  302E               	movlw	46
  1276  0054  120A  118A  26BC  120A  118A  	fcall	_LCD_data_char
  1277  0059                     l1985:
  1278                           
  1279                           ;mas.c: 183:     tvirt_usart(46);
  1280  0059  302E               	movlw	46
  1281  005A  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1282  005F                     l1987:
  1283                           
  1284                           ;mas.c: 184:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1285  005F  3003               	movlw	3
  1286  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0062  00A4               	movwf	??_show+1
  1289  0063  3097               	movlw	151
  1290  0064  00A3               	movwf	??_show
  1291  0065                     u1047:
  1292  0065  0BA3               	decfsz	??_show,f
  1293  0066  2865               	goto	u1047
  1294  0067  0BA4               	decfsz	??_show+1,f
  1295  0068  2865               	goto	u1047
  1296  0069                     l1989:
  1297                           
  1298                           ;mas.c: 185:     n_ascii(pot_d1, &sdata);
  1299  0069  3078               	movlw	(low (_sdata| 0))& (0+255)
  1300  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1301  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1302  006C  00A3               	movwf	??_show
  1303  006D  0823               	movf	??_show,w
  1304  006E  00F3               	movwf	n_ascii@code
  1305  006F  083C               	movf	_pot_d1,w
  1306  0070  120A  118A  23A1  120A  118A  	fcall	_n_ascii
  1307                           
  1308                           ;mas.c: 186:     LCD_data_char(sdata);
  1309  0075  0878               	movf	_sdata,w
  1310  0076  120A  118A  26BC  120A  118A  	fcall	_LCD_data_char
  1311                           
  1312                           ;mas.c: 187:     tvirt_usart(sdata);
  1313  007B  0878               	movf	_sdata,w
  1314  007C  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1315  0081                     l1991:
  1316                           
  1317                           ;mas.c: 188:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1318  0081  3003               	movlw	3
  1319  0082  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0083  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0084  00A4               	movwf	??_show+1
  1322  0085  3097               	movlw	151
  1323  0086  00A3               	movwf	??_show
  1324  0087                     u1057:
  1325  0087  0BA3               	decfsz	??_show,f
  1326  0088  2887               	goto	u1057
  1327  0089  0BA4               	decfsz	??_show+1,f
  1328  008A  2887               	goto	u1057
  1329  008B                     l1993:
  1330                           
  1331                           ;mas.c: 189:     n_ascii(pot_d2, &sdata);
  1332  008B  3078               	movlw	(low (_sdata| 0))& (0+255)
  1333  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1334  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1335  008E  00A3               	movwf	??_show
  1336  008F  0823               	movf	??_show,w
  1337  0090  00F3               	movwf	n_ascii@code
  1338  0091  083B               	movf	_pot_d2,w
  1339  0092  120A  118A  23A1  120A  118A  	fcall	_n_ascii
  1340  0097                     l1995:
  1341                           
  1342                           ;mas.c: 190:     LCD_data_char(sdata);
  1343  0097  0878               	movf	_sdata,w
  1344  0098  120A  118A  26BC  120A  118A  	fcall	_LCD_data_char
  1345  009D                     l1997:
  1346                           
  1347                           ;mas.c: 191:     tvirt_usart(sdata);
  1348  009D  0878               	movf	_sdata,w
  1349  009E  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1350  00A3                     l1999:
  1351                           
  1352                           ;mas.c: 192:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1353  00A3  3003               	movlw	3
  1354  00A4  1283               	bcf	3,5	;RP0=0, select bank0
  1355  00A5  1303               	bcf	3,6	;RP1=0, select bank0
  1356  00A6  00A4               	movwf	??_show+1
  1357  00A7  3097               	movlw	151
  1358  00A8  00A3               	movwf	??_show
  1359  00A9                     u1067:
  1360  00A9  0BA3               	decfsz	??_show,f
  1361  00AA  28A9               	goto	u1067
  1362  00AB  0BA4               	decfsz	??_show+1,f
  1363  00AC  28A9               	goto	u1067
  1364  00AD                     l2001:
  1365                           
  1366                           ;mas.c: 193:     LCD_data_char(86);
  1367  00AD  3056               	movlw	86
  1368  00AE  120A  118A  26BC  120A  118A  	fcall	_LCD_data_char
  1369  00B3                     l2003:
  1370                           
  1371                           ;mas.c: 194:     tvirt_usart(86);
  1372  00B3  3056               	movlw	86
  1373  00B4  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1374  00B9                     l2005:
  1375                           
  1376                           ;mas.c: 195:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1377  00B9  3003               	movlw	3
  1378  00BA  1283               	bcf	3,5	;RP0=0, select bank0
  1379  00BB  1303               	bcf	3,6	;RP1=0, select bank0
  1380  00BC  00A4               	movwf	??_show+1
  1381  00BD  3097               	movlw	151
  1382  00BE  00A3               	movwf	??_show
  1383  00BF                     u1077:
  1384  00BF  0BA3               	decfsz	??_show,f
  1385  00C0  28BF               	goto	u1077
  1386  00C1  0BA4               	decfsz	??_show+1,f
  1387  00C2  28BF               	goto	u1077
  1388  00C3                     l2007:
  1389                           
  1390                           ;mas.c: 196:     LCD_data_string("  ");
  1391  00C3  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1392  00C4  120A  118A  2639  120A  118A  	fcall	_LCD_data_string
  1393  00C9                     l2009:
  1394                           
  1395                           ;mas.c: 197:     tvirt_usart(32);
  1396  00C9  3020               	movlw	32
  1397  00CA  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1398                           
  1399                           ;mas.c: 198:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1400  00CF  3003               	movlw	3
  1401  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1402  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1403  00D2  00A4               	movwf	??_show+1
  1404  00D3  3097               	movlw	151
  1405  00D4  00A3               	movwf	??_show
  1406  00D5                     u1087:
  1407  00D5  0BA3               	decfsz	??_show,f
  1408  00D6  28D5               	goto	u1087
  1409  00D7  0BA4               	decfsz	??_show+1,f
  1410  00D8  28D5               	goto	u1087
  1411  00D9                     l2011:
  1412                           
  1413                           ;mas.c: 199:     tvirt_usart(32);
  1414  00D9  3020               	movlw	32
  1415  00DA  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1416  00DF                     l2013:
  1417                           
  1418                           ;mas.c: 200:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1419  00DF  3003               	movlw	3
  1420  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1421  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1422  00E2  00A4               	movwf	??_show+1
  1423  00E3  3097               	movlw	151
  1424  00E4  00A3               	movwf	??_show
  1425  00E5                     u1097:
  1426  00E5  0BA3               	decfsz	??_show,f
  1427  00E6  28E5               	goto	u1097
  1428  00E7  0BA4               	decfsz	??_show+1,f
  1429  00E8  28E5               	goto	u1097
  1430  00E9                     l2015:
  1431                           
  1432                           ;mas.c: 203:     conts(cont, &cont_u, &cont_d, &cont_c);
  1433  00E9  307A               	movlw	(low (_cont_u| 0))& (0+255)
  1434  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1435  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1436  00EC  00A3               	movwf	??_show
  1437  00ED  0823               	movf	??_show,w
  1438  00EE  00F3               	movwf	conts@uni
  1439  00EF  3079               	movlw	(low (_cont_d| 0))& (0+255)
  1440  00F0  00A4               	movwf	??_show+1
  1441  00F1  0824               	movf	??_show+1,w
  1442  00F2  00F4               	movwf	conts@dec
  1443  00F3  3039               	movlw	(low (_cont_c| 0))& (0+255)
  1444  00F4  00A5               	movwf	??_show+2
  1445  00F5  0825               	movf	??_show+2,w
  1446  00F6  00F5               	movwf	conts@cent
  1447  00F7  083E               	movf	_cont,w
  1448  00F8  120A  118A  2546  120A  118A  	fcall	_conts
  1449  00FD                     l2017:
  1450                           
  1451                           ;mas.c: 204:     n_ascii(cont_c, &sdata);
  1452  00FD  3078               	movlw	(low (_sdata| 0))& (0+255)
  1453  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  1454  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0100  00A3               	movwf	??_show
  1456  0101  0823               	movf	??_show,w
  1457  0102  00F3               	movwf	n_ascii@code
  1458  0103  0839               	movf	_cont_c,w
  1459  0104  120A  118A  23A1  120A  118A  	fcall	_n_ascii
  1460                           
  1461                           ;mas.c: 205:     LCD_data_char(sdata);
  1462  0109  0878               	movf	_sdata,w
  1463  010A  120A  118A  26BC  120A  118A  	fcall	_LCD_data_char
  1464                           
  1465                           ;mas.c: 206:     tvirt_usart(sdata);
  1466  010F  0878               	movf	_sdata,w
  1467  0110  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1468  0115                     l2019:
  1469                           
  1470                           ;mas.c: 207:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1471  0115  3003               	movlw	3
  1472  0116  1283               	bcf	3,5	;RP0=0, select bank0
  1473  0117  1303               	bcf	3,6	;RP1=0, select bank0
  1474  0118  00A4               	movwf	??_show+1
  1475  0119  3097               	movlw	151
  1476  011A  00A3               	movwf	??_show
  1477  011B                     u1107:
  1478  011B  0BA3               	decfsz	??_show,f
  1479  011C  291B               	goto	u1107
  1480  011D  0BA4               	decfsz	??_show+1,f
  1481  011E  291B               	goto	u1107
  1482  011F                     l2021:
  1483                           
  1484                           ;mas.c: 208:     n_ascii(cont_d, &sdata);
  1485  011F  3078               	movlw	(low (_sdata| 0))& (0+255)
  1486  0120  1283               	bcf	3,5	;RP0=0, select bank0
  1487  0121  1303               	bcf	3,6	;RP1=0, select bank0
  1488  0122  00A3               	movwf	??_show
  1489  0123  0823               	movf	??_show,w
  1490  0124  00F3               	movwf	n_ascii@code
  1491  0125  0879               	movf	_cont_d,w
  1492  0126  120A  118A  23A1  120A  118A  	fcall	_n_ascii
  1493  012B                     l2023:
  1494                           
  1495                           ;mas.c: 209:     LCD_data_char(sdata);
  1496  012B  0878               	movf	_sdata,w
  1497  012C  120A  118A  26BC  120A  118A  	fcall	_LCD_data_char
  1498  0131                     l2025:
  1499                           
  1500                           ;mas.c: 210:     tvirt_usart(sdata);
  1501  0131  0878               	movf	_sdata,w
  1502  0132  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1503  0137                     l2027:
  1504                           
  1505                           ;mas.c: 211:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1506  0137  3003               	movlw	3
  1507  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1509  013A  00A4               	movwf	??_show+1
  1510  013B  3097               	movlw	151
  1511  013C  00A3               	movwf	??_show
  1512  013D                     u1117:
  1513  013D  0BA3               	decfsz	??_show,f
  1514  013E  293D               	goto	u1117
  1515  013F  0BA4               	decfsz	??_show+1,f
  1516  0140  293D               	goto	u1117
  1517  0141                     l2029:
  1518                           
  1519                           ;mas.c: 212:     n_ascii(cont_u, &sdata);
  1520  0141  3078               	movlw	(low (_sdata| 0))& (0+255)
  1521  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1522  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1523  0144  00A3               	movwf	??_show
  1524  0145  0823               	movf	??_show,w
  1525  0146  00F3               	movwf	n_ascii@code
  1526  0147  087A               	movf	_cont_u,w
  1527  0148  120A  118A  23A1  120A  118A  	fcall	_n_ascii
  1528                           
  1529                           ;mas.c: 213:     LCD_data_char(sdata);
  1530  014D  0878               	movf	_sdata,w
  1531  014E  120A  118A  26BC  120A  118A  	fcall	_LCD_data_char
  1532                           
  1533                           ;mas.c: 214:     tvirt_usart(sdata);
  1534  0153  0878               	movf	_sdata,w
  1535  0154  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1536  0159                     l2031:
  1537                           
  1538                           ;mas.c: 215:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1539  0159  3003               	movlw	3
  1540  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1541  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1542  015C  00A4               	movwf	??_show+1
  1543  015D  3097               	movlw	151
  1544  015E  00A3               	movwf	??_show
  1545  015F                     u1127:
  1546  015F  0BA3               	decfsz	??_show,f
  1547  0160  295F               	goto	u1127
  1548  0161  0BA4               	decfsz	??_show+1,f
  1549  0162  295F               	goto	u1127
  1550  0163                     l2033:
  1551                           
  1552                           ;mas.c: 216:     LCD_data_string("  ");
  1553  0163  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1554  0164  120A  118A  2639  120A  118A  	fcall	_LCD_data_string
  1555  0169                     l2035:
  1556                           
  1557                           ;mas.c: 217:     tvirt_usart(32);
  1558  0169  3020               	movlw	32
  1559  016A  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1560  016F                     l2037:
  1561                           
  1562                           ;mas.c: 218:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1563  016F  3003               	movlw	3
  1564  0170  1283               	bcf	3,5	;RP0=0, select bank0
  1565  0171  1303               	bcf	3,6	;RP1=0, select bank0
  1566  0172  00A4               	movwf	??_show+1
  1567  0173  3097               	movlw	151
  1568  0174  00A3               	movwf	??_show
  1569  0175                     u1137:
  1570  0175  0BA3               	decfsz	??_show,f
  1571  0176  2975               	goto	u1137
  1572  0177  0BA4               	decfsz	??_show+1,f
  1573  0178  2975               	goto	u1137
  1574  0179                     l2039:
  1575                           
  1576                           ;mas.c: 219:     tvirt_usart(32);
  1577  0179  3020               	movlw	32
  1578  017A  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1579  017F                     l2041:
  1580                           
  1581                           ;mas.c: 220:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1582  017F  3003               	movlw	3
  1583  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1584  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1585  0182  00A4               	movwf	??_show+1
  1586  0183  3097               	movlw	151
  1587  0184  00A3               	movwf	??_show
  1588  0185                     u1147:
  1589  0185  0BA3               	decfsz	??_show,f
  1590  0186  2985               	goto	u1147
  1591  0187  0BA4               	decfsz	??_show+1,f
  1592  0188  2985               	goto	u1147
  1593  0189                     l2043:
  1594                           
  1595                           ;mas.c: 223:     conts(temp_m, &cont_u, &cont_d, &cont_c);
  1596  0189  307A               	movlw	(low (_cont_u| 0))& (0+255)
  1597  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1598  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1599  018C  00A3               	movwf	??_show
  1600  018D  0823               	movf	??_show,w
  1601  018E  00F3               	movwf	conts@uni
  1602  018F  3079               	movlw	(low (_cont_d| 0))& (0+255)
  1603  0190  00A4               	movwf	??_show+1
  1604  0191  0824               	movf	??_show+1,w
  1605  0192  00F4               	movwf	conts@dec
  1606  0193  3039               	movlw	(low (_cont_c| 0))& (0+255)
  1607  0194  00A5               	movwf	??_show+2
  1608  0195  0825               	movf	??_show+2,w
  1609  0196  00F5               	movwf	conts@cent
  1610  0197  083A               	movf	_temp_m,w
  1611  0198  120A  118A  2546  120A  118A  	fcall	_conts
  1612  019D                     l2045:
  1613                           
  1614                           ;mas.c: 224:     n_ascii(cont_c, &sdata);
  1615  019D  3078               	movlw	(low (_sdata| 0))& (0+255)
  1616  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1617  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1618  01A0  00A3               	movwf	??_show
  1619  01A1  0823               	movf	??_show,w
  1620  01A2  00F3               	movwf	n_ascii@code
  1621  01A3  0839               	movf	_cont_c,w
  1622  01A4  120A  118A  23A1  120A  118A  	fcall	_n_ascii
  1623  01A9                     l2047:
  1624                           
  1625                           ;mas.c: 225:     LCD_data_char(sdata);
  1626  01A9  0878               	movf	_sdata,w
  1627  01AA  120A  118A  26BC  120A  118A  	fcall	_LCD_data_char
  1628  01AF                     l2049:
  1629                           
  1630                           ;mas.c: 226:     tvirt_usart(sdata);
  1631  01AF  0878               	movf	_sdata,w
  1632  01B0  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1633  01B5                     l2051:
  1634                           
  1635                           ;mas.c: 227:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1636  01B5  3003               	movlw	3
  1637  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  1638  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  1639  01B8  00A4               	movwf	??_show+1
  1640  01B9  3097               	movlw	151
  1641  01BA  00A3               	movwf	??_show
  1642  01BB                     u1157:
  1643  01BB  0BA3               	decfsz	??_show,f
  1644  01BC  29BB               	goto	u1157
  1645  01BD  0BA4               	decfsz	??_show+1,f
  1646  01BE  29BB               	goto	u1157
  1647  01BF                     l2053:
  1648                           
  1649                           ;mas.c: 228:     n_ascii(cont_d, &sdata);
  1650  01BF  3078               	movlw	(low (_sdata| 0))& (0+255)
  1651  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  1652  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  1653  01C2  00A3               	movwf	??_show
  1654  01C3  0823               	movf	??_show,w
  1655  01C4  00F3               	movwf	n_ascii@code
  1656  01C5  0879               	movf	_cont_d,w
  1657  01C6  120A  118A  23A1  120A  118A  	fcall	_n_ascii
  1658                           
  1659                           ;mas.c: 229:     LCD_data_char(sdata);
  1660  01CB  0878               	movf	_sdata,w
  1661  01CC  120A  118A  26BC  120A  118A  	fcall	_LCD_data_char
  1662                           
  1663                           ;mas.c: 230:     tvirt_usart(sdata);
  1664  01D1  0878               	movf	_sdata,w
  1665  01D2  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1666  01D7                     l2055:
  1667                           
  1668                           ;mas.c: 231:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1669  01D7  3003               	movlw	3
  1670  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1671  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1672  01DA  00A4               	movwf	??_show+1
  1673  01DB  3097               	movlw	151
  1674  01DC  00A3               	movwf	??_show
  1675  01DD                     u1167:
  1676  01DD  0BA3               	decfsz	??_show,f
  1677  01DE  29DD               	goto	u1167
  1678  01DF  0BA4               	decfsz	??_show+1,f
  1679  01E0  29DD               	goto	u1167
  1680  01E1                     l2057:
  1681                           
  1682                           ;mas.c: 232:     n_ascii(cont_u, &sdata);
  1683  01E1  3078               	movlw	(low (_sdata| 0))& (0+255)
  1684  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1685  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1686  01E4  00A3               	movwf	??_show
  1687  01E5  0823               	movf	??_show,w
  1688  01E6  00F3               	movwf	n_ascii@code
  1689  01E7  087A               	movf	_cont_u,w
  1690  01E8  120A  118A  23A1  120A  118A  	fcall	_n_ascii
  1691  01ED                     l2059:
  1692                           
  1693                           ;mas.c: 233:     LCD_data_char(sdata);
  1694  01ED  0878               	movf	_sdata,w
  1695  01EE  120A  118A  26BC  120A  118A  	fcall	_LCD_data_char
  1696  01F3                     l2061:
  1697                           
  1698                           ;mas.c: 234:     tvirt_usart(sdata);
  1699  01F3  0878               	movf	_sdata,w
  1700  01F4  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1701  01F9                     l2063:
  1702                           
  1703                           ;mas.c: 235:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1704  01F9  3003               	movlw	3
  1705  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1706  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1707  01FC  00A4               	movwf	??_show+1
  1708  01FD  3097               	movlw	151
  1709  01FE  00A3               	movwf	??_show
  1710  01FF                     u1177:
  1711  01FF  0BA3               	decfsz	??_show,f
  1712  0200  29FF               	goto	u1177
  1713  0201  0BA4               	decfsz	??_show+1,f
  1714  0202  29FF               	goto	u1177
  1715  0203                     l2065:
  1716                           
  1717                           ;mas.c: 236:     LCD_data_char(67);
  1718  0203  3043               	movlw	67
  1719  0204  120A  118A  26BC  120A  118A  	fcall	_LCD_data_char
  1720  0209                     l2067:
  1721                           
  1722                           ;mas.c: 237:     tvirt_usart(67);
  1723  0209  3043               	movlw	67
  1724  020A  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  1725  020F                     l2069:
  1726                           
  1727                           ;mas.c: 238:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1728  020F  3003               	movlw	3
  1729  0210  1283               	bcf	3,5	;RP0=0, select bank0
  1730  0211  1303               	bcf	3,6	;RP1=0, select bank0
  1731  0212  00A4               	movwf	??_show+1
  1732  0213  3097               	movlw	151
  1733  0214  00A3               	movwf	??_show
  1734  0215                     u1187:
  1735  0215  0BA3               	decfsz	??_show,f
  1736  0216  2A15               	goto	u1187
  1737  0217  0BA4               	decfsz	??_show+1,f
  1738  0218  2A15               	goto	u1187
  1739  0219                     l129:
  1740  0219  0008               	return
  1741  021A                     __end_of_show:
  1742                           
  1743                           	psect	text4
  1744  03A1                     __ptext4:	
  1745 ;; *************** function _n_ascii *****************
  1746 ;; Defined at:
  1747 ;;		line 45 in file "usart.c"
  1748 ;; Parameters:    Size  Location     Type
  1749 ;;  value           1    wreg     unsigned char 
  1750 ;;  code            1    3[COMMON] PTR unsigned char 
  1751 ;;		 -> sdata(1), 
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;  value           1    6[COMMON] unsigned char 
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1763 ;;      Params:         1       0       0       0       0
  1764 ;;      Locals:         1       0       0       0       0
  1765 ;;      Temps:          2       0       0       0       0
  1766 ;;      Totals:         4       0       0       0       0
  1767 ;;Total ram usage:        4 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    1
  1770 ;; This function calls:
  1771 ;;		Nothing
  1772 ;; This function is called by:
  1773 ;;		_show
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function _n_ascii
  1779  03A1                     _n_ascii:
  1780                           
  1781                           ;incstack = 0
  1782                           ; Regs used in _n_ascii: [wreg-fsr0h+status,2+status,0]
  1783                           ;n_ascii@value stored from wreg
  1784  03A1  00F6               	movwf	n_ascii@value
  1785  03A2                     l1441:
  1786                           
  1787                           ;usart.c: 46:     switch (value) {
  1788  03A2  2BF0               	goto	l1467
  1789  03A3                     l1443:
  1790                           
  1791                           ;usart.c: 48:             *code = 48;
  1792  03A3  3030               	movlw	48
  1793  03A4  00F4               	movwf	??_n_ascii
  1794  03A5  0873               	movf	n_ascii@code,w
  1795  03A6  0084               	movwf	4
  1796  03A7  0874               	movf	??_n_ascii,w
  1797  03A8  0080               	movwf	0
  1798                           
  1799                           ;usart.c: 49:             break;
  1800  03A9  2C18               	goto	l291
  1801  03AA                     l1445:
  1802                           
  1803                           ;usart.c: 51:             *code = 49;
  1804  03AA  3031               	movlw	49
  1805  03AB  00F4               	movwf	??_n_ascii
  1806  03AC  0873               	movf	n_ascii@code,w
  1807  03AD  0084               	movwf	4
  1808  03AE  0874               	movf	??_n_ascii,w
  1809  03AF  0080               	movwf	0
  1810                           
  1811                           ;usart.c: 52:             break;
  1812  03B0  2C18               	goto	l291
  1813  03B1                     l1447:
  1814                           
  1815                           ;usart.c: 54:             *code = 50;
  1816  03B1  3032               	movlw	50
  1817  03B2  00F4               	movwf	??_n_ascii
  1818  03B3  0873               	movf	n_ascii@code,w
  1819  03B4  0084               	movwf	4
  1820  03B5  0874               	movf	??_n_ascii,w
  1821  03B6  0080               	movwf	0
  1822                           
  1823                           ;usart.c: 55:             break;
  1824  03B7  2C18               	goto	l291
  1825  03B8                     l1449:
  1826                           
  1827                           ;usart.c: 57:             *code = 51;
  1828  03B8  3033               	movlw	51
  1829  03B9  00F4               	movwf	??_n_ascii
  1830  03BA  0873               	movf	n_ascii@code,w
  1831  03BB  0084               	movwf	4
  1832  03BC  0874               	movf	??_n_ascii,w
  1833  03BD  0080               	movwf	0
  1834                           
  1835                           ;usart.c: 58:             break;
  1836  03BE  2C18               	goto	l291
  1837  03BF                     l1451:
  1838                           
  1839                           ;usart.c: 60:             *code = 52;
  1840  03BF  3034               	movlw	52
  1841  03C0  00F4               	movwf	??_n_ascii
  1842  03C1  0873               	movf	n_ascii@code,w
  1843  03C2  0084               	movwf	4
  1844  03C3  0874               	movf	??_n_ascii,w
  1845  03C4  0080               	movwf	0
  1846                           
  1847                           ;usart.c: 61:             break;
  1848  03C5  2C18               	goto	l291
  1849  03C6                     l1453:
  1850                           
  1851                           ;usart.c: 63:             *code = 53;
  1852  03C6  3035               	movlw	53
  1853  03C7  00F4               	movwf	??_n_ascii
  1854  03C8  0873               	movf	n_ascii@code,w
  1855  03C9  0084               	movwf	4
  1856  03CA  0874               	movf	??_n_ascii,w
  1857  03CB  0080               	movwf	0
  1858                           
  1859                           ;usart.c: 64:             break;
  1860  03CC  2C18               	goto	l291
  1861  03CD                     l1455:
  1862                           
  1863                           ;usart.c: 66:             *code = 54;
  1864  03CD  3036               	movlw	54
  1865  03CE  00F4               	movwf	??_n_ascii
  1866  03CF  0873               	movf	n_ascii@code,w
  1867  03D0  0084               	movwf	4
  1868  03D1  0874               	movf	??_n_ascii,w
  1869  03D2  0080               	movwf	0
  1870                           
  1871                           ;usart.c: 67:             break;
  1872  03D3  2C18               	goto	l291
  1873  03D4                     l1457:
  1874                           
  1875                           ;usart.c: 69:             *code = 55;
  1876  03D4  3037               	movlw	55
  1877  03D5  00F4               	movwf	??_n_ascii
  1878  03D6  0873               	movf	n_ascii@code,w
  1879  03D7  0084               	movwf	4
  1880  03D8  0874               	movf	??_n_ascii,w
  1881  03D9  0080               	movwf	0
  1882                           
  1883                           ;usart.c: 70:             break;
  1884  03DA  2C18               	goto	l291
  1885  03DB                     l1459:
  1886                           
  1887                           ;usart.c: 72:             *code = 56;
  1888  03DB  3038               	movlw	56
  1889  03DC  00F4               	movwf	??_n_ascii
  1890  03DD  0873               	movf	n_ascii@code,w
  1891  03DE  0084               	movwf	4
  1892  03DF  0874               	movf	??_n_ascii,w
  1893  03E0  0080               	movwf	0
  1894                           
  1895                           ;usart.c: 73:             break;
  1896  03E1  2C18               	goto	l291
  1897  03E2                     l1461:
  1898                           
  1899                           ;usart.c: 75:             *code = 57;
  1900  03E2  3039               	movlw	57
  1901  03E3  00F4               	movwf	??_n_ascii
  1902  03E4  0873               	movf	n_ascii@code,w
  1903  03E5  0084               	movwf	4
  1904  03E6  0874               	movf	??_n_ascii,w
  1905  03E7  0080               	movwf	0
  1906                           
  1907                           ;usart.c: 76:             break;
  1908  03E8  2C18               	goto	l291
  1909  03E9                     l1463:
  1910                           
  1911                           ;usart.c: 78:             *code = 63;
  1912  03E9  303F               	movlw	63
  1913  03EA  00F4               	movwf	??_n_ascii
  1914  03EB  0873               	movf	n_ascii@code,w
  1915  03EC  0084               	movwf	4
  1916  03ED  0874               	movf	??_n_ascii,w
  1917  03EE  0080               	movwf	0
  1918                           
  1919                           ;usart.c: 79:             break;
  1920  03EF  2C18               	goto	l291
  1921  03F0                     l1467:
  1922  03F0  0876               	movf	n_ascii@value,w
  1923  03F1  00F4               	movwf	??_n_ascii
  1924  03F2  01F5               	clrf	??_n_ascii+1
  1925                           
  1926                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1927                           ; Switch size 1, requested type "simple"
  1928                           ; Number of cases is 1, Range of values is 0 to 0
  1929                           ; switch strategies available:
  1930                           ; Name         Instructions Cycles
  1931                           ; simple_byte            4     3 (average)
  1932                           ; direct_byte           11     8 (fixed)
  1933                           ; jumptable            260     6 (fixed)
  1934                           ;	Chosen strategy is simple_byte
  1935  03F3  0875               	movf	??_n_ascii+1,w
  1936  03F4  3A00               	xorlw	0	; case 0
  1937  03F5  1903               	skipnz
  1938  03F6  2BF8               	goto	l2115
  1939  03F7  2BE9               	goto	l1463
  1940  03F8                     l2115:
  1941                           
  1942                           ; Switch size 1, requested type "simple"
  1943                           ; Number of cases is 10, Range of values is 0 to 9
  1944                           ; switch strategies available:
  1945                           ; Name         Instructions Cycles
  1946                           ; simple_byte           31    16 (average)
  1947                           ; direct_byte           38     8 (fixed)
  1948                           ; jumptable            260     6 (fixed)
  1949                           ;	Chosen strategy is simple_byte
  1950  03F8  0874               	movf	??_n_ascii,w
  1951  03F9  3A00               	xorlw	0	; case 0
  1952  03FA  1903               	skipnz
  1953  03FB  2BA3               	goto	l1443
  1954  03FC  3A01               	xorlw	1	; case 1
  1955  03FD  1903               	skipnz
  1956  03FE  2BAA               	goto	l1445
  1957  03FF  3A03               	xorlw	3	; case 2
  1958  0400  1903               	skipnz
  1959  0401  2BB1               	goto	l1447
  1960  0402  3A01               	xorlw	1	; case 3
  1961  0403  1903               	skipnz
  1962  0404  2BB8               	goto	l1449
  1963  0405  3A07               	xorlw	7	; case 4
  1964  0406  1903               	skipnz
  1965  0407  2BBF               	goto	l1451
  1966  0408  3A01               	xorlw	1	; case 5
  1967  0409  1903               	skipnz
  1968  040A  2BC6               	goto	l1453
  1969  040B  3A03               	xorlw	3	; case 6
  1970  040C  1903               	skipnz
  1971  040D  2BCD               	goto	l1455
  1972  040E  3A01               	xorlw	1	; case 7
  1973  040F  1903               	skipnz
  1974  0410  2BD4               	goto	l1457
  1975  0411  3A0F               	xorlw	15	; case 8
  1976  0412  1903               	skipnz
  1977  0413  2BDB               	goto	l1459
  1978  0414  3A01               	xorlw	1	; case 9
  1979  0415  1903               	skipnz
  1980  0416  2BE2               	goto	l1461
  1981  0417  2BE9               	goto	l1463
  1982  0418                     l291:
  1983  0418  0008               	return
  1984  0419                     __end_of_n_ascii:
  1985                           
  1986                           	psect	text5
  1987  0546                     __ptext5:	
  1988 ;; *************** function _conts *****************
  1989 ;; Defined at:
  1990 ;;		line 266 in file "mas.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  data_in         1    wreg     unsigned char 
  1993 ;;  uni             1    3[COMMON] PTR unsigned char 
  1994 ;;		 -> cont_u(1), 
  1995 ;;  dec             1    4[COMMON] PTR unsigned char 
  1996 ;;		 -> cont_d(1), 
  1997 ;;  cent            1    5[COMMON] PTR unsigned char 
  1998 ;;		 -> cont_c(1), 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  data_in         1    7[COMMON] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2010 ;;      Params:         3       0       0       0       0
  2011 ;;      Locals:         1       0       0       0       0
  2012 ;;      Temps:          1       0       0       0       0
  2013 ;;      Totals:         5       0       0       0       0
  2014 ;;Total ram usage:        5 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    1
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		_show
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           
  2025                           ;psect for function _conts
  2026  0546                     _conts:
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in _conts: [wreg-fsr0h+status,2+status,0]
  2030                           ;conts@data_in stored from wreg
  2031  0546  00F7               	movwf	conts@data_in
  2032  0547                     l1473:
  2033                           
  2034                           ;mas.c: 268:     while (data_in > 99) {
  2035  0547  2D53               	goto	l1477
  2036  0548                     l1475:
  2037                           
  2038                           ;mas.c: 269:         data_in = data_in - 100;
  2039  0548  0877               	movf	conts@data_in,w
  2040  0549  3E9C               	addlw	156
  2041  054A  00F6               	movwf	??_conts
  2042  054B  0876               	movf	??_conts,w
  2043  054C  00F7               	movwf	conts@data_in
  2044                           
  2045                           ;mas.c: 270:         aux++;
  2046  054D  3001               	movlw	1
  2047  054E  00F6               	movwf	??_conts
  2048  054F  0876               	movf	??_conts,w
  2049  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2051  0552  07B7               	addwf	_aux,f
  2052  0553                     l1477:
  2053                           
  2054                           ;mas.c: 268:     while (data_in > 99) {
  2055  0553  3064               	movlw	100
  2056  0554  0277               	subwf	conts@data_in,w
  2057  0555  1803               	skipnc
  2058  0556  2D58               	goto	u521
  2059  0557  2D59               	goto	u520
  2060  0558                     u521:
  2061  0558  2D48               	goto	l1475
  2062  0559                     u520:
  2063  0559                     l1479:
  2064                           
  2065                           ;mas.c: 272:     *cent = aux;
  2066  0559  1283               	bcf	3,5	;RP0=0, select bank0
  2067  055A  1303               	bcf	3,6	;RP1=0, select bank0
  2068  055B  0837               	movf	_aux,w
  2069  055C  00F6               	movwf	??_conts
  2070  055D  0875               	movf	conts@cent,w
  2071  055E  0084               	movwf	4
  2072  055F  0876               	movf	??_conts,w
  2073  0560  1383               	bcf	3,7	;select IRP bank0
  2074  0561  0080               	movwf	0
  2075  0562                     l1481:
  2076                           
  2077                           ;mas.c: 273:     aux = 0;
  2078  0562  01B7               	clrf	_aux
  2079                           
  2080                           ;mas.c: 275:     while (data_in > 9) {
  2081  0563  2D6D               	goto	l1485
  2082  0564                     l1483:
  2083                           
  2084                           ;mas.c: 276:         data_in = data_in - 10;
  2085  0564  0877               	movf	conts@data_in,w
  2086  0565  3EF6               	addlw	246
  2087  0566  00F6               	movwf	??_conts
  2088  0567  0876               	movf	??_conts,w
  2089  0568  00F7               	movwf	conts@data_in
  2090                           
  2091                           ;mas.c: 277:         aux++;
  2092  0569  3001               	movlw	1
  2093  056A  00F6               	movwf	??_conts
  2094  056B  0876               	movf	??_conts,w
  2095  056C  07B7               	addwf	_aux,f
  2096  056D                     l1485:
  2097                           
  2098                           ;mas.c: 275:     while (data_in > 9) {
  2099  056D  300A               	movlw	10
  2100  056E  0277               	subwf	conts@data_in,w
  2101  056F  1803               	skipnc
  2102  0570  2D72               	goto	u531
  2103  0571  2D73               	goto	u530
  2104  0572                     u531:
  2105  0572  2D64               	goto	l1483
  2106  0573                     u530:
  2107  0573                     l1487:
  2108                           
  2109                           ;mas.c: 279:     *dec = aux;
  2110  0573  0837               	movf	_aux,w
  2111  0574  00F6               	movwf	??_conts
  2112  0575  0874               	movf	conts@dec,w
  2113  0576  0084               	movwf	4
  2114  0577  0876               	movf	??_conts,w
  2115  0578  0080               	movwf	0
  2116                           
  2117                           ;mas.c: 280:     *uni = data_in;
  2118  0579  0877               	movf	conts@data_in,w
  2119  057A  00F6               	movwf	??_conts
  2120  057B  0873               	movf	conts@uni,w
  2121  057C  0084               	movwf	4
  2122  057D  0876               	movf	??_conts,w
  2123  057E  0080               	movwf	0
  2124  057F                     l1489:
  2125                           
  2126                           ;mas.c: 281:     aux = 0;
  2127  057F  01B7               	clrf	_aux
  2128  0580                     l150:
  2129  0580  0008               	return
  2130  0581                     __end_of_conts:
  2131                           
  2132                           	psect	text6
  2133  0662                     __ptext6:	
  2134 ;; *************** function _LCD_move_cursor *****************
  2135 ;; Defined at:
  2136 ;;		line 92 in file "lcd.c"
  2137 ;; Parameters:    Size  Location     Type
  2138 ;;  a               1    wreg     unsigned char 
  2139 ;;  b               1    7[COMMON] unsigned char 
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;  a               1    1[BANK0 ] unsigned char 
  2142 ;;  temp            1    2[BANK0 ] unsigned char 
  2143 ;;  y               1    0        unsigned char 
  2144 ;;  x               1    0        unsigned char 
  2145 ;; Return value:  Size  Location     Type
  2146 ;;                  1    wreg      void 
  2147 ;; Registers used:
  2148 ;;		wreg, status,2, status,0, pclath, cstack
  2149 ;; Tracked objects:
  2150 ;;		On entry : 0/0
  2151 ;;		On exit  : 0/0
  2152 ;;		Unchanged: 0/0
  2153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2154 ;;      Params:         1       0       0       0       0
  2155 ;;      Locals:         0       2       0       0       0
  2156 ;;      Temps:          0       1       0       0       0
  2157 ;;      Totals:         1       3       0       0       0
  2158 ;;Total ram usage:        4 bytes
  2159 ;; Hardware stack levels used:    1
  2160 ;; Hardware stack levels required when called:    3
  2161 ;; This function calls:
  2162 ;;		_LCD_cmd
  2163 ;; This function is called by:
  2164 ;;		_titulo
  2165 ;;		_show
  2166 ;; This function uses a non-reentrant model
  2167 ;;
  2168                           
  2169                           
  2170                           ;psect for function _LCD_move_cursor
  2171  0662                     _LCD_move_cursor:
  2172                           
  2173                           ;incstack = 0
  2174                           ; Regs used in _LCD_move_cursor: [wreg+status,2+status,0+pclath+cstack]
  2175                           ;LCD_move_cursor@a stored from wreg
  2176  0662  1283               	bcf	3,5	;RP0=0, select bank0
  2177  0663  1303               	bcf	3,6	;RP1=0, select bank0
  2178  0664  00A1               	movwf	LCD_move_cursor@a
  2179  0665                     l1879:
  2180                           
  2181                           ;lcd.c: 93:     char temp, x, y;;lcd.c: 94:     if (a == 1) {
  2182  0665  0321               	decf	LCD_move_cursor@a,w
  2183  0666  1D03               	btfss	3,2
  2184  0667  2E69               	goto	u831
  2185  0668  2E6A               	goto	u830
  2186  0669                     u831:
  2187  0669  2E76               	goto	l1885
  2188  066A                     u830:
  2189  066A                     l1881:
  2190                           
  2191                           ;lcd.c: 95:         temp = 0x80 + b - 1;
  2192  066A  0877               	movf	LCD_move_cursor@b,w
  2193  066B  3E7F               	addlw	127
  2194  066C  00A0               	movwf	??_LCD_move_cursor
  2195  066D  0820               	movf	??_LCD_move_cursor,w
  2196  066E  00A2               	movwf	LCD_move_cursor@temp
  2197  066F                     l1883:
  2198                           
  2199                           ;lcd.c: 96:         LCD_cmd(temp);
  2200  066F  0822               	movf	LCD_move_cursor@temp,w
  2201  0670  120A  118A  26A2  120A  118A  	fcall	_LCD_cmd
  2202                           
  2203                           ;lcd.c: 97:     }
  2204  0675  2E87               	goto	l221
  2205  0676                     l1885:
  2206  0676  3002               	movlw	2
  2207  0677  0621               	xorwf	LCD_move_cursor@a,w
  2208  0678  1D03               	btfss	3,2
  2209  0679  2E7B               	goto	u841
  2210  067A  2E7C               	goto	u840
  2211  067B                     u841:
  2212  067B  2E87               	goto	l221
  2213  067C                     u840:
  2214  067C                     l1887:
  2215                           
  2216                           ;lcd.c: 99:         temp = 0xC0 + b - 1;
  2217  067C  0877               	movf	LCD_move_cursor@b,w
  2218  067D  3EBF               	addlw	191
  2219  067E  00A0               	movwf	??_LCD_move_cursor
  2220  067F  0820               	movf	??_LCD_move_cursor,w
  2221  0680  00A2               	movwf	LCD_move_cursor@temp
  2222  0681                     l1889:
  2223                           
  2224                           ;lcd.c: 100:         LCD_cmd(temp);
  2225  0681  0822               	movf	LCD_move_cursor@temp,w
  2226  0682  120A  118A  26A2  120A  118A  	fcall	_LCD_cmd
  2227  0687                     l221:
  2228  0687  0008               	return
  2229  0688                     __end_of_LCD_move_cursor:
  2230                           
  2231                           	psect	text7
  2232  0639                     __ptext7:	
  2233 ;; *************** function _LCD_data_string *****************
  2234 ;; Defined at:
  2235 ;;		line 114 in file "lcd.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  a               1    wreg     PTR unsigned char 
  2238 ;;		 -> STR_3(3), STR_2(3), STR_1(17), 
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;  a               1    2[BANK0 ] PTR unsigned char 
  2241 ;;		 -> STR_3(3), STR_2(3), STR_1(17), 
  2242 ;;  i               2    0[BANK0 ] int 
  2243 ;; Return value:  Size  Location     Type
  2244 ;;                  1    wreg      void 
  2245 ;; Registers used:
  2246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2247 ;; Tracked objects:
  2248 ;;		On entry : 0/0
  2249 ;;		On exit  : 0/0
  2250 ;;		Unchanged: 0/0
  2251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2252 ;;      Params:         0       0       0       0       0
  2253 ;;      Locals:         0       3       0       0       0
  2254 ;;      Temps:          0       0       0       0       0
  2255 ;;      Totals:         0       3       0       0       0
  2256 ;;Total ram usage:        3 bytes
  2257 ;; Hardware stack levels used:    1
  2258 ;; Hardware stack levels required when called:    3
  2259 ;; This function calls:
  2260 ;;		_LCD_data_char
  2261 ;; This function is called by:
  2262 ;;		_titulo
  2263 ;;		_show
  2264 ;; This function uses a non-reentrant model
  2265 ;;
  2266                           
  2267                           
  2268                           ;psect for function _LCD_data_string
  2269  0639                     _LCD_data_string:
  2270                           
  2271                           ;incstack = 0
  2272                           ; Regs used in _LCD_data_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2273                           ;LCD_data_string@a stored from wreg
  2274  0639  1283               	bcf	3,5	;RP0=0, select bank0
  2275  063A  1303               	bcf	3,6	;RP1=0, select bank0
  2276  063B  00A2               	movwf	LCD_data_string@a
  2277  063C                     l1891:
  2278                           
  2279                           ;lcd.c: 115:     int i;;lcd.c: 116:     for (i = 0; a[i] != '\0'; i++)
  2280  063C  01A0               	clrf	LCD_data_string@i
  2281  063D  01A1               	clrf	LCD_data_string@i+1
  2282  063E  2E54               	goto	l1897
  2283  063F                     l1893:
  2284                           
  2285                           ;lcd.c: 117:         LCD_data_char(a[i]);
  2286  063F  0820               	movf	LCD_data_string@i,w
  2287  0640  0722               	addwf	LCD_data_string@a,w
  2288  0641  0084               	movwf	4
  2289  0642  120A  118A  2688  120A  118A  	fcall	stringdir
  2290  0647  120A  118A  26BC  120A  118A  	fcall	_LCD_data_char
  2291  064C                     l1895:
  2292  064C  3001               	movlw	1
  2293  064D  1283               	bcf	3,5	;RP0=0, select bank0
  2294  064E  1303               	bcf	3,6	;RP1=0, select bank0
  2295  064F  07A0               	addwf	LCD_data_string@i,f
  2296  0650  1803               	skipnc
  2297  0651  0AA1               	incf	LCD_data_string@i+1,f
  2298  0652  3000               	movlw	0
  2299  0653  07A1               	addwf	LCD_data_string@i+1,f
  2300  0654                     l1897:
  2301  0654  0820               	movf	LCD_data_string@i,w
  2302  0655  0722               	addwf	LCD_data_string@a,w
  2303  0656  0084               	movwf	4
  2304  0657  120A  118A  2688  120A  118A  	fcall	stringdir
  2305  065C  3A00               	xorlw	0
  2306  065D  1D03               	skipz
  2307  065E  2E60               	goto	u851
  2308  065F  2E61               	goto	u850
  2309  0660                     u851:
  2310  0660  2E3F               	goto	l1893
  2311  0661                     u850:
  2312  0661                     l230:
  2313  0661  0008               	return
  2314  0662                     __end_of_LCD_data_string:
  2315                           
  2316                           	psect	text8
  2317  06BC                     __ptext8:	
  2318 ;; *************** function _LCD_data_char *****************
  2319 ;; Defined at:
  2320 ;;		line 106 in file "lcd.c"
  2321 ;; Parameters:    Size  Location     Type
  2322 ;;  a               1    wreg     unsigned char 
  2323 ;; Auto vars:     Size  Location     Type
  2324 ;;  a               1    5[COMMON] unsigned char 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  1    wreg      void 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0, pclath, cstack
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2334 ;;      Params:         0       0       0       0       0
  2335 ;;      Locals:         1       0       0       0       0
  2336 ;;      Temps:          1       0       0       0       0
  2337 ;;      Totals:         2       0       0       0       0
  2338 ;;Total ram usage:        2 bytes
  2339 ;; Hardware stack levels used:    1
  2340 ;; Hardware stack levels required when called:    2
  2341 ;; This function calls:
  2342 ;;		_LCD_datos
  2343 ;; This function is called by:
  2344 ;;		_show
  2345 ;;		_LCD_data_string
  2346 ;; This function uses a non-reentrant model
  2347 ;;
  2348                           
  2349                           
  2350                           ;psect for function _LCD_data_char
  2351  06BC                     _LCD_data_char:
  2352                           
  2353                           ;incstack = 0
  2354                           ; Regs used in _LCD_data_char: [wreg+status,2+status,0+pclath+cstack]
  2355                           ;LCD_data_char@a stored from wreg
  2356  06BC  00F5               	movwf	LCD_data_char@a
  2357  06BD                     l1859:
  2358                           
  2359                           ;lcd.c: 107:     RC1 = 1;
  2360  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  2361  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  2362  06BF  1487               	bsf	7,1	;volatile
  2363  06C0                     l1861:
  2364                           
  2365                           ;lcd.c: 108:     LCD_datos(a);
  2366  06C0  0875               	movf	LCD_data_char@a,w
  2367  06C1  120A  118A  24CC  120A  118A  	fcall	_LCD_datos
  2368  06C6                     l1863:
  2369                           
  2370                           ;lcd.c: 109:     RC0 = 1;
  2371  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  2372  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  2373  06C8  1407               	bsf	7,0	;volatile
  2374  06C9                     l1865:
  2375                           
  2376                           ;lcd.c: 110:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2377  06C9  301A               	movlw	26
  2378  06CA  00F4               	movwf	??_LCD_data_char
  2379  06CB                     u1197:
  2380  06CB  0BF4               	decfsz	??_LCD_data_char,f
  2381  06CC  2ECB               	goto	u1197
  2382  06CD  0000               	nop
  2383  06CE                     l1867:
  2384                           
  2385                           ;lcd.c: 111:     RC0 = 0;
  2386  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2387  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2388  06D0  1007               	bcf	7,0	;volatile
  2389  06D1                     l224:
  2390  06D1  0008               	return
  2391  06D2                     __end_of_LCD_data_char:
  2392                           
  2393                           	psect	text9
  2394  05E2                     __ptext9:	
  2395 ;; *************** function _setup *****************
  2396 ;; Defined at:
  2397 ;;		line 87 in file "mas.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;		None
  2400 ;; Auto vars:     Size  Location     Type
  2401 ;;		None
  2402 ;; Return value:  Size  Location     Type
  2403 ;;                  1    wreg      void 
  2404 ;; Registers used:
  2405 ;;		wreg, status,2, status,0, pclath, cstack
  2406 ;; Tracked objects:
  2407 ;;		On entry : 0/0
  2408 ;;		On exit  : 0/0
  2409 ;;		Unchanged: 0/0
  2410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2411 ;;      Params:         0       0       0       0       0
  2412 ;;      Locals:         0       0       0       0       0
  2413 ;;      Temps:          0       0       0       0       0
  2414 ;;      Totals:         0       0       0       0       0
  2415 ;;Total ram usage:        0 bytes
  2416 ;; Hardware stack levels used:    1
  2417 ;; Hardware stack levels required when called:    2
  2418 ;; This function calls:
  2419 ;;		_config_us
  2420 ;; This function is called by:
  2421 ;;		_main
  2422 ;; This function uses a non-reentrant model
  2423 ;;
  2424                           
  2425                           
  2426                           ;psect for function _setup
  2427  05E2                     _setup:
  2428  05E2                     l1549:	
  2429                           ;incstack = 0
  2430                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2431                           
  2432                           
  2433                           ;mas.c: 89:     ANSELH = 0;
  2434  05E2  1683               	bsf	3,5	;RP0=1, select bank3
  2435  05E3  1703               	bsf	3,6	;RP1=1, select bank3
  2436  05E4  0189               	clrf	9	;volatile
  2437                           
  2438                           ;mas.c: 90:     ANSEL = 0;
  2439  05E5  0188               	clrf	8	;volatile
  2440                           
  2441                           ;mas.c: 91:     TRISA = 0;
  2442  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  2443  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  2444  05E8  0185               	clrf	5	;volatile
  2445                           
  2446                           ;mas.c: 92:     TRISC = 0;
  2447  05E9  0187               	clrf	7	;volatile
  2448                           
  2449                           ;mas.c: 93:     TRISD = 0;
  2450  05EA  0188               	clrf	8	;volatile
  2451                           
  2452                           ;mas.c: 94:     PORTA = 0;
  2453  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2454  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2455  05ED  0185               	clrf	5	;volatile
  2456                           
  2457                           ;mas.c: 95:     PORTC = 0;
  2458  05EE  0187               	clrf	7	;volatile
  2459                           
  2460                           ;mas.c: 96:     PORTD = 0;
  2461  05EF  0188               	clrf	8	;volatile
  2462  05F0                     l1551:
  2463                           
  2464                           ;mas.c: 98:     config_us();
  2465  05F0  120A  118A  26D2  120A  118A  	fcall	_config_us
  2466  05F5                     l1553:
  2467                           
  2468                           ;mas.c: 100:     TRISB = 0B00011111;
  2469  05F5  301F               	movlw	31
  2470  05F6  1683               	bsf	3,5	;RP0=1, select bank1
  2471  05F7  1303               	bcf	3,6	;RP1=0, select bank1
  2472  05F8  0086               	movwf	6	;volatile
  2473  05F9                     l1555:
  2474                           
  2475                           ;mas.c: 101:     PORTB = 0B01100000;
  2476  05F9  3060               	movlw	96
  2477  05FA  1283               	bcf	3,5	;RP0=0, select bank0
  2478  05FB  1303               	bcf	3,6	;RP1=0, select bank0
  2479  05FC  0086               	movwf	6	;volatile
  2480  05FD                     l1557:
  2481                           
  2482                           ;mas.c: 102:     TRISC = 0B00010000;
  2483  05FD  3010               	movlw	16
  2484  05FE  1683               	bsf	3,5	;RP0=1, select bank1
  2485  05FF  1303               	bcf	3,6	;RP1=0, select bank1
  2486  0600  0087               	movwf	7	;volatile
  2487  0601                     l1559:
  2488                           
  2489                           ;mas.c: 103:     SSPSTAT = 0B00000000;
  2490  0601  0194               	clrf	20	;volatile
  2491  0602                     l1561:
  2492                           
  2493                           ;mas.c: 104:     SSPCON2 = 0;
  2494  0602  0191               	clrf	17	;volatile
  2495  0603                     l1563:
  2496                           
  2497                           ;mas.c: 105:     SSPCON = 0B00110000;
  2498  0603  3030               	movlw	48
  2499  0604  1283               	bcf	3,5	;RP0=0, select bank0
  2500  0605  1303               	bcf	3,6	;RP1=0, select bank0
  2501  0606  0094               	movwf	20	;volatile
  2502  0607                     l1565:
  2503                           
  2504                           ;mas.c: 107:     PIE1 = 0B00001000;
  2505  0607  3008               	movlw	8
  2506  0608  1683               	bsf	3,5	;RP0=1, select bank1
  2507  0609  1303               	bcf	3,6	;RP1=0, select bank1
  2508  060A  008C               	movwf	12	;volatile
  2509  060B                     l1567:
  2510                           
  2511                           ;mas.c: 108:     INTCON = 0B11000000;
  2512  060B  30C0               	movlw	192
  2513  060C  008B               	movwf	11	;volatile
  2514  060D                     l111:
  2515  060D  0008               	return
  2516  060E                     __end_of_setup:
  2517                           
  2518                           	psect	text10
  2519  06D2                     __ptext10:	
  2520 ;; *************** function _config_us *****************
  2521 ;; Defined at:
  2522 ;;		line 13 in file "usart.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2536 ;;      Params:         0       0       0       0       0
  2537 ;;      Locals:         0       0       0       0       0
  2538 ;;      Temps:          0       0       0       0       0
  2539 ;;      Totals:         0       0       0       0       0
  2540 ;;Total ram usage:        0 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    1
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_setup
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           
  2551                           ;psect for function _config_us
  2552  06D2                     _config_us:
  2553  06D2                     l1411:	
  2554                           ;incstack = 0
  2555                           ; Regs used in _config_us: [wreg+status,2]
  2556                           
  2557                           
  2558                           ;usart.c: 14:     SPBRG = 25;
  2559  06D2  3019               	movlw	25
  2560  06D3  1683               	bsf	3,5	;RP0=1, select bank1
  2561  06D4  1303               	bcf	3,6	;RP1=0, select bank1
  2562  06D5  0099               	movwf	25	;volatile
  2563  06D6                     l1413:
  2564                           
  2565                           ;usart.c: 15:     SPBRGH = 0;
  2566  06D6  019A               	clrf	26	;volatile
  2567  06D7                     l1415:
  2568                           
  2569                           ;usart.c: 16:     BAUDCTL = 0B00000000;
  2570  06D7  1683               	bsf	3,5	;RP0=1, select bank3
  2571  06D8  1703               	bsf	3,6	;RP1=1, select bank3
  2572  06D9  0187               	clrf	7	;volatile
  2573                           
  2574                           ;usart.c: 17:     TXSTA = 0B00100100;
  2575  06DA  3024               	movlw	36
  2576  06DB  1683               	bsf	3,5	;RP0=1, select bank1
  2577  06DC  1303               	bcf	3,6	;RP1=0, select bank1
  2578  06DD  0098               	movwf	24	;volatile
  2579                           
  2580                           ;usart.c: 18:     RCSTA = 0B10010000;
  2581  06DE  3090               	movlw	144
  2582  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  2583  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  2584  06E1  0098               	movwf	24	;volatile
  2585  06E2                     l259:
  2586  06E2  0008               	return
  2587  06E3                     __end_of_config_us:
  2588                           
  2589                           	psect	text11
  2590  06F2                     __ptext11:	
  2591 ;; *************** function _s3spi *****************
  2592 ;; Defined at:
  2593 ;;		line 170 in file "mas.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2607 ;;      Params:         0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0
  2609 ;;      Temps:          1       0       0       0       0
  2610 ;;      Totals:         1       0       0       0       0
  2611 ;;Total ram usage:        1 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    1
  2614 ;; This function calls:
  2615 ;;		Nothing
  2616 ;; This function is called by:
  2617 ;;		_main
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           
  2622                           ;psect for function _s3spi
  2623  06F2                     _s3spi:
  2624  06F2                     l1639:	
  2625                           ;incstack = 0
  2626                           ; Regs used in _s3spi: [wreg+status,2]
  2627                           
  2628                           
  2629                           ;mas.c: 171:     PORTBbits.RB7 = 0;
  2630  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  2631  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  2632  06F4  1386               	bcf	6,7	;volatile
  2633  06F5                     l1641:
  2634                           
  2635                           ;mas.c: 172:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2636  06F5  30C7               	movlw	199
  2637  06F6  00F3               	movwf	??_s3spi
  2638  06F7                     u1207:
  2639  06F7  2EF8               	nop2
  2640  06F8  0BF3               	decfsz	??_s3spi,f
  2641  06F9  2EF7               	goto	u1207
  2642  06FA  2EFB               	nop2
  2643  06FB  2EFC               	nop2
  2644  06FC                     l1643:
  2645                           
  2646                           ;mas.c: 173:     SSPBUF = 0;
  2647  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  2648  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  2649  06FE  0193               	clrf	19	;volatile
  2650  06FF                     l126:
  2651  06FF  0008               	return
  2652  0700                     __end_of_s3spi:
  2653                           
  2654                           	psect	text12
  2655  0700                     __ptext12:	
  2656 ;; *************** function _s2spi *****************
  2657 ;; Defined at:
  2658 ;;		line 165 in file "mas.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;		None
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;		None
  2663 ;; Return value:  Size  Location     Type
  2664 ;;                  1    wreg      void 
  2665 ;; Registers used:
  2666 ;;		wreg, status,2
  2667 ;; Tracked objects:
  2668 ;;		On entry : 0/0
  2669 ;;		On exit  : 0/0
  2670 ;;		Unchanged: 0/0
  2671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2672 ;;      Params:         0       0       0       0       0
  2673 ;;      Locals:         0       0       0       0       0
  2674 ;;      Temps:          1       0       0       0       0
  2675 ;;      Totals:         1       0       0       0       0
  2676 ;;Total ram usage:        1 bytes
  2677 ;; Hardware stack levels used:    1
  2678 ;; Hardware stack levels required when called:    1
  2679 ;; This function calls:
  2680 ;;		Nothing
  2681 ;; This function is called by:
  2682 ;;		_main
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           
  2687                           ;psect for function _s2spi
  2688  0700                     _s2spi:
  2689  0700                     l1633:	
  2690                           ;incstack = 0
  2691                           ; Regs used in _s2spi: [wreg+status,2]
  2692                           
  2693                           
  2694                           ;mas.c: 166:     PORTBbits.RB6 = 0;
  2695  0700  1283               	bcf	3,5	;RP0=0, select bank0
  2696  0701  1303               	bcf	3,6	;RP1=0, select bank0
  2697  0702  1306               	bcf	6,6	;volatile
  2698  0703                     l1635:
  2699                           
  2700                           ;mas.c: 167:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2701  0703  30C7               	movlw	199
  2702  0704  00F3               	movwf	??_s2spi
  2703  0705                     u1217:
  2704  0705  2F06               	nop2
  2705  0706  0BF3               	decfsz	??_s2spi,f
  2706  0707  2F05               	goto	u1217
  2707  0708  2F09               	nop2
  2708  0709  2F0A               	nop2
  2709  070A                     l1637:
  2710                           
  2711                           ;mas.c: 168:     SSPBUF = 0;
  2712  070A  1283               	bcf	3,5	;RP0=0, select bank0
  2713  070B  1303               	bcf	3,6	;RP1=0, select bank0
  2714  070C  0193               	clrf	19	;volatile
  2715  070D                     l123:
  2716  070D  0008               	return
  2717  070E                     __end_of_s2spi:
  2718                           
  2719                           	psect	text13
  2720  070E                     __ptext13:	
  2721 ;; *************** function _s1spi *****************
  2722 ;; Defined at:
  2723 ;;		line 159 in file "mas.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;		None
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;		None
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      void 
  2730 ;; Registers used:
  2731 ;;		wreg, status,2
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2737 ;;      Params:         0       0       0       0       0
  2738 ;;      Locals:         0       0       0       0       0
  2739 ;;      Temps:          1       0       0       0       0
  2740 ;;      Totals:         1       0       0       0       0
  2741 ;;Total ram usage:        1 bytes
  2742 ;; Hardware stack levels used:    1
  2743 ;; Hardware stack levels required when called:    1
  2744 ;; This function calls:
  2745 ;;		Nothing
  2746 ;; This function is called by:
  2747 ;;		_main
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751                           
  2752                           ;psect for function _s1spi
  2753  070E                     _s1spi:
  2754  070E                     l1627:	
  2755                           ;incstack = 0
  2756                           ; Regs used in _s1spi: [wreg+status,2]
  2757                           
  2758                           
  2759                           ;mas.c: 160:     PORTBbits.RB5 = 0;
  2760  070E  1283               	bcf	3,5	;RP0=0, select bank0
  2761  070F  1303               	bcf	3,6	;RP1=0, select bank0
  2762  0710  1286               	bcf	6,5	;volatile
  2763  0711                     l1629:
  2764                           
  2765                           ;mas.c: 161:     _delay((unsigned long)((1)*(4000000/4000.0)));
  2766  0711  30C7               	movlw	199
  2767  0712  00F3               	movwf	??_s1spi
  2768  0713                     u1227:
  2769  0713  2F14               	nop2
  2770  0714  0BF3               	decfsz	??_s1spi,f
  2771  0715  2F13               	goto	u1227
  2772  0716  2F17               	nop2
  2773  0717  2F18               	nop2
  2774  0718                     l1631:
  2775                           
  2776                           ;mas.c: 162:     SSPBUF = 0;
  2777  0718  1283               	bcf	3,5	;RP0=0, select bank0
  2778  0719  1303               	bcf	3,6	;RP1=0, select bank0
  2779  071A  0193               	clrf	19	;volatile
  2780  071B                     l120:
  2781  071B  0008               	return
  2782  071C                     __end_of_s1spi:
  2783                           
  2784                           	psect	text14
  2785  0581                     __ptext14:	
  2786 ;; *************** function _map_var *****************
  2787 ;; Defined at:
  2788 ;;		line 244 in file "mas.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;  v_in            1    wreg     unsigned char 
  2791 ;;  v_out           1   10[BANK0 ] PTR unsigned char 
  2792 ;;		 -> temp_m(1), 
  2793 ;;  inMin           1   11[BANK0 ] unsigned char 
  2794 ;;  inMax           1   12[BANK0 ] unsigned char 
  2795 ;;  outMin          1   13[BANK0 ] unsigned char 
  2796 ;;  outMax          1   14[BANK0 ] unsigned char 
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;  v_in            1   18[BANK0 ] unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2808 ;;      Params:         0       5       0       0       0
  2809 ;;      Locals:         0       1       0       0       0
  2810 ;;      Temps:          0       3       0       0       0
  2811 ;;      Totals:         0       9       0       0       0
  2812 ;;Total ram usage:        9 bytes
  2813 ;; Hardware stack levels used:    1
  2814 ;; Hardware stack levels required when called:    2
  2815 ;; This function calls:
  2816 ;;		___awdiv
  2817 ;;		___wmul
  2818 ;; This function is called by:
  2819 ;;		_main
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           
  2824                           ;psect for function _map_var
  2825  0581                     _map_var:
  2826                           
  2827                           ;incstack = 0
  2828                           ; Regs used in _map_var: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2829                           ;map_var@v_in stored from wreg
  2830  0581  1283               	bcf	3,5	;RP0=0, select bank0
  2831  0582  1303               	bcf	3,6	;RP1=0, select bank0
  2832  0583  00B2               	movwf	map_var@v_in
  2833  0584                     l1967:
  2834                           
  2835                           ;mas.c: 244: void map_var(uint8_t v_in, uint8_t *v_out, uint8_t inMin, uint8_t inMax,;ma
      +                          s.c: 245:         uint8_t outMin, uint8_t outMax) {;mas.c: 246:     *v_out = ((((v_in - 
      +                          inMin)*(outMax - outMin)) / (inMax - inMin)) + outMin);
  2836  0584  082B               	movf	map_var@inMin,w
  2837  0585  022C               	subwf	map_var@inMax,w
  2838  0586  00A2               	movwf	___awdiv@divisor
  2839  0587  01A3               	clrf	___awdiv@divisor+1
  2840  0588  1C03               	skipc
  2841  0589  03A3               	decf	___awdiv@divisor+1,f
  2842  058A  082B               	movf	map_var@inMin,w
  2843  058B  0232               	subwf	map_var@v_in,w
  2844  058C  00F3               	movwf	___wmul@multiplier
  2845  058D  01F4               	clrf	___wmul@multiplier+1
  2846  058E  1C03               	skipc
  2847  058F  03F4               	decf	___wmul@multiplier+1,f
  2848  0590  082D               	movf	map_var@outMin,w
  2849  0591  022E               	subwf	map_var@outMax,w
  2850  0592  00F5               	movwf	___wmul@multiplicand
  2851  0593  01F6               	clrf	___wmul@multiplicand+1
  2852  0594  1C03               	skipc
  2853  0595  03F6               	decf	___wmul@multiplicand+1,f
  2854  0596  120A  118A  260E  120A  118A  	fcall	___wmul
  2855  059B  0874               	movf	?___wmul+1,w
  2856  059C  1283               	bcf	3,5	;RP0=0, select bank0
  2857  059D  1303               	bcf	3,6	;RP1=0, select bank0
  2858  059E  00A5               	movwf	___awdiv@dividend+1
  2859  059F  0873               	movf	?___wmul,w
  2860  05A0  00A4               	movwf	___awdiv@dividend
  2861  05A1  120A  118A  2419  120A  118A  	fcall	___awdiv
  2862  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  2863  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  2864  05A8  0822               	movf	?___awdiv,w
  2865  05A9  00AF               	movwf	??_map_var
  2866  05AA  0823               	movf	?___awdiv+1,w
  2867  05AB  00B0               	movwf	??_map_var+1
  2868  05AC  082D               	movf	map_var@outMin,w
  2869  05AD  072F               	addwf	??_map_var,w
  2870  05AE  00B1               	movwf	??_map_var+2
  2871  05AF  082A               	movf	map_var@v_out,w
  2872  05B0  0084               	movwf	4
  2873  05B1  0831               	movf	??_map_var+2,w
  2874  05B2  1383               	bcf	3,7	;select IRP bank0
  2875  05B3  0080               	movwf	0
  2876  05B4                     l132:
  2877  05B4  0008               	return
  2878  05B5                     __end_of_map_var:
  2879                           
  2880                           	psect	text15
  2881  060E                     __ptext15:	
  2882 ;; *************** function ___wmul *****************
  2883 ;; Defined at:
  2884 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  2885 ;; Parameters:    Size  Location     Type
  2886 ;;  multiplier      2    3[COMMON] unsigned int 
  2887 ;;  multiplicand    2    5[COMMON] unsigned int 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  product         2    0[BANK0 ] unsigned int 
  2890 ;; Return value:  Size  Location     Type
  2891 ;;                  2    3[COMMON] unsigned int 
  2892 ;; Registers used:
  2893 ;;		wreg, status,2, status,0
  2894 ;; Tracked objects:
  2895 ;;		On entry : 0/0
  2896 ;;		On exit  : 0/0
  2897 ;;		Unchanged: 0/0
  2898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2899 ;;      Params:         4       0       0       0       0
  2900 ;;      Locals:         0       2       0       0       0
  2901 ;;      Temps:          0       0       0       0       0
  2902 ;;      Totals:         4       2       0       0       0
  2903 ;;Total ram usage:        6 bytes
  2904 ;; Hardware stack levels used:    1
  2905 ;; Hardware stack levels required when called:    1
  2906 ;; This function calls:
  2907 ;;		Nothing
  2908 ;; This function is called by:
  2909 ;;		_map_var
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           
  2914                           ;psect for function ___wmul
  2915  060E                     ___wmul:
  2916  060E                     l1899:	
  2917                           ;incstack = 0
  2918                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2919                           
  2920  060E  1283               	bcf	3,5	;RP0=0, select bank0
  2921  060F  1303               	bcf	3,6	;RP1=0, select bank0
  2922  0610  01A0               	clrf	___wmul@product
  2923  0611  01A1               	clrf	___wmul@product+1
  2924  0612                     l1901:
  2925  0612  1C73               	btfss	___wmul@multiplier,0
  2926  0613  2E15               	goto	u861
  2927  0614  2E16               	goto	u860
  2928  0615                     u861:
  2929  0615  2E1E               	goto	l383
  2930  0616                     u860:
  2931  0616                     l1903:
  2932  0616  0875               	movf	___wmul@multiplicand,w
  2933  0617  1283               	bcf	3,5	;RP0=0, select bank0
  2934  0618  1303               	bcf	3,6	;RP1=0, select bank0
  2935  0619  07A0               	addwf	___wmul@product,f
  2936  061A  1803               	skipnc
  2937  061B  0AA1               	incf	___wmul@product+1,f
  2938  061C  0876               	movf	___wmul@multiplicand+1,w
  2939  061D  07A1               	addwf	___wmul@product+1,f
  2940  061E                     l383:
  2941  061E  3001               	movlw	1
  2942  061F                     u875:
  2943  061F  1003               	clrc
  2944  0620  0DF5               	rlf	___wmul@multiplicand,f
  2945  0621  0DF6               	rlf	___wmul@multiplicand+1,f
  2946  0622  3EFF               	addlw	-1
  2947  0623  1D03               	skipz
  2948  0624  2E1F               	goto	u875
  2949  0625                     l1905:
  2950  0625  3001               	movlw	1
  2951  0626                     u885:
  2952  0626  1003               	clrc
  2953  0627  0CF4               	rrf	___wmul@multiplier+1,f
  2954  0628  0CF3               	rrf	___wmul@multiplier,f
  2955  0629  3EFF               	addlw	-1
  2956  062A  1D03               	skipz
  2957  062B  2E26               	goto	u885
  2958  062C                     l1907:
  2959  062C  0873               	movf	___wmul@multiplier,w
  2960  062D  0474               	iorwf	___wmul@multiplier+1,w
  2961  062E  1D03               	btfss	3,2
  2962  062F  2E31               	goto	u891
  2963  0630  2E32               	goto	u890
  2964  0631                     u891:
  2965  0631  2E12               	goto	l1901
  2966  0632                     u890:
  2967  0632                     l1909:
  2968  0632  1283               	bcf	3,5	;RP0=0, select bank0
  2969  0633  1303               	bcf	3,6	;RP1=0, select bank0
  2970  0634  0821               	movf	___wmul@product+1,w
  2971  0635  00F4               	movwf	?___wmul+1
  2972  0636  0820               	movf	___wmul@product,w
  2973  0637  00F3               	movwf	?___wmul
  2974  0638                     l385:
  2975  0638  0008               	return
  2976  0639                     __end_of___wmul:
  2977                           
  2978                           	psect	text16
  2979  0419                     __ptext16:	
  2980 ;; *************** function ___awdiv *****************
  2981 ;; Defined at:
  2982 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  divisor         2    2[BANK0 ] int 
  2985 ;;  dividend        2    4[BANK0 ] int 
  2986 ;; Auto vars:     Size  Location     Type
  2987 ;;  quotient        2    8[BANK0 ] int 
  2988 ;;  sign            1    7[BANK0 ] unsigned char 
  2989 ;;  counter         1    6[BANK0 ] unsigned char 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  2    2[BANK0 ] int 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2, status,0
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2999 ;;      Params:         0       4       0       0       0
  3000 ;;      Locals:         0       4       0       0       0
  3001 ;;      Temps:          1       0       0       0       0
  3002 ;;      Totals:         1       8       0       0       0
  3003 ;;Total ram usage:        9 bytes
  3004 ;; Hardware stack levels used:    1
  3005 ;; Hardware stack levels required when called:    1
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_map_var
  3010 ;; This function uses a non-reentrant model
  3011 ;;
  3012                           
  3013                           
  3014                           ;psect for function ___awdiv
  3015  0419                     ___awdiv:
  3016  0419                     l1913:	
  3017                           ;incstack = 0
  3018                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3019                           
  3020  0419  1283               	bcf	3,5	;RP0=0, select bank0
  3021  041A  1303               	bcf	3,6	;RP1=0, select bank0
  3022  041B  01A7               	clrf	___awdiv@sign
  3023  041C                     l1915:
  3024  041C  1FA3               	btfss	___awdiv@divisor+1,7
  3025  041D  2C1F               	goto	u901
  3026  041E  2C20               	goto	u900
  3027  041F                     u901:
  3028  041F  2C27               	goto	l1921
  3029  0420                     u900:
  3030  0420                     l1917:
  3031  0420  09A2               	comf	___awdiv@divisor,f
  3032  0421  09A3               	comf	___awdiv@divisor+1,f
  3033  0422  0AA2               	incf	___awdiv@divisor,f
  3034  0423  1903               	skipnz
  3035  0424  0AA3               	incf	___awdiv@divisor+1,f
  3036  0425                     l1919:
  3037  0425  01A7               	clrf	___awdiv@sign
  3038  0426  0AA7               	incf	___awdiv@sign,f
  3039  0427                     l1921:
  3040  0427  1FA5               	btfss	___awdiv@dividend+1,7
  3041  0428  2C2A               	goto	u911
  3042  0429  2C2B               	goto	u910
  3043  042A                     u911:
  3044  042A  2C34               	goto	l1927
  3045  042B                     u910:
  3046  042B                     l1923:
  3047  042B  09A4               	comf	___awdiv@dividend,f
  3048  042C  09A5               	comf	___awdiv@dividend+1,f
  3049  042D  0AA4               	incf	___awdiv@dividend,f
  3050  042E  1903               	skipnz
  3051  042F  0AA5               	incf	___awdiv@dividend+1,f
  3052  0430                     l1925:
  3053  0430  3001               	movlw	1
  3054  0431  00F7               	movwf	??___awdiv
  3055  0432  0877               	movf	??___awdiv,w
  3056  0433  06A7               	xorwf	___awdiv@sign,f
  3057  0434                     l1927:
  3058  0434  01A8               	clrf	___awdiv@quotient
  3059  0435  01A9               	clrf	___awdiv@quotient+1
  3060  0436                     l1929:
  3061  0436  0822               	movf	___awdiv@divisor,w
  3062  0437  0423               	iorwf	___awdiv@divisor+1,w
  3063  0438  1903               	btfsc	3,2
  3064  0439  2C3B               	goto	u921
  3065  043A  2C3C               	goto	u920
  3066  043B                     u921:
  3067  043B  2C73               	goto	l1949
  3068  043C                     u920:
  3069  043C                     l1931:
  3070  043C  01A6               	clrf	___awdiv@counter
  3071  043D  0AA6               	incf	___awdiv@counter,f
  3072  043E  2C4A               	goto	l1937
  3073  043F                     l1933:
  3074  043F  3001               	movlw	1
  3075  0440                     u935:
  3076  0440  1003               	clrc
  3077  0441  0DA2               	rlf	___awdiv@divisor,f
  3078  0442  0DA3               	rlf	___awdiv@divisor+1,f
  3079  0443  3EFF               	addlw	-1
  3080  0444  1D03               	skipz
  3081  0445  2C40               	goto	u935
  3082  0446                     l1935:
  3083  0446  3001               	movlw	1
  3084  0447  00F7               	movwf	??___awdiv
  3085  0448  0877               	movf	??___awdiv,w
  3086  0449  07A6               	addwf	___awdiv@counter,f
  3087  044A                     l1937:
  3088  044A  1FA3               	btfss	___awdiv@divisor+1,7
  3089  044B  2C4D               	goto	u941
  3090  044C  2C4E               	goto	u940
  3091  044D                     u941:
  3092  044D  2C3F               	goto	l1933
  3093  044E                     u940:
  3094  044E                     l1939:
  3095  044E  3001               	movlw	1
  3096  044F                     u955:
  3097  044F  1003               	clrc
  3098  0450  0DA8               	rlf	___awdiv@quotient,f
  3099  0451  0DA9               	rlf	___awdiv@quotient+1,f
  3100  0452  3EFF               	addlw	-1
  3101  0453  1D03               	skipz
  3102  0454  2C4F               	goto	u955
  3103  0455  0823               	movf	___awdiv@divisor+1,w
  3104  0456  0225               	subwf	___awdiv@dividend+1,w
  3105  0457  1D03               	skipz
  3106  0458  2C5B               	goto	u965
  3107  0459  0822               	movf	___awdiv@divisor,w
  3108  045A  0224               	subwf	___awdiv@dividend,w
  3109  045B                     u965:
  3110  045B  1C03               	skipc
  3111  045C  2C5E               	goto	u961
  3112  045D  2C5F               	goto	u960
  3113  045E                     u961:
  3114  045E  2C66               	goto	l1945
  3115  045F                     u960:
  3116  045F                     l1941:
  3117  045F  0822               	movf	___awdiv@divisor,w
  3118  0460  02A4               	subwf	___awdiv@dividend,f
  3119  0461  0823               	movf	___awdiv@divisor+1,w
  3120  0462  1C03               	skipc
  3121  0463  03A5               	decf	___awdiv@dividend+1,f
  3122  0464  02A5               	subwf	___awdiv@dividend+1,f
  3123  0465                     l1943:
  3124  0465  1428               	bsf	___awdiv@quotient,0
  3125  0466                     l1945:
  3126  0466  3001               	movlw	1
  3127  0467                     u975:
  3128  0467  1003               	clrc
  3129  0468  0CA3               	rrf	___awdiv@divisor+1,f
  3130  0469  0CA2               	rrf	___awdiv@divisor,f
  3131  046A  3EFF               	addlw	-1
  3132  046B  1D03               	skipz
  3133  046C  2C67               	goto	u975
  3134  046D                     l1947:
  3135  046D  3001               	movlw	1
  3136  046E  02A6               	subwf	___awdiv@counter,f
  3137  046F  1D03               	btfss	3,2
  3138  0470  2C72               	goto	u981
  3139  0471  2C73               	goto	u980
  3140  0472                     u981:
  3141  0472  2C4E               	goto	l1939
  3142  0473                     u980:
  3143  0473                     l1949:
  3144  0473  0827               	movf	___awdiv@sign,w
  3145  0474  1903               	btfsc	3,2
  3146  0475  2C77               	goto	u991
  3147  0476  2C78               	goto	u990
  3148  0477                     u991:
  3149  0477  2C7D               	goto	l1953
  3150  0478                     u990:
  3151  0478                     l1951:
  3152  0478  09A8               	comf	___awdiv@quotient,f
  3153  0479  09A9               	comf	___awdiv@quotient+1,f
  3154  047A  0AA8               	incf	___awdiv@quotient,f
  3155  047B  1903               	skipnz
  3156  047C  0AA9               	incf	___awdiv@quotient+1,f
  3157  047D                     l1953:
  3158  047D  0829               	movf	___awdiv@quotient+1,w
  3159  047E  00A3               	movwf	?___awdiv+1
  3160  047F  0828               	movf	___awdiv@quotient,w
  3161  0480  00A2               	movwf	?___awdiv
  3162  0481                     l536:
  3163  0481  0008               	return
  3164  0482                     __end_of___awdiv:
  3165                           
  3166                           	psect	text17
  3167  021A                     __ptext17:	
  3168 ;; *************** function _header *****************
  3169 ;; Defined at:
  3170 ;;		line 116 in file "mas.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;		None
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  1    wreg      void 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0, pclath, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3184 ;;      Params:         0       0       0       0       0
  3185 ;;      Locals:         0       0       0       0       0
  3186 ;;      Temps:          2       0       0       0       0
  3187 ;;      Totals:         2       0       0       0       0
  3188 ;;Total ram usage:        2 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:    2
  3191 ;; This function calls:
  3192 ;;		_tnl_usart
  3193 ;;		_tvirt_usart
  3194 ;; This function is called by:
  3195 ;;		_main
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           
  3200                           ;psect for function _header
  3201  021A                     _header:
  3202  021A                     l1579:	
  3203                           ;incstack = 0
  3204                           ; Regs used in _header: [wreg+status,2+status,0+pclath+cstack]
  3205                           
  3206                           
  3207                           ;mas.c: 118:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3208  021A  3003               	movlw	3
  3209  021B  00F5               	movwf	??_header+1
  3210  021C  3097               	movlw	151
  3211  021D  00F4               	movwf	??_header
  3212  021E                     u1237:
  3213  021E  0BF4               	decfsz	??_header,f
  3214  021F  2A1E               	goto	u1237
  3215  0220  0BF5               	decfsz	??_header+1,f
  3216  0221  2A1E               	goto	u1237
  3217  0222  2A23               	nop2
  3218  0223                     l1581:
  3219                           
  3220                           ;mas.c: 119:     tvirt_usart(83);
  3221  0223  3053               	movlw	83
  3222  0224  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3223  0229                     l1583:
  3224                           
  3225                           ;mas.c: 120:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3226  0229  3003               	movlw	3
  3227  022A  00F5               	movwf	??_header+1
  3228  022B  3097               	movlw	151
  3229  022C  00F4               	movwf	??_header
  3230  022D                     u1247:
  3231  022D  0BF4               	decfsz	??_header,f
  3232  022E  2A2D               	goto	u1247
  3233  022F  0BF5               	decfsz	??_header+1,f
  3234  0230  2A2D               	goto	u1247
  3235  0231  2A32               	nop2
  3236                           
  3237                           ;mas.c: 121:     tvirt_usart(49);
  3238  0232  3031               	movlw	49
  3239  0233  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3240  0238                     l1585:
  3241                           
  3242                           ;mas.c: 122:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3243  0238  3003               	movlw	3
  3244  0239  00F5               	movwf	??_header+1
  3245  023A  3097               	movlw	151
  3246  023B  00F4               	movwf	??_header
  3247  023C                     u1257:
  3248  023C  0BF4               	decfsz	??_header,f
  3249  023D  2A3C               	goto	u1257
  3250  023E  0BF5               	decfsz	??_header+1,f
  3251  023F  2A3C               	goto	u1257
  3252  0240  2A41               	nop2
  3253  0241                     l1587:
  3254                           
  3255                           ;mas.c: 123:     tvirt_usart(58);
  3256  0241  303A               	movlw	58
  3257  0242  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3258                           
  3259                           ;mas.c: 124:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3260  0247  3003               	movlw	3
  3261  0248  00F5               	movwf	??_header+1
  3262  0249  3097               	movlw	151
  3263  024A  00F4               	movwf	??_header
  3264  024B                     u1267:
  3265  024B  0BF4               	decfsz	??_header,f
  3266  024C  2A4B               	goto	u1267
  3267  024D  0BF5               	decfsz	??_header+1,f
  3268  024E  2A4B               	goto	u1267
  3269  024F  2A50               	nop2
  3270  0250                     l1589:
  3271                           
  3272                           ;mas.c: 125:     tvirt_usart(32);
  3273  0250  3020               	movlw	32
  3274  0251  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3275  0256                     l1591:
  3276                           
  3277                           ;mas.c: 126:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3278  0256  3003               	movlw	3
  3279  0257  00F5               	movwf	??_header+1
  3280  0258  3097               	movlw	151
  3281  0259  00F4               	movwf	??_header
  3282  025A                     u1277:
  3283  025A  0BF4               	decfsz	??_header,f
  3284  025B  2A5A               	goto	u1277
  3285  025C  0BF5               	decfsz	??_header+1,f
  3286  025D  2A5A               	goto	u1277
  3287  025E  2A5F               	nop2
  3288                           
  3289                           ;mas.c: 127:     tvirt_usart(32);
  3290  025F  3020               	movlw	32
  3291  0260  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3292  0265                     l1593:
  3293                           
  3294                           ;mas.c: 128:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3295  0265  3003               	movlw	3
  3296  0266  00F5               	movwf	??_header+1
  3297  0267  3097               	movlw	151
  3298  0268  00F4               	movwf	??_header
  3299  0269                     u1287:
  3300  0269  0BF4               	decfsz	??_header,f
  3301  026A  2A69               	goto	u1287
  3302  026B  0BF5               	decfsz	??_header+1,f
  3303  026C  2A69               	goto	u1287
  3304  026D  2A6E               	nop2
  3305  026E                     l1595:
  3306                           
  3307                           ;mas.c: 129:     tvirt_usart(32);
  3308  026E  3020               	movlw	32
  3309  026F  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3310                           
  3311                           ;mas.c: 130:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3312  0274  3003               	movlw	3
  3313  0275  00F5               	movwf	??_header+1
  3314  0276  3097               	movlw	151
  3315  0277  00F4               	movwf	??_header
  3316  0278                     u1297:
  3317  0278  0BF4               	decfsz	??_header,f
  3318  0279  2A78               	goto	u1297
  3319  027A  0BF5               	decfsz	??_header+1,f
  3320  027B  2A78               	goto	u1297
  3321  027C  2A7D               	nop2
  3322  027D                     l1597:
  3323                           
  3324                           ;mas.c: 132:     tvirt_usart(83);
  3325  027D  3053               	movlw	83
  3326  027E  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3327  0283                     l1599:
  3328                           
  3329                           ;mas.c: 133:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3330  0283  3003               	movlw	3
  3331  0284  00F5               	movwf	??_header+1
  3332  0285  3097               	movlw	151
  3333  0286  00F4               	movwf	??_header
  3334  0287                     u1307:
  3335  0287  0BF4               	decfsz	??_header,f
  3336  0288  2A87               	goto	u1307
  3337  0289  0BF5               	decfsz	??_header+1,f
  3338  028A  2A87               	goto	u1307
  3339  028B  2A8C               	nop2
  3340                           
  3341                           ;mas.c: 134:     tvirt_usart(50);
  3342  028C  3032               	movlw	50
  3343  028D  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3344  0292                     l1601:
  3345                           
  3346                           ;mas.c: 135:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3347  0292  3003               	movlw	3
  3348  0293  00F5               	movwf	??_header+1
  3349  0294  3097               	movlw	151
  3350  0295  00F4               	movwf	??_header
  3351  0296                     u1317:
  3352  0296  0BF4               	decfsz	??_header,f
  3353  0297  2A96               	goto	u1317
  3354  0298  0BF5               	decfsz	??_header+1,f
  3355  0299  2A96               	goto	u1317
  3356  029A  2A9B               	nop2
  3357  029B                     l1603:
  3358                           
  3359                           ;mas.c: 136:     tvirt_usart(58);
  3360  029B  303A               	movlw	58
  3361  029C  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3362                           
  3363                           ;mas.c: 137:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3364  02A1  3003               	movlw	3
  3365  02A2  00F5               	movwf	??_header+1
  3366  02A3  3097               	movlw	151
  3367  02A4  00F4               	movwf	??_header
  3368  02A5                     u1327:
  3369  02A5  0BF4               	decfsz	??_header,f
  3370  02A6  2AA5               	goto	u1327
  3371  02A7  0BF5               	decfsz	??_header+1,f
  3372  02A8  2AA5               	goto	u1327
  3373  02A9  2AAA               	nop2
  3374  02AA                     l1605:
  3375                           
  3376                           ;mas.c: 138:     tvirt_usart(32);
  3377  02AA  3020               	movlw	32
  3378  02AB  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3379  02B0                     l1607:
  3380                           
  3381                           ;mas.c: 139:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3382  02B0  3003               	movlw	3
  3383  02B1  00F5               	movwf	??_header+1
  3384  02B2  3097               	movlw	151
  3385  02B3  00F4               	movwf	??_header
  3386  02B4                     u1337:
  3387  02B4  0BF4               	decfsz	??_header,f
  3388  02B5  2AB4               	goto	u1337
  3389  02B6  0BF5               	decfsz	??_header+1,f
  3390  02B7  2AB4               	goto	u1337
  3391  02B8  2AB9               	nop2
  3392                           
  3393                           ;mas.c: 140:     tvirt_usart(32);
  3394  02B9  3020               	movlw	32
  3395  02BA  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3396  02BF                     l1609:
  3397                           
  3398                           ;mas.c: 141:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3399  02BF  3003               	movlw	3
  3400  02C0  00F5               	movwf	??_header+1
  3401  02C1  3097               	movlw	151
  3402  02C2  00F4               	movwf	??_header
  3403  02C3                     u1347:
  3404  02C3  0BF4               	decfsz	??_header,f
  3405  02C4  2AC3               	goto	u1347
  3406  02C5  0BF5               	decfsz	??_header+1,f
  3407  02C6  2AC3               	goto	u1347
  3408  02C7  2AC8               	nop2
  3409  02C8                     l1611:
  3410                           
  3411                           ;mas.c: 142:     tvirt_usart(32);
  3412  02C8  3020               	movlw	32
  3413  02C9  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3414                           
  3415                           ;mas.c: 143:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3416  02CE  3003               	movlw	3
  3417  02CF  00F5               	movwf	??_header+1
  3418  02D0  3097               	movlw	151
  3419  02D1  00F4               	movwf	??_header
  3420  02D2                     u1357:
  3421  02D2  0BF4               	decfsz	??_header,f
  3422  02D3  2AD2               	goto	u1357
  3423  02D4  0BF5               	decfsz	??_header+1,f
  3424  02D5  2AD2               	goto	u1357
  3425  02D6  2AD7               	nop2
  3426  02D7                     l1613:
  3427                           
  3428                           ;mas.c: 146:     tvirt_usart(83);
  3429  02D7  3053               	movlw	83
  3430  02D8  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3431  02DD                     l1615:
  3432                           
  3433                           ;mas.c: 147:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3434  02DD  3003               	movlw	3
  3435  02DE  00F5               	movwf	??_header+1
  3436  02DF  3097               	movlw	151
  3437  02E0  00F4               	movwf	??_header
  3438  02E1                     u1367:
  3439  02E1  0BF4               	decfsz	??_header,f
  3440  02E2  2AE1               	goto	u1367
  3441  02E3  0BF5               	decfsz	??_header+1,f
  3442  02E4  2AE1               	goto	u1367
  3443  02E5  2AE6               	nop2
  3444                           
  3445                           ;mas.c: 148:     tvirt_usart(51);
  3446  02E6  3033               	movlw	51
  3447  02E7  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3448  02EC                     l1617:
  3449                           
  3450                           ;mas.c: 149:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3451  02EC  3003               	movlw	3
  3452  02ED  00F5               	movwf	??_header+1
  3453  02EE  3097               	movlw	151
  3454  02EF  00F4               	movwf	??_header
  3455  02F0                     u1377:
  3456  02F0  0BF4               	decfsz	??_header,f
  3457  02F1  2AF0               	goto	u1377
  3458  02F2  0BF5               	decfsz	??_header+1,f
  3459  02F3  2AF0               	goto	u1377
  3460  02F4  2AF5               	nop2
  3461  02F5                     l1619:
  3462                           
  3463                           ;mas.c: 150:     tvirt_usart(58);
  3464  02F5  303A               	movlw	58
  3465  02F6  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3466                           
  3467                           ;mas.c: 151:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3468  02FB  3003               	movlw	3
  3469  02FC  00F5               	movwf	??_header+1
  3470  02FD  3097               	movlw	151
  3471  02FE  00F4               	movwf	??_header
  3472  02FF                     u1387:
  3473  02FF  0BF4               	decfsz	??_header,f
  3474  0300  2AFF               	goto	u1387
  3475  0301  0BF5               	decfsz	??_header+1,f
  3476  0302  2AFF               	goto	u1387
  3477  0303  2B04               	nop2
  3478  0304                     l1621:
  3479                           
  3480                           ;mas.c: 152:     tvirt_usart(32);
  3481  0304  3020               	movlw	32
  3482  0305  120A  118A  271C  120A  118A  	fcall	_tvirt_usart
  3483  030A                     l1623:
  3484                           
  3485                           ;mas.c: 153:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3486  030A  3003               	movlw	3
  3487  030B  00F5               	movwf	??_header+1
  3488  030C  3097               	movlw	151
  3489  030D  00F4               	movwf	??_header
  3490  030E                     u1397:
  3491  030E  0BF4               	decfsz	??_header,f
  3492  030F  2B0E               	goto	u1397
  3493  0310  0BF5               	decfsz	??_header+1,f
  3494  0311  2B0E               	goto	u1397
  3495  0312  2B13               	nop2
  3496                           
  3497                           ;mas.c: 154:     tnl_usart();
  3498  0313  120A  118A  2728  120A  118A  	fcall	_tnl_usart
  3499  0318                     l1625:
  3500                           
  3501                           ;mas.c: 155:     _delay((unsigned long)((2)*(4000000/4000.0)));
  3502  0318  3003               	movlw	3
  3503  0319  00F5               	movwf	??_header+1
  3504  031A  3097               	movlw	151
  3505  031B  00F4               	movwf	??_header
  3506  031C                     u1407:
  3507  031C  0BF4               	decfsz	??_header,f
  3508  031D  2B1C               	goto	u1407
  3509  031E  0BF5               	decfsz	??_header+1,f
  3510  031F  2B1C               	goto	u1407
  3511  0320  2B21               	nop2
  3512  0321                     l117:
  3513  0321  0008               	return
  3514  0322                     __end_of_header:
  3515                           
  3516                           	psect	text18
  3517  071C                     __ptext18:	
  3518 ;; *************** function _tvirt_usart *****************
  3519 ;; Defined at:
  3520 ;;		line 21 in file "usart.c"
  3521 ;; Parameters:    Size  Location     Type
  3522 ;;  t               1    wreg     unsigned char 
  3523 ;; Auto vars:     Size  Location     Type
  3524 ;;  t               1    3[COMMON] unsigned char 
  3525 ;; Return value:  Size  Location     Type
  3526 ;;                  1    wreg      void 
  3527 ;; Registers used:
  3528 ;;		wreg
  3529 ;; Tracked objects:
  3530 ;;		On entry : 0/0
  3531 ;;		On exit  : 0/0
  3532 ;;		Unchanged: 0/0
  3533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3534 ;;      Params:         0       0       0       0       0
  3535 ;;      Locals:         1       0       0       0       0
  3536 ;;      Temps:          0       0       0       0       0
  3537 ;;      Totals:         1       0       0       0       0
  3538 ;;Total ram usage:        1 bytes
  3539 ;; Hardware stack levels used:    1
  3540 ;; Hardware stack levels required when called:    1
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_header
  3545 ;;		_show
  3546 ;;		_usart_string
  3547 ;; This function uses a non-reentrant model
  3548 ;;
  3549                           
  3550                           
  3551                           ;psect for function _tvirt_usart
  3552  071C                     _tvirt_usart:
  3553                           
  3554                           ;incstack = 0
  3555                           ; Regs used in _tvirt_usart: [wreg]
  3556                           ;tvirt_usart@t stored from wreg
  3557  071C  00F3               	movwf	tvirt_usart@t
  3558  071D                     l1437:
  3559                           
  3560                           ;usart.c: 22:     if (1 == TXSTAbits.TRMT) {
  3561  071D  1683               	bsf	3,5	;RP0=1, select bank1
  3562  071E  1303               	bcf	3,6	;RP1=0, select bank1
  3563  071F  1C98               	btfss	24,1	;volatile
  3564  0720  2F22               	goto	u511
  3565  0721  2F23               	goto	u510
  3566  0722                     u511:
  3567  0722  2F27               	goto	l263
  3568  0723                     u510:
  3569  0723                     l1439:
  3570                           
  3571                           ;usart.c: 23:         TXREG = t;
  3572  0723  0873               	movf	tvirt_usart@t,w
  3573  0724  1283               	bcf	3,5	;RP0=0, select bank0
  3574  0725  1303               	bcf	3,6	;RP1=0, select bank0
  3575  0726  0099               	movwf	25	;volatile
  3576  0727                     l263:
  3577  0727  0008               	return
  3578  0728                     __end_of_tvirt_usart:
  3579                           
  3580                           	psect	text19
  3581  0728                     __ptext19:	
  3582 ;; *************** function _tnl_usart *****************
  3583 ;; Defined at:
  3584 ;;		line 27 in file "usart.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;		None
  3587 ;; Auto vars:     Size  Location     Type
  3588 ;;		None
  3589 ;; Return value:  Size  Location     Type
  3590 ;;                  1    wreg      void 
  3591 ;; Registers used:
  3592 ;;		wreg
  3593 ;; Tracked objects:
  3594 ;;		On entry : 0/0
  3595 ;;		On exit  : 0/0
  3596 ;;		Unchanged: 0/0
  3597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3598 ;;      Params:         0       0       0       0       0
  3599 ;;      Locals:         0       0       0       0       0
  3600 ;;      Temps:          0       0       0       0       0
  3601 ;;      Totals:         0       0       0       0       0
  3602 ;;Total ram usage:        0 bytes
  3603 ;; Hardware stack levels used:    1
  3604 ;; Hardware stack levels required when called:    1
  3605 ;; This function calls:
  3606 ;;		Nothing
  3607 ;; This function is called by:
  3608 ;;		_main
  3609 ;;		_header
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function _tnl_usart
  3615  0728                     _tnl_usart:
  3616  0728                     l1407:	
  3617                           ;incstack = 0
  3618                           ; Regs used in _tnl_usart: [wreg]
  3619                           
  3620                           
  3621                           ;usart.c: 28:     if (1 == TXSTAbits.TRMT) {
  3622  0728  1683               	bsf	3,5	;RP0=1, select bank1
  3623  0729  1303               	bcf	3,6	;RP1=0, select bank1
  3624  072A  1C98               	btfss	24,1	;volatile
  3625  072B  2F2D               	goto	u471
  3626  072C  2F2E               	goto	u470
  3627  072D                     u471:
  3628  072D  2F32               	goto	l267
  3629  072E                     u470:
  3630  072E                     l1409:
  3631                           
  3632                           ;usart.c: 29:         TXREG = 13;
  3633  072E  300D               	movlw	13
  3634  072F  1283               	bcf	3,5	;RP0=0, select bank0
  3635  0730  1303               	bcf	3,6	;RP1=0, select bank0
  3636  0731  0099               	movwf	25	;volatile
  3637  0732                     l267:
  3638  0732  0008               	return
  3639  0733                     __end_of_tnl_usart:
  3640                           
  3641                           	psect	text20
  3642  0482                     __ptext20:	
  3643 ;; *************** function _LCD_Init *****************
  3644 ;; Defined at:
  3645 ;;		line 31 in file "lcd.c"
  3646 ;; Parameters:    Size  Location     Type
  3647 ;;		None
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;		None
  3650 ;; Return value:  Size  Location     Type
  3651 ;;                  1    wreg      void 
  3652 ;; Registers used:
  3653 ;;		wreg, status,2, status,0, pclath, cstack
  3654 ;; Tracked objects:
  3655 ;;		On entry : 0/0
  3656 ;;		On exit  : 0/0
  3657 ;;		Unchanged: 0/0
  3658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3659 ;;      Params:         0       0       0       0       0
  3660 ;;      Locals:         0       0       0       0       0
  3661 ;;      Temps:          0       2       0       0       0
  3662 ;;      Totals:         0       2       0       0       0
  3663 ;;Total ram usage:        2 bytes
  3664 ;; Hardware stack levels used:    1
  3665 ;; Hardware stack levels required when called:    3
  3666 ;; This function calls:
  3667 ;;		_LCD_cmd
  3668 ;;		_LCD_datos
  3669 ;; This function is called by:
  3670 ;;		_main
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           
  3675                           ;psect for function _LCD_Init
  3676  0482                     _LCD_Init:
  3677  0482                     l1957:	
  3678                           ;incstack = 0
  3679                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3680                           
  3681                           
  3682                           ;lcd.c: 32:     LCD_datos(0x00);
  3683  0482  3000               	movlw	0
  3684  0483  120A  118A  24CC  120A  118A  	fcall	_LCD_datos
  3685  0488                     l1959:
  3686                           
  3687                           ;lcd.c: 33:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3688  0488  3034               	movlw	52
  3689  0489  1283               	bcf	3,5	;RP0=0, select bank0
  3690  048A  1303               	bcf	3,6	;RP1=0, select bank0
  3691  048B  00A1               	movwf	??_LCD_Init+1
  3692  048C  30F1               	movlw	241
  3693  048D  00A0               	movwf	??_LCD_Init
  3694  048E                     u1417:
  3695  048E  0BA0               	decfsz	??_LCD_Init,f
  3696  048F  2C8E               	goto	u1417
  3697  0490  0BA1               	decfsz	??_LCD_Init+1,f
  3698  0491  2C8E               	goto	u1417
  3699  0492                     l1961:
  3700                           
  3701                           ;lcd.c: 34:     LCD_cmd(0x30);
  3702  0492  3030               	movlw	48
  3703  0493  120A  118A  26A2  120A  118A  	fcall	_LCD_cmd
  3704                           
  3705                           ;lcd.c: 35:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3706  0498  300D               	movlw	13
  3707  0499  1283               	bcf	3,5	;RP0=0, select bank0
  3708  049A  1303               	bcf	3,6	;RP1=0, select bank0
  3709  049B  00A1               	movwf	??_LCD_Init+1
  3710  049C  30FB               	movlw	251
  3711  049D  00A0               	movwf	??_LCD_Init
  3712  049E                     u1427:
  3713  049E  0BA0               	decfsz	??_LCD_Init,f
  3714  049F  2C9E               	goto	u1427
  3715  04A0  0BA1               	decfsz	??_LCD_Init+1,f
  3716  04A1  2C9E               	goto	u1427
  3717  04A2                     l1963:
  3718                           
  3719                           ;lcd.c: 36:     LCD_cmd(0x30);
  3720  04A2  3030               	movlw	48
  3721  04A3  120A  118A  26A2  120A  118A  	fcall	_LCD_cmd
  3722  04A8                     l1965:
  3723                           
  3724                           ;lcd.c: 37:     _delay((unsigned long)((15)*(8000000/4000.0)));
  3725  04A8  3027               	movlw	39
  3726  04A9  1283               	bcf	3,5	;RP0=0, select bank0
  3727  04AA  1303               	bcf	3,6	;RP1=0, select bank0
  3728  04AB  00A1               	movwf	??_LCD_Init+1
  3729  04AC  30F4               	movlw	244
  3730  04AD  00A0               	movwf	??_LCD_Init
  3731  04AE                     u1437:
  3732  04AE  0BA0               	decfsz	??_LCD_Init,f
  3733  04AF  2CAE               	goto	u1437
  3734  04B0  0BA1               	decfsz	??_LCD_Init+1,f
  3735  04B1  2CAE               	goto	u1437
  3736  04B2  0000               	nop
  3737                           
  3738                           ;lcd.c: 38:     LCD_cmd(0x30);
  3739  04B3  3030               	movlw	48
  3740  04B4  120A  118A  26A2  120A  118A  	fcall	_LCD_cmd
  3741                           
  3742                           ;lcd.c: 39:     LCD_cmd(0x38);
  3743  04B9  3038               	movlw	56
  3744  04BA  120A  118A  26A2  120A  118A  	fcall	_LCD_cmd
  3745                           
  3746                           ;lcd.c: 40:     LCD_cmd(0x0C);
  3747  04BF  300C               	movlw	12
  3748  04C0  120A  118A  26A2  120A  118A  	fcall	_LCD_cmd
  3749                           
  3750                           ;lcd.c: 41:     LCD_cmd(0x06);
  3751  04C5  3006               	movlw	6
  3752  04C6  120A  118A  26A2  120A  118A  	fcall	_LCD_cmd
  3753  04CB                     l190:
  3754  04CB  0008               	return
  3755  04CC                     __end_of_LCD_Init:
  3756                           
  3757                           	psect	text21
  3758  06A2                     __ptext21:	
  3759 ;; *************** function _LCD_cmd *****************
  3760 ;; Defined at:
  3761 ;;		line 79 in file "lcd.c"
  3762 ;; Parameters:    Size  Location     Type
  3763 ;;  a               1    wreg     unsigned char 
  3764 ;; Auto vars:     Size  Location     Type
  3765 ;;  a               1    6[COMMON] unsigned char 
  3766 ;; Return value:  Size  Location     Type
  3767 ;;                  1    wreg      void 
  3768 ;; Registers used:
  3769 ;;		wreg, status,2, status,0, pclath, cstack
  3770 ;; Tracked objects:
  3771 ;;		On entry : 0/0
  3772 ;;		On exit  : 0/0
  3773 ;;		Unchanged: 0/0
  3774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3775 ;;      Params:         0       0       0       0       0
  3776 ;;      Locals:         1       0       0       0       0
  3777 ;;      Temps:          2       0       0       0       0
  3778 ;;      Totals:         3       0       0       0       0
  3779 ;;Total ram usage:        3 bytes
  3780 ;; Hardware stack levels used:    1
  3781 ;; Hardware stack levels required when called:    2
  3782 ;; This function calls:
  3783 ;;		_LCD_datos
  3784 ;; This function is called by:
  3785 ;;		_LCD_Init
  3786 ;;		_LCD_move_cursor
  3787 ;;		_Clear
  3788 ;;		_shift_right
  3789 ;;		_shift_left
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           
  3794                           ;psect for function _LCD_cmd
  3795  06A2                     _LCD_cmd:
  3796                           
  3797                           ;incstack = 0
  3798                           ; Regs used in _LCD_cmd: [wreg+status,2+status,0+pclath+cstack]
  3799                           ;LCD_cmd@a stored from wreg
  3800  06A2  00F6               	movwf	LCD_cmd@a
  3801  06A3                     l1869:
  3802                           
  3803                           ;lcd.c: 80:     RC1 = 0;
  3804  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  3805  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  3806  06A5  1087               	bcf	7,1	;volatile
  3807  06A6                     l1871:
  3808                           
  3809                           ;lcd.c: 81:     LCD_datos(a);
  3810  06A6  0876               	movf	LCD_cmd@a,w
  3811  06A7  120A  118A  24CC  120A  118A  	fcall	_LCD_datos
  3812  06AC                     l1873:
  3813                           
  3814                           ;lcd.c: 82:     RC0 = 1;
  3815  06AC  1283               	bcf	3,5	;RP0=0, select bank0
  3816  06AD  1303               	bcf	3,6	;RP1=0, select bank0
  3817  06AE  1407               	bsf	7,0	;volatile
  3818  06AF                     l1875:
  3819                           
  3820                           ;lcd.c: 83:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3821  06AF  301A               	movlw	26
  3822  06B0  00F5               	movwf	??_LCD_cmd+1
  3823  06B1  30F8               	movlw	248
  3824  06B2  00F4               	movwf	??_LCD_cmd
  3825  06B3                     u1447:
  3826  06B3  0BF4               	decfsz	??_LCD_cmd,f
  3827  06B4  2EB3               	goto	u1447
  3828  06B5  0BF5               	decfsz	??_LCD_cmd+1,f
  3829  06B6  2EB3               	goto	u1447
  3830  06B7  0000               	nop
  3831  06B8                     l1877:
  3832                           
  3833                           ;lcd.c: 84:     RC0 = 0;
  3834  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  3835  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  3836  06BA  1007               	bcf	7,0	;volatile
  3837  06BB                     l212:
  3838  06BB  0008               	return
  3839  06BC                     __end_of_LCD_cmd:
  3840                           
  3841                           	psect	text22
  3842  04CC                     __ptext22:	
  3843 ;; *************** function _LCD_datos *****************
  3844 ;; Defined at:
  3845 ;;		line 44 in file "lcd.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  a               1    wreg     unsigned char 
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;  a               1    3[COMMON] unsigned char 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      void 
  3852 ;; Registers used:
  3853 ;;		wreg
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3859 ;;      Params:         0       0       0       0       0
  3860 ;;      Locals:         1       0       0       0       0
  3861 ;;      Temps:          0       0       0       0       0
  3862 ;;      Totals:         1       0       0       0       0
  3863 ;;Total ram usage:        1 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; Hardware stack levels required when called:    1
  3866 ;; This function calls:
  3867 ;;		Nothing
  3868 ;; This function is called by:
  3869 ;;		_LCD_Init
  3870 ;;		_LCD_cmd
  3871 ;;		_LCD_data_char
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function _LCD_datos
  3877  04CC                     _LCD_datos:
  3878                           
  3879                           ;incstack = 0
  3880                           ; Regs used in _LCD_datos: [wreg]
  3881                           ;LCD_datos@a stored from wreg
  3882  04CC  00F3               	movwf	LCD_datos@a
  3883  04CD                     l1841:
  3884                           
  3885                           ;lcd.c: 45:     if (a & 1)
  3886  04CD  1C73               	btfss	LCD_datos@a,0
  3887  04CE  2CD0               	goto	u751
  3888  04CF  2CD1               	goto	u750
  3889  04D0                     u751:
  3890  04D0  2CD5               	goto	l193
  3891  04D1                     u750:
  3892  04D1                     l1843:
  3893                           
  3894                           ;lcd.c: 46:         RD0 = 1;
  3895  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  3896  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  3897  04D3  1408               	bsf	8,0	;volatile
  3898  04D4  2CD8               	goto	l194
  3899  04D5                     l193:	
  3900                           ;lcd.c: 47:     else
  3901                           
  3902                           
  3903                           ;lcd.c: 48:         RD0 = 0;
  3904  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  3905  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  3906  04D7  1008               	bcf	8,0	;volatile
  3907  04D8                     l194:
  3908                           
  3909                           ;lcd.c: 49:     if (a & 2)
  3910  04D8  1CF3               	btfss	LCD_datos@a,1
  3911  04D9  2CDB               	goto	u761
  3912  04DA  2CDC               	goto	u760
  3913  04DB                     u761:
  3914  04DB  2CDE               	goto	l195
  3915  04DC                     u760:
  3916  04DC                     l1845:
  3917                           
  3918                           ;lcd.c: 50:         RD1 = 1;
  3919  04DC  1488               	bsf	8,1	;volatile
  3920  04DD  2CDF               	goto	l196
  3921  04DE                     l195:	
  3922                           ;lcd.c: 51:     else
  3923                           
  3924                           
  3925                           ;lcd.c: 52:         RD1 = 0;
  3926  04DE  1088               	bcf	8,1	;volatile
  3927  04DF                     l196:
  3928                           
  3929                           ;lcd.c: 53:     if (a & 4)
  3930  04DF  1D73               	btfss	LCD_datos@a,2
  3931  04E0  2CE2               	goto	u771
  3932  04E1  2CE3               	goto	u770
  3933  04E2                     u771:
  3934  04E2  2CE5               	goto	l197
  3935  04E3                     u770:
  3936  04E3                     l1847:
  3937                           
  3938                           ;lcd.c: 54:         RD2 = 1;
  3939  04E3  1508               	bsf	8,2	;volatile
  3940  04E4  2CE6               	goto	l198
  3941  04E5                     l197:	
  3942                           ;lcd.c: 55:     else
  3943                           
  3944                           
  3945                           ;lcd.c: 56:         RD2 = 0;
  3946  04E5  1108               	bcf	8,2	;volatile
  3947  04E6                     l198:
  3948                           
  3949                           ;lcd.c: 57:     if (a & 8)
  3950  04E6  1DF3               	btfss	LCD_datos@a,3
  3951  04E7  2CE9               	goto	u781
  3952  04E8  2CEA               	goto	u780
  3953  04E9                     u781:
  3954  04E9  2CEC               	goto	l199
  3955  04EA                     u780:
  3956  04EA                     l1849:
  3957                           
  3958                           ;lcd.c: 58:         RD3 = 1;
  3959  04EA  1588               	bsf	8,3	;volatile
  3960  04EB  2CED               	goto	l200
  3961  04EC                     l199:	
  3962                           ;lcd.c: 59:     else
  3963                           
  3964                           
  3965                           ;lcd.c: 60:         RD3 = 0;
  3966  04EC  1188               	bcf	8,3	;volatile
  3967  04ED                     l200:
  3968                           
  3969                           ;lcd.c: 61:     if (a & 16)
  3970  04ED  1E73               	btfss	LCD_datos@a,4
  3971  04EE  2CF0               	goto	u791
  3972  04EF  2CF1               	goto	u790
  3973  04F0                     u791:
  3974  04F0  2CF3               	goto	l201
  3975  04F1                     u790:
  3976  04F1                     l1851:
  3977                           
  3978                           ;lcd.c: 62:         RD4 = 1;
  3979  04F1  1608               	bsf	8,4	;volatile
  3980  04F2  2CF4               	goto	l202
  3981  04F3                     l201:	
  3982                           ;lcd.c: 63:     else
  3983                           
  3984                           
  3985                           ;lcd.c: 64:         RD4 = 0;
  3986  04F3  1208               	bcf	8,4	;volatile
  3987  04F4                     l202:
  3988                           
  3989                           ;lcd.c: 65:     if (a & 32)
  3990  04F4  1EF3               	btfss	LCD_datos@a,5
  3991  04F5  2CF7               	goto	u801
  3992  04F6  2CF8               	goto	u800
  3993  04F7                     u801:
  3994  04F7  2CFA               	goto	l203
  3995  04F8                     u800:
  3996  04F8                     l1853:
  3997                           
  3998                           ;lcd.c: 66:         RD5 = 1;
  3999  04F8  1688               	bsf	8,5	;volatile
  4000  04F9  2CFB               	goto	l204
  4001  04FA                     l203:	
  4002                           ;lcd.c: 67:     else
  4003                           
  4004                           
  4005                           ;lcd.c: 68:         RD5 = 0;
  4006  04FA  1288               	bcf	8,5	;volatile
  4007  04FB                     l204:
  4008                           
  4009                           ;lcd.c: 69:     if (a & 64)
  4010  04FB  1F73               	btfss	LCD_datos@a,6
  4011  04FC  2CFE               	goto	u811
  4012  04FD  2CFF               	goto	u810
  4013  04FE                     u811:
  4014  04FE  2D01               	goto	l205
  4015  04FF                     u810:
  4016  04FF                     l1855:
  4017                           
  4018                           ;lcd.c: 70:         RD6 = 1;
  4019  04FF  1708               	bsf	8,6	;volatile
  4020  0500  2D02               	goto	l206
  4021  0501                     l205:	
  4022                           ;lcd.c: 71:     else
  4023                           
  4024                           
  4025                           ;lcd.c: 72:         RD6 = 0;
  4026  0501  1308               	bcf	8,6	;volatile
  4027  0502                     l206:
  4028                           
  4029                           ;lcd.c: 73:     if (a & 128)
  4030  0502  1FF3               	btfss	LCD_datos@a,7
  4031  0503  2D05               	goto	u821
  4032  0504  2D06               	goto	u820
  4033  0505                     u821:
  4034  0505  2D08               	goto	l207
  4035  0506                     u820:
  4036  0506                     l1857:
  4037                           
  4038                           ;lcd.c: 74:         RD7 = 1;
  4039  0506  1788               	bsf	8,7	;volatile
  4040  0507  2D09               	goto	l209
  4041  0508                     l207:	
  4042                           ;lcd.c: 75:     else
  4043                           
  4044                           
  4045                           ;lcd.c: 76:         RD7 = 0;
  4046  0508  1388               	bcf	8,7	;volatile
  4047  0509                     l209:
  4048  0509  0008               	return
  4049  050A                     __end_of_LCD_datos:
  4050                           
  4051                           	psect	text23
  4052  05B5                     __ptext23:	
  4053 ;; *************** function _int1 *****************
  4054 ;; Defined at:
  4055 ;;		line 287 in file "mas.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4069 ;;      Params:         0       0       0       0       0
  4070 ;;      Locals:         0       0       0       0       0
  4071 ;;      Temps:          3       0       0       0       0
  4072 ;;      Totals:         3       0       0       0       0
  4073 ;;Total ram usage:        3 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; This function calls:
  4076 ;;		Nothing
  4077 ;; This function is called by:
  4078 ;;		Interrupt level 1
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           
  4083                           ;psect for function _int1
  4084  05B5                     _int1:
  4085  05B5                     i1l1785:
  4086                           
  4087                           ;mas.c: 288:     GIE = 0;
  4088  05B5  138B               	bcf	11,7	;volatile
  4089                           
  4090                           ;mas.c: 289:     if (1 == SSPIF) {
  4091  05B6  1283               	bcf	3,5	;RP0=0, select bank0
  4092  05B7  1303               	bcf	3,6	;RP1=0, select bank0
  4093  05B8  1D8C               	btfss	12,3	;volatile
  4094  05B9  2DBB               	goto	u70_21
  4095  05BA  2DBC               	goto	u70_20
  4096  05BB                     u70_21:
  4097  05BB  2DDA               	goto	i1l1803
  4098  05BC                     u70_20:
  4099  05BC                     i1l1787:
  4100                           
  4101                           ;mas.c: 290:         if (0 == PORTBbits.RB7) {
  4102  05BC  1B86               	btfsc	6,7	;volatile
  4103  05BD  2DBF               	goto	u71_21
  4104  05BE  2DC0               	goto	u71_20
  4105  05BF                     u71_21:
  4106  05BF  2DC6               	goto	i1l156
  4107  05C0                     u71_20:
  4108  05C0                     i1l1789:
  4109                           
  4110                           ;mas.c: 291:             PORTBbits.RB7 = 1;
  4111  05C0  1786               	bsf	6,7	;volatile
  4112  05C1                     i1l1791:
  4113                           
  4114                           ;mas.c: 292:             pot = SSPBUF;
  4115  05C1  0813               	movf	19,w	;volatile
  4116  05C2  00F0               	movwf	??_int1
  4117  05C3  0870               	movf	??_int1,w
  4118  05C4  00BF               	movwf	_pot
  4119                           
  4120                           ;mas.c: 293:         } else if (0 == PORTBbits.RB6) {
  4121  05C5  2DD9               	goto	i1l1801
  4122  05C6                     i1l156:
  4123  05C6  1B06               	btfsc	6,6	;volatile
  4124  05C7  2DC9               	goto	u72_21
  4125  05C8  2DCA               	goto	u72_20
  4126  05C9                     u72_21:
  4127  05C9  2DD0               	goto	i1l158
  4128  05CA                     u72_20:
  4129  05CA                     i1l1793:
  4130                           
  4131                           ;mas.c: 294:             PORTBbits.RB6 = 1;
  4132  05CA  1706               	bsf	6,6	;volatile
  4133  05CB                     i1l1795:
  4134                           
  4135                           ;mas.c: 295:             cont = SSPBUF;
  4136  05CB  0813               	movf	19,w	;volatile
  4137  05CC  00F0               	movwf	??_int1
  4138  05CD  0870               	movf	??_int1,w
  4139  05CE  00BE               	movwf	_cont
  4140                           
  4141                           ;mas.c: 296:         } else if (0 == PORTBbits.RB5) {
  4142  05CF  2DD9               	goto	i1l1801
  4143  05D0                     i1l158:
  4144  05D0  1A86               	btfsc	6,5	;volatile
  4145  05D1  2DD3               	goto	u73_21
  4146  05D2  2DD4               	goto	u73_20
  4147  05D3                     u73_21:
  4148  05D3  2DD9               	goto	i1l1801
  4149  05D4                     u73_20:
  4150  05D4                     i1l1797:
  4151                           
  4152                           ;mas.c: 297:             PORTBbits.RB5 = 1;
  4153  05D4  1686               	bsf	6,5	;volatile
  4154  05D5                     i1l1799:
  4155                           
  4156                           ;mas.c: 298:             temp = SSPBUF;
  4157  05D5  0813               	movf	19,w	;volatile
  4158  05D6  00F0               	movwf	??_int1
  4159  05D7  0870               	movf	??_int1,w
  4160  05D8  00B8               	movwf	_temp
  4161  05D9                     i1l1801:
  4162                           
  4163                           ;mas.c: 300:         SSPIF = 0;
  4164  05D9  118C               	bcf	12,3	;volatile
  4165  05DA                     i1l1803:
  4166                           
  4167                           ;mas.c: 303:     GIE = 1;
  4168  05DA  178B               	bsf	11,7	;volatile
  4169  05DB                     i1l161:
  4170  05DB  0872               	movf	??_int1+2,w
  4171  05DC  008A               	movwf	10
  4172  05DD  0E71               	swapf	??_int1+1,w
  4173  05DE  0083               	movwf	3
  4174  05DF  0EFE               	swapf	btemp,f
  4175  05E0  0E7E               	swapf	btemp,w
  4176  05E1  0009               	retfie
  4177  05E2                     __end_of_int1:
  4178  007E                     btemp	set	126	;btemp
  4179  007E                     wtemp0	set	126
  4180                           
  4181                           	psect	intentry
  4182  0004                     __pintentry:	
  4183                           ;incstack = 0
  4184                           ; Regs used in _int1: [wreg]
  4185                           
  4186  0004                     interrupt_function:
  4187  007E                     saved_w	set	btemp
  4188  0004  00FE               	movwf	btemp
  4189  0005  0E03               	swapf	3,w
  4190  0006  00F1               	movwf	??_int1+1
  4191  0007  080A               	movf	10,w
  4192  0008  00F2               	movwf	??_int1+2
  4193  0009  120A  118A  2DB5   	ljmp	_int1
  4194                           
  4195                           	psect	config
  4196                           
  4197                           ;Config register CONFIG1 @ 0x2007
  4198                           ;	Oscillator Selection bits
  4199                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  4200                           ;	Watchdog Timer Enable bit
  4201                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4202                           ;	Power-up Timer Enable bit
  4203                           ;	PWRTE = OFF, PWRT disabled
  4204                           ;	RE3/MCLR pin function select bit
  4205                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4206                           ;	Code Protection bit
  4207                           ;	CP = OFF, Program memory code protection is disabled
  4208                           ;	Data Code Protection bit
  4209                           ;	CPD = OFF, Data memory code protection is disabled
  4210                           ;	Brown Out Reset Selection bits
  4211                           ;	BOREN = OFF, BOR disabled
  4212                           ;	Internal External Switchover bit
  4213                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4214                           ;	Fail-Safe Clock Monitor Enabled bit
  4215                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4216                           ;	Low Voltage Programming Enable bit
  4217                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4218                           ;	In-Circuit Debugger Mode bit
  4219                           ;	DEBUG = 0x1, unprogrammed default
  4220  2007                     	org	8199
  4221  2007  20D1               	dw	8401
  4222                           
  4223                           ;Config register CONFIG2 @ 0x2008
  4224                           ;	Brown-out Reset Selection bit
  4225                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4226                           ;	Flash Program Memory Self Write Enable bits
  4227                           ;	WRT = OFF, Write protection off
  4228  2008                     	org	8200
  4229  2008  3FFF               	dw	16383

Data Sizes:
    Strings     20
    Constant    0
    Data        2
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     23      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    n_ascii@code	PTR unsigned char  size(1) Largest target is 1
		 -> sdata(COMMON[1]), 

    LCD_data_string@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[17]), 

    conts@uni	PTR unsigned char  size(1) Largest target is 1
		 -> cont_u(COMMON[1]), 

    conts@dec	PTR unsigned char  size(1) Largest target is 1
		 -> cont_d(COMMON[1]), 

    conts@cent	PTR unsigned char  size(1) Largest target is 1
		 -> cont_c(BANK0[1]), 

    voltaje@volt_d2	PTR unsigned char  size(1) Largest target is 1
		 -> pot_d2(BANK0[1]), 

    voltaje@volt_d1	PTR unsigned char  size(1) Largest target is 1
		 -> pot_d1(BANK0[1]), 

    voltaje@volt_u	PTR unsigned char  size(1) Largest target is 1
		 -> pot_u(BANK0[1]), 

    map_var@v_out	PTR unsigned char  size(1) Largest target is 1
		 -> temp_m(BANK0[1]), 


Critical Paths under _main in COMMON

    _main->_voltaje
    _titulo->_LCD_move_cursor
    _show->_LCD_move_cursor
    _show->_conts
    _LCD_move_cursor->_LCD_cmd
    _LCD_data_string->_LCD_data_char
    _LCD_data_char->_LCD_datos
    _map_var->___awdiv
    ___awdiv->___wmul
    _header->_tvirt_usart
    _LCD_Init->_LCD_cmd
    _LCD_cmd->_LCD_datos

Critical Paths under _int1 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_map_var
    _titulo->_LCD_data_string
    _titulo->_LCD_move_cursor
    _show->_LCD_data_string
    _show->_LCD_move_cursor
    _map_var->___awdiv
    ___awdiv->___wmul

Critical Paths under _int1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int1 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int1 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int1 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6813
                                             19 BANK0      4     4      0
                           _LCD_Init
                             _header
                            _map_var
                              _s1spi
                              _s2spi
                              _s3spi
                              _setup
                               _show
                             _titulo
                          _tnl_usart
                            _voltaje
 ---------------------------------------------------------------------------------
 (1) _voltaje                                              5     2      3     406
                                              3 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (1) _titulo                                               0     0      0    1168
                    _LCD_data_string
                    _LCD_move_cursor
 ---------------------------------------------------------------------------------
 (1) _show                                                 3     3      0    3051
                                              3 BANK0      3     3      0
                      _LCD_data_char
                    _LCD_data_string
                    _LCD_move_cursor
                              _conts
                            _n_ascii
                        _tvirt_usart
 ---------------------------------------------------------------------------------
 (2) _n_ascii                                              4     3      1     948
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _conts                                                5     2      3     634
                                              3 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (2) _LCD_move_cursor                                      6     5      1     651
                                              7 COMMON     1     0      1
                                              0 BANK0      3     3      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_data_string                                      3     3      0     517
                                              0 BANK0      3     3      0
                      _LCD_data_char
 ---------------------------------------------------------------------------------
 (3) _LCD_data_char                                        2     2      0     279
                                              4 COMMON     2     2      0
                          _LCD_datos
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                          _config_us
 ---------------------------------------------------------------------------------
 (2) _config_us                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _s3spi                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _s2spi                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _s1spi                                                1     1      0       0
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _map_var                                              9     4      5    1639
                                             10 BANK0      9     4      5
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     625
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _header                                               2     2      0      22
                                              4 COMMON     2     2      0
                          _tnl_usart
                        _tvirt_usart
 ---------------------------------------------------------------------------------
 (2) _tvirt_usart                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _tnl_usart                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     527
                                              0 BANK0      2     2      0
                            _LCD_cmd
                          _LCD_datos
 ---------------------------------------------------------------------------------
 (3) _LCD_cmd                                              3     3      0     279
                                              4 COMMON     3     3      0
                          _LCD_datos
 ---------------------------------------------------------------------------------
 (4) _LCD_datos                                            1     1      0     248
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _int1                                                 3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_cmd
       _LCD_datos
     _LCD_datos
   _header
     _tnl_usart
     _tvirt_usart
   _map_var
     ___awdiv
       ___wmul (ARG)
     ___wmul
   _s1spi
   _s2spi
   _s3spi
   _setup
     _config_us
   _show
     _LCD_data_char
       _LCD_datos
     _LCD_data_string
       _LCD_data_char
         _LCD_datos
     _LCD_move_cursor
       _LCD_cmd
         _LCD_datos
     _conts
     _n_ascii
     _tvirt_usart
   _titulo
     _LCD_data_string
       _LCD_data_char
         _LCD_datos
     _LCD_move_cursor
       _LCD_cmd
         _LCD_datos
   _tnl_usart
   _voltaje

 _int1 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     17      20       5       40.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2B      12        0.0%
ABS                  0      0      2B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 17:46:04 2021

                       pc 0002              ___awdiv@sign 0027                        fsr 0004  
     ___wmul@multiplicand 0075                       l111 060D                       l200 04ED  
                     l120 071B                       l201 04F3                       l105 0331  
                     l202 04F4                       l114 06F1                       l203 04FA  
                     l123 070D                       l204 04FB                       l212 06BB  
                     l132 05B4                       l205 0501                       l117 0321  
                     l221 0687                       l141 0545                       l206 0502  
                     l126 06FF                       l230 0661                       l150 0580  
                     l207 0508                       l224 06D1                       l209 0509  
                     l129 0219                       l190 04CB                       l263 0727  
                     l193 04D5                       l194 04D8                       l195 04DE  
                     l267 0732                       l259 06E2                       l291 0418  
                     l196 04DF                       l197 04E5                       l198 04E6  
                     l199 04EC                       l383 061E                       l536 0481  
                     l385 0638                       _GIE 005F                       _RC0 0038  
                     _RC1 0039                       _RD0 0040                       _RD1 0041  
                     _RD2 0042                       _RD3 0043                       _RD4 0044  
                     _RD5 0045                       _RD6 0046                       _RD7 0047  
                     u510 0723                       u511 0722                       u520 0559  
                     u521 0558                       u530 0573                       u531 0572  
                     u470 072E                       u471 072D                       u800 04F8  
                     u801 04F7                       u810 04FF                       u811 04FE  
                     u820 0506                       u900 0420                       u821 0505  
                     u901 041F                       u750 04D1                       u910 042B  
                     u830 066A                       u751 04D0                       u911 042A  
                     u831 0669                       u760 04DC                       u920 043C  
                     u840 067C                       u680 051D                       u761 04DB  
                     u921 043B                       u841 067B                       u681 051C  
                     u770 04E3                       u850 0661                       u690 0537  
                     u771 04E2                       u851 0660                       u691 0536  
                     u780 04EA                       u940 044E                       u860 0616  
                     u781 04E9                       u941 044D                       u861 0615  
                     u790 04F1                       u791 04F0                       u935 0440  
                     u960 045F                       u961 045E                       u890 0632  
                     u955 044F                       u891 0631                       u875 061F  
                     u980 0473                       u981 0472                       u965 045B  
                     u885 0626                       u990 0478                       u991 0477  
                     u975 0467                       _aux 0037                       _pot 003F  
                     fsr0 0004                       indf 0000           __end_of_LCD_cmd 06BC  
     LCD_move_cursor@temp 0022                      l2001 00AD                      l2011 00D9  
                    l2003 00B3                      l2021 011F                      l2013 00DF  
                    l2005 00B9                      l2031 0159                      l2023 012B  
                    l2015 00E9                      l2007 00C3                      l2041 017F  
                    l2033 0163                      l2025 0131                      l2017 00FD  
                    l2009 00C9                      l1411 06D2                      l2115 03F8  
                    l2051 01B5                      l2043 0189                      l2035 0169  
                    l2027 0137                      l2019 0115                      l1413 06D6  
                    l2061 01F3                      l2053 01BF                      l2045 019D  
                    l2037 016F                      l2029 0141                      l1407 0728  
                    l1415 06D7                      l2063 01F9                      l2055 01D7  
                    l2047 01A9                      l2039 0179                      l2071 0322  
                    l1409 072E                      l1601 0292                      l1441 03A2  
                    l2065 0203                      l2057 01E1                      l2049 01AF  
                    l2081 0361                      l2073 0336                      l1611 02C8  
                    l1603 029B                      l1451 03BF                      l1443 03A3  
                    l2067 0209                      l2059 01ED                      l2083 037A  
                    l2075 0341                      l1437 071D                      l1621 0304  
                    l1613 02D7                      l1605 02AA                      l1461 03E2  
                    l1453 03C6                      l1445 03AA                      l2069 020F  
                    l2085 038E                      l2077 0351                      l1439 0723  
                    l1623 030A                      l1615 02DD                      l1607 02B0  
                    l1631 0718                      l1551 05F0                      l1463 03E9  
                    l1455 03CD                      l1447 03B1                      l2087 0393  
                    l2079 0356                      l1625 0318                      l1617 02EC  
                    l1609 02BF                      l1633 0700                      l1641 06F5  
                    l1561 0602                      l1553 05F5                      l1481 0562  
                    l1473 0547                      l1457 03D4                      l1449 03B8  
                    l1619 02F5                      l1627 070E                      l1635 0703  
                    l1643 06FC                      l1563 0603                      l1555 05F9  
                    l1483 0564                      l1475 0548                      l1459 03DB  
                    l1467 03F0                      l1651 0517                      l1581 0223  
                    l1901 0612                      l1629 0711                      l1637 070A  
                    l1565 0607                      l1557 05FD                      l1549 05E2  
                    l1485 056D                      l1477 0553                      l1661 0537  
                    l1653 051D                      l1591 0256                      l1583 0229  
                    l1903 0616                      l1639 06F2                      l1567 060B  
                    l1559 0601                      l1487 0573                      l1479 0559  
                    l1663 0544                      l1655 0526                      l1647 050B  
                    l1841 04CD                      l1593 0265                      l1585 0238  
                    l1921 0427                      l1913 0419                      l1905 0625  
                    l1489 057F                      l1657 0528                      l1649 050C  
                    l1851 04F1                      l1843 04D1                      l1595 026E  
                    l1587 0241                      l1579 021A                      l1931 043C  
                    l1923 042B                      l1915 041C                      l1907 062C  
                    l1659 0531                      l1853 04F8                      l1845 04DC  
                    l1597 027D                      l1589 0250                      l1941 045F  
                    l1933 043F                      l1925 0430                      l1917 0420  
                    l1909 0632                      l1861 06C0                      l1855 04FF  
                    l1847 04E3                      l1871 06A6                      l1599 0283  
                    l1951 0478                      l1943 0465                      l1935 0446  
                    l1927 0434                      l1919 0425                      l1863 06C6  
                    l1857 0506                      l1849 04EA                      l1873 06AC  
                    l1961 0492                      l1953 047D                      l1945 0466  
                    l1937 044A                      l1929 0436                      l1865 06C9  
                    l1881 066A                      l1875 06AF                      l1963 04A2  
                    l1947 046D                      l1939 044E                      l1867 06CE  
                    l1859 06BD                      l1891 063C                      l1883 066F  
                    l1971 06EB                      l1877 06B8                      l1869 06A3  
                    l1965 04A8                      l1957 0482                      l1949 0473  
                    l1893 063F                      l1885 0676                      l1981 0049  
                    l1973 0029                      l1959 0488                      l1967 0584  
                    l1895 064C                      l1887 067C                      l1879 0665  
                    l1991 0081                      l1983 0053                      l1975 0031  
                    l1897 0654                      l1889 0681                      l1993 008B  
                    l1985 0059                      l1977 003D                      l1969 06E3  
                    l1899 060E                      l1995 0097                      l1987 005F  
                    l1979 0043                      l1997 009D                      l1989 0069  
                    l1999 00A3                      STR_1 068E                      STR_2 069F  
                    STR_3 069F                      u1007 033C                      u1017 034C  
                    u1107 011B                      u1027 035C                      u1117 013D  
                    u1037 004F                      u1207 06F7                      u1127 015F  
                    u1047 0065                      u1217 0705                      u1137 0175  
                    u1057 0087                      u1307 0287                      u1227 0713  
                    u1147 0185                      u1067 00A9                      u1317 0296  
                    u1237 021E                      u1157 01BB                      u1077 00BF  
                    u1407 031C                      u1327 02A5                      u1247 022D  
                    u1167 01DD                      u1087 00D5                      u1417 048E  
                    u1337 02B4                      u1257 023C                      u1177 01FF  
                    u1097 00E5                      u1427 049E                      u1347 02C3  
                    u1267 024B                      u1187 0215                      u1437 04AE  
                    u1357 02D2                      u1277 025A                      u1197 06CB  
                    u1447 06B3                      u1367 02E1                      u1287 0269  
                    u1377 02F0                      u1297 0278                      u1387 02FF  
                    u1397 030E                      _PIE1 008C                      _int1 05B5  
                    _cont 003E                      _main 0322                      _temp 0038  
                    _show 0029                      btemp 007E                      start 000C  
             n_ascii@code 0073        __size_of_LCD_datos 003E          __end_of_LCD_Init 04CC  
                   ?_int1 0070                     ?_main 0070           __end_of___awdiv 0482  
                   ?_show 0070                     _ANSEL 0188             _LCD_data_char 06BC  
         ___awdiv@divisor 0022                     i1l161 05DB                     i1l156 05C6  
                   i1l158 05D0           ___awdiv@counter 0026                     _RCREG 001A  
                   _RCSTA 0018                     _SPBRG 0099                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   u70_20 05BC                     u70_21 05BB                     u71_20 05C0  
                   u71_21 05BF                     u72_20 05CA                     u72_21 05C9  
                   u73_20 05D4                     u73_21 05D3                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _SSPIF 0063                     _TXREG 0019                     _TXSTA 0098  
             _tvirt_usart 071C                     _s1spi 070E                     _s2spi 0700  
         __end_of_n_ascii 0419                     _s3spi 06F2           __end_of_map_var 05B5  
                   _conts 0546                     _sdata 0078                     _pot_u 003D  
                   _setup 05E2                     pclath 000A                     status 0003  
                   wtemp0 007E           __end_of_voltaje 0546              n_ascii@value 0076  
       ??_LCD_data_string 0076           __initialization 000F              __end_of_int1 05E2  
            __end_of_main 03A1              __end_of_show 021A               map_var@v_in 0032  
            conts@data_in 0077            ?_LCD_data_char 0070                    ??_int1 0070  
                  ??_main 0033                    ??_show 0023                 ??_LCD_cmd 0074  
       __end_of_LCD_datos 050A                    ?_s1spi 0070                    ?_s2spi 0070  
                  ?_s3spi 0070                    ?_conts 0073          ___awdiv@dividend 0024  
                  ?_setup 0070                    _ANSELH 0189                    i1l1801 05D9  
                  i1l1803 05DA                    i1l1791 05C1                    i1l1793 05CA  
                  i1l1785 05B5                    i1l1795 05CB                    i1l1787 05BC  
                  i1l1797 05D4                    i1l1789 05C0                    i1l1799 05D5  
                  _INTCON 000B                    _SPBRGH 009A                    _SSPCON 0014  
                  _SSPBUF 0013                    ___wmul 060E                 ??___awdiv 0077  
                  _header 021A                    _cont_c 0039                    _cont_d 0079  
                  _cont_u 007A          ___awdiv@quotient 0028                    _pot_d1 003C  
                  _pot_d2 003B                    _temp_m 003A                    _titulo 06E3  
               ??_n_ascii 0074                 ??_map_var 002F                    saved_w 007E  
               ??_voltaje 0076   __end_of__initialization 0025                 ?_LCD_Init 0070  
__size_of_LCD_move_cursor 0026            __pcstackCOMMON 0070             __end_of_s1spi 071C  
            __pidataBANK0 0733             __end_of_s2spi 070E             __end_of_s3spi 0700  
           __end_of_conts 0581              map_var@inMax 002C           ??_LCD_data_char 0074  
            map_var@inMin 002B             __end_of_setup 060E              map_var@v_out 002A  
                 ??_s1spi 0073                   ??_s2spi 0073                   ??_s3spi 0073  
      __size_of_config_us 0011                   ??_conts 0076                   ??_setup 0073  
              __pbssBANK0 0037                ??_LCD_Init 0020                __pmaintext 0322  
                 ?___wmul 0073                   ?_header 0070                __pintentry 0004  
                 _BAUDCTL 0187                   ?_titulo 0070                   _LCD_cmd 06A2  
            ?_tvirt_usart 0070           _LCD_data_string 0639        __size_of_tnl_usart 000B  
                 _SSPCON2 0091                   _SSPSTAT 0094                __stringtab 0688  
       __end_of_config_us 06E3         ??_LCD_move_cursor 0020                   ___awdiv 0419  
         __size_of___wmul 002B           __size_of_header 0108                   __ptext1 050A  
                 __ptext2 06E3                   __ptext3 0029                   __ptext4 03A1  
                 __ptext5 0546                   __ptext6 0662                   __ptext7 0639  
                 __ptext8 06BC                   __ptext9 05E2                   _n_ascii 03A1  
         __size_of_titulo 000F                   _map_var 0581                   _voltaje 050A  
    end_of_initialization 0025                 _LCD_datos 04CC         __end_of_tnl_usart 0733  
 __end_of_LCD_data_string 0662                 _PORTBbits 0006                ?_LCD_datos 0070  
            tvirt_usart@t 0073                 _TXSTAbits 0098         __size_of_LCD_Init 004A  
          __end_of___wmul 0639            voltaje@data_in 0077            __end_of_header 0322  
              LCD_datos@a 0073            __end_of_titulo 06F2       start_initialization 000F  
           map_var@outMax 002E             map_var@outMin 002D      __size_of_tvirt_usart 000C  
          voltaje@volt_d1 0074            voltaje@volt_d2 0075                  ??___wmul 0077  
                ??_header 0074               __pdataBANK0 003E     __end_of_LCD_data_char 06D2  
                ??_titulo 0078          ?_LCD_data_string 0070                  ?_LCD_cmd 0070  
             __pbssCOMMON 0078                 ___latbits 0002             __pcstackBANK0 0020  
        LCD_data_string@a 0022          LCD_data_string@i 0020                  LCD_cmd@a 0076  
             ??_LCD_datos 0073           _LCD_move_cursor 0662                  ?___awdiv 0022  
               _config_us 06D2                 __pstrings 0688                  ?_n_ascii 0073  
                ?_map_var 002A            __size_of_s1spi 000E            __size_of_s2spi 000E  
          __size_of_s3spi 000E            __size_of_conts 003B                  ?_voltaje 0073  
          __size_of_setup 002C         interrupt_function 0004                  _LCD_Init 0482  
          ___wmul@product 0020                  _PIR1bits 000C                ?_config_us 0070  
               _tnl_usart 0728               __stringbase 068D         ___wmul@multiplier 0073  
        LCD_move_cursor@a 0021          LCD_move_cursor@b 0077          __size_of_LCD_cmd 001A  
 __end_of_LCD_move_cursor 0688                 conts@cent 0075             voltaje@volt_u 0073  
        __size_of___awdiv 0069        __end_of__stringtab 068E                ?_tnl_usart 0070  
        __size_of_n_ascii 0078          __size_of_map_var 0034                  __ptext10 06D2  
                __ptext11 06F2                  __ptext20 0482                  __ptext12 0700  
                __ptext21 06A2                  __ptext13 070E                  __ptext22 04CC  
                __ptext14 0581                  __ptext23 05B5                  __ptext15 060E  
                __ptext16 0419                  __ptext17 021A                  __ptext18 071C  
                __ptext19 0728          __size_of_voltaje 003C             __size_of_int1 002D  
           __size_of_main 007F             __size_of_show 01F1               ??_config_us 0073  
                conts@dec 0074                  conts@uni 0073            LCD_data_char@a 0075  
           ??_tvirt_usart 0073          ?_LCD_move_cursor 0077                  intlevel1 0000  
               stringcode 0688               ??_tnl_usart 0073                  stringdir 0688  
                stringtab 0688  __size_of_LCD_data_string 0029       __end_of_tvirt_usart 0728  
  __size_of_LCD_data_char 0016  
