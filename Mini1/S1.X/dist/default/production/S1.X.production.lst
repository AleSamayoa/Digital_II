

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 23 15:51:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0000                     	;# 
   207  0001                     	;# 
   208  0002                     	;# 
   209  0003                     	;# 
   210  0004                     	;# 
   211  0005                     	;# 
   212  0006                     	;# 
   213  0007                     	;# 
   214  0008                     	;# 
   215  0009                     	;# 
   216  000A                     	;# 
   217  000B                     	;# 
   218  000C                     	;# 
   219  000D                     	;# 
   220  000E                     	;# 
   221  000E                     	;# 
   222  000F                     	;# 
   223  0010                     	;# 
   224  0011                     	;# 
   225  0012                     	;# 
   226  0013                     	;# 
   227  0014                     	;# 
   228  0015                     	;# 
   229  0015                     	;# 
   230  0016                     	;# 
   231  0017                     	;# 
   232  0018                     	;# 
   233  0019                     	;# 
   234  001A                     	;# 
   235  001B                     	;# 
   236  001B                     	;# 
   237  001C                     	;# 
   238  001D                     	;# 
   239  001E                     	;# 
   240  001F                     	;# 
   241  0081                     	;# 
   242  0085                     	;# 
   243  0086                     	;# 
   244  0087                     	;# 
   245  0088                     	;# 
   246  0089                     	;# 
   247  008C                     	;# 
   248  008D                     	;# 
   249  008E                     	;# 
   250  008F                     	;# 
   251  0090                     	;# 
   252  0091                     	;# 
   253  0092                     	;# 
   254  0093                     	;# 
   255  0093                     	;# 
   256  0093                     	;# 
   257  0094                     	;# 
   258  0095                     	;# 
   259  0096                     	;# 
   260  0097                     	;# 
   261  0098                     	;# 
   262  0099                     	;# 
   263  009A                     	;# 
   264  009B                     	;# 
   265  009C                     	;# 
   266  009D                     	;# 
   267  009E                     	;# 
   268  009F                     	;# 
   269  0105                     	;# 
   270  0107                     	;# 
   271  0108                     	;# 
   272  0109                     	;# 
   273  010C                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  010E                     	;# 
   277  010F                     	;# 
   278  0185                     	;# 
   279  0187                     	;# 
   280  0188                     	;# 
   281  0189                     	;# 
   282  018C                     	;# 
   283  018D                     	;# 
   284  001E                     _ADRESH	set	30
   285  0013                     _SSPBUF	set	19
   286  000B                     _INTCON	set	11
   287  000C                     _PIR1bits	set	12
   288  0014                     _SSPCON	set	20
   289  001F                     _ADCON0bits	set	31
   290  001F                     _ADCON0	set	31
   291  0007                     _PORTC	set	7
   292  0006                     _PORTB	set	6
   293  0008                     _PORTD	set	8
   294  0063                     _SSPIF	set	99
   295  0066                     _ADIF	set	102
   296  005F                     _GIE	set	95
   297  008C                     _PIE1	set	140
   298  0091                     _SSPCON2	set	145
   299  0094                     _SSPSTAT	set	148
   300  009F                     _ADCON1	set	159
   301  0088                     _TRISD	set	136
   302  0087                     _TRISC	set	135
   303  0086                     _TRISB	set	134
   304  0085                     _TRISA	set	133
   305  0189                     _ANSELH	set	393
   306                           
   307                           	psect	cinit
   308  0011                     start_initialization:	
   309                           ; #config settings
   310                           
   311  0011                     __initialization:
   312                           
   313                           ; Clear objects allocated to COMMON
   314  0011  01F8               	clrf	__pbssCOMMON& (0+127)
   315  0012  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   316  0013                     end_of_initialization:	
   317                           ;End of C runtime variable initialization code
   318                           
   319  0013                     __end_of__initialization:
   320  0013  0183               	clrf	3
   321  0014  120A  118A  2869   	ljmp	_main	;jump to C main() function
   322                           
   323                           	psect	bssCOMMON
   324  0078                     __pbssCOMMON:
   325  0078                     _spidatos:
   326  0078                     	ds	1
   327  0079                     _datos:
   328  0079                     	ds	1
   329                           
   330                           	psect	cstackCOMMON
   331  0070                     __pcstackCOMMON:
   332  0070                     ?_setup:
   333  0070                     ?_adcon:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_valadc:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ??_valadc:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_main:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?_int1:	
   346                           ; 1 bytes @ 0x0
   347                           
   348                           
   349                           ; 1 bytes @ 0x0
   350  0070                     	ds	1
   351  0071                     valadc@a:
   352                           
   353                           ; 1 bytes @ 0x1
   354  0071                     	ds	1
   355  0072                     ??_int1:
   356                           
   357                           ; 1 bytes @ 0x2
   358  0072                     	ds	4
   359  0076                     ??_setup:
   360  0076                     ??_adcon:	
   361                           ; 1 bytes @ 0x6
   362                           
   363                           
   364                           ; 1 bytes @ 0x6
   365  0076                     	ds	2
   366  0078                     ??_main:
   367                           
   368                           	psect	maintext
   369  0069                     __pmaintext:	
   370                           ; 1 bytes @ 0x8
   371 ;;
   372 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   373 ;;
   374 ;; *************** function _main *****************
   375 ;; Defined at:
   376 ;;		line 44 in file "s1.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;		None
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, status,2, status,0, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : B00/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         0       0       0       0       0
   392 ;;      Temps:          0       0       0       0       0
   393 ;;      Totals:         0       0       0       0       0
   394 ;;Total ram usage:        0 bytes
   395 ;; Hardware stack levels required when called:    3
   396 ;; This function calls:
   397 ;;		_adcon
   398 ;;		_setup
   399 ;; This function is called by:
   400 ;;		Startup code after reset
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           
   405                           ;psect for function _main
   406  0069                     _main:
   407  0069                     l713:	
   408                           ;incstack = 0
   409                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   410                           
   411                           
   412                           ;s1.c: 45:     INTCON = 0B11001000;
   413  0069  120A  118A  2017  120A  118A  	fcall	_setup
   414  006E                     l57:	
   415                           ;s1.c: 46: }
   416                           
   417                           
   418                           ;s1.c: 47: 
   419  006E  120A  118A  207B  120A  118A  	fcall	_adcon
   420  0073                     l715:
   421                           
   422                           ;s1.c: 48: void __attribute__((picinterrupt((""))))int1(void) {
   423  0073  0879               	movf	_datos,w
   424  0074  1283               	bcf	3,5	;RP0=0, select bank0
   425  0075  1303               	bcf	3,6	;RP1=0, select bank0
   426  0076  0088               	movwf	8	;volatile
   427  0077  286E               	goto	l57
   428  0078  120A  118A  280E   	ljmp	start
   429  007B                     __end_of_main:
   430                           
   431                           	psect	text1
   432  0017                     __ptext1:	
   433 ;; *************** function _setup *****************
   434 ;; Defined at:
   435 ;;		line 56 in file "s1.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;		None
   438 ;; Auto vars:     Size  Location     Type
   439 ;;		None
   440 ;; Return value:  Size  Location     Type
   441 ;;                  1    wreg      void 
   442 ;; Registers used:
   443 ;;		wreg, status,2, status,0
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   449 ;;      Params:         0       0       0       0       0
   450 ;;      Locals:         0       0       0       0       0
   451 ;;      Temps:          1       0       0       0       0
   452 ;;      Totals:         1       0       0       0       0
   453 ;;Total ram usage:        1 bytes
   454 ;; Hardware stack levels used:    1
   455 ;; Hardware stack levels required when called:    2
   456 ;; This function calls:
   457 ;;		Nothing
   458 ;; This function is called by:
   459 ;;		_main
   460 ;; This function uses a non-reentrant model
   461 ;;
   462                           
   463                           
   464                           ;psect for function _setup
   465  0017                     _setup:
   466  0017                     l675:	
   467                           ;incstack = 0
   468                           ; Regs used in _setup: [wreg+status,2+status,0]
   469                           
   470                           
   471                           ;s1.c: 58:         SSPIF = 0;
   472  0017  3020               	movlw	32
   473  0018  1683               	bsf	3,5	;RP0=1, select bank1
   474  0019  1303               	bcf	3,6	;RP1=0, select bank1
   475  001A  0085               	movwf	5	;volatile
   476                           
   477                           ;s1.c: 59:     }
   478  001B  0806               	movf	6,w	;volatile
   479                           
   480                           ;s1.c: 60:     GIE = 1;
   481  001C  3018               	movlw	24
   482  001D  0087               	movwf	7	;volatile
   483  001E                     l677:
   484                           
   485                           ;s1.c: 61: }
   486  001E  0188               	clrf	8	;volatile
   487  001F                     l679:
   488  001F  3010               	movlw	16
   489  0020  00F6               	movwf	??_setup
   490  0021  0876               	movf	??_setup,w
   491  0022  1683               	bsf	3,5	;RP0=1, select bank3
   492  0023  1703               	bsf	3,6	;RP1=1, select bank3
   493  0024  0589               	andwf	9,f	;volatile
   494  0025                     l681:
   495  0025  1283               	bcf	3,5	;RP0=0, select bank0
   496  0026  1303               	bcf	3,6	;RP1=0, select bank0
   497  0027  0188               	clrf	8	;volatile
   498  0028                     l683:
   499  0028  0186               	clrf	6	;volatile
   500  0029                     l685:
   501  0029  0187               	clrf	7	;volatile
   502  002A                     l687:
   503  002A  3070               	movlw	112
   504  002B  009F               	movwf	31	;volatile
   505  002C                     l689:
   506  002C  1683               	bsf	3,5	;RP0=1, select bank1
   507  002D  1303               	bcf	3,6	;RP1=0, select bank1
   508  002E  019F               	clrf	31	;volatile
   509  002F                     l691:
   510  002F  1283               	bcf	3,5	;RP0=0, select bank0
   511  0030  1303               	bcf	3,6	;RP1=0, select bank0
   512  0031  141F               	bsf	31,0	;volatile
   513  0032                     l693:
   514  0032  1683               	bsf	3,5	;RP0=1, select bank1
   515  0033  1303               	bcf	3,6	;RP1=0, select bank1
   516  0034  0194               	clrf	20	;volatile
   517  0035                     l695:
   518  0035  0191               	clrf	17	;volatile
   519  0036                     l697:
   520  0036  3034               	movlw	52
   521  0037  1283               	bcf	3,5	;RP0=0, select bank0
   522  0038  1303               	bcf	3,6	;RP1=0, select bank0
   523  0039  0094               	movwf	20	;volatile
   524  003A                     l699:
   525  003A  3048               	movlw	72
   526  003B  1683               	bsf	3,5	;RP0=1, select bank1
   527  003C  1303               	bcf	3,6	;RP1=0, select bank1
   528  003D  008C               	movwf	12	;volatile
   529  003E                     l701:
   530  003E  1283               	bcf	3,5	;RP0=0, select bank0
   531  003F  1303               	bcf	3,6	;RP1=0, select bank0
   532  0040  130C               	bcf	12,6	;volatile
   533  0041                     l703:
   534  0041  30C8               	movlw	200
   535  0042  008B               	movwf	11	;volatile
   536  0043                     l63:
   537  0043  0008               	return
   538  0044                     __end_of_setup:
   539                           
   540                           	psect	text2
   541  007B                     __ptext2:	
   542 ;; *************** function _adcon *****************
   543 ;; Defined at:
   544 ;;		line 21 in file "ADC.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   558 ;;      Params:         0       0       0       0       0
   559 ;;      Locals:         0       0       0       0       0
   560 ;;      Temps:          2       0       0       0       0
   561 ;;      Totals:         2       0       0       0       0
   562 ;;Total ram usage:        2 bytes
   563 ;; Hardware stack levels used:    1
   564 ;; Hardware stack levels required when called:    2
   565 ;; This function calls:
   566 ;;		Nothing
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _adcon
   574  007B                     _adcon:
   575  007B                     l705:	
   576                           ;incstack = 0
   577                           ; Regs used in _adcon: [wreg]
   578                           
   579                           
   580                           ;ADC.c: 22:     if (0 == ADCON0bits.GO_nDONE) {
   581  007B  1283               	bcf	3,5	;RP0=0, select bank0
   582  007C  1303               	bcf	3,6	;RP1=0, select bank0
   583  007D  189F               	btfsc	31,1	;volatile
   584  007E  2880               	goto	u11
   585  007F  2881               	goto	u10
   586  0080                     u11:
   587  0080  288C               	goto	l83
   588  0081                     u10:
   589  0081                     l707:
   590                           
   591                           ;ADC.c: 23:         _delay((unsigned long)((5)*(4000000/4000.0)));
   592  0081  3007               	movlw	7
   593  0082  00F7               	movwf	??_adcon+1
   594  0083  307D               	movlw	125
   595  0084  00F6               	movwf	??_adcon
   596  0085                     u47:
   597  0085  0BF6               	decfsz	??_adcon,f
   598  0086  2885               	goto	u47
   599  0087  0BF7               	decfsz	??_adcon+1,f
   600  0088  2885               	goto	u47
   601  0089                     l709:
   602                           
   603                           ;ADC.c: 24:         ADCON0bits.GO_nDONE = 1;
   604  0089  1283               	bcf	3,5	;RP0=0, select bank0
   605  008A  1303               	bcf	3,6	;RP1=0, select bank0
   606  008B  149F               	bsf	31,1	;volatile
   607  008C                     l83:
   608  008C  0008               	return
   609  008D                     __end_of_adcon:
   610                           
   611                           	psect	text3
   612  0044                     __ptext3:	
   613 ;; *************** function _int1 *****************
   614 ;; Defined at:
   615 ;;		line 80 in file "s1.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0
   631 ;;      Temps:          4       0       0       0       0
   632 ;;      Totals:         4       0       0       0       0
   633 ;;Total ram usage:        4 bytes
   634 ;; Hardware stack levels used:    1
   635 ;; Hardware stack levels required when called:    1
   636 ;; This function calls:
   637 ;;		_valadc
   638 ;; This function is called by:
   639 ;;		Interrupt level 1
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           
   644                           ;psect for function _int1
   645  0044                     _int1:
   646  0044                     i1l717:
   647  0044  138B               	bcf	11,7	;volatile
   648  0045  1283               	bcf	3,5	;RP0=0, select bank0
   649  0046  1303               	bcf	3,6	;RP1=0, select bank0
   650  0047  1F0C               	btfss	12,6	;volatile
   651  0048  284A               	goto	u2_21
   652  0049  284B               	goto	u2_20
   653  004A                     u2_21:
   654  004A  2854               	goto	i1l723
   655  004B                     u2_20:
   656  004B                     i1l719:
   657  004B  3079               	movlw	(low (_datos| 0))& (0+255)
   658  004C  120A  118A  208D  120A  118A  	fcall	_valadc
   659  0051                     i1l721:
   660  0051  1283               	bcf	3,5	;RP0=0, select bank0
   661  0052  1303               	bcf	3,6	;RP1=0, select bank0
   662  0053  130C               	bcf	12,6	;volatile
   663  0054                     i1l723:
   664  0054  1D8C               	btfss	12,3	;volatile
   665  0055  2857               	goto	u3_21
   666  0056  2858               	goto	u3_20
   667  0057                     u3_21:
   668  0057  285F               	goto	i1l729
   669  0058                     u3_20:
   670  0058                     i1l725:
   671  0058  0813               	movf	19,w	;volatile
   672  0059  00F2               	movwf	??_int1
   673  005A  0872               	movf	??_int1,w
   674  005B  00F8               	movwf	_spidatos
   675  005C  0879               	movf	_datos,w
   676  005D  0093               	movwf	19	;volatile
   677  005E                     i1l727:
   678  005E  118C               	bcf	12,3	;volatile
   679  005F                     i1l729:
   680  005F  178B               	bsf	11,7	;volatile
   681  0060                     i1l70:
   682  0060  0875               	movf	??_int1+3,w
   683  0061  008A               	movwf	10
   684  0062  0874               	movf	??_int1+2,w
   685  0063  0084               	movwf	4
   686  0064  0E73               	swapf	??_int1+1,w
   687  0065  0083               	movwf	3
   688  0066  0EFE               	swapf	btemp,f
   689  0067  0E7E               	swapf	btemp,w
   690  0068  0009               	retfie
   691  0069                     __end_of_int1:
   692                           
   693                           	psect	intentry
   694  0004                     __pintentry:	
   695                           ;incstack = 0
   696                           ; Regs used in _int1: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   697                           
   698  0004                     interrupt_function:
   699  007E                     saved_w	set	btemp
   700  0004  00FE               	movwf	btemp
   701  0005  0E03               	swapf	3,w
   702  0006  00F3               	movwf	??_int1+1
   703  0007  0804               	movf	4,w
   704  0008  00F4               	movwf	??_int1+2
   705  0009  080A               	movf	10,w
   706  000A  00F5               	movwf	??_int1+3
   707  000B  120A  118A  2844   	ljmp	_int1
   708                           
   709                           	psect	text4
   710  008D                     __ptext4:	
   711 ;; *************** function _valadc *****************
   712 ;; Defined at:
   713 ;;		line 17 in file "ADC.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  a               1    wreg     PTR volatile unsigned ch
   716 ;;		 -> datos(1), 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  a               1    1[COMMON] PTR volatile unsigned ch
   719 ;;		 -> datos(1), 
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, fsr0l, fsr0h
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   729 ;;      Params:         0       0       0       0       0
   730 ;;      Locals:         1       0       0       0       0
   731 ;;      Temps:          1       0       0       0       0
   732 ;;      Totals:         2       0       0       0       0
   733 ;;Total ram usage:        2 bytes
   734 ;; Hardware stack levels used:    1
   735 ;; This function calls:
   736 ;;		Nothing
   737 ;; This function is called by:
   738 ;;		_int1
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742                           
   743                           ;psect for function _valadc
   744  008D                     _valadc:
   745                           
   746                           ;incstack = 0
   747                           ; Regs used in _valadc: [wregfsr0]
   748                           ;valadc@a stored from wreg
   749  008D  00F1               	movwf	valadc@a
   750  008E                     i1l711:
   751                           
   752                           ;ADC.c: 18:     *a = ADRESH;
   753  008E  1283               	bcf	3,5	;RP0=0, select bank0
   754  008F  1303               	bcf	3,6	;RP1=0, select bank0
   755  0090  081E               	movf	30,w	;volatile
   756  0091  00F0               	movwf	??_valadc
   757  0092  0871               	movf	valadc@a,w
   758  0093  0084               	movwf	4
   759  0094  0870               	movf	??_valadc,w
   760  0095  0080               	movwf	0
   761  0096                     i1l79:
   762  0096  0008               	return
   763  0097                     __end_of_valadc:
   764  007E                     btemp	set	126	;btemp
   765  007E                     wtemp0	set	126
   766                           
   767                           	psect	config
   768                           
   769                           ;Config register CONFIG1 @ 0x2007
   770                           ;	Oscillator Selection bits
   771                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
   772                           ;	Watchdog Timer Enable bit
   773                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   774                           ;	Power-up Timer Enable bit
   775                           ;	PWRTE = OFF, PWRT disabled
   776                           ;	RE3/MCLR pin function select bit
   777                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   778                           ;	Code Protection bit
   779                           ;	CP = OFF, Program memory code protection is disabled
   780                           ;	Data Code Protection bit
   781                           ;	CPD = OFF, Data memory code protection is disabled
   782                           ;	Brown Out Reset Selection bits
   783                           ;	BOREN = OFF, BOR disabled
   784                           ;	Internal External Switchover bit
   785                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   786                           ;	Fail-Safe Clock Monitor Enabled bit
   787                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   788                           ;	Low Voltage Programming Enable bit
   789                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   790                           ;	In-Circuit Debugger Mode bit
   791                           ;	DEBUG = 0x1, unprogrammed default
   792  2007                     	org	8199
   793  2007  20D1               	dw	8401
   794                           
   795                           ;Config register CONFIG2 @ 0x2008
   796                           ;	Brown-out Reset Selection bit
   797                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   798                           ;	Flash Program Memory Self Write Enable bits
   799                           ;	WRT = OFF, Write protection off
   800  2008                     	org	8200
   801  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    valadc@a	PTR volatile unsigned char  size(1) Largest target is 1
		 -> datos(COMMON[1]), 


Critical Paths under _main in COMMON

    _main->_adcon

Critical Paths under _int1 in COMMON

    _int1->_valadc

Critical Paths under _main in BANK0

    None.

Critical Paths under _int1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int1 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int1 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int1 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _adcon
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0       0
                                              6 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adcon                                                2     2      0       0
                                              6 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _int1                                                 4     4      0      45
                                              2 COMMON     4     4      0
                             _valadc
 ---------------------------------------------------------------------------------
 (3) _valadc                                               2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adcon
   _setup

 _int1 (ROOT)
   _valadc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 23 15:51:42 2021

                     l63 0043                       l57 006E                       l83 008C  
                     u10 0081                       u11 0080                       u47 0085  
                    l701 003E                      l703 0041                      l705 007B  
                    l713 0069                      l707 0081                      l715 0073  
                    l709 0089                      l681 0025                      l691 002F  
                    l683 0028                      l675 0017                      l693 0032  
                    l685 0029                      l677 001E                      l695 0035  
                    l687 002A                      l679 001F                      l697 0036  
                    l689 002C                      l699 003A                      _GIE 005F  
                    fsr0 0004                      indf 0000                     _ADIF 0066  
                   _PIE1 008C                     i1l70 0060                     i1l79 0096  
                   u2_20 004B                     u2_21 004A                     u3_20 0058  
                   u3_21 0057                     _int1 0044                     _main 0069  
                   btemp 007E                     start 000E                    ?_int1 0070  
                  ?_main 0070                    i1l711 008E                    i1l721 0051  
                  i1l723 0054                    i1l725 0058                    i1l717 0044  
                  i1l727 005E                    i1l719 004B                    i1l729 005F  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _SSPIF 0063                    _adcon 007B  
                  _datos 0079                    _setup 0017                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_int1 0069             __end_of_main 007B                   ??_int1 0072  
                 ??_main 0078                   ?_adcon 0070                   _ADCON0 001F  
                 _ADCON1 009F                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   _INTCON 000B                   _SSPCON 0014  
                 _SSPBUF 0013                   _valadc 008D                   saved_w 007E  
__end_of__initialization 0013           __pcstackCOMMON 0070            __end_of_adcon 008D  
          __end_of_setup 0044                  ??_adcon 0076                  ??_setup 0076  
             __pmaintext 0069               __pintentry 0004                  ?_valadc 0070  
                _SSPCON2 0091                  _SSPSTAT 0094          __size_of_valadc 000A  
                __ptext1 0017                  __ptext2 007B                  __ptext3 0044  
                __ptext4 008D     end_of_initialization 0013                  valadc@a 0071  
         __end_of_valadc 0097      start_initialization 0011                 ??_valadc 0070  
            __pbssCOMMON 0078                ___latbits 0002           __size_of_adcon 0012  
         __size_of_setup 002D        interrupt_function 0004                 _PIR1bits 000C  
             _ADCON0bits 001F            __size_of_int1 0025            __size_of_main 0012  
               _spidatos 0078                 intlevel1 0000  
