

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 05 21:04:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  008F                     	;# 
   103  0090                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  0105                     	;# 
   122  0107                     	;# 
   123  0108                     	;# 
   124  0109                     	;# 
   125  010C                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  0185                     	;# 
   131  0187                     	;# 
   132  0188                     	;# 
   133  0189                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  008F                     	;# 
   181  0090                     	;# 
   182  0091                     	;# 
   183  0092                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0094                     	;# 
   188  0095                     	;# 
   189  0096                     	;# 
   190  0097                     	;# 
   191  0098                     	;# 
   192  0099                     	;# 
   193  009A                     	;# 
   194  009B                     	;# 
   195  009C                     	;# 
   196  009D                     	;# 
   197  009E                     	;# 
   198  009F                     	;# 
   199  0105                     	;# 
   200  0107                     	;# 
   201  0108                     	;# 
   202  0109                     	;# 
   203  010C                     	;# 
   204  010C                     	;# 
   205  010D                     	;# 
   206  010E                     	;# 
   207  010F                     	;# 
   208  0185                     	;# 
   209  0187                     	;# 
   210  0188                     	;# 
   211  0189                     	;# 
   212  018C                     	;# 
   213  018D                     	;# 
   214  0000                     	;# 
   215  0001                     	;# 
   216  0002                     	;# 
   217  0003                     	;# 
   218  0004                     	;# 
   219  0005                     	;# 
   220  0006                     	;# 
   221  0007                     	;# 
   222  0008                     	;# 
   223  0009                     	;# 
   224  000A                     	;# 
   225  000B                     	;# 
   226  000C                     	;# 
   227  000D                     	;# 
   228  000E                     	;# 
   229  000E                     	;# 
   230  000F                     	;# 
   231  0010                     	;# 
   232  0011                     	;# 
   233  0012                     	;# 
   234  0013                     	;# 
   235  0014                     	;# 
   236  0015                     	;# 
   237  0015                     	;# 
   238  0016                     	;# 
   239  0017                     	;# 
   240  0018                     	;# 
   241  0019                     	;# 
   242  001A                     	;# 
   243  001B                     	;# 
   244  001B                     	;# 
   245  001C                     	;# 
   246  001D                     	;# 
   247  001E                     	;# 
   248  001F                     	;# 
   249  0081                     	;# 
   250  0085                     	;# 
   251  0086                     	;# 
   252  0087                     	;# 
   253  0088                     	;# 
   254  0089                     	;# 
   255  008C                     	;# 
   256  008D                     	;# 
   257  008E                     	;# 
   258  008F                     	;# 
   259  0090                     	;# 
   260  0091                     	;# 
   261  0092                     	;# 
   262  0093                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009C                     	;# 
   274  009D                     	;# 
   275  009E                     	;# 
   276  009F                     	;# 
   277  0105                     	;# 
   278  0107                     	;# 
   279  0108                     	;# 
   280  0109                     	;# 
   281  010C                     	;# 
   282  010C                     	;# 
   283  010D                     	;# 
   284  010E                     	;# 
   285  010F                     	;# 
   286  0185                     	;# 
   287  0187                     	;# 
   288  0188                     	;# 
   289  0189                     	;# 
   290  018C                     	;# 
   291  018D                     	;# 
   292                           
   293                           	psect	idataCOMMON
   294  012E                     __pidataCOMMON:
   295                           
   296                           ;initializer for _a
   297  012E  3401               	retlw	1
   298                           
   299                           	psect	idataBANK0
   300  0116                     __pidataBANK0:
   301                           
   302                           ;initializer for _tabla
   303  0116  343F               	retlw	63
   304  0117  3406               	retlw	6
   305  0118  345B               	retlw	91
   306  0119  344F               	retlw	79
   307  011A  3466               	retlw	102
   308  011B  346D               	retlw	109
   309  011C  347D               	retlw	125
   310  011D  3407               	retlw	7
   311  011E  347F               	retlw	127
   312  011F  346F               	retlw	111
   313  0120  3477               	retlw	119
   314  0121  347C               	retlw	124
   315  0122  3439               	retlw	57
   316  0123  345E               	retlw	94
   317  0124  3479               	retlw	121
   318  0125  3471               	retlw	113
   319  001F                     _ADCON0bits	set	31
   320  001E                     _ADRESH	set	30
   321  000C                     _PIR1bits	set	12
   322  0006                     _PORTBbits	set	6
   323  000B                     _INTCONbits	set	11
   324  000B                     _INTCON	set	11
   325  0001                     _TMR0	set	1
   326  001F                     _ADCON0	set	31
   327  0007                     _PORTC	set	7
   328  0006                     _PORTB	set	6
   329  0009                     _PORTE	set	9
   330  0007                     _PORTCbits	set	7
   331  0008                     _PORTD	set	8
   332  009F                     _ADCON1bits	set	159
   333  008C                     _PIE1bits	set	140
   334  0096                     _IOCB	set	150
   335  0081                     _OPTION_REG	set	129
   336  0088                     _TRISD	set	136
   337  0087                     _TRISC	set	135
   338  0086                     _TRISB	set	134
   339  0085                     _TRISA	set	133
   340  0089                     _TRISE	set	137
   341  0188                     _ANSEL	set	392
   342  0189                     _ANSELH	set	393
   343                           
   344                           	psect	cinit
   345  000F                     start_initialization:	
   346                           ; #config settings
   347                           
   348  000F                     __initialization:
   349                           
   350                           ; Initialize objects allocated to BANK0
   351  000F  1383               	bcf	3,7	;select IRP bank0
   352  0010  3030               	movlw	low (__pdataBANK0+16)
   353  0011  00FD               	movwf	btemp+-1
   354  0012  3001               	movlw	high __pidataBANK0
   355  0013  00FE               	movwf	btemp
   356  0014  3016               	movlw	low __pidataBANK0
   357  0015  00FF               	movwf	btemp+1
   358  0016  3020               	movlw	low __pdataBANK0
   359  0017  0084               	movwf	4
   360  0018  120A  118A  2107  120A  118A  	fcall	init_ram0
   361                           
   362                           ; Initialize objects allocated to COMMON
   363  001D  120A  118A  212E  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   364  0022  00FA               	movwf	__pdataCOMMON& (0+127)
   365                           
   366                           ; Clear objects allocated to BANK0
   367  0023  01B3               	clrf	__pbssBANK0& (0+127)
   368                           
   369                           ; Clear objects allocated to COMMON
   370  0024  01F0               	clrf	__pbssCOMMON& (0+127)
   371  0025  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   372  0026  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   373  0027  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   374  0028  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   375  0029                     end_of_initialization:	
   376                           ;End of C runtime variable initialization code
   377                           
   378  0029                     __end_of__initialization:
   379  0029  0183               	clrf	3
   380  002A  120A  118A  288D   	ljmp	_main	;jump to C main() function
   381                           
   382                           	psect	bssCOMMON
   383  0070                     __pbssCOMMON:
   384  0070                     _seg1:
   385  0070                     	ds	1
   386  0071                     _d2:
   387  0071                     	ds	1
   388  0072                     _d1:
   389  0072                     	ds	1
   390  0073                     _v:
   391  0073                     	ds	1
   392  0074                     _contador:
   393  0074                     	ds	1
   394                           
   395                           	psect	dataCOMMON
   396  007A                     __pdataCOMMON:
   397  007A                     _a:
   398  007A                     	ds	1
   399                           
   400                           	psect	bssBANK0
   401  0033                     __pbssBANK0:
   402  0033                     _seg2:
   403  0033                     	ds	1
   404                           
   405                           	psect	dataBANK0
   406  0020                     __pdataBANK0:
   407  0020                     _tabla:
   408  0020                     	ds	16
   409                           
   410                           	psect	inittext
   411  0103                     init_fetch0:	
   412                           ;	Called with low address in FSR and high address in W
   413                           
   414  0103  087E               	movf	btemp,w
   415  0104  008A               	movwf	10
   416  0105  087F               	movf	btemp+1,w
   417  0106  0082               	movwf	2
   418  0107                     init_ram0:	
   419                           ;Called with:
   420                           ;	high address of idata address in btemp 
   421                           ;	low address of idata address in btemp+1 
   422                           ;	low address of data in FSR
   423                           ;	high address + 1 of data in btemp-1
   424                           
   425  0107  120A  118A  2103  120A  118A  	fcall	init_fetch0
   426  010C  0080               	movwf	0
   427  010D  0A84               	incf	4,f
   428  010E  0804               	movf	4,w
   429  010F  067D               	xorwf	btemp+-1,w
   430  0110  1903               	btfsc	3,2
   431  0111  3400               	retlw	0
   432  0112  0AFF               	incf	btemp+1,f
   433  0113  1903               	btfsc	3,2
   434  0114  0AFE               	incf	btemp,f
   435  0115  2907               	goto	init_ram0
   436                           
   437                           	psect	cstackCOMMON
   438  0075                     __pcstackCOMMON:
   439  0075                     ?_setup:
   440  0075                     ?_valADC:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0075                     ?_main:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0075                     ?_inc:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0075                     ??_inc:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0075                     ?_rest:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0075                     ??_rest:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0075                     ?_int1:	
   459                           ; 1 bytes @ 0x0
   460                           
   461                           
   462                           ; 1 bytes @ 0x0
   463  0075                     	ds	1
   464  0076                     ??_int1:
   465                           
   466                           ; 1 bytes @ 0x1
   467  0076                     	ds	3
   468  0079                     _int1$195:
   469                           
   470                           ; 1 bytes @ 0x4
   471  0079                     	ds	1
   472                           
   473                           	psect	cstackBANK0
   474  0030                     __pcstackBANK0:
   475  0030                     ??_setup:
   476  0030                     ??_valADC:	
   477                           ; 1 bytes @ 0x0
   478                           
   479                           
   480                           ; 1 bytes @ 0x0
   481  0030                     	ds	1
   482  0031                     valADC@a:
   483                           
   484                           ; 1 bytes @ 0x1
   485  0031                     	ds	1
   486  0032                     ??_main:
   487                           
   488                           ; 1 bytes @ 0x2
   489  0032                     	ds	1
   490                           
   491                           	psect	maintext
   492  008D                     __pmaintext:	
   493 ;;
   494 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   495 ;;
   496 ;; *************** function _main *****************
   497 ;; Defined at:
   498 ;;		line 73 in file "lab_2.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : B00/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0
   514 ;;      Temps:          0       1       0       0       0
   515 ;;      Totals:         0       1       0       0       0
   516 ;;Total ram usage:        1 bytes
   517 ;; Hardware stack levels required when called:    3
   518 ;; This function calls:
   519 ;;		_setup
   520 ;;		_valADC
   521 ;; This function is called by:
   522 ;;		Startup code after reset
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           
   527                           ;psect for function _main
   528  008D                     _main:
   529  008D                     l937:	
   530                           ;incstack = 0
   531                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   532                           
   533                           
   534                           ;lab_2.c: 75:     setup();
   535  008D  120A  118A  20BA  120A  118A  	fcall	_setup
   536  0092                     l939:
   537                           
   538                           ;lab_2.c: 84:        PORTD = contador;
   539  0092  0874               	movf	_contador,w
   540  0093  1283               	bcf	3,5	;RP0=0, select bank0
   541  0094  1303               	bcf	3,6	;RP1=0, select bank0
   542  0095  0088               	movwf	8	;volatile
   543  0096                     l941:
   544                           
   545                           ;lab_2.c: 85:         valADC(a);
   546  0096  087A               	movf	_a,w
   547  0097  120A  118A  20E7  120A  118A  	fcall	_valADC
   548  009C                     l943:
   549                           
   550                           ;lab_2.c: 86:         seg1 = tabla[d1];
   551  009C  0872               	movf	_d1,w
   552  009D  3E20               	addlw	(low (_tabla| 0))& (0+255)
   553  009E  0084               	movwf	4
   554  009F  1383               	bcf	3,7	;select IRP bank0
   555  00A0  0800               	movf	0,w
   556  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   557  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   558  00A3  00B2               	movwf	??_main
   559  00A4  0832               	movf	??_main,w
   560  00A5  00F0               	movwf	_seg1
   561  00A6                     l945:
   562                           
   563                           ;lab_2.c: 87:         seg2 = tabla[d2];
   564  00A6  0871               	movf	_d2,w
   565  00A7  3E20               	addlw	(low (_tabla| 0))& (0+255)
   566  00A8  0084               	movwf	4
   567  00A9  0800               	movf	0,w
   568  00AA  00B2               	movwf	??_main
   569  00AB  0832               	movf	??_main,w
   570  00AC  00B3               	movwf	_seg2
   571                           
   572                           ;lab_2.c: 90:         if (v > contador){
   573  00AD  0873               	movf	_v,w
   574  00AE  0274               	subwf	_contador,w
   575  00AF  1803               	skipnc
   576  00B0  28B2               	goto	u221
   577  00B1  28B3               	goto	u220
   578  00B2                     u221:
   579  00B2  28B5               	goto	l68
   580  00B3                     u220:
   581  00B3                     l947:
   582                           
   583                           ;lab_2.c: 91:             PORTCbits.RC7 = 1;
   584  00B3  1787               	bsf	7,7	;volatile
   585                           
   586                           ;lab_2.c: 92:         }
   587  00B4  2892               	goto	l939
   588  00B5                     l68:	
   589                           ;lab_2.c: 93:         else {
   590                           
   591                           
   592                           ;lab_2.c: 94:             PORTCbits.RC7 = 0;
   593  00B5  1387               	bcf	7,7	;volatile
   594  00B6  2892               	goto	l939
   595  00B7  120A  118A  280C   	ljmp	start
   596  00BA                     __end_of_main:
   597                           
   598                           	psect	text1
   599  00E7                     __ptext1:	
   600 ;; *************** function _valADC *****************
   601 ;; Defined at:
   602 ;;		line 13 in file "ADC_lib.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  a               1    wreg     unsigned char 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  a               1    1[BANK0 ] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;                  1    wreg      void 
   609 ;; Registers used:
   610 ;;		wreg, status,2, status,0
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         0       1       0       0       0
   618 ;;      Temps:          0       1       0       0       0
   619 ;;      Totals:         0       2       0       0       0
   620 ;;Total ram usage:        2 bytes
   621 ;; Hardware stack levels used:    1
   622 ;; Hardware stack levels required when called:    2
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           
   631                           ;psect for function _valADC
   632  00E7                     _valADC:
   633                           
   634                           ;incstack = 0
   635                           ; Regs used in _valADC: [wreg+status,2+status,0]
   636                           ;valADC@a stored from wreg
   637  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   638  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   639  00E9  00B1               	movwf	valADC@a
   640  00EA                     l921:
   641                           
   642                           ;ADC_lib.c: 14:     INTCON = 0b11101000;
   643  00EA  30E8               	movlw	232
   644  00EB  008B               	movwf	11	;volatile
   645  00EC                     l923:
   646                           
   647                           ;ADC_lib.c: 15:     PIR1bits.ADIF = 0;
   648  00EC  130C               	bcf	12,6	;volatile
   649  00ED                     l925:
   650                           
   651                           ;ADC_lib.c: 16:     PIE1bits.ADIE = 1;
   652  00ED  1683               	bsf	3,5	;RP0=1, select bank1
   653  00EE  1303               	bcf	3,6	;RP1=0, select bank1
   654  00EF  170C               	bsf	12,6	;volatile
   655  00F0                     l927:
   656                           
   657                           ;ADC_lib.c: 17:     ADCON1bits.ADFM = 0;
   658  00F0  139F               	bcf	31,7	;volatile
   659  00F1                     l929:
   660                           
   661                           ;ADC_lib.c: 18:     if (a == 1){
   662  00F1  1283               	bcf	3,5	;RP0=0, select bank0
   663  00F2  1303               	bcf	3,6	;RP1=0, select bank0
   664  00F3  0331               	decf	valADC@a,w
   665  00F4  1D03               	btfss	3,2
   666  00F5  28F7               	goto	u211
   667  00F6  28F8               	goto	u210
   668  00F7                     u211:
   669  00F7  2902               	goto	l111
   670  00F8                     u210:
   671  00F8                     l931:
   672                           
   673                           ;ADC_lib.c: 19:         _delay((unsigned long)((10)*(8000000/4000000.0)));
   674  00F8  3005               	movlw	5
   675  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   676  00FA  1303               	bcf	3,6	;RP1=0, select bank0
   677  00FB  00B0               	movwf	??_valADC
   678  00FC                     u237:
   679  00FC  0BB0               	decfsz	??_valADC,f
   680  00FD  28FC               	goto	u237
   681  00FE  28FF               	nop2
   682  00FF                     l933:
   683  00FF                     l935:
   684                           
   685                           ;ADC_lib.c: 21:         ADCON0bits.GO = 1;
   686  00FF  1283               	bcf	3,5	;RP0=0, select bank0
   687  0100  1303               	bcf	3,6	;RP1=0, select bank0
   688  0101  149F               	bsf	31,1	;volatile
   689  0102                     l111:
   690  0102  0008               	return
   691  0103                     __end_of_valADC:
   692                           
   693                           	psect	text2
   694  00BA                     __ptext2:	
   695 ;; *************** function _setup *****************
   696 ;; Defined at:
   697 ;;		line 105 in file "lab_2.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;		None
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, status,2
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   711 ;;      Params:         0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0
   714 ;;      Totals:         0       0       0       0       0
   715 ;;Total ram usage:        0 bytes
   716 ;; Hardware stack levels used:    1
   717 ;; Hardware stack levels required when called:    2
   718 ;; This function calls:
   719 ;;		Nothing
   720 ;; This function is called by:
   721 ;;		_main
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           
   726                           ;psect for function _setup
   727  00BA                     _setup:
   728  00BA                     l903:	
   729                           ;incstack = 0
   730                           ; Regs used in _setup: [wreg+status,2]
   731                           
   732                           
   733                           ;lab_2.c: 106:     TRISE = 0;
   734  00BA  1683               	bsf	3,5	;RP0=1, select bank1
   735  00BB  1303               	bcf	3,6	;RP1=0, select bank1
   736  00BC  0189               	clrf	9	;volatile
   737                           
   738                           ;lab_2.c: 107:     PORTE = 0;
   739  00BD  1283               	bcf	3,5	;RP0=0, select bank0
   740  00BE  1303               	bcf	3,6	;RP1=0, select bank0
   741  00BF  0189               	clrf	9	;volatile
   742                           
   743                           ;lab_2.c: 108:     ANSELH = 0;
   744  00C0  1683               	bsf	3,5	;RP0=1, select bank3
   745  00C1  1703               	bsf	3,6	;RP1=1, select bank3
   746  00C2  0189               	clrf	9	;volatile
   747  00C3                     l905:
   748                           
   749                           ;lab_2.c: 109:     ANSEL = 0b00000001;
   750  00C3  3001               	movlw	1
   751  00C4  0088               	movwf	8	;volatile
   752  00C5                     l907:
   753                           
   754                           ;lab_2.c: 110:     TRISA = 0b00000001;
   755  00C5  3001               	movlw	1
   756  00C6  1683               	bsf	3,5	;RP0=1, select bank1
   757  00C7  1303               	bcf	3,6	;RP1=0, select bank1
   758  00C8  0085               	movwf	5	;volatile
   759  00C9                     l909:
   760                           
   761                           ;lab_2.c: 111:     TRISB = 0b00000011;
   762  00C9  3003               	movlw	3
   763  00CA  0086               	movwf	6	;volatile
   764  00CB                     l911:
   765                           
   766                           ;lab_2.c: 112:     PORTB = 0;
   767  00CB  1283               	bcf	3,5	;RP0=0, select bank0
   768  00CC  1303               	bcf	3,6	;RP1=0, select bank0
   769  00CD  0186               	clrf	6	;volatile
   770  00CE                     l913:
   771                           
   772                           ;lab_2.c: 113:     TRISC = 0;
   773  00CE  1683               	bsf	3,5	;RP0=1, select bank1
   774  00CF  1303               	bcf	3,6	;RP1=0, select bank1
   775  00D0  0187               	clrf	7	;volatile
   776  00D1                     l915:
   777                           
   778                           ;lab_2.c: 114:     PORTC = 0;
   779  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   780  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   781  00D3  0187               	clrf	7	;volatile
   782  00D4                     l917:
   783                           
   784                           ;lab_2.c: 115:     TRISD = 0;
   785  00D4  1683               	bsf	3,5	;RP0=1, select bank1
   786  00D5  1303               	bcf	3,6	;RP1=0, select bank1
   787  00D6  0188               	clrf	8	;volatile
   788  00D7                     l919:
   789                           
   790                           ;lab_2.c: 116:     PORTD = 0;
   791  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   792  00D8  1303               	bcf	3,6	;RP1=0, select bank0
   793  00D9  0188               	clrf	8	;volatile
   794                           
   795                           ;lab_2.c: 117:     ADCON0 = 0b01010101;
   796  00DA  3055               	movlw	85
   797  00DB  009F               	movwf	31	;volatile
   798                           
   799                           ;lab_2.c: 120:     OPTION_REG = 0x84;
   800  00DC  3084               	movlw	132
   801  00DD  1683               	bsf	3,5	;RP0=1, select bank1
   802  00DE  1303               	bcf	3,6	;RP1=0, select bank1
   803  00DF  0081               	movwf	1	;volatile
   804                           
   805                           ;lab_2.c: 121:     TMR0 = 100;
   806  00E0  3064               	movlw	100
   807  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   808  00E2  1303               	bcf	3,6	;RP1=0, select bank0
   809  00E3  0081               	movwf	1	;volatile
   810                           
   811                           ;lab_2.c: 122:     INTCON = 0b11101000;
   812  00E4  30E8               	movlw	232
   813  00E5  008B               	movwf	11	;volatile
   814  00E6                     l75:
   815  00E6  0008               	return
   816  00E7                     __end_of_setup:
   817                           
   818                           	psect	text3
   819  002D                     __ptext3:	
   820 ;; *************** function _int1 *****************
   821 ;; Defined at:
   822 ;;		line 138 in file "lab_2.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;		None
   825 ;; Auto vars:     Size  Location     Type
   826 ;;		None
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, status,2, status,0, pclath, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   836 ;;      Params:         0       0       0       0       0
   837 ;;      Locals:         1       0       0       0       0
   838 ;;      Temps:          3       0       0       0       0
   839 ;;      Totals:         4       0       0       0       0
   840 ;;Total ram usage:        4 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    1
   843 ;; This function calls:
   844 ;;		_inc
   845 ;;		_rest
   846 ;; This function is called by:
   847 ;;		Interrupt level 1
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           
   852                           ;psect for function _int1
   853  002D                     _int1:
   854  002D                     i1l853:
   855                           
   856                           ;lab_2.c: 140:     INTCON = 0b11101000;
   857  002D  30E8               	movlw	232
   858  002E  008B               	movwf	11	;volatile
   859                           
   860                           ;lab_2.c: 141:     IOCB = 0b00000011;
   861  002F  3003               	movlw	3
   862  0030  1683               	bsf	3,5	;RP0=1, select bank1
   863  0031  1303               	bcf	3,6	;RP1=0, select bank1
   864  0032  0096               	movwf	22	;volatile
   865  0033                     i1l855:
   866                           
   867                           ;lab_2.c: 142:     if (INTCONbits.RBIF == 1 && INTCONbits.RBIE == 1){
   868  0033  1C0B               	btfss	11,0	;volatile
   869  0034  2836               	goto	u13_21
   870  0035  2837               	goto	u13_20
   871  0036                     u13_21:
   872  0036  2852               	goto	i1l869
   873  0037                     u13_20:
   874  0037                     i1l857:
   875  0037  1D8B               	btfss	11,3	;volatile
   876  0038  283A               	goto	u14_21
   877  0039  283B               	goto	u14_20
   878  003A                     u14_21:
   879  003A  2852               	goto	i1l869
   880  003B                     u14_20:
   881  003B                     i1l859:
   882                           
   883                           ;lab_2.c: 143:            if (PORTBbits.RB0 == 1){
   884  003B  1283               	bcf	3,5	;RP0=0, select bank0
   885  003C  1303               	bcf	3,6	;RP1=0, select bank0
   886  003D  1C06               	btfss	6,0	;volatile
   887  003E  2840               	goto	u15_21
   888  003F  2841               	goto	u15_20
   889  0040                     u15_21:
   890  0040  2846               	goto	i1l863
   891  0041                     u15_20:
   892  0041                     i1l861:
   893                           
   894                           ;lab_2.c: 144:                inc();
   895  0041  120A  118A  2126  120A  118A  	fcall	_inc
   896  0046                     i1l863:
   897                           
   898                           ;lab_2.c: 146:            if (PORTBbits.RB1 == 1){
   899  0046  1283               	bcf	3,5	;RP0=0, select bank0
   900  0047  1303               	bcf	3,6	;RP1=0, select bank0
   901  0048  1C86               	btfss	6,1	;volatile
   902  0049  284B               	goto	u16_21
   903  004A  284C               	goto	u16_20
   904  004B                     u16_21:
   905  004B  2851               	goto	i1l867
   906  004C                     u16_20:
   907  004C                     i1l865:
   908                           
   909                           ;lab_2.c: 147:                rest();
   910  004C  120A  118A  212B  120A  118A  	fcall	_rest
   911  0051                     i1l867:
   912                           
   913                           ;lab_2.c: 149:     INTCONbits.RBIF = 0;
   914  0051  100B               	bcf	11,0	;volatile
   915  0052                     i1l869:
   916                           
   917                           ;lab_2.c: 151:     if (PIR1bits.ADIF == 1){
   918  0052  1283               	bcf	3,5	;RP0=0, select bank0
   919  0053  1303               	bcf	3,6	;RP1=0, select bank0
   920  0054  1F0C               	btfss	12,6	;volatile
   921  0055  2857               	goto	u17_21
   922  0056  2858               	goto	u17_20
   923  0057                     u17_21:
   924  0057  286F               	goto	i1l885
   925  0058                     u17_20:
   926  0058                     i1l871:
   927                           
   928                           ;lab_2.c: 152:            a=1;
   929  0058  01FA               	clrf	_a
   930  0059  0AFA               	incf	_a,f
   931  005A                     i1l873:
   932                           
   933                           ;lab_2.c: 153:            v= ADRESH;
   934  005A  081E               	movf	30,w	;volatile
   935  005B  00F6               	movwf	??_int1
   936  005C  0876               	movf	??_int1,w
   937  005D  00F3               	movwf	_v
   938                           
   939                           ;lab_2.c: 154:            d1= ADRESH;
   940  005E  081E               	movf	30,w	;volatile
   941  005F  00F6               	movwf	??_int1
   942  0060  0876               	movf	??_int1,w
   943  0061  00F2               	movwf	_d1
   944  0062                     i1l875:
   945                           
   946                           ;lab_2.c: 155:            d2= ADRESH && 0b00001111;
   947  0062  01F9               	clrf	_int1$195
   948  0063                     i1l877:
   949  0063  081E               	movf	30,w	;volatile
   950  0064  1903               	btfsc	3,2
   951  0065  2867               	goto	u18_21
   952  0066  2868               	goto	u18_20
   953  0067                     u18_21:
   954  0067  286A               	goto	i1l881
   955  0068                     u18_20:
   956  0068                     i1l879:
   957  0068  01F9               	clrf	_int1$195
   958  0069  0AF9               	incf	_int1$195,f
   959  006A                     i1l881:
   960  006A  0879               	movf	_int1$195,w
   961  006B  00F6               	movwf	??_int1
   962  006C  0876               	movf	??_int1,w
   963  006D  00F1               	movwf	_d2
   964  006E                     i1l883:
   965                           
   966                           ;lab_2.c: 157:            PIR1bits.ADIF = 0;
   967  006E  130C               	bcf	12,6	;volatile
   968  006F                     i1l885:
   969                           
   970                           ;lab_2.c: 159:     if(INTCONbits.T0IF == 1){
   971  006F  1D0B               	btfss	11,2	;volatile
   972  0070  2872               	goto	u19_21
   973  0071  2873               	goto	u19_20
   974  0072                     u19_21:
   975  0072  2886               	goto	i1l95
   976  0073                     u19_20:
   977  0073                     i1l887:
   978                           
   979                           ;lab_2.c: 160:            TMR0= 100;
   980  0073  3064               	movlw	100
   981  0074  0081               	movwf	1	;volatile
   982  0075                     i1l889:
   983                           
   984                           ;lab_2.c: 161:            if(d1 == 1){
   985  0075  0372               	decf	_d1,w
   986  0076  1D03               	btfss	3,2
   987  0077  2879               	goto	u20_21
   988  0078  287A               	goto	u20_20
   989  0079                     u20_21:
   990  0079  2880               	goto	i1l93
   991  007A                     u20_20:
   992  007A                     i1l891:
   993                           
   994                           ;lab_2.c: 162:                d1= 0;
   995  007A  01F2               	clrf	_d1
   996  007B                     i1l893:
   997                           
   998                           ;lab_2.c: 163:                d2 = 1;
   999  007B  01F1               	clrf	_d2
  1000  007C  0AF1               	incf	_d2,f
  1001  007D                     i1l895:
  1002                           
  1003                           ;lab_2.c: 164:                PORTC = seg2;
  1004  007D  0833               	movf	_seg2,w
  1005  007E  0087               	movwf	7	;volatile
  1006                           
  1007                           ;lab_2.c: 165:            }
  1008  007F  2885               	goto	i1l901
  1009  0080                     i1l93:	
  1010                           ;lab_2.c: 166:            else{
  1011                           
  1012                           
  1013                           ;lab_2.c: 167:                d1 = 1;
  1014  0080  01F2               	clrf	_d1
  1015  0081  0AF2               	incf	_d1,f
  1016  0082                     i1l897:
  1017                           
  1018                           ;lab_2.c: 168:                d2 = 0;
  1019  0082  01F1               	clrf	_d2
  1020  0083                     i1l899:
  1021                           
  1022                           ;lab_2.c: 169:                PORTC = seg1;
  1023  0083  0870               	movf	_seg1,w
  1024  0084  0087               	movwf	7	;volatile
  1025  0085                     i1l901:
  1026                           
  1027                           ;lab_2.c: 171:           INTCONbits.T0IF = 0;
  1028  0085  110B               	bcf	11,2	;volatile
  1029  0086                     i1l95:
  1030  0086  0878               	movf	??_int1+2,w
  1031  0087  008A               	movwf	10
  1032  0088  0E77               	swapf	??_int1+1,w
  1033  0089  0083               	movwf	3
  1034  008A  0EFE               	swapf	btemp,f
  1035  008B  0E7E               	swapf	btemp,w
  1036  008C  0009               	retfie
  1037  008D                     __end_of_int1:
  1038                           
  1039                           	psect	intentry
  1040  0004                     __pintentry:	
  1041                           ;incstack = 0
  1042                           ; Regs used in _int1: [wreg+status,2+status,0+pclath+cstack]
  1043                           
  1044  0004                     interrupt_function:
  1045  007E                     saved_w	set	btemp
  1046  0004  00FE               	movwf	btemp
  1047  0005  0E03               	swapf	3,w
  1048  0006  00F7               	movwf	??_int1+1
  1049  0007  080A               	movf	10,w
  1050  0008  00F8               	movwf	??_int1+2
  1051  0009  120A  118A  282D   	ljmp	_int1
  1052                           
  1053                           	psect	text4
  1054  012B                     __ptext4:	
  1055 ;; *************** function _rest *****************
  1056 ;; Defined at:
  1057 ;;		line 132 in file "lab_2.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;		None
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, status,2, status,0
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1071 ;;      Params:         0       0       0       0       0
  1072 ;;      Locals:         0       0       0       0       0
  1073 ;;      Temps:          0       0       0       0       0
  1074 ;;      Totals:         0       0       0       0       0
  1075 ;;Total ram usage:        0 bytes
  1076 ;; Hardware stack levels used:    1
  1077 ;; This function calls:
  1078 ;;		Nothing
  1079 ;; This function is called by:
  1080 ;;		_int1
  1081 ;; This function uses a non-reentrant model
  1082 ;;
  1083                           
  1084                           
  1085                           ;psect for function _rest
  1086  012B                     _rest:
  1087  012B                     i1l839:	
  1088                           ;incstack = 0
  1089                           ; Regs used in _rest: [wreg+status,2+status,0]
  1090                           
  1091                           
  1092                           ;lab_2.c: 133:     contador --;
  1093  012B  3001               	movlw	1
  1094  012C  02F4               	subwf	_contador,f
  1095  012D                     i1l81:
  1096  012D  0008               	return
  1097  012E                     __end_of_rest:
  1098                           
  1099                           	psect	text5
  1100  0126                     __ptext5:	
  1101 ;; *************** function _inc *****************
  1102 ;; Defined at:
  1103 ;;		line 129 in file "lab_2.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, status,2, status,0
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1117 ;;      Params:         0       0       0       0       0
  1118 ;;      Locals:         0       0       0       0       0
  1119 ;;      Temps:          1       0       0       0       0
  1120 ;;      Totals:         1       0       0       0       0
  1121 ;;Total ram usage:        1 bytes
  1122 ;; Hardware stack levels used:    1
  1123 ;; This function calls:
  1124 ;;		Nothing
  1125 ;; This function is called by:
  1126 ;;		_int1
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           
  1131                           ;psect for function _inc
  1132  0126                     _inc:
  1133  0126                     i1l837:	
  1134                           ;incstack = 0
  1135                           ; Regs used in _inc: [wreg+status,2+status,0]
  1136                           
  1137                           
  1138                           ;lab_2.c: 130:     contador ++;
  1139  0126  3001               	movlw	1
  1140  0127  00F5               	movwf	??_inc
  1141  0128  0875               	movf	??_inc,w
  1142  0129  07F4               	addwf	_contador,f
  1143  012A                     i1l78:
  1144  012A  0008               	return
  1145  012B                     __end_of_inc:
  1146  007E                     btemp	set	126	;btemp
  1147  007E                     wtemp0	set	126
  1148                           
  1149                           	psect	config
  1150                           
  1151                           ;Config register CONFIG1 @ 0x2007
  1152                           ;	Oscillator Selection bits
  1153                           ;	FOSC = XT, XT oscillator: Crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1/CLKIN
  1154                           ;	Watchdog Timer Enable bit
  1155                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1156                           ;	Power-up Timer Enable bit
  1157                           ;	PWRTE = OFF, PWRT disabled
  1158                           ;	RE3/MCLR pin function select bit
  1159                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1160                           ;	Code Protection bit
  1161                           ;	CP = OFF, Program memory code protection is disabled
  1162                           ;	Data Code Protection bit
  1163                           ;	CPD = OFF, Data memory code protection is disabled
  1164                           ;	Brown Out Reset Selection bits
  1165                           ;	BOREN = OFF, BOR disabled
  1166                           ;	Internal External Switchover bit
  1167                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1168                           ;	Fail-Safe Clock Monitor Enabled bit
  1169                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1170                           ;	Low Voltage Programming Enable bit
  1171                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1172                           ;	In-Circuit Debugger Mode bit
  1173                           ;	DEBUG = 0x1, unprogrammed default
  1174  2007                     	org	8199
  1175  2007  20D1               	dw	8401
  1176                           
  1177                           ;Config register CONFIG2 @ 0x2008
  1178                           ;	Brown-out Reset Selection bit
  1179                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1180                           ;	Flash Program Memory Self Write Enable bits
  1181                           ;	WRT = OFF, Write protection off
  1182  2008                     	org	8200
  1183  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        17
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      11
    BANK0            80      3      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _int1 in COMMON

    _int1->_inc

Critical Paths under _main in BANK0

    _main->_valADC

Critical Paths under _int1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _int1 in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _int1 in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _int1 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      34
                                              2 BANK0      1     1      0
                              _setup
                             _valADC
 ---------------------------------------------------------------------------------
 (1) _valADC                                               2     2      0      34
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _int1                                                 4     4      0      24
                                              1 COMMON     4     4      0
                                _inc
                               _rest
 ---------------------------------------------------------------------------------
 (3) _rest                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _inc                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _valADC

 _int1 (ROOT)
   _inc
   _rest

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 05 21:04:27 2021

                      _a 007A                        _v 0073                        pc 0002  
                     l75 00E6                       l68 00B5                       _d1 0072  
                     _d2 0071                       fsr 0004                      l111 0102  
                    l911 00CB                      l903 00BA                      l913 00CE  
                    l905 00C3                      l921 00EA                      l915 00D1  
                    l907 00C5                      l931 00F8                      l923 00EC  
                    l917 00D4                      l909 00C9                      l933 00FF  
                    l925 00ED                      l941 0096                      l919 00D7  
                    l935 00FF                      l927 00F0                      l943 009C  
                    l929 00F1                      l945 00A6                      l937 008D  
                    l947 00B3                      l939 0092                      u210 00F8  
                    u211 00F7                      u220 00B3                      u221 00B2  
                    u237 00FC                      _inc 0126                      fsr0 0004  
                    indf 0000                     ?_inc 0075                     _IOCB 0096  
                   i1l81 012D                     i1l93 0080                     i1l78 012A  
                   i1l95 0086                     _TMR0 0001                     _int1 002D  
                   _seg1 0070                     _seg2 0033                     _main 008D  
                   _rest 012B                     btemp 007E                     start 000C  
                  ??_inc 0075                    ?_int1 0075                    ?_main 0075  
                  ?_rest 0075                    _ANSEL 0188                    i1l901 0085  
                  i1l837 0126                    i1l861 0041                    i1l853 002D  
                  i1l839 012B                    i1l871 0058                    i1l863 0046  
                  i1l855 0033                    i1l881 006A                    i1l873 005A  
                  i1l865 004C                    i1l857 0037                    i1l891 007A  
                  i1l883 006E                    i1l875 0062                    i1l867 0051  
                  i1l859 003B                    i1l893 007B                    i1l877 0063  
                  i1l885 006F                    i1l869 0052                    i1l895 007D  
                  i1l887 0073                    i1l879 0068                    i1l897 0082  
                  i1l889 0075                    i1l899 0083                    u20_20 007A  
                  u20_21 0079                    u13_20 0037                    u13_21 0036  
                  u14_20 003B                    u14_21 003A                    u15_20 0041  
                  u15_21 0040                    u16_20 004C                    u16_21 004B  
                  u17_20 0058                    u17_21 0057                    u18_20 0068  
                  u18_21 0067                    u19_20 0073                    u19_21 0072  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _tabla 0020                    _setup 00BA                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_int1 008D             __end_of_main 00BA             __end_of_rest 012E  
                 ??_int1 0076                   ??_main 0032                   ??_rest 0075  
                 _ADCON0 001F                   _ADRESH 001E                   ?_setup 0075  
                 _ANSELH 0189                   _INTCON 000B                   _valADC 00E7  
           __pdataCOMMON 007A                   saved_w 007E  __end_of__initialization 0029  
         __pcstackCOMMON 0075             __pidataBANK0 0116            __end_of_setup 00E7  
                ??_setup 0030               __pbssBANK0 0033               __pmaintext 008D  
             __pintentry 0004                  ?_valADC 0075          __size_of_valADC 001C  
                __ptext1 00E7                  __ptext2 00BA                  __ptext3 002D  
                __ptext4 012B                  __ptext5 0126             __size_of_inc 0005  
   end_of_initialization 0029                  valADC@a 0031                _PORTBbits 0006  
              _PORTCbits 0007            __pidataCOMMON 012E           __end_of_valADC 0103  
    start_initialization 000F              __end_of_inc 012B               init_fetch0 0103  
            __pdataBANK0 0020                 ??_valADC 0030              __pbssCOMMON 0070  
              ___latbits 0002            __pcstackBANK0 0030           __size_of_setup 002D  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F                 _int1$195 0079  
               _contador 0074            __size_of_int1 0060            __size_of_main 002D  
          __size_of_rest 0003               _INTCONbits 000B                 init_ram0 0107  
               intlevel1 0000               _OPTION_REG 0081  
